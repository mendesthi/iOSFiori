// # Proxy Compiler 18.9.4-973a4d-20181128

import Foundation
import SAPOData

internal class B1ClassMetadataChanges {
    static func merge(metadata: CSDLDocument) {
        metadata.hasGeneratedProxies = true
        B1ClassMetadata.document = metadata
        B1ClassMetadataChanges.merge1(metadata: metadata)
        B1ClassMetadataChanges.merge2(metadata: metadata)
        B1ClassMetadataChanges.merge3(metadata: metadata)
        B1ClassMetadataChanges.merge4(metadata: metadata)
        B1ClassMetadataChanges.merge5(metadata: metadata)
        B1ClassMetadataChanges.merge6(metadata: metadata)
        B1ClassMetadataChanges.merge7(metadata: metadata)
        B1ClassMetadataChanges.merge8(metadata: metadata)
        B1ClassMetadataChanges.merge9(metadata: metadata)
        B1ClassMetadataChanges.merge10(metadata: metadata)
        B1ClassMetadataChanges.merge11(metadata: metadata)
        B1ClassMetadataChanges.merge12(metadata: metadata)
        B1ClassMetadataChanges.merge13(metadata: metadata)
        B1ClassMetadataChanges.merge14(metadata: metadata)
        B1ClassMetadataChanges.merge15(metadata: metadata)
        B1ClassMetadataChanges.merge16(metadata: metadata)
        try! B1ClassFactory.registerAll()
    }

    private static func merge1(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1ClassMetadata.EnumTypes.accountCategorySourceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.accountCategorySourceEnum = metadata.enumType(withName: "SAPB1.AccountCategorySourceEnum")
        }
        if !B1ClassMetadata.EnumTypes.accountSegmentationTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.accountSegmentationTypeEnum = metadata.enumType(withName: "SAPB1.AccountSegmentationTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.acquisitionPeriodControlEnum.isRemoved {
            B1ClassMetadata.EnumTypes.acquisitionPeriodControlEnum = metadata.enumType(withName: "SAPB1.AcquisitionPeriodControlEnum")
        }
        if !B1ClassMetadata.EnumTypes.acquisitionProRataTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.acquisitionProRataTypeEnum = metadata.enumType(withName: "SAPB1.AcquisitionProRataTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.isRemoved {
            B1ClassMetadata.EnumTypes.alertManagementDocumentEnum = metadata.enumType(withName: "SAPB1.AlertManagementDocumentEnum")
        }
        if !B1ClassMetadata.EnumTypes.alertManagementFrequencyType.isRemoved {
            B1ClassMetadata.EnumTypes.alertManagementFrequencyType = metadata.enumType(withName: "SAPB1.AlertManagementFrequencyType")
        }
        if !B1ClassMetadata.EnumTypes.alertManagementPriorityEnum.isRemoved {
            B1ClassMetadata.EnumTypes.alertManagementPriorityEnum = metadata.enumType(withName: "SAPB1.AlertManagementPriorityEnum")
        }
        if !B1ClassMetadata.EnumTypes.alertManagementTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.alertManagementTypeEnum = metadata.enumType(withName: "SAPB1.AlertManagementTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.amountCatTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.amountCatTypeEnum = metadata.enumType(withName: "SAPB1.AmountCatTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum = metadata.enumType(withName: "SAPB1.ApprovalTemplateConditionTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum = metadata.enumType(withName: "SAPB1.ApprovalTemplateOperationTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum = metadata.enumType(withName: "SAPB1.ApprovalTemplatesDocumentTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.areaTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.areaTypeEnum = metadata.enumType(withName: "SAPB1.AreaTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.assesseeTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.assesseeTypeEnum = metadata.enumType(withName: "SAPB1.AssesseeTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.assetDocumentStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.assetDocumentStatusEnum = metadata.enumType(withName: "SAPB1.AssetDocumentStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.assetDocumentTypeEnum = metadata.enumType(withName: "SAPB1.AssetDocumentTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.assetOriginalTypeEnum = metadata.enumType(withName: "SAPB1.AssetOriginalTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.assetStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.assetStatusEnum = metadata.enumType(withName: "SAPB1.AssetStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.assetTransactionTypeEnum = metadata.enumType(withName: "SAPB1.AssetTransactionTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.assetTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.assetTypeEnum = metadata.enumType(withName: "SAPB1.AssetTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.attributeGroupFieldTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.attributeGroupFieldTypeEnum = metadata.enumType(withName: "SAPB1.AttributeGroupFieldTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.authenticateUserResultsEnum.isRemoved {
            B1ClassMetadata.EnumTypes.authenticateUserResultsEnum = metadata.enumType(withName: "SAPB1.AuthenticateUserResultsEnum")
        }
        if !B1ClassMetadata.EnumTypes.autoAllocOnReceiptMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.autoAllocOnReceiptMethodEnum = metadata.enumType(withName: "SAPB1.AutoAllocOnReceiptMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.automaticPostingEnum.isRemoved {
            B1ClassMetadata.EnumTypes.automaticPostingEnum = metadata.enumType(withName: "SAPB1.AutomaticPostingEnum")
        }
        if !B1ClassMetadata.EnumTypes.baDivationAlertLevelEnum.isRemoved {
            B1ClassMetadata.EnumTypes.baDivationAlertLevelEnum = metadata.enumType(withName: "SAPB1.BADivationAlertLevelEnum")
        }
        if !B1ClassMetadata.EnumTypes.baDocumentStatus.isRemoved {
            B1ClassMetadata.EnumTypes.baDocumentStatus = metadata.enumType(withName: "SAPB1.BADocumentStatus")
        }
        if !B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum = metadata.enumType(withName: "SAPB1.BankStatementDocTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.bankStatementRowSourceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.bankStatementRowSourceEnum = metadata.enumType(withName: "SAPB1.BankStatementRowSourceEnum")
        }
        if !B1ClassMetadata.EnumTypes.bankStatementStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.bankStatementStatusEnum = metadata.enumType(withName: "SAPB1.BankStatementStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.baseDateSelectEnum.isRemoved {
            B1ClassMetadata.EnumTypes.baseDateSelectEnum = metadata.enumType(withName: "SAPB1.BaseDateSelectEnum")
        }
        if !B1ClassMetadata.EnumTypes.batchDetailServiceStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.batchDetailServiceStatusEnum = metadata.enumType(withName: "SAPB1.BatchDetailServiceStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.binActionTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.binActionTypeEnum = metadata.enumType(withName: "SAPB1.BinActionTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.binLocationFieldTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.binLocationFieldTypeEnum = metadata.enumType(withName: "SAPB1.BinLocationFieldTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.binRestrictItemEnum.isRemoved {
            B1ClassMetadata.EnumTypes.binRestrictItemEnum = metadata.enumType(withName: "SAPB1.BinRestrictItemEnum")
        }
        if !B1ClassMetadata.EnumTypes.binRestrictTransactionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.binRestrictTransactionEnum = metadata.enumType(withName: "SAPB1.BinRestrictTransactionEnum")
        }
        if !B1ClassMetadata.EnumTypes.binRestrictUoMEnum.isRemoved {
            B1ClassMetadata.EnumTypes.binRestrictUoMEnum = metadata.enumType(withName: "SAPB1.BinRestrictUoMEnum")
        }
        if !B1ClassMetadata.EnumTypes.binRestrictionBatchEnum.isRemoved {
            B1ClassMetadata.EnumTypes.binRestrictionBatchEnum = metadata.enumType(withName: "SAPB1.BinRestrictionBatchEnum")
        }
        if !B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum.isRemoved {
            B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum = metadata.enumType(withName: "SAPB1.BlanketAgreementDatePeriodsEnum")
        }
        if !B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum = metadata.enumType(withName: "SAPB1.BlanketAgreementDocTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.blanketAgreementMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.blanketAgreementMethodEnum = metadata.enumType(withName: "SAPB1.BlanketAgreementMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.blanketAgreementStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.blanketAgreementStatusEnum = metadata.enumType(withName: "SAPB1.BlanketAgreementStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.blanketAgreementTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.blanketAgreementTypeEnum = metadata.enumType(withName: "SAPB1.BlanketAgreementTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boAPARDocumentTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boAPARDocumentTypes = metadata.enumType(withName: "SAPB1.BoAPARDocumentTypes")
        }
        if !B1ClassMetadata.EnumTypes.boAccountTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boAccountTypes = metadata.enumType(withName: "SAPB1.BoAccountTypes")
        }
        if !B1ClassMetadata.EnumTypes.boActivities.isRemoved {
            B1ClassMetadata.EnumTypes.boActivities = metadata.enumType(withName: "SAPB1.BoActivities")
        }
        if !B1ClassMetadata.EnumTypes.boAdEpnsDistribMethods.isRemoved {
            B1ClassMetadata.EnumTypes.boAdEpnsDistribMethods = metadata.enumType(withName: "SAPB1.BoAdEpnsDistribMethods")
        }
        if !B1ClassMetadata.EnumTypes.boAdEpnsTaxTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boAdEpnsTaxTypes = metadata.enumType(withName: "SAPB1.BoAdEpnsTaxTypes")
        }
        if !B1ClassMetadata.EnumTypes.boAddressType.isRemoved {
            B1ClassMetadata.EnumTypes.boAddressType = metadata.enumType(withName: "SAPB1.BoAddressType")
        }
        if !B1ClassMetadata.EnumTypes.boAeDistMthd.isRemoved {
            B1ClassMetadata.EnumTypes.boAeDistMthd = metadata.enumType(withName: "SAPB1.BoAeDistMthd")
        }
        if !B1ClassMetadata.EnumTypes.boAlertTypeforWHStockEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boAlertTypeforWHStockEnum = metadata.enumType(withName: "SAPB1.BoAlertTypeforWHStockEnum")
        }
        if !B1ClassMetadata.EnumTypes.boAllocationByEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boAllocationByEnum = metadata.enumType(withName: "SAPB1.BoAllocationByEnum")
        }
        if !B1ClassMetadata.EnumTypes.boApprovalRequestDecisionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boApprovalRequestDecisionEnum = metadata.enumType(withName: "SAPB1.BoApprovalRequestDecisionEnum")
        }
        if !B1ClassMetadata.EnumTypes.boApprovalRequestStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boApprovalRequestStatusEnum = metadata.enumType(withName: "SAPB1.BoApprovalRequestStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.boBOETypes.isRemoved {
            B1ClassMetadata.EnumTypes.boBOETypes = metadata.enumType(withName: "SAPB1.BoBOETypes")
        }
        if !B1ClassMetadata.EnumTypes.boBOTFromStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boBOTFromStatus = metadata.enumType(withName: "SAPB1.BoBOTFromStatus")
        }
        if !B1ClassMetadata.EnumTypes.boBOTToStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boBOTToStatus = metadata.enumType(withName: "SAPB1.BoBOTToStatus")
        }
        if !B1ClassMetadata.EnumTypes.boBarCodeStandardEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boBarCodeStandardEnum = metadata.enumType(withName: "SAPB1.BoBarCodeStandardEnum")
        }
        if !B1ClassMetadata.EnumTypes.boBaseDateRateEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boBaseDateRateEnum = metadata.enumType(withName: "SAPB1.BoBaseDateRateEnum")
        }
        if !B1ClassMetadata.EnumTypes.boBaselineDate.isRemoved {
            B1ClassMetadata.EnumTypes.boBaselineDate = metadata.enumType(withName: "SAPB1.BoBaselineDate")
        }
        if !B1ClassMetadata.EnumTypes.boBlockBudget.isRemoved {
            B1ClassMetadata.EnumTypes.boBlockBudget = metadata.enumType(withName: "SAPB1.BoBlockBudget")
        }
        if !B1ClassMetadata.EnumTypes.boBoeStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boBoeStatus = metadata.enumType(withName: "SAPB1.BoBoeStatus")
        }
        if !B1ClassMetadata.EnumTypes.boBpAccountTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boBpAccountTypes = metadata.enumType(withName: "SAPB1.BoBpAccountTypes")
        }
        if !B1ClassMetadata.EnumTypes.boBpsDocTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boBpsDocTypes = metadata.enumType(withName: "SAPB1.BoBpsDocTypes")
        }
        if !B1ClassMetadata.EnumTypes.boBudgetAlert.isRemoved {
            B1ClassMetadata.EnumTypes.boBudgetAlert = metadata.enumType(withName: "SAPB1.BoBudgetAlert")
        }
        if !B1ClassMetadata.EnumTypes.boBusinessAreaEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boBusinessAreaEnum = metadata.enumType(withName: "SAPB1.BoBusinessAreaEnum")
        }
        if !B1ClassMetadata.EnumTypes.boBusinessPartnerGroupTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boBusinessPartnerGroupTypes = metadata.enumType(withName: "SAPB1.BoBusinessPartnerGroupTypes")
        }
        if !B1ClassMetadata.EnumTypes.boBusinessPartnerTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boBusinessPartnerTypes = metadata.enumType(withName: "SAPB1.BoBusinessPartnerTypes")
        }
        if !B1ClassMetadata.EnumTypes.boCardCompanyTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boCardCompanyTypes = metadata.enumType(withName: "SAPB1.BoCardCompanyTypes")
        }
        if !B1ClassMetadata.EnumTypes.boCardTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boCardTypes = metadata.enumType(withName: "SAPB1.BoCardTypes")
        }
        if !B1ClassMetadata.EnumTypes.boChangeLogEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boChangeLogEnum = metadata.enumType(withName: "SAPB1.BoChangeLogEnum")
        }
        if !B1ClassMetadata.EnumTypes.boCheckDepositTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boCheckDepositTypeEnum = metadata.enumType(withName: "SAPB1.BoCheckDepositTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boClosingDateProcedureBaseDateEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boClosingDateProcedureBaseDateEnum = metadata.enumType(withName: "SAPB1.BoClosingDateProcedureBaseDateEnum")
        }
        if !B1ClassMetadata.EnumTypes.boClosingDateProcedureDueMonthEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boClosingDateProcedureDueMonthEnum = metadata.enumType(withName: "SAPB1.BoClosingDateProcedureDueMonthEnum")
        }
        if !B1ClassMetadata.EnumTypes.boCockpitTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boCockpitTypeEnum = metadata.enumType(withName: "SAPB1.BoCockpitTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boConsumptionMethod.isRemoved {
            B1ClassMetadata.EnumTypes.boConsumptionMethod = metadata.enumType(withName: "SAPB1.BoConsumptionMethod")
        }
        if !B1ClassMetadata.EnumTypes.boContractTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boContractTypes = metadata.enumType(withName: "SAPB1.BoContractTypes")
        }
        if !B1ClassMetadata.EnumTypes.boCorInvItemStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boCorInvItemStatus = metadata.enumType(withName: "SAPB1.BoCorInvItemStatus")
        }
        if !B1ClassMetadata.EnumTypes.boCpCardAcct.isRemoved {
            B1ClassMetadata.EnumTypes.boCpCardAcct = metadata.enumType(withName: "SAPB1.BoCpCardAcct")
        }
        if !B1ClassMetadata.EnumTypes.boCurrencyCheck.isRemoved {
            B1ClassMetadata.EnumTypes.boCurrencyCheck = metadata.enumType(withName: "SAPB1.BoCurrencyCheck")
        }
        if !B1ClassMetadata.EnumTypes.boCurrencySources.isRemoved {
            B1ClassMetadata.EnumTypes.boCurrencySources = metadata.enumType(withName: "SAPB1.BoCurrencySources")
        }
        if !B1ClassMetadata.EnumTypes.boDataOwnershipManageMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boDataOwnershipManageMethodEnum = metadata.enumType(withName: "SAPB1.BoDataOwnershipManageMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.boDataSourceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boDataSourceEnum = metadata.enumType(withName: "SAPB1.BoDataSourceEnum")
        }
        if !B1ClassMetadata.EnumTypes.boDateTemplate.isRemoved {
            B1ClassMetadata.EnumTypes.boDateTemplate = metadata.enumType(withName: "SAPB1.BoDateTemplate")
        }
        if !B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum = metadata.enumType(withName: "SAPB1.BoDeductionTaxGroupCodeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boDefaultBatchStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boDefaultBatchStatus = metadata.enumType(withName: "SAPB1.BoDefaultBatchStatus")
        }
        if !B1ClassMetadata.EnumTypes.boDepositAccountTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boDepositAccountTypeEnum = metadata.enumType(withName: "SAPB1.BoDepositAccountTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boDepositCheckEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boDepositCheckEnum = metadata.enumType(withName: "SAPB1.BoDepositCheckEnum")
        }
        if !B1ClassMetadata.EnumTypes.boDepositPostingTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boDepositPostingTypes = metadata.enumType(withName: "SAPB1.BoDepositPostingTypes")
        }
        if !B1ClassMetadata.EnumTypes.boDepositTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boDepositTypeEnum = metadata.enumType(withName: "SAPB1.BoDepositTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boDocItemType.isRemoved {
            B1ClassMetadata.EnumTypes.boDocItemType = metadata.enumType(withName: "SAPB1.BoDocItemType")
        }
        if !B1ClassMetadata.EnumTypes.boDocLineType.isRemoved {
            B1ClassMetadata.EnumTypes.boDocLineType = metadata.enumType(withName: "SAPB1.BoDocLineType")
        }
        if !B1ClassMetadata.EnumTypes.boDocSpecialLineType.isRemoved {
            B1ClassMetadata.EnumTypes.boDocSpecialLineType = metadata.enumType(withName: "SAPB1.BoDocSpecialLineType")
        }
        if !B1ClassMetadata.EnumTypes.boDocSummaryTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boDocSummaryTypes = metadata.enumType(withName: "SAPB1.BoDocSummaryTypes")
        }
        if !B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.isRemoved {
            B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod = metadata.enumType(withName: "SAPB1.BoDocWhsAutoIssueMethod")
        }
        if !B1ClassMetadata.EnumTypes.boDocWhsUpdateTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boDocWhsUpdateTypes = metadata.enumType(withName: "SAPB1.BoDocWhsUpdateTypes")
        }
        if !B1ClassMetadata.EnumTypes.boDocumentLinePickStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boDocumentLinePickStatus = metadata.enumType(withName: "SAPB1.BoDocumentLinePickStatus")
        }
        if !B1ClassMetadata.EnumTypes.boDocumentSubType.isRemoved {
            B1ClassMetadata.EnumTypes.boDocumentSubType = metadata.enumType(withName: "SAPB1.BoDocumentSubType")
        }
        if !B1ClassMetadata.EnumTypes.boDocumentTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boDocumentTypes = metadata.enumType(withName: "SAPB1.BoDocumentTypes")
        }
        if !B1ClassMetadata.EnumTypes.boDueDateEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boDueDateEnum = metadata.enumType(withName: "SAPB1.BoDueDateEnum")
        }
        if !B1ClassMetadata.EnumTypes.boDurations.isRemoved {
            B1ClassMetadata.EnumTypes.boDurations = metadata.enumType(withName: "SAPB1.BoDurations")
        }
        if !B1ClassMetadata.EnumTypes.boExpenseOperationTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boExpenseOperationTypeEnum = metadata.enumType(withName: "SAPB1.BoExpenseOperationTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boExtensionErrorActionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boExtensionErrorActionEnum = metadata.enumType(withName: "SAPB1.BoExtensionErrorActionEnum")
        }
        if !B1ClassMetadata.EnumTypes.boFatherCardTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boFatherCardTypes = metadata.enumType(withName: "SAPB1.BoFatherCardTypes")
        }
        if !B1ClassMetadata.EnumTypes.boFieldTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boFieldTypes = metadata.enumType(withName: "SAPB1.BoFieldTypes")
        }
        if !B1ClassMetadata.EnumTypes.boFldSubTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boFldSubTypes = metadata.enumType(withName: "SAPB1.BoFldSubTypes")
        }
        if !B1ClassMetadata.EnumTypes.boForecastViewType.isRemoved {
            B1ClassMetadata.EnumTypes.boForecastViewType = metadata.enumType(withName: "SAPB1.BoForecastViewType")
        }
        if !B1ClassMetadata.EnumTypes.boFormattedSearchActionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boFormattedSearchActionEnum = metadata.enumType(withName: "SAPB1.BoFormattedSearchActionEnum")
        }
        if !B1ClassMetadata.EnumTypes.boFrequency.isRemoved {
            B1ClassMetadata.EnumTypes.boFrequency = metadata.enumType(withName: "SAPB1.BoFrequency")
        }
        if !B1ClassMetadata.EnumTypes.boGLMethods.isRemoved {
            B1ClassMetadata.EnumTypes.boGLMethods = metadata.enumType(withName: "SAPB1.BoGLMethods")
        }
        if !B1ClassMetadata.EnumTypes.boGSTRegnTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boGSTRegnTypeEnum = metadata.enumType(withName: "SAPB1.BoGSTRegnTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boGenderTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boGenderTypes = metadata.enumType(withName: "SAPB1.BoGenderTypes")
        }
        if !B1ClassMetadata.EnumTypes.boGridTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boGridTypeEnum = metadata.enumType(withName: "SAPB1.BoGridTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boHorizontalAlignmentEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boHorizontalAlignmentEnum = metadata.enumType(withName: "SAPB1.BoHorizontalAlignmentEnum")
        }
        if !B1ClassMetadata.EnumTypes.boInterimDocTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boInterimDocTypes = metadata.enumType(withName: "SAPB1.BoInterimDocTypes")
        }
        if !B1ClassMetadata.EnumTypes.boInventorySystem.isRemoved {
            B1ClassMetadata.EnumTypes.boInventorySystem = metadata.enumType(withName: "SAPB1.BoInventorySystem")
        }
        if !B1ClassMetadata.EnumTypes.boIssueMethod.isRemoved {
            B1ClassMetadata.EnumTypes.boIssueMethod = metadata.enumType(withName: "SAPB1.BoIssueMethod")
        }
        if !B1ClassMetadata.EnumTypes.boItemTreeTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boItemTreeTypes = metadata.enumType(withName: "SAPB1.BoItemTreeTypes")
        }
        if !B1ClassMetadata.EnumTypes.boLineBreakEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boLineBreakEnum = metadata.enumType(withName: "SAPB1.BoLineBreakEnum")
        }
        if !B1ClassMetadata.EnumTypes.boMRPComponentWarehouse.isRemoved {
            B1ClassMetadata.EnumTypes.boMRPComponentWarehouse = metadata.enumType(withName: "SAPB1.BoMRPComponentWarehouse")
        }
        if !B1ClassMetadata.EnumTypes.boManageMethod.isRemoved {
            B1ClassMetadata.EnumTypes.boManageMethod = metadata.enumType(withName: "SAPB1.BoManageMethod")
        }
        if !B1ClassMetadata.EnumTypes.boMaterialTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boMaterialTypes = metadata.enumType(withName: "SAPB1.BoMaterialTypes")
        }
        if !B1ClassMetadata.EnumTypes.boMeritalStatuses.isRemoved {
            B1ClassMetadata.EnumTypes.boMeritalStatuses = metadata.enumType(withName: "SAPB1.BoMeritalStatuses")
        }
        if !B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes = metadata.enumType(withName: "SAPB1.BoMoneyPrecisionTypes")
        }
        if !B1ClassMetadata.EnumTypes.boMsgPriorities.isRemoved {
            B1ClassMetadata.EnumTypes.boMsgPriorities = metadata.enumType(withName: "SAPB1.BoMsgPriorities")
        }
        if !B1ClassMetadata.EnumTypes.boMsgRcpTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boMsgRcpTypes = metadata.enumType(withName: "SAPB1.BoMsgRcpTypes")
        }
        if !B1ClassMetadata.EnumTypes.boORCTPaymentTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boORCTPaymentTypeEnum = metadata.enumType(withName: "SAPB1.BoORCTPaymentTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boObjectTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boObjectTypes = metadata.enumType(withName: "SAPB1.BoObjectTypes")
        }
        if !B1ClassMetadata.EnumTypes.boOpenIncPayment.isRemoved {
            B1ClassMetadata.EnumTypes.boOpenIncPayment = metadata.enumType(withName: "SAPB1.BoOpenIncPayment")
        }
        if !B1ClassMetadata.EnumTypes.boOperationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boOperationEnum = metadata.enumType(withName: "SAPB1.BoOperationEnum")
        }
        if !B1ClassMetadata.EnumTypes.boOpexStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boOpexStatus = metadata.enumType(withName: "SAPB1.BoOpexStatus")
        }
        if !B1ClassMetadata.EnumTypes.boOrientationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boOrientationEnum = metadata.enumType(withName: "SAPB1.BoOrientationEnum")
        }
        if !B1ClassMetadata.EnumTypes.boPayTermDueTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boPayTermDueTypes = metadata.enumType(withName: "SAPB1.BoPayTermDueTypes")
        }
        if !B1ClassMetadata.EnumTypes.boPaymentMeansEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boPaymentMeansEnum = metadata.enumType(withName: "SAPB1.BoPaymentMeansEnum")
        }
        if !B1ClassMetadata.EnumTypes.boPaymentPriorities.isRemoved {
            B1ClassMetadata.EnumTypes.boPaymentPriorities = metadata.enumType(withName: "SAPB1.BoPaymentPriorities")
        }
        if !B1ClassMetadata.EnumTypes.boPaymentTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boPaymentTypeEnum = metadata.enumType(withName: "SAPB1.BoPaymentTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boPaymentsObjectType.isRemoved {
            B1ClassMetadata.EnumTypes.boPaymentsObjectType = metadata.enumType(withName: "SAPB1.BoPaymentsObjectType")
        }
        if !B1ClassMetadata.EnumTypes.boPermission.isRemoved {
            B1ClassMetadata.EnumTypes.boPermission = metadata.enumType(withName: "SAPB1.BoPermission")
        }
        if !B1ClassMetadata.EnumTypes.boPickStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boPickStatus = metadata.enumType(withName: "SAPB1.BoPickStatus")
        }
        if !B1ClassMetadata.EnumTypes.boPictureSizeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boPictureSizeEnum = metadata.enumType(withName: "SAPB1.BoPictureSizeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boPlanningSystem.isRemoved {
            B1ClassMetadata.EnumTypes.boPlanningSystem = metadata.enumType(withName: "SAPB1.BoPlanningSystem")
        }
        if !B1ClassMetadata.EnumTypes.boPriceListGroupNum.isRemoved {
            B1ClassMetadata.EnumTypes.boPriceListGroupNum = metadata.enumType(withName: "SAPB1.BoPriceListGroupNum")
        }
        if !B1ClassMetadata.EnumTypes.boPrintReceiptEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boPrintReceiptEnum = metadata.enumType(withName: "SAPB1.BoPrintReceiptEnum")
        }
        if !B1ClassMetadata.EnumTypes.boProcurementMethod.isRemoved {
            B1ClassMetadata.EnumTypes.boProcurementMethod = metadata.enumType(withName: "SAPB1.BoProcurementMethod")
        }
        if !B1ClassMetadata.EnumTypes.boProductSources.isRemoved {
            B1ClassMetadata.EnumTypes.boProductSources = metadata.enumType(withName: "SAPB1.BoProductSources")
        }
        if !B1ClassMetadata.EnumTypes.boProductionOrderOriginEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boProductionOrderOriginEnum = metadata.enumType(withName: "SAPB1.BoProductionOrderOriginEnum")
        }
        if !B1ClassMetadata.EnumTypes.boProductionOrderStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boProductionOrderStatusEnum = metadata.enumType(withName: "SAPB1.BoProductionOrderStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.boProductionOrderTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boProductionOrderTypeEnum = metadata.enumType(withName: "SAPB1.BoProductionOrderTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boQueryTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boQueryTypeEnum = metadata.enumType(withName: "SAPB1.BoQueryTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boRcptCredTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boRcptCredTypes = metadata.enumType(withName: "SAPB1.BoRcptCredTypes")
        }
        if !B1ClassMetadata.EnumTypes.boRcptInvTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boRcptInvTypes = metadata.enumType(withName: "SAPB1.BoRcptInvTypes")
        }
        if !B1ClassMetadata.EnumTypes.boRcptTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boRcptTypes = metadata.enumType(withName: "SAPB1.BoRcptTypes")
        }
        if !B1ClassMetadata.EnumTypes.boRemindUnits.isRemoved {
            B1ClassMetadata.EnumTypes.boRemindUnits = metadata.enumType(withName: "SAPB1.BoRemindUnits")
        }
        if !B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum = metadata.enumType(withName: "SAPB1.BoReportLayoutItemTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boResolutionUnits.isRemoved {
            B1ClassMetadata.EnumTypes.boResolutionUnits = metadata.enumType(withName: "SAPB1.BoResolutionUnits")
        }
        if !B1ClassMetadata.EnumTypes.boResponseUnit.isRemoved {
            B1ClassMetadata.EnumTypes.boResponseUnit = metadata.enumType(withName: "SAPB1.BoResponseUnit")
        }
        if !B1ClassMetadata.EnumTypes.boRoleInTeam.isRemoved {
            B1ClassMetadata.EnumTypes.boRoleInTeam = metadata.enumType(withName: "SAPB1.BoRoleInTeam")
        }
        if !B1ClassMetadata.EnumTypes.boRoundingMethod.isRemoved {
            B1ClassMetadata.EnumTypes.boRoundingMethod = metadata.enumType(withName: "SAPB1.BoRoundingMethod")
        }
        if !B1ClassMetadata.EnumTypes.boRoundingRule.isRemoved {
            B1ClassMetadata.EnumTypes.boRoundingRule = metadata.enumType(withName: "SAPB1.BoRoundingRule")
        }
        if !B1ClassMetadata.EnumTypes.boSalaryCostUnits.isRemoved {
            B1ClassMetadata.EnumTypes.boSalaryCostUnits = metadata.enumType(withName: "SAPB1.BoSalaryCostUnits")
        }
        if !B1ClassMetadata.EnumTypes.boSerialNumberStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boSerialNumberStatus = metadata.enumType(withName: "SAPB1.BoSerialNumberStatus")
        }
        if !B1ClassMetadata.EnumTypes.boSeriesGroupEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boSeriesGroupEnum = metadata.enumType(withName: "SAPB1.BoSeriesGroupEnum")
        }
        if !B1ClassMetadata.EnumTypes.boSeriesTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boSeriesTypeEnum = metadata.enumType(withName: "SAPB1.BoSeriesTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boServicePaymentMethods.isRemoved {
            B1ClassMetadata.EnumTypes.boServicePaymentMethods = metadata.enumType(withName: "SAPB1.BoServicePaymentMethods")
        }
        if !B1ClassMetadata.EnumTypes.boServiceSupplyMethods.isRemoved {
            B1ClassMetadata.EnumTypes.boServiceSupplyMethods = metadata.enumType(withName: "SAPB1.BoServiceSupplyMethods")
        }
        if !B1ClassMetadata.EnumTypes.boServiceTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boServiceTypes = metadata.enumType(withName: "SAPB1.BoServiceTypes")
        }
        if !B1ClassMetadata.EnumTypes.boSoClosedInTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boSoClosedInTypes = metadata.enumType(withName: "SAPB1.BoSoClosedInTypes")
        }
        if !B1ClassMetadata.EnumTypes.boSoOsStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boSoOsStatus = metadata.enumType(withName: "SAPB1.BoSoOsStatus")
        }
        if !B1ClassMetadata.EnumTypes.boSoStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boSoStatus = metadata.enumType(withName: "SAPB1.BoSoStatus")
        }
        if !B1ClassMetadata.EnumTypes.boSortTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boSortTypeEnum = metadata.enumType(withName: "SAPB1.BoSortTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boStatus = metadata.enumType(withName: "SAPB1.BoStatus")
        }
        if !B1ClassMetadata.EnumTypes.boStckTrnDir.isRemoved {
            B1ClassMetadata.EnumTypes.boStckTrnDir = metadata.enumType(withName: "SAPB1.BoStckTrnDir")
        }
        if !B1ClassMetadata.EnumTypes.boSubPeriodTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boSubPeriodTypeEnum = metadata.enumType(withName: "SAPB1.BoSubPeriodTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boSuppLangs.isRemoved {
            B1ClassMetadata.EnumTypes.boSuppLangs = metadata.enumType(withName: "SAPB1.BoSuppLangs")
        }
        if !B1ClassMetadata.EnumTypes.boSvcCallPriorities.isRemoved {
            B1ClassMetadata.EnumTypes.boSvcCallPriorities = metadata.enumType(withName: "SAPB1.BoSvcCallPriorities")
        }
        if !B1ClassMetadata.EnumTypes.boSvcContractStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boSvcContractStatus = metadata.enumType(withName: "SAPB1.BoSvcContractStatus")
        }
        if !B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boSvcEpxDocTypes = metadata.enumType(withName: "SAPB1.BoSvcEpxDocTypes")
        }
        if !B1ClassMetadata.EnumTypes.boSvcExpPartTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boSvcExpPartTypes = metadata.enumType(withName: "SAPB1.BoSvcExpPartTypes")
        }
        if !B1ClassMetadata.EnumTypes.boTCDConditionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boTCDConditionEnum = metadata.enumType(withName: "SAPB1.BoTCDConditionEnum")
        }
        if !B1ClassMetadata.EnumTypes.boTCDDocumentTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boTCDDocumentTypeEnum = metadata.enumType(withName: "SAPB1.BoTCDDocumentTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boTaxInvoiceTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boTaxInvoiceTypes = metadata.enumType(withName: "SAPB1.BoTaxInvoiceTypes")
        }
        if !B1ClassMetadata.EnumTypes.boTaxPostAccEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boTaxPostAccEnum = metadata.enumType(withName: "SAPB1.BoTaxPostAccEnum")
        }
        if !B1ClassMetadata.EnumTypes.boTaxRoundingRuleTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boTaxRoundingRuleTypes = metadata.enumType(withName: "SAPB1.BoTaxRoundingRuleTypes")
        }
        if !B1ClassMetadata.EnumTypes.boTaxTypes.isRemoved {
            B1ClassMetadata.EnumTypes.boTaxTypes = metadata.enumType(withName: "SAPB1.BoTaxTypes")
        }
        if !B1ClassMetadata.EnumTypes.boTimeTemplate.isRemoved {
            B1ClassMetadata.EnumTypes.boTimeTemplate = metadata.enumType(withName: "SAPB1.BoTimeTemplate")
        }
        if !B1ClassMetadata.EnumTypes.boTransactionTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boTransactionTypeEnum = metadata.enumType(withName: "SAPB1.BoTransactionTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.boUDOObjType.isRemoved {
            B1ClassMetadata.EnumTypes.boUDOObjType = metadata.enumType(withName: "SAPB1.BoUDOObjType")
        }
        if !B1ClassMetadata.EnumTypes.boUPTOptions.isRemoved {
            B1ClassMetadata.EnumTypes.boUPTOptions = metadata.enumType(withName: "SAPB1.BoUPTOptions")
        }
        if !B1ClassMetadata.EnumTypes.boUTBTableType.isRemoved {
            B1ClassMetadata.EnumTypes.boUTBTableType = metadata.enumType(withName: "SAPB1.BoUTBTableType")
        }
        if !B1ClassMetadata.EnumTypes.boUniqueSerialNumber.isRemoved {
            B1ClassMetadata.EnumTypes.boUniqueSerialNumber = metadata.enumType(withName: "SAPB1.BoUniqueSerialNumber")
        }
        if !B1ClassMetadata.EnumTypes.boUpdateAllocationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boUpdateAllocationEnum = metadata.enumType(withName: "SAPB1.BoUpdateAllocationEnum")
        }
        if !B1ClassMetadata.EnumTypes.boUserGroup.isRemoved {
            B1ClassMetadata.EnumTypes.boUserGroup = metadata.enumType(withName: "SAPB1.BoUserGroup")
        }
        if !B1ClassMetadata.EnumTypes.boVatCategoryEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boVatCategoryEnum = metadata.enumType(withName: "SAPB1.BoVatCategoryEnum")
        }
        if !B1ClassMetadata.EnumTypes.boVatStatus.isRemoved {
            B1ClassMetadata.EnumTypes.boVatStatus = metadata.enumType(withName: "SAPB1.BoVatStatus")
        }
        if !B1ClassMetadata.EnumTypes.boVerticalAlignmentEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boVerticalAlignmentEnum = metadata.enumType(withName: "SAPB1.BoVerticalAlignmentEnum")
        }
        if !B1ClassMetadata.EnumTypes.boWorkOrderStat.isRemoved {
            B1ClassMetadata.EnumTypes.boWorkOrderStat = metadata.enumType(withName: "SAPB1.BoWorkOrderStat")
        }
        if !B1ClassMetadata.EnumTypes.boYesNoEnum.isRemoved {
            B1ClassMetadata.EnumTypes.boYesNoEnum = metadata.enumType(withName: "SAPB1.BoYesNoEnum")
        }
        if !B1ClassMetadata.EnumTypes.brazilMultiIndexerTypes.isRemoved {
            B1ClassMetadata.EnumTypes.brazilMultiIndexerTypes = metadata.enumType(withName: "SAPB1.BrazilMultiIndexerTypes")
        }
        if !B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.isRemoved {
            B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes = metadata.enumType(withName: "SAPB1.BrazilNumericIndexerTypes")
        }
        if !B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.isRemoved {
            B1ClassMetadata.EnumTypes.brazilStringIndexerTypes = metadata.enumType(withName: "SAPB1.BrazilStringIndexerTypes")
        }
        if !B1ClassMetadata.EnumTypes.calculateInterestMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.calculateInterestMethodEnum = metadata.enumType(withName: "SAPB1.CalculateInterestMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.calculationBaseEnum.isRemoved {
            B1ClassMetadata.EnumTypes.calculationBaseEnum = metadata.enumType(withName: "SAPB1.CalculationBaseEnum")
        }
        if !B1ClassMetadata.EnumTypes.callMessageStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.callMessageStatusEnum = metadata.enumType(withName: "SAPB1.CallMessageStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.callMessageTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.callMessageTypeEnum = metadata.enumType(withName: "SAPB1.CallMessageTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.campaignAssignToEnum.isRemoved {
            B1ClassMetadata.EnumTypes.campaignAssignToEnum = metadata.enumType(withName: "SAPB1.CampaignAssignToEnum")
        }
        if !B1ClassMetadata.EnumTypes.campaignBPStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.campaignBPStatusEnum = metadata.enumType(withName: "SAPB1.CampaignBPStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.campaignItemTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.campaignItemTypeEnum = metadata.enumType(withName: "SAPB1.CampaignItemTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.campaignStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.campaignStatusEnum = metadata.enumType(withName: "SAPB1.CampaignStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.campaignTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.campaignTypeEnum = metadata.enumType(withName: "SAPB1.CampaignTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.cancelStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.cancelStatusEnum = metadata.enumType(withName: "SAPB1.CancelStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.cardOrAccountEnum.isRemoved {
            B1ClassMetadata.EnumTypes.cardOrAccountEnum = metadata.enumType(withName: "SAPB1.CardOrAccountEnum")
        }
        if !B1ClassMetadata.EnumTypes.closingOptionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.closingOptionEnum = metadata.enumType(withName: "SAPB1.ClosingOptionEnum")
        }
        if !B1ClassMetadata.EnumTypes.commissionTradeTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.commissionTradeTypeEnum = metadata.enumType(withName: "SAPB1.CommissionTradeTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.contractSequenceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.contractSequenceEnum = metadata.enumType(withName: "SAPB1.ContractSequenceEnum")
        }
        if !B1ClassMetadata.EnumTypes.counterTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.counterTypeEnum = metadata.enumType(withName: "SAPB1.CounterTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.countingDocumentStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.countingDocumentStatusEnum = metadata.enumType(withName: "SAPB1.CountingDocumentStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.countingLineStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.countingLineStatusEnum = metadata.enumType(withName: "SAPB1.CountingLineStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.countingTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.countingTypeEnum = metadata.enumType(withName: "SAPB1.CountingTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.createMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.createMethodEnum = metadata.enumType(withName: "SAPB1.CreateMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.creditOrDebitEnum.isRemoved {
            B1ClassMetadata.EnumTypes.creditOrDebitEnum = metadata.enumType(withName: "SAPB1.CreditOrDebitEnum")
        }
        if !B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.isRemoved {
            B1ClassMetadata.EnumTypes.currenciesDecimalsEnum = metadata.enumType(withName: "SAPB1.CurrenciesDecimalsEnum")
        }
        if !B1ClassMetadata.EnumTypes.cycleCountDeterminationCycleByEnum.isRemoved {
            B1ClassMetadata.EnumTypes.cycleCountDeterminationCycleByEnum = metadata.enumType(withName: "SAPB1.CycleCountDeterminationCycleByEnum")
        }
        if !B1ClassMetadata.EnumTypes.depreciationCalculationBaseEnum.isRemoved {
            B1ClassMetadata.EnumTypes.depreciationCalculationBaseEnum = metadata.enumType(withName: "SAPB1.DepreciationCalculationBaseEnum")
        }
        if !B1ClassMetadata.EnumTypes.depreciationMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.depreciationMethodEnum = metadata.enumType(withName: "SAPB1.DepreciationMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.directDebitTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.directDebitTypeEnum = metadata.enumType(withName: "SAPB1.DirectDebitTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.discountGroupBaseObjectEnum.isRemoved {
            B1ClassMetadata.EnumTypes.discountGroupBaseObjectEnum = metadata.enumType(withName: "SAPB1.DiscountGroupBaseObjectEnum")
        }
        if !B1ClassMetadata.EnumTypes.discountGroupDiscountTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.discountGroupDiscountTypeEnum = metadata.enumType(withName: "SAPB1.DiscountGroupDiscountTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.discountGroupRelationsEnum.isRemoved {
            B1ClassMetadata.EnumTypes.discountGroupRelationsEnum = metadata.enumType(withName: "SAPB1.DiscountGroupRelationsEnum")
        }
        if !B1ClassMetadata.EnumTypes.discountGroupTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.discountGroupTypeEnum = metadata.enumType(withName: "SAPB1.DiscountGroupTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.displayBatchQtyUoMByEnum.isRemoved {
            B1ClassMetadata.EnumTypes.displayBatchQtyUoMByEnum = metadata.enumType(withName: "SAPB1.DisplayBatchQtyUoMByEnum")
        }
        if !B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum = metadata.enumType(withName: "SAPB1.DocumentAuthorizationStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.documentDeliveryTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.documentDeliveryTypeEnum = metadata.enumType(withName: "SAPB1.DocumentDeliveryTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.documentObjectTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.documentObjectTypeEnum = metadata.enumType(withName: "SAPB1.DocumentObjectTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum = metadata.enumType(withName: "SAPB1.DomesticBankAccountValidationEnum")
        }
        if !B1ClassMetadata.EnumTypes.downPaymentTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.downPaymentTypeEnum = metadata.enumType(withName: "SAPB1.DownPaymentTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.drawingMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.drawingMethodEnum = metadata.enumType(withName: "SAPB1.DrawingMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.dueDateTypesEnum.isRemoved {
            B1ClassMetadata.EnumTypes.dueDateTypesEnum = metadata.enumType(withName: "SAPB1.DueDateTypesEnum")
        }
        if !B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.dunningLetterTypeEnum = metadata.enumType(withName: "SAPB1.DunningLetterTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.ecdPostingTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.ecdPostingTypeEnum = metadata.enumType(withName: "SAPB1.ECDPostingTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.eDocGenerationTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.eDocGenerationTypeEnum = metadata.enumType(withName: "SAPB1.EDocGenerationTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.eDocStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.eDocStatusEnum = metadata.enumType(withName: "SAPB1.EDocStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.ecmActionGenerationTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.ecmActionGenerationTypeEnum = metadata.enumType(withName: "SAPB1.EcmActionGenerationTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.ecmActionLogTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.ecmActionLogTypeEnum = metadata.enumType(withName: "SAPB1.EcmActionLogTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.ecmActionPeriodTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.ecmActionPeriodTypeEnum = metadata.enumType(withName: "SAPB1.EcmActionPeriodTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.ecmActionStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.ecmActionStatusEnum = metadata.enumType(withName: "SAPB1.EcmActionStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.ecmActionTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.ecmActionTypeEnum = metadata.enumType(withName: "SAPB1.EcmActionTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.effectivePriceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.effectivePriceEnum = metadata.enumType(withName: "SAPB1.EffectivePriceEnum")
        }
        if !B1ClassMetadata.EnumTypes.elecCommStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.elecCommStatusEnum = metadata.enumType(withName: "SAPB1.ElecCommStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.electronicDocGenTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.electronicDocGenTypeEnum = metadata.enumType(withName: "SAPB1.ElectronicDocGenTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.employeeExemptionUnitEnum.isRemoved {
            B1ClassMetadata.EnumTypes.employeeExemptionUnitEnum = metadata.enumType(withName: "SAPB1.EmployeeExemptionUnitEnum")
        }
        if !B1ClassMetadata.EnumTypes.employeePaymentMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.employeePaymentMethodEnum = metadata.enumType(withName: "SAPB1.EmployeePaymentMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.employeeTransferProcessingStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.employeeTransferProcessingStatusEnum = metadata.enumType(withName: "SAPB1.EmployeeTransferProcessingStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.employeeTransferStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.employeeTransferStatusEnum = metadata.enumType(withName: "SAPB1.EmployeeTransferStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.endTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.endTypeEnum = metadata.enumType(withName: "SAPB1.EndTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.exchangeRateSelectEnum.isRemoved {
            B1ClassMetadata.EnumTypes.exchangeRateSelectEnum = metadata.enumType(withName: "SAPB1.ExchangeRateSelectEnum")
        }
        if !B1ClassMetadata.EnumTypes.exemptionMaxAmountValidationTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.exemptionMaxAmountValidationTypeEnum = metadata.enumType(withName: "SAPB1.ExemptionMaxAmountValidationTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.externalCallStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.externalCallStatusEnum = metadata.enumType(withName: "SAPB1.ExternalCallStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.folioLetterEnum.isRemoved {
            B1ClassMetadata.EnumTypes.folioLetterEnum = metadata.enumType(withName: "SAPB1.FolioLetterEnum")
        }
        if !B1ClassMetadata.EnumTypes.freightTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.freightTypeEnum = metadata.enumType(withName: "SAPB1.FreightTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.freightTypeForBolloEnum.isRemoved {
            B1ClassMetadata.EnumTypes.freightTypeForBolloEnum = metadata.enumType(withName: "SAPB1.FreightTypeForBolloEnum")
        }
        if !B1ClassMetadata.EnumTypes.gstTaxCategoryEnum.isRemoved {
            B1ClassMetadata.EnumTypes.gstTaxCategoryEnum = metadata.enumType(withName: "SAPB1.GSTTaxCategoryEnum")
        }
        if !B1ClassMetadata.EnumTypes.gstTransactionTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.gstTransactionTypeEnum = metadata.enumType(withName: "SAPB1.GSTTransactionTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.gtsResponseToExceedingEnum.isRemoved {
            B1ClassMetadata.EnumTypes.gtsResponseToExceedingEnum = metadata.enumType(withName: "SAPB1.GTSResponseToExceedingEnum")
        }
        if !B1ClassMetadata.EnumTypes.generatedAssetStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.generatedAssetStatusEnum = metadata.enumType(withName: "SAPB1.GeneratedAssetStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.getGLAccountByEnum.isRemoved {
            B1ClassMetadata.EnumTypes.getGLAccountByEnum = metadata.enumType(withName: "SAPB1.GetGLAccountByEnum")
        }
        if !B1ClassMetadata.EnumTypes.govPayCodePeriodicityEnum.isRemoved {
            B1ClassMetadata.EnumTypes.govPayCodePeriodicityEnum = metadata.enumType(withName: "SAPB1.GovPayCodePeriodicityEnum")
        }
        if !B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.isRemoved {
            B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum = metadata.enumType(withName: "SAPB1.GovPayCodeSPEDCategoryEnum")
        }
        if !B1ClassMetadata.EnumTypes.groupingMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.groupingMethodEnum = metadata.enumType(withName: "SAPB1.GroupingMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.importOrExportTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.importOrExportTypeEnum = metadata.enumType(withName: "SAPB1.ImportOrExportTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.installmentPaymentsPossiblityEnum.isRemoved {
            B1ClassMetadata.EnumTypes.installmentPaymentsPossiblityEnum = metadata.enumType(withName: "SAPB1.InstallmentPaymentsPossiblityEnum")
        }
        if !B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.intrastatConfigurationEnum = metadata.enumType(withName: "SAPB1.IntrastatConfigurationEnum")
        }
        if !B1ClassMetadata.EnumTypes.invBaseDocTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.invBaseDocTypeEnum = metadata.enumType(withName: "SAPB1.InvBaseDocTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum = metadata.enumType(withName: "SAPB1.InventoryAccountTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.inventoryCycleTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.inventoryCycleTypeEnum = metadata.enumType(withName: "SAPB1.InventoryCycleTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.inventoryOpeningBalancePriceSourceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.inventoryOpeningBalancePriceSourceEnum = metadata.enumType(withName: "SAPB1.InventoryOpeningBalancePriceSourceEnum")
        }
        if !B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum = metadata.enumType(withName: "SAPB1.InventoryPostingCopyOptionEnum")
        }
        if !B1ClassMetadata.EnumTypes.inventoryPostingPriceSourceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.inventoryPostingPriceSourceEnum = metadata.enumType(withName: "SAPB1.InventoryPostingPriceSourceEnum")
        }
        if !B1ClassMetadata.EnumTypes.issuePrimarilyByEnum.isRemoved {
            B1ClassMetadata.EnumTypes.issuePrimarilyByEnum = metadata.enumType(withName: "SAPB1.IssuePrimarilyByEnum")
        }
        if !B1ClassMetadata.EnumTypes.itemClassEnum.isRemoved {
            B1ClassMetadata.EnumTypes.itemClassEnum = metadata.enumType(withName: "SAPB1.ItemClassEnum")
        }
        if !B1ClassMetadata.EnumTypes.itemTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.itemTypeEnum = metadata.enumType(withName: "SAPB1.ItemTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.itemUoMTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.itemUoMTypeEnum = metadata.enumType(withName: "SAPB1.ItemUoMTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.kpiTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.kpiTypeEnum = metadata.enumType(withName: "SAPB1.KPITypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.lcCostTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.lcCostTypeEnum = metadata.enumType(withName: "SAPB1.LCCostTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.landedCostAllocationByEnum.isRemoved {
            B1ClassMetadata.EnumTypes.landedCostAllocationByEnum = metadata.enumType(withName: "SAPB1.LandedCostAllocationByEnum")
        }
        if !B1ClassMetadata.EnumTypes.landedCostBaseDocumentTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.landedCostBaseDocumentTypeEnum = metadata.enumType(withName: "SAPB1.LandedCostBaseDocumentTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.landedCostCostCategoryEnum.isRemoved {
            B1ClassMetadata.EnumTypes.landedCostCostCategoryEnum = metadata.enumType(withName: "SAPB1.LandedCostCostCategoryEnum")
        }
        if !B1ClassMetadata.EnumTypes.landedCostDocStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.landedCostDocStatusEnum = metadata.enumType(withName: "SAPB1.LandedCostDocStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.legalDataLineTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.legalDataLineTypeEnum = metadata.enumType(withName: "SAPB1.LegalDataLineTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.licenseTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.licenseTypeEnum = metadata.enumType(withName: "SAPB1.LicenseTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.licenseUpdateTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.licenseUpdateTypeEnum = metadata.enumType(withName: "SAPB1.LicenseUpdateTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.lineStatusTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.lineStatusTypeEnum = metadata.enumType(withName: "SAPB1.LineStatusTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.lineTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.lineTypeEnum = metadata.enumType(withName: "SAPB1.LineTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.linkedDocTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.linkedDocTypeEnum = metadata.enumType(withName: "SAPB1.LinkedDocTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.logonMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.logonMethodEnum = metadata.enumType(withName: "SAPB1.LogonMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.mobileAddonSettingTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.mobileAddonSettingTypeEnum = metadata.enumType(withName: "SAPB1.MobileAddonSettingTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.mobileAppReportChoiceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.mobileAppReportChoiceEnum = metadata.enumType(withName: "SAPB1.MobileAppReportChoiceEnum")
        }
        if !B1ClassMetadata.EnumTypes.multipleCounterRoleEnum.isRemoved {
            B1ClassMetadata.EnumTypes.multipleCounterRoleEnum = metadata.enumType(withName: "SAPB1.MultipleCounterRoleEnum")
        }
        if !B1ClassMetadata.EnumTypes.operationCode347Enum.isRemoved {
            B1ClassMetadata.EnumTypes.operationCode347Enum = metadata.enumType(withName: "SAPB1.OperationCode347Enum")
        }
        if !B1ClassMetadata.EnumTypes.operationCodeTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.operationCodeTypeEnum = metadata.enumType(withName: "SAPB1.OperationCodeTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.opportunityTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.opportunityTypeEnum = metadata.enumType(withName: "SAPB1.OpportunityTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.pmDocumentTypeEnum = metadata.enumType(withName: "SAPB1.PMDocumentTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.paymentInvoiceTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.paymentInvoiceTypeEnum = metadata.enumType(withName: "SAPB1.PaymentInvoiceTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.paymentMeansTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.paymentMeansTypeEnum = metadata.enumType(withName: "SAPB1.PaymentMeansTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.paymentRunExportRowTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.paymentRunExportRowTypeEnum = metadata.enumType(withName: "SAPB1.PaymentRunExportRowTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum = metadata.enumType(withName: "SAPB1.PaymentsAuthorizationStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.periodStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.periodStatusEnum = metadata.enumType(withName: "SAPB1.PeriodStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.postingMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.postingMethodEnum = metadata.enumType(withName: "SAPB1.PostingMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.postingOfDepreciationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.postingOfDepreciationEnum = metadata.enumType(withName: "SAPB1.PostingOfDepreciationEnum")
        }
        if !B1ClassMetadata.EnumTypes.priceModeDocumentEnum.isRemoved {
            B1ClassMetadata.EnumTypes.priceModeDocumentEnum = metadata.enumType(withName: "SAPB1.PriceModeDocumentEnum")
        }
        if !B1ClassMetadata.EnumTypes.priceModeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.priceModeEnum = metadata.enumType(withName: "SAPB1.PriceModeEnum")
        }
        if !B1ClassMetadata.EnumTypes.priceProceedMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.priceProceedMethodEnum = metadata.enumType(withName: "SAPB1.PriceProceedMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.printOnEnum.isRemoved {
            B1ClassMetadata.EnumTypes.printOnEnum = metadata.enumType(withName: "SAPB1.PrintOnEnum")
        }
        if !B1ClassMetadata.EnumTypes.printStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.printStatusEnum = metadata.enumType(withName: "SAPB1.PrintStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.productionItemType.isRemoved {
            B1ClassMetadata.EnumTypes.productionItemType = metadata.enumType(withName: "SAPB1.ProductionItemType")
        }
        if !B1ClassMetadata.EnumTypes.projectStatusTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.projectStatusTypeEnum = metadata.enumType(withName: "SAPB1.ProjectStatusTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.projectTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.projectTypeEnum = metadata.enumType(withName: "SAPB1.ProjectTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.rclRecurringExecutionHandlingEnum.isRemoved {
            B1ClassMetadata.EnumTypes.rclRecurringExecutionHandlingEnum = metadata.enumType(withName: "SAPB1.RclRecurringExecutionHandlingEnum")
        }
        if !B1ClassMetadata.EnumTypes.rclRecurringTransactionStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.rclRecurringTransactionStatusEnum = metadata.enumType(withName: "SAPB1.RclRecurringTransactionStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.receivingBinLocationsMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.receivingBinLocationsMethodEnum = metadata.enumType(withName: "SAPB1.ReceivingBinLocationsMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.receivingUpToMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.receivingUpToMethodEnum = metadata.enumType(withName: "SAPB1.ReceivingUpToMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.recipientTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.recipientTypeEnum = metadata.enumType(withName: "SAPB1.RecipientTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.reconSelectDateTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.reconSelectDateTypeEnum = metadata.enumType(withName: "SAPB1.ReconSelectDateTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.reconTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.reconTypeEnum = metadata.enumType(withName: "SAPB1.ReconTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.reconciliationAccountTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.reconciliationAccountTypeEnum = metadata.enumType(withName: "SAPB1.ReconciliationAccountTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.isRemoved {
            B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum = metadata.enumType(withName: "SAPB1.RecurrenceDayOfWeekEnum")
        }
        if !B1ClassMetadata.EnumTypes.recurrencePatternEnum.isRemoved {
            B1ClassMetadata.EnumTypes.recurrencePatternEnum = metadata.enumType(withName: "SAPB1.RecurrencePatternEnum")
        }
        if !B1ClassMetadata.EnumTypes.recurrenceSequenceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.recurrenceSequenceEnum = metadata.enumType(withName: "SAPB1.RecurrenceSequenceEnum")
        }
        if !B1ClassMetadata.EnumTypes.repeatOptionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.repeatOptionEnum = metadata.enumType(withName: "SAPB1.RepeatOptionEnum")
        }
        if !B1ClassMetadata.EnumTypes.report349CodeListEnum.isRemoved {
            B1ClassMetadata.EnumTypes.report349CodeListEnum = metadata.enumType(withName: "SAPB1.Report349CodeListEnum")
        }
        if !B1ClassMetadata.EnumTypes.reportLayoutCategoryEnum.isRemoved {
            B1ClassMetadata.EnumTypes.reportLayoutCategoryEnum = metadata.enumType(withName: "SAPB1.ReportLayoutCategoryEnum")
        }
        if !B1ClassMetadata.EnumTypes.residenceNumberTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.residenceNumberTypeEnum = metadata.enumType(withName: "SAPB1.ResidenceNumberTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceAllocationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceAllocationEnum = metadata.enumType(withName: "SAPB1.ResourceAllocationEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceCapacityActionEnum = metadata.enumType(withName: "SAPB1.ResourceCapacityActionEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceCapacityBaseTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceCapacityBaseTypeEnum = metadata.enumType(withName: "SAPB1.ResourceCapacityBaseTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceCapacityMemoSourceEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceCapacityMemoSourceEnum = metadata.enumType(withName: "SAPB1.ResourceCapacityMemoSourceEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceCapacityOwningTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceCapacityOwningTypeEnum = metadata.enumType(withName: "SAPB1.ResourceCapacityOwningTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceCapacityRevertedTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceCapacityRevertedTypeEnum = metadata.enumType(withName: "SAPB1.ResourceCapacityRevertedTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceCapacitySourceTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceCapacitySourceTypeEnum = metadata.enumType(withName: "SAPB1.ResourceCapacitySourceTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceCapacityTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceCapacityTypeEnum = metadata.enumType(withName: "SAPB1.ResourceCapacityTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum = metadata.enumType(withName: "SAPB1.ResourceDailyCapacityWeekdayEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceIssueMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceIssueMethodEnum = metadata.enumType(withName: "SAPB1.ResourceIssueMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.resourceTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.resourceTypeEnum = metadata.enumType(withName: "SAPB1.ResourceTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.retirementMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.retirementMethodEnum = metadata.enumType(withName: "SAPB1.RetirementMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.retirementPeriodControlEnum.isRemoved {
            B1ClassMetadata.EnumTypes.retirementPeriodControlEnum = metadata.enumType(withName: "SAPB1.RetirementPeriodControlEnum")
        }
        if !B1ClassMetadata.EnumTypes.retirementProRataTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.retirementProRataTypeEnum = metadata.enumType(withName: "SAPB1.RetirementProRataTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.returnTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.returnTypeEnum = metadata.enumType(withName: "SAPB1.ReturnTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.riskLevelTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.riskLevelTypeEnum = metadata.enumType(withName: "SAPB1.RiskLevelTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.roundingContextEnum.isRemoved {
            B1ClassMetadata.EnumTypes.roundingContextEnum = metadata.enumType(withName: "SAPB1.RoundingContextEnum")
        }
        if !B1ClassMetadata.EnumTypes.roundingSysEnum.isRemoved {
            B1ClassMetadata.EnumTypes.roundingSysEnum = metadata.enumType(withName: "SAPB1.RoundingSysEnum")
        }
        if !B1ClassMetadata.EnumTypes.roundingTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.roundingTypeEnum = metadata.enumType(withName: "SAPB1.RoundingTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.sepaSequenceTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.sepaSequenceTypeEnum = metadata.enumType(withName: "SAPB1.SEPASequenceTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.soiExcisableTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.soiExcisableTypeEnum = metadata.enumType(withName: "SAPB1.SOIExcisableTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.spedContabilAccountPurposeCode.isRemoved {
            B1ClassMetadata.EnumTypes.spedContabilAccountPurposeCode = metadata.enumType(withName: "SAPB1.SPEDContabilAccountPurposeCode")
        }
        if !B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum = metadata.enumType(withName: "SAPB1.SPEDContabilQualificationCodeEnum")
        }
        if !B1ClassMetadata.EnumTypes.serviceTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.serviceTypeEnum = metadata.enumType(withName: "SAPB1.ServiceTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.services.isRemoved {
            B1ClassMetadata.EnumTypes.services = metadata.enumType(withName: "SAPB1.Services")
        }
        if !B1ClassMetadata.EnumTypes.shaamGroupEnum.isRemoved {
            B1ClassMetadata.EnumTypes.shaamGroupEnum = metadata.enumType(withName: "SAPB1.ShaamGroupEnum")
        }
        if !B1ClassMetadata.EnumTypes.sortOrderEnum.isRemoved {
            B1ClassMetadata.EnumTypes.sortOrderEnum = metadata.enumType(withName: "SAPB1.SortOrderEnum")
        }
        if !B1ClassMetadata.EnumTypes.sourceCurrencyEnum.isRemoved {
            B1ClassMetadata.EnumTypes.sourceCurrencyEnum = metadata.enumType(withName: "SAPB1.SourceCurrencyEnum")
        }
        if !B1ClassMetadata.EnumTypes.specialDepreciationCalculationMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.specialDepreciationCalculationMethodEnum = metadata.enumType(withName: "SAPB1.SpecialDepreciationCalculationMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.specialDepreciationMaximumFlagEnum.isRemoved {
            B1ClassMetadata.EnumTypes.specialDepreciationMaximumFlagEnum = metadata.enumType(withName: "SAPB1.SpecialDepreciationMaximumFlagEnum")
        }
        if !B1ClassMetadata.EnumTypes.specialProductTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.specialProductTypeEnum = metadata.enumType(withName: "SAPB1.SpecialProductTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.stageDepTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.stageDepTypeEnum = metadata.enumType(withName: "SAPB1.StageDepTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum = metadata.enumType(withName: "SAPB1.StockTransferAuthorizationStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.straightLineCalculationMethodEnum.isRemoved {
            B1ClassMetadata.EnumTypes.straightLineCalculationMethodEnum = metadata.enumType(withName: "SAPB1.StraightLineCalculationMethodEnum")
        }
        if !B1ClassMetadata.EnumTypes.straightLinePeriodControlDepreciationPeriodsEnum.isRemoved {
            B1ClassMetadata.EnumTypes.straightLinePeriodControlDepreciationPeriodsEnum = metadata.enumType(withName: "SAPB1.StraightLinePeriodControlDepreciationPeriodsEnum")
        }
        if !B1ClassMetadata.EnumTypes.subprojectStatusTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.subprojectStatusTypeEnum = metadata.enumType(withName: "SAPB1.SubprojectStatusTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.subsequentAcquisitionPeriodControlEnum.isRemoved {
            B1ClassMetadata.EnumTypes.subsequentAcquisitionPeriodControlEnum = metadata.enumType(withName: "SAPB1.SubsequentAcquisitionPeriodControlEnum")
        }
        if !B1ClassMetadata.EnumTypes.subsequentAcquisitionProRataTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.subsequentAcquisitionProRataTypeEnum = metadata.enumType(withName: "SAPB1.SubsequentAcquisitionProRataTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.targetGroupTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.targetGroupTypeEnum = metadata.enumType(withName: "SAPB1.TargetGroupTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.targetGroupsDetailStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.targetGroupsDetailStatusEnum = metadata.enumType(withName: "SAPB1.TargetGroupsDetailStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.taxCalcSysEnum.isRemoved {
            B1ClassMetadata.EnumTypes.taxCalcSysEnum = metadata.enumType(withName: "SAPB1.TaxCalcSysEnum")
        }
        if !B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDByUsageTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDByUsageTypeEnum = metadata.enumType(withName: "SAPB1.TaxCodeDeterminationTCDByUsageTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDDefaultWTTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDDefaultWTTypeEnum = metadata.enumType(withName: "SAPB1.TaxCodeDeterminationTCDDefaultWTTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDTypeEnum = metadata.enumType(withName: "SAPB1.TaxCodeDeterminationTCDTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.taxInvoiceReportLineTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.taxInvoiceReportLineTypeEnum = metadata.enumType(withName: "SAPB1.TaxInvoiceReportLineTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.taxInvoiceReportNTSApprovedEnum.isRemoved {
            B1ClassMetadata.EnumTypes.taxInvoiceReportNTSApprovedEnum = metadata.enumType(withName: "SAPB1.TaxInvoiceReportNTSApprovedEnum")
        }
        if !B1ClassMetadata.EnumTypes.taxRateDeterminationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.taxRateDeterminationEnum = metadata.enumType(withName: "SAPB1.TaxRateDeterminationEnum")
        }
        if !B1ClassMetadata.EnumTypes.taxReportFilterApArDocumentType.isRemoved {
            B1ClassMetadata.EnumTypes.taxReportFilterApArDocumentType = metadata.enumType(withName: "SAPB1.TaxReportFilterApArDocumentType")
        }
        if !B1ClassMetadata.EnumTypes.taxReportFilterDeclarationType.isRemoved {
            B1ClassMetadata.EnumTypes.taxReportFilterDeclarationType = metadata.enumType(withName: "SAPB1.TaxReportFilterDeclarationType")
        }
        if !B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.isRemoved {
            B1ClassMetadata.EnumTypes.taxReportFilterDocumentType = metadata.enumType(withName: "SAPB1.TaxReportFilterDocumentType")
        }
        if !B1ClassMetadata.EnumTypes.taxReportFilterPeriod.isRemoved {
            B1ClassMetadata.EnumTypes.taxReportFilterPeriod = metadata.enumType(withName: "SAPB1.TaxReportFilterPeriod")
        }
        if !B1ClassMetadata.EnumTypes.taxReportFilterQuarterOrDates.isRemoved {
            B1ClassMetadata.EnumTypes.taxReportFilterQuarterOrDates = metadata.enumType(withName: "SAPB1.TaxReportFilterQuarterOrDates")
        }
        if !B1ClassMetadata.EnumTypes.taxReportFilterReportLayoutType.isRemoved {
            B1ClassMetadata.EnumTypes.taxReportFilterReportLayoutType = metadata.enumType(withName: "SAPB1.TaxReportFilterReportLayoutType")
        }
        if !B1ClassMetadata.EnumTypes.taxReportFilterType.isRemoved {
            B1ClassMetadata.EnumTypes.taxReportFilterType = metadata.enumType(withName: "SAPB1.TaxReportFilterType")
        }
        if !B1ClassMetadata.EnumTypes.taxTypeBlackListEnum.isRemoved {
            B1ClassMetadata.EnumTypes.taxTypeBlackListEnum = metadata.enumType(withName: "SAPB1.TaxTypeBlackListEnum")
        }
        if !B1ClassMetadata.EnumTypes.tdsTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.tdsTypeEnum = metadata.enumType(withName: "SAPB1.TdsTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.threatLevelEnum.isRemoved {
            B1ClassMetadata.EnumTypes.threatLevelEnum = metadata.enumType(withName: "SAPB1.ThreatLevelEnum")
        }
        if !B1ClassMetadata.EnumTypes.timeSheetTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.timeSheetTypeEnum = metadata.enumType(withName: "SAPB1.TimeSheetTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.transTypesEnum.isRemoved {
            B1ClassMetadata.EnumTypes.transTypesEnum = metadata.enumType(withName: "SAPB1.TransTypesEnum")
        }
        if !B1ClassMetadata.EnumTypes.transferSourcePeriodControlEnum.isRemoved {
            B1ClassMetadata.EnumTypes.transferSourcePeriodControlEnum = metadata.enumType(withName: "SAPB1.TransferSourcePeriodControlEnum")
        }
        if !B1ClassMetadata.EnumTypes.transferSourceProRataTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.transferSourceProRataTypeEnum = metadata.enumType(withName: "SAPB1.TransferSourceProRataTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.transferTargetPeriodControlEnum.isRemoved {
            B1ClassMetadata.EnumTypes.transferTargetPeriodControlEnum = metadata.enumType(withName: "SAPB1.TransferTargetPeriodControlEnum")
        }
        if !B1ClassMetadata.EnumTypes.transferTargetProRataTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.transferTargetProRataTypeEnum = metadata.enumType(withName: "SAPB1.TransferTargetProRataTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.translationCategoryEnum.isRemoved {
            B1ClassMetadata.EnumTypes.translationCategoryEnum = metadata.enumType(withName: "SAPB1.TranslationCategoryEnum")
        }
        if !B1ClassMetadata.EnumTypes.typeOfAdvancedRulesEnum.isRemoved {
            B1ClassMetadata.EnumTypes.typeOfAdvancedRulesEnum = metadata.enumType(withName: "SAPB1.TypeOfAdvancedRulesEnum")
        }
        if !B1ClassMetadata.EnumTypes.typeOfOperationEnum.isRemoved {
            B1ClassMetadata.EnumTypes.typeOfOperationEnum = metadata.enumType(withName: "SAPB1.TypeOfOperationEnum")
        }
        if !B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.isRemoved {
            B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum = metadata.enumType(withName: "SAPB1.UDFLinkedSystemObjectTypesEnum")
        }
        if !B1ClassMetadata.EnumTypes.userActionTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.userActionTypeEnum = metadata.enumType(withName: "SAPB1.UserActionTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.userGroupCategoryEnum.isRemoved {
            B1ClassMetadata.EnumTypes.userGroupCategoryEnum = metadata.enumType(withName: "SAPB1.UserGroupCategoryEnum")
        }
        if !B1ClassMetadata.EnumTypes.userMenuItemTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.userMenuItemTypeEnum = metadata.enumType(withName: "SAPB1.UserMenuItemTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.userQueryTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.userQueryTypeEnum = metadata.enumType(withName: "SAPB1.UserQueryTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.vmCommunicationStatusEnum.isRemoved {
            B1ClassMetadata.EnumTypes.vmCommunicationStatusEnum = metadata.enumType(withName: "SAPB1.VMCommunicationStatusEnum")
        }
        if !B1ClassMetadata.EnumTypes.vmCommunicationTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.vmCommunicationTypeEnum = metadata.enumType(withName: "SAPB1.VMCommunicationTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.vatGroupsTaxRegionEnum.isRemoved {
            B1ClassMetadata.EnumTypes.vatGroupsTaxRegionEnum = metadata.enumType(withName: "SAPB1.VatGroupsTaxRegionEnum")
        }
        if !B1ClassMetadata.EnumTypes.viewStyleTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.viewStyleTypeEnum = metadata.enumType(withName: "SAPB1.ViewStyleTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.wtdDetailType.isRemoved {
            B1ClassMetadata.EnumTypes.wtdDetailType = metadata.enumType(withName: "SAPB1.WTDDetailType")
        }
        if !B1ClassMetadata.EnumTypes.withholdingTaxCodeBaseTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.withholdingTaxCodeBaseTypeEnum = metadata.enumType(withName: "SAPB1.WithholdingTaxCodeBaseTypeEnum")
        }
        if !B1ClassMetadata.EnumTypes.withholdingTaxCodeCategoryEnum.isRemoved {
            B1ClassMetadata.EnumTypes.withholdingTaxCodeCategoryEnum = metadata.enumType(withName: "SAPB1.WithholdingTaxCodeCategoryEnum")
        }
        if !B1ClassMetadata.EnumTypes.withholdingTypeEnum.isRemoved {
            B1ClassMetadata.EnumTypes.withholdingTypeEnum = metadata.enumType(withName: "SAPB1.WithholdingTypeEnum")
        }
        if !B1ClassMetadata.EnumValues.B1PreAccountCategorySourceEnum.acsBalanceSheet.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAccountCategorySourceEnum.acsBalanceSheet = B1ClassMetadata.EnumTypes.accountCategorySourceEnum.member(name: "acsBalanceSheet")
        }
        if !B1ClassMetadata.EnumValues.B1PreAccountCategorySourceEnum.acsProfitAndLoss.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAccountCategorySourceEnum.acsProfitAndLoss = B1ClassMetadata.EnumTypes.accountCategorySourceEnum.member(name: "acsProfitAndLoss")
        }
        if !B1ClassMetadata.EnumValues.B1PreAccountCategorySourceEnum.acsTrialBalance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAccountCategorySourceEnum.acsTrialBalance = B1ClassMetadata.EnumTypes.accountCategorySourceEnum.member(name: "acsTrialBalance")
        }
        if !B1ClassMetadata.EnumValues.B1PreAccountSegmentationTypeEnum.astAlphanumeric.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAccountSegmentationTypeEnum.astAlphanumeric = B1ClassMetadata.EnumTypes.accountSegmentationTypeEnum.member(name: "ast_Alphanumeric")
        }
        if !B1ClassMetadata.EnumValues.B1PreAccountSegmentationTypeEnum.astNumeric.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAccountSegmentationTypeEnum.astNumeric = B1ClassMetadata.EnumTypes.accountSegmentationTypeEnum.member(name: "ast_Numeric")
        }
        if !B1ClassMetadata.EnumValues.B1PreAcquisitionPeriodControlEnum.apcProRataTemporis.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAcquisitionPeriodControlEnum.apcProRataTemporis = B1ClassMetadata.EnumTypes.acquisitionPeriodControlEnum.member(name: "apcProRataTemporis")
        }
        if !B1ClassMetadata.EnumValues.B1PreAcquisitionPeriodControlEnum.apcFirstYearConvention.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAcquisitionPeriodControlEnum.apcFirstYearConvention = B1ClassMetadata.EnumTypes.acquisitionPeriodControlEnum.member(name: "apcFirstYearConvention")
        }
        if !B1ClassMetadata.EnumValues.B1PreAcquisitionPeriodControlEnum.apcHalfYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAcquisitionPeriodControlEnum.apcHalfYear = B1ClassMetadata.EnumTypes.acquisitionPeriodControlEnum.member(name: "apcHalfYear")
        }
        if !B1ClassMetadata.EnumValues.B1PreAcquisitionPeriodControlEnum.apcFullYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAcquisitionPeriodControlEnum.apcFullYear = B1ClassMetadata.EnumTypes.acquisitionPeriodControlEnum.member(name: "apcFullYear")
        }
        if !B1ClassMetadata.EnumValues.B1PreAcquisitionProRataTypeEnum.aprtExactlyDailyBase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAcquisitionProRataTypeEnum.aprtExactlyDailyBase = B1ClassMetadata.EnumTypes.acquisitionProRataTypeEnum.member(name: "aprtExactlyDailyBase")
        }
        if !B1ClassMetadata.EnumValues.B1PreAcquisitionProRataTypeEnum.aprtFirstDayOfCurrentPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAcquisitionProRataTypeEnum.aprtFirstDayOfCurrentPeriod = B1ClassMetadata.EnumTypes.acquisitionProRataTypeEnum.member(name: "aprtFirstDayOfCurrentPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreAcquisitionProRataTypeEnum.aprtFirstDayOfNextPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAcquisitionProRataTypeEnum.aprtFirstDayOfNextPeriod = B1ClassMetadata.EnumTypes.acquisitionProRataTypeEnum.member(name: "aprtFirstDayOfNextPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdNOB.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdNOB = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_NOB")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdInvoices = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_Invoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdRevertInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdRevertInvoice = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_RevertInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdDeliveryNotes = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_DeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdReturns = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_Returns")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdOrders = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_Orders")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdPurchaseInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdPurchaseInvoices = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_PurchaseInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdPurchaseDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdPurchaseDeliveryNotes = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_PurchaseDeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdPurchaseOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdPurchaseOrders = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_PurchaseOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdQuotations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdQuotations = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_Quotations")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdIncomingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdIncomingPayments = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_IncomingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdJournalEntries.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdJournalEntries = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_JournalEntries")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdOutgoingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdOutgoingPayments = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_OutgoingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdChecksForPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdChecksForPayment = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_ChecksForPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdCorrectionInvoice = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_CorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdDownPaymentIncoming.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdDownPaymentIncoming = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_DownPaymentIncoming")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdDownPaymentOutgoing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementDocumentEnum.atdDownPaymentOutgoing = B1ClassMetadata.EnumTypes.alertManagementDocumentEnum.member(name: "atd_DownPaymentOutgoing")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiMinutes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiMinutes = B1ClassMetadata.EnumTypes.alertManagementFrequencyType.member(name: "atfi_Minutes")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiHours.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiHours = B1ClassMetadata.EnumTypes.alertManagementFrequencyType.member(name: "atfi_Hours")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiDays.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiDays = B1ClassMetadata.EnumTypes.alertManagementFrequencyType.member(name: "atfi_Days")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiWeeks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiWeeks = B1ClassMetadata.EnumTypes.alertManagementFrequencyType.member(name: "atfi_Weeks")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiMonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementFrequencyType.atfiMonthly = B1ClassMetadata.EnumTypes.alertManagementFrequencyType.member(name: "atfi_Monthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementPriorityEnum.atpLow.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementPriorityEnum.atpLow = B1ClassMetadata.EnumTypes.alertManagementPriorityEnum.member(name: "atp_Low")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementPriorityEnum.atpNormal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementPriorityEnum.atpNormal = B1ClassMetadata.EnumTypes.alertManagementPriorityEnum.member(name: "atp_Normal")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementPriorityEnum.atpHigh.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementPriorityEnum.atpHigh = B1ClassMetadata.EnumTypes.alertManagementPriorityEnum.member(name: "atp_High")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementTypeEnum.attUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementTypeEnum.attUser = B1ClassMetadata.EnumTypes.alertManagementTypeEnum.member(name: "att_User")
        }
        if !B1ClassMetadata.EnumValues.B1PreAlertManagementTypeEnum.attSystem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAlertManagementTypeEnum.attSystem = B1ClassMetadata.EnumTypes.alertManagementTypeEnum.member(name: "att_System")
        }
        if !B1ClassMetadata.EnumValues.B1PreAmountCatTypeEnum.actOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAmountCatTypeEnum.actOpen = B1ClassMetadata.EnumTypes.amountCatTypeEnum.member(name: "act_Open")
        }
        if !B1ClassMetadata.EnumValues.B1PreAmountCatTypeEnum.actInvoiced.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAmountCatTypeEnum.actInvoiced = B1ClassMetadata.EnumTypes.amountCatTypeEnum.member(name: "act_Invoiced")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctUndefined.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctUndefined = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctUndefined")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctDeviationFromCreditLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctDeviationFromCreditLine = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctDeviationFromCreditLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctDeviationFromObligo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctDeviationFromObligo = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctDeviationFromObligo")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctGrossProfitPercent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctGrossProfitPercent = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctGrossProfitPercent")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctDiscountPercent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctDiscountPercent = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctDiscountPercent")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctDeviationFromBudget.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctDeviationFromBudget = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctDeviationFromBudget")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctTotalDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctTotalDocument = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctTotalDocument")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctItemCode.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctItemCode = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctItemCode")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctTotalLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctTotalLine = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctTotalLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctCountedQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctCountedQuantity = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctCountedQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctQuantity = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctVariance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctVariance = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctVariance")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctVariancePercent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateConditionTypeEnum.atctVariancePercent = B1ClassMetadata.EnumTypes.approvalTemplateConditionTypeEnum.member(name: "atctVariancePercent")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeUndefined.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeUndefined = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeUndefined")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeGreaterThan.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeGreaterThan = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeGreaterThan")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeGreaterOrEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeGreaterOrEqual = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeGreaterOrEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeLessThan.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeLessThan = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeLessThan")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeLessOrEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeLessOrEqual = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeLessOrEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeEqual = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeDoesNotEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeDoesNotEqual = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeDoesNotEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeInRange.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeInRange = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeInRange")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeNotInRange.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplateOperationTypeEnum.opcodeNotInRange = B1ClassMetadata.EnumTypes.approvalTemplateOperationTypeEnum.member(name: "opcodeNotInRange")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtQuotation = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtQuotation")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtOrder = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtDelivery.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtDelivery = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtDelivery")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtReturns = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtReturns")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtArDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtArDownPayment = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtArDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtArInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtArInvoice = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtArInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtArCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtArCreditMemo = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtArCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtCorrectionInvoice = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtPurchaseOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtPurchaseOrder = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtPurchaseOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtGoodsReceiptPO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtGoodsReceiptPO = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtGoodsReceiptPO")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtGoodsReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtGoodsReturns = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtGoodsReturns")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtApDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtApDownPayment = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtApDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtApInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtApInvoice = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtApInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtApCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtApCreditMemo = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtApCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtGoodsReceipt.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtGoodsReceipt = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtGoodsReceipt")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtGoodsIssue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtGoodsIssue = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtGoodsIssue")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryTransfer = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtInventoryTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtPurchaseQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtPurchaseQuotation = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtPurchaseQuotation")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryTransferRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryTransferRequest = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtInventoryTransferRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtOutgoingPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtOutgoingPayment = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtOutgoingPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryCounting.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryCounting = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtInventoryCounting")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryPosting.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryPosting = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtInventoryPosting")
        }
        if !B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryOpeningBalance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreApprovalTemplatesDocumentTypeEnum.atdtInventoryOpeningBalance = B1ClassMetadata.EnumTypes.approvalTemplatesDocumentTypeEnum.member(name: "atdtInventoryOpeningBalance")
        }
        if !B1ClassMetadata.EnumValues.B1PreAreaTypeEnum.atPostingtoGL.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAreaTypeEnum.atPostingtoGL = B1ClassMetadata.EnumTypes.areaTypeEnum.member(name: "atPostingtoGL")
        }
        if !B1ClassMetadata.EnumValues.B1PreAreaTypeEnum.atAdditionalArea.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAreaTypeEnum.atAdditionalArea = B1ClassMetadata.EnumTypes.areaTypeEnum.member(name: "atAdditionalArea")
        }
        if !B1ClassMetadata.EnumValues.B1PreAreaTypeEnum.atDerivedArea.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAreaTypeEnum.atDerivedArea = B1ClassMetadata.EnumTypes.areaTypeEnum.member(name: "atDerivedArea")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssesseeTypeEnum.atCompany.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssesseeTypeEnum.atCompany = B1ClassMetadata.EnumTypes.assesseeTypeEnum.member(name: "atCompany")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssesseeTypeEnum.atOthers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssesseeTypeEnum.atOthers = B1ClassMetadata.EnumTypes.assesseeTypeEnum.member(name: "atOthers")
        }
    }

    private static func merge10(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PreDocumentLine.cogsCostingCode2.isRemoved {
            B1PreDocumentLine.cogsCostingCode2 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "COGSCostingCode2")
        }
        if !B1PreDocumentLine.cogsCostingCode3.isRemoved {
            B1PreDocumentLine.cogsCostingCode3 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "COGSCostingCode3")
        }
        if !B1PreDocumentLine.cogsCostingCode4.isRemoved {
            B1PreDocumentLine.cogsCostingCode4 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "COGSCostingCode4")
        }
        if !B1PreDocumentLine.cogsCostingCode5.isRemoved {
            B1PreDocumentLine.cogsCostingCode5 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "COGSCostingCode5")
        }
        if !B1PreDocumentLine.csTforIPI.isRemoved {
            B1PreDocumentLine.csTforIPI = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CSTforIPI")
        }
        if !B1PreDocumentLine.csTforPIS.isRemoved {
            B1PreDocumentLine.csTforPIS = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CSTforPIS")
        }
        if !B1PreDocumentLine.csTforCOFINS.isRemoved {
            B1PreDocumentLine.csTforCOFINS = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CSTforCOFINS")
        }
        if !B1PreDocumentLine.creditOriginCode.isRemoved {
            B1PreDocumentLine.creditOriginCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CreditOriginCode")
        }
        if !B1PreDocumentLine.withoutInventoryMovement.isRemoved {
            B1PreDocumentLine.withoutInventoryMovement = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "WithoutInventoryMovement")
        }
        if !B1PreDocumentLine.agreementNo.isRemoved {
            B1PreDocumentLine.agreementNo = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "AgreementNo")
        }
        if !B1PreDocumentLine.agreementRowNumber.isRemoved {
            B1PreDocumentLine.agreementRowNumber = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "AgreementRowNumber")
        }
        if !B1PreDocumentLine.shipToDescription.isRemoved {
            B1PreDocumentLine.shipToDescription = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ShipToDescription")
        }
        if !B1PreDocumentLine.actualBaseEntry.isRemoved {
            B1PreDocumentLine.actualBaseEntry = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ActualBaseEntry")
        }
        if !B1PreDocumentLine.actualBaseLine.isRemoved {
            B1PreDocumentLine.actualBaseLine = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ActualBaseLine")
        }
        if !B1PreDocumentLine.docEntry.isRemoved {
            B1PreDocumentLine.docEntry = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "DocEntry")
        }
        if !B1PreDocumentLine.surpluses.isRemoved {
            B1PreDocumentLine.surpluses = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Surpluses")
        }
        if !B1PreDocumentLine.defectAndBreakup.isRemoved {
            B1PreDocumentLine.defectAndBreakup = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "DefectAndBreakup")
        }
        if !B1PreDocumentLine.shortages.isRemoved {
            B1PreDocumentLine.shortages = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Shortages")
        }
        if !B1PreDocumentLine.considerQuantity.isRemoved {
            B1PreDocumentLine.considerQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ConsiderQuantity")
        }
        if !B1PreDocumentLine.partialRetirement.isRemoved {
            B1PreDocumentLine.partialRetirement = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "PartialRetirement")
        }
        if !B1PreDocumentLine.retirementQuantity.isRemoved {
            B1PreDocumentLine.retirementQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "RetirementQuantity")
        }
        if !B1PreDocumentLine.retirementAPC.isRemoved {
            B1PreDocumentLine.retirementAPC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "RetirementAPC")
        }
        if !B1PreDocumentLine.thirdParty.isRemoved {
            B1PreDocumentLine.thirdParty = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ThirdParty")
        }
        if !B1PreDocumentLine.expenseType.isRemoved {
            B1PreDocumentLine.expenseType = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ExpenseType")
        }
        if !B1PreDocumentLine.receiptNumber.isRemoved {
            B1PreDocumentLine.receiptNumber = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ReceiptNumber")
        }
        if !B1PreDocumentLine.expenseOperationType.isRemoved {
            B1PreDocumentLine.expenseOperationType = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ExpenseOperationType")
        }
        if !B1PreDocumentLine.federalTaxID.isRemoved {
            B1PreDocumentLine.federalTaxID = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "FederalTaxID")
        }
        if !B1PreDocumentLine.enableReturnCost.isRemoved {
            B1PreDocumentLine.enableReturnCost = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "EnableReturnCost")
        }
        if !B1PreDocumentLine.returnCost.isRemoved {
            B1PreDocumentLine.returnCost = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ReturnCost")
        }
        if !B1PreDocumentLine.lineVendor.isRemoved {
            B1PreDocumentLine.lineVendor = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LineVendor")
        }
        if !B1PreDocumentLine.stgSeqNum.isRemoved {
            B1PreDocumentLine.stgSeqNum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "StgSeqNum")
        }
        if !B1PreDocumentLine.stgEntry.isRemoved {
            B1PreDocumentLine.stgEntry = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "StgEntry")
        }
        if !B1PreDocumentLine.stgDesc.isRemoved {
            B1PreDocumentLine.stgDesc = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "StgDesc")
        }
        if !B1PreDocumentLine.uoMEntry.isRemoved {
            B1PreDocumentLine.uoMEntry = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "UoMEntry")
        }
        if !B1PreDocumentLine.uoMCode.isRemoved {
            B1PreDocumentLine.uoMCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "UoMCode")
        }
        if !B1PreDocumentLine.inventoryQuantity.isRemoved {
            B1PreDocumentLine.inventoryQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "InventoryQuantity")
        }
        if !B1PreDocumentLine.remainingOpenInventoryQuantity.isRemoved {
            B1PreDocumentLine.remainingOpenInventoryQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "RemainingOpenInventoryQuantity")
        }
        if !B1PreDocumentLine.parentLineNum.isRemoved {
            B1PreDocumentLine.parentLineNum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ParentLineNum")
        }
        if !B1PreDocumentLine.incoterms.isRemoved {
            B1PreDocumentLine.incoterms = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Incoterms")
        }
        if !B1PreDocumentLine.transportMode.isRemoved {
            B1PreDocumentLine.transportMode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TransportMode")
        }
        if !B1PreDocumentLine.itemType.isRemoved {
            B1PreDocumentLine.itemType = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ItemType")
        }
        if !B1PreDocumentLine.changeInventoryQuantityIndependently.isRemoved {
            B1PreDocumentLine.changeInventoryQuantityIndependently = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ChangeInventoryQuantityIndependently")
        }
        if !B1PreDocumentLine.freeOfChargeBP.isRemoved {
            B1PreDocumentLine.freeOfChargeBP = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "FreeOfChargeBP")
        }
        if !B1PreDocumentLine.sacEntry.isRemoved {
            B1PreDocumentLine.sacEntry = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "SACEntry")
        }
        if !B1PreDocumentLine.hsnEntry.isRemoved {
            B1PreDocumentLine.hsnEntry = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "HSNEntry")
        }
        if !B1PreDocumentLine.grossPrice.isRemoved {
            B1PreDocumentLine.grossPrice = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "GrossPrice")
        }
        if !B1PreDocumentLine.grossTotal.isRemoved {
            B1PreDocumentLine.grossTotal = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "GrossTotal")
        }
        if !B1PreDocumentLine.grossTotalFC.isRemoved {
            B1PreDocumentLine.grossTotalFC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "GrossTotalFC")
        }
        if !B1PreDocumentLine.grossTotalSC.isRemoved {
            B1PreDocumentLine.grossTotalSC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "GrossTotalSC")
        }
        if !B1PreDocumentLine.ncmCode.isRemoved {
            B1PreDocumentLine.ncmCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "NCMCode")
        }
        if !B1PreDocumentLine.lineTaxJurisdictions.isRemoved {
            B1PreDocumentLine.lineTaxJurisdictions = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LineTaxJurisdictions")
        }
        if !B1PreDocumentLine.generatedAssets.isRemoved {
            B1PreDocumentLine.generatedAssets = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "GeneratedAssets")
        }
        if !B1PreDocumentLine.documentLineAdditionalExpenses.isRemoved {
            B1PreDocumentLine.documentLineAdditionalExpenses = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "DocumentLineAdditionalExpenses")
        }
        if !B1PreDocumentLine.withholdingTaxLines.isRemoved {
            B1PreDocumentLine.withholdingTaxLines = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "WithholdingTaxLines")
        }
        if !B1PreDocumentLine.serialNumbers.isRemoved {
            B1PreDocumentLine.serialNumbers = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "SerialNumbers")
        }
        if !B1PreDocumentLine.batchNumbers.isRemoved {
            B1PreDocumentLine.batchNumbers = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "BatchNumbers")
        }
        if !B1PreDocumentLine.documentLinesBinAllocations.isRemoved {
            B1PreDocumentLine.documentLinesBinAllocations = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "DocumentLinesBinAllocations")
        }
        if !B1PreDocumentLine.exportProcesses.isRemoved {
            B1PreDocumentLine.exportProcesses = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ExportProcesses")
        }
        if !B1PreDocumentLine.returnAction.isRemoved {
            B1PreDocumentLine.returnAction = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ReturnAction")
        }
        if !B1PreDocumentLine.returnReason.isRemoved {
            B1PreDocumentLine.returnReason = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ReturnReason")
        }
        if !B1PreDocumentLine.importProcesses.isRemoved {
            B1PreDocumentLine.importProcesses = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ImportProcesses")
        }
        if !B1PreDocumentLineAdditionalExpense.lineNumber.isRemoved {
            B1PreDocumentLineAdditionalExpense.lineNumber = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "LineNumber")
        }
        if !B1PreDocumentLineAdditionalExpense.groupCode.isRemoved {
            B1PreDocumentLineAdditionalExpense.groupCode = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "GroupCode")
        }
        if !B1PreDocumentLineAdditionalExpense.expenseCode.isRemoved {
            B1PreDocumentLineAdditionalExpense.expenseCode = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "ExpenseCode")
        }
        if !B1PreDocumentLineAdditionalExpense.lineTotal.isRemoved {
            B1PreDocumentLineAdditionalExpense.lineTotal = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "LineTotal")
        }
        if !B1PreDocumentLineAdditionalExpense.lineTotalFC.isRemoved {
            B1PreDocumentLineAdditionalExpense.lineTotalFC = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "LineTotalFC")
        }
        if !B1PreDocumentLineAdditionalExpense.lineTotalSys.isRemoved {
            B1PreDocumentLineAdditionalExpense.lineTotalSys = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "LineTotalSys")
        }
        if !B1PreDocumentLineAdditionalExpense.paidToDate.isRemoved {
            B1PreDocumentLineAdditionalExpense.paidToDate = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "PaidToDate")
        }
        if !B1PreDocumentLineAdditionalExpense.paidToDateFC.isRemoved {
            B1PreDocumentLineAdditionalExpense.paidToDateFC = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "PaidToDateFC")
        }
        if !B1PreDocumentLineAdditionalExpense.paidToDateSys.isRemoved {
            B1PreDocumentLineAdditionalExpense.paidToDateSys = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "PaidToDateSys")
        }
        if !B1PreDocumentLineAdditionalExpense.taxLiable.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxLiable = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxLiable")
        }
        if !B1PreDocumentLineAdditionalExpense.vatGroup.isRemoved {
            B1PreDocumentLineAdditionalExpense.vatGroup = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "VatGroup")
        }
        if !B1PreDocumentLineAdditionalExpense.taxPercent.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxPercent = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxPercent")
        }
        if !B1PreDocumentLineAdditionalExpense.taxSum.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxSum = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxSum")
        }
        if !B1PreDocumentLineAdditionalExpense.taxSumFC.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxSumFC = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxSumFC")
        }
        if !B1PreDocumentLineAdditionalExpense.taxSumSys.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxSumSys = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxSumSys")
        }
        if !B1PreDocumentLineAdditionalExpense.deductibleTaxSum.isRemoved {
            B1PreDocumentLineAdditionalExpense.deductibleTaxSum = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "DeductibleTaxSum")
        }
        if !B1PreDocumentLineAdditionalExpense.deductibleTaxSumFC.isRemoved {
            B1PreDocumentLineAdditionalExpense.deductibleTaxSumFC = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "DeductibleTaxSumFC")
        }
        if !B1PreDocumentLineAdditionalExpense.deductibleTaxSumSys.isRemoved {
            B1PreDocumentLineAdditionalExpense.deductibleTaxSumSys = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "DeductibleTaxSumSys")
        }
        if !B1PreDocumentLineAdditionalExpense.aquisitionTax.isRemoved {
            B1PreDocumentLineAdditionalExpense.aquisitionTax = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "AquisitionTax")
        }
        if !B1PreDocumentLineAdditionalExpense.taxCode.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxCode = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxCode")
        }
        if !B1PreDocumentLineAdditionalExpense.taxType.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxType = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxType")
        }
        if !B1PreDocumentLineAdditionalExpense.taxPaid.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxPaid = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxPaid")
        }
        if !B1PreDocumentLineAdditionalExpense.taxPaidFC.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxPaidFC = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxPaidFC")
        }
        if !B1PreDocumentLineAdditionalExpense.taxPaidSys.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxPaidSys = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxPaidSys")
        }
        if !B1PreDocumentLineAdditionalExpense.equalizationTaxPercent.isRemoved {
            B1PreDocumentLineAdditionalExpense.equalizationTaxPercent = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "EqualizationTaxPercent")
        }
        if !B1PreDocumentLineAdditionalExpense.equalizationTaxSum.isRemoved {
            B1PreDocumentLineAdditionalExpense.equalizationTaxSum = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "EqualizationTaxSum")
        }
        if !B1PreDocumentLineAdditionalExpense.equalizationTaxFC.isRemoved {
            B1PreDocumentLineAdditionalExpense.equalizationTaxFC = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "EqualizationTaxFC")
        }
        if !B1PreDocumentLineAdditionalExpense.equalizationTaxSys.isRemoved {
            B1PreDocumentLineAdditionalExpense.equalizationTaxSys = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "EqualizationTaxSys")
        }
        if !B1PreDocumentLineAdditionalExpense.taxTotalSum.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxTotalSum = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxTotalSum")
        }
        if !B1PreDocumentLineAdditionalExpense.taxTotalSumFC.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxTotalSumFC = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxTotalSumFC")
        }
        if !B1PreDocumentLineAdditionalExpense.taxTotalSumSys.isRemoved {
            B1PreDocumentLineAdditionalExpense.taxTotalSumSys = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "TaxTotalSumSys")
        }
        if !B1PreDocumentLineAdditionalExpense.wtLiable.isRemoved {
            B1PreDocumentLineAdditionalExpense.wtLiable = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "WTLiable")
        }
        if !B1PreDocumentLineAdditionalExpense.baseGroup.isRemoved {
            B1PreDocumentLineAdditionalExpense.baseGroup = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "BaseGroup")
        }
        if !B1PreDocumentLineAdditionalExpense.distributionRule.isRemoved {
            B1PreDocumentLineAdditionalExpense.distributionRule = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "DistributionRule")
        }
        if !B1PreDocumentLineAdditionalExpense.project.isRemoved {
            B1PreDocumentLineAdditionalExpense.project = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "Project")
        }
        if !B1PreDocumentLineAdditionalExpense.distributionRule2.isRemoved {
            B1PreDocumentLineAdditionalExpense.distributionRule2 = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "DistributionRule2")
        }
        if !B1PreDocumentLineAdditionalExpense.distributionRule3.isRemoved {
            B1PreDocumentLineAdditionalExpense.distributionRule3 = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "DistributionRule3")
        }
        if !B1PreDocumentLineAdditionalExpense.distributionRule4.isRemoved {
            B1PreDocumentLineAdditionalExpense.distributionRule4 = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "DistributionRule4")
        }
        if !B1PreDocumentLineAdditionalExpense.distributionRule5.isRemoved {
            B1PreDocumentLineAdditionalExpense.distributionRule5 = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "DistributionRule5")
        }
        if !B1PreDocumentLineAdditionalExpense.lineExpenseTaxJurisdictions.isRemoved {
            B1PreDocumentLineAdditionalExpense.lineExpenseTaxJurisdictions = B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.property(withName: "LineExpenseTaxJurisdictions")
        }
        if !B1PreDocumentLinesBinAllocation.binAbsEntry.isRemoved {
            B1PreDocumentLinesBinAllocation.binAbsEntry = B1ClassMetadata.ComplexTypes.documentLinesBinAllocation.property(withName: "BinAbsEntry")
        }
        if !B1PreDocumentLinesBinAllocation.quantity.isRemoved {
            B1PreDocumentLinesBinAllocation.quantity = B1ClassMetadata.ComplexTypes.documentLinesBinAllocation.property(withName: "Quantity")
        }
        if !B1PreDocumentLinesBinAllocation.allowNegativeQuantity.isRemoved {
            B1PreDocumentLinesBinAllocation.allowNegativeQuantity = B1ClassMetadata.ComplexTypes.documentLinesBinAllocation.property(withName: "AllowNegativeQuantity")
        }
        if !B1PreDocumentLinesBinAllocation.serialAndBatchNumbersBaseLine.isRemoved {
            B1PreDocumentLinesBinAllocation.serialAndBatchNumbersBaseLine = B1ClassMetadata.ComplexTypes.documentLinesBinAllocation.property(withName: "SerialAndBatchNumbersBaseLine")
        }
        if !B1PreDocumentLinesBinAllocation.baseLineNumber.isRemoved {
            B1PreDocumentLinesBinAllocation.baseLineNumber = B1ClassMetadata.ComplexTypes.documentLinesBinAllocation.property(withName: "BaseLineNumber")
        }
        if !B1PreDocumentPackage.number.isRemoved {
            B1PreDocumentPackage.number = B1ClassMetadata.ComplexTypes.documentPackage.property(withName: "Number")
        }
        if !B1PreDocumentPackage.type_.isRemoved {
            B1PreDocumentPackage.type_ = B1ClassMetadata.ComplexTypes.documentPackage.property(withName: "Type")
        }
        if !B1PreDocumentPackage.totalWeight.isRemoved {
            B1PreDocumentPackage.totalWeight = B1ClassMetadata.ComplexTypes.documentPackage.property(withName: "TotalWeight")
        }
        if !B1PreDocumentPackage.units.isRemoved {
            B1PreDocumentPackage.units = B1ClassMetadata.ComplexTypes.documentPackage.property(withName: "Units")
        }
        if !B1PreDocumentPackage.documentPackageItems.isRemoved {
            B1PreDocumentPackage.documentPackageItems = B1ClassMetadata.ComplexTypes.documentPackage.property(withName: "DocumentPackageItems")
        }
        if !B1PreDocumentPackageItem.packageNumber.isRemoved {
            B1PreDocumentPackageItem.packageNumber = B1ClassMetadata.ComplexTypes.documentPackageItem.property(withName: "PackageNumber")
        }
        if !B1PreDocumentPackageItem.itemCode.isRemoved {
            B1PreDocumentPackageItem.itemCode = B1ClassMetadata.ComplexTypes.documentPackageItem.property(withName: "ItemCode")
        }
        if !B1PreDocumentPackageItem.quantity.isRemoved {
            B1PreDocumentPackageItem.quantity = B1ClassMetadata.ComplexTypes.documentPackageItem.property(withName: "Quantity")
        }
        if !B1PreDocumentPackageItem.uoMEntry.isRemoved {
            B1PreDocumentPackageItem.uoMEntry = B1ClassMetadata.ComplexTypes.documentPackageItem.property(withName: "UoMEntry")
        }
        if !B1PreDocumentPackageItem.measureUnit.isRemoved {
            B1PreDocumentPackageItem.measureUnit = B1ClassMetadata.ComplexTypes.documentPackageItem.property(withName: "MeasureUnit")
        }
        if !B1PreDocumentPackageItem.unitsOfMeasurement.isRemoved {
            B1PreDocumentPackageItem.unitsOfMeasurement = B1ClassMetadata.ComplexTypes.documentPackageItem.property(withName: "UnitsOfMeasurement")
        }
        if !B1PreDocumentParams.docEntry.isRemoved {
            B1PreDocumentParams.docEntry = B1ClassMetadata.ComplexTypes.documentParams.property(withName: "DocEntry")
        }
        if !B1PreDocumentSeriesParams.document.isRemoved {
            B1PreDocumentSeriesParams.document = B1ClassMetadata.ComplexTypes.documentSeriesParams.property(withName: "Document")
        }
        if !B1PreDocumentSeriesParams.documentSubType.isRemoved {
            B1PreDocumentSeriesParams.documentSubType = B1ClassMetadata.ComplexTypes.documentSeriesParams.property(withName: "DocumentSubType")
        }
        if !B1PreDocumentSeriesParams.series.isRemoved {
            B1PreDocumentSeriesParams.series = B1ClassMetadata.ComplexTypes.documentSeriesParams.property(withName: "Series")
        }
        if !B1PreDocumentSeriesUserParams.document.isRemoved {
            B1PreDocumentSeriesUserParams.document = B1ClassMetadata.ComplexTypes.documentSeriesUserParams.property(withName: "Document")
        }
        if !B1PreDocumentSeriesUserParams.documentSubType.isRemoved {
            B1PreDocumentSeriesUserParams.documentSubType = B1ClassMetadata.ComplexTypes.documentSeriesUserParams.property(withName: "DocumentSubType")
        }
        if !B1PreDocumentSeriesUserParams.series.isRemoved {
            B1PreDocumentSeriesUserParams.series = B1ClassMetadata.ComplexTypes.documentSeriesUserParams.property(withName: "Series")
        }
        if !B1PreDocumentSeriesUserParams.user.isRemoved {
            B1PreDocumentSeriesUserParams.user = B1ClassMetadata.ComplexTypes.documentSeriesUserParams.property(withName: "User")
        }
        if !B1PreDocumentSpecialLine.lineNum.isRemoved {
            B1PreDocumentSpecialLine.lineNum = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "LineNum")
        }
        if !B1PreDocumentSpecialLine.afterLineNumber.isRemoved {
            B1PreDocumentSpecialLine.afterLineNumber = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "AfterLineNumber")
        }
        if !B1PreDocumentSpecialLine.orderNumber.isRemoved {
            B1PreDocumentSpecialLine.orderNumber = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "OrderNumber")
        }
        if !B1PreDocumentSpecialLine.lineType.isRemoved {
            B1PreDocumentSpecialLine.lineType = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "LineType")
        }
        if !B1PreDocumentSpecialLine.subtotal.isRemoved {
            B1PreDocumentSpecialLine.subtotal = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Subtotal")
        }
        if !B1PreDocumentSpecialLine.lineText.isRemoved {
            B1PreDocumentSpecialLine.lineText = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "LineText")
        }
        if !B1PreDocumentSpecialLine.subtotalFC.isRemoved {
            B1PreDocumentSpecialLine.subtotalFC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "SubtotalFC")
        }
        if !B1PreDocumentSpecialLine.subtotalSC.isRemoved {
            B1PreDocumentSpecialLine.subtotalSC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "SubtotalSC")
        }
        if !B1PreDocumentSpecialLine.taxAmount.isRemoved {
            B1PreDocumentSpecialLine.taxAmount = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "TaxAmount")
        }
        if !B1PreDocumentSpecialLine.taxAmountFC.isRemoved {
            B1PreDocumentSpecialLine.taxAmountFC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "TaxAmountFC")
        }
        if !B1PreDocumentSpecialLine.taxAmountSC.isRemoved {
            B1PreDocumentSpecialLine.taxAmountSC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "TaxAmountSC")
        }
        if !B1PreDocumentSpecialLine.freight1.isRemoved {
            B1PreDocumentSpecialLine.freight1 = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight1")
        }
        if !B1PreDocumentSpecialLine.freight1FC.isRemoved {
            B1PreDocumentSpecialLine.freight1FC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight1FC")
        }
        if !B1PreDocumentSpecialLine.freight1SC.isRemoved {
            B1PreDocumentSpecialLine.freight1SC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight1SC")
        }
        if !B1PreDocumentSpecialLine.freight2.isRemoved {
            B1PreDocumentSpecialLine.freight2 = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight2")
        }
        if !B1PreDocumentSpecialLine.freight2FC.isRemoved {
            B1PreDocumentSpecialLine.freight2FC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight2FC")
        }
        if !B1PreDocumentSpecialLine.freight2SC.isRemoved {
            B1PreDocumentSpecialLine.freight2SC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight2SC")
        }
        if !B1PreDocumentSpecialLine.freight3.isRemoved {
            B1PreDocumentSpecialLine.freight3 = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight3")
        }
        if !B1PreDocumentSpecialLine.freight3FC.isRemoved {
            B1PreDocumentSpecialLine.freight3FC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight3FC")
        }
        if !B1PreDocumentSpecialLine.freight3SC.isRemoved {
            B1PreDocumentSpecialLine.freight3SC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "Freight3SC")
        }
        if !B1PreDocumentSpecialLine.grossTotal.isRemoved {
            B1PreDocumentSpecialLine.grossTotal = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "GrossTotal")
        }
        if !B1PreDocumentSpecialLine.grossTotalFC.isRemoved {
            B1PreDocumentSpecialLine.grossTotalFC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "GrossTotalFC")
        }
        if !B1PreDocumentSpecialLine.grossTotalSC.isRemoved {
            B1PreDocumentSpecialLine.grossTotalSC = B1ClassMetadata.ComplexTypes.documentSpecialLine.property(withName: "GrossTotalSC")
        }
        if !B1PreDocumentTypeParams.document.isRemoved {
            B1PreDocumentTypeParams.document = B1ClassMetadata.ComplexTypes.documentTypeParams.property(withName: "Document")
        }
        if !B1PreDocumentTypeParams.documentSubType.isRemoved {
            B1PreDocumentTypeParams.documentSubType = B1ClassMetadata.ComplexTypes.documentTypeParams.property(withName: "DocumentSubType")
        }
        if !B1PreDocumentApprovalRequest.approvalTemplatesID.isRemoved {
            B1PreDocumentApprovalRequest.approvalTemplatesID = B1ClassMetadata.ComplexTypes.documentApprovalRequest.property(withName: "ApprovalTemplatesID")
        }
        if !B1PreDocumentApprovalRequest.remarks.isRemoved {
            B1PreDocumentApprovalRequest.remarks = B1ClassMetadata.ComplexTypes.documentApprovalRequest.property(withName: "Remarks")
        }
        if !B1PreDownPaymentToDraw.docEntry.isRemoved {
            B1PreDownPaymentToDraw.docEntry = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "DocEntry")
        }
        if !B1PreDownPaymentToDraw.postingDate.isRemoved {
            B1PreDownPaymentToDraw.postingDate = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "PostingDate")
        }
        if !B1PreDownPaymentToDraw.dueDate.isRemoved {
            B1PreDownPaymentToDraw.dueDate = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "DueDate")
        }
        if !B1PreDownPaymentToDraw.name.isRemoved {
            B1PreDownPaymentToDraw.name = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "Name")
        }
        if !B1PreDownPaymentToDraw.details.isRemoved {
            B1PreDownPaymentToDraw.details = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "Details")
        }
        if !B1PreDownPaymentToDraw.amountToDraw.isRemoved {
            B1PreDownPaymentToDraw.amountToDraw = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "AmountToDraw")
        }
        if !B1PreDownPaymentToDraw.downPaymentType.isRemoved {
            B1PreDownPaymentToDraw.downPaymentType = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "DownPaymentType")
        }
        if !B1PreDownPaymentToDraw.amountToDrawFC.isRemoved {
            B1PreDownPaymentToDraw.amountToDrawFC = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "AmountToDrawFC")
        }
        if !B1PreDownPaymentToDraw.amountToDrawSC.isRemoved {
            B1PreDownPaymentToDraw.amountToDrawSC = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "AmountToDrawSC")
        }
        if !B1PreDownPaymentToDraw.docInternalID.isRemoved {
            B1PreDownPaymentToDraw.docInternalID = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "DocInternalID")
        }
        if !B1PreDownPaymentToDraw.rowNum.isRemoved {
            B1PreDownPaymentToDraw.rowNum = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "RowNum")
        }
        if !B1PreDownPaymentToDraw.docNumber.isRemoved {
            B1PreDownPaymentToDraw.docNumber = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "DocNumber")
        }
        if !B1PreDownPaymentToDraw.tax.isRemoved {
            B1PreDownPaymentToDraw.tax = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "Tax")
        }
        if !B1PreDownPaymentToDraw.taxFC.isRemoved {
            B1PreDownPaymentToDraw.taxFC = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "TaxFC")
        }
        if !B1PreDownPaymentToDraw.taxSC.isRemoved {
            B1PreDownPaymentToDraw.taxSC = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "TaxSC")
        }
        if !B1PreDownPaymentToDraw.grossAmountToDraw.isRemoved {
            B1PreDownPaymentToDraw.grossAmountToDraw = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "GrossAmountToDraw")
        }
        if !B1PreDownPaymentToDraw.grossAmountToDrawFC.isRemoved {
            B1PreDownPaymentToDraw.grossAmountToDrawFC = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "GrossAmountToDrawFC")
        }
        if !B1PreDownPaymentToDraw.grossAmountToDrawSC.isRemoved {
            B1PreDownPaymentToDraw.grossAmountToDrawSC = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "GrossAmountToDrawSC")
        }
        if !B1PreDownPaymentToDraw.isGrossLine.isRemoved {
            B1PreDownPaymentToDraw.isGrossLine = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "IsGrossLine")
        }
        if !B1PreDownPaymentToDraw.downPaymentsToDrawDetails.isRemoved {
            B1PreDownPaymentToDraw.downPaymentsToDrawDetails = B1ClassMetadata.ComplexTypes.downPaymentToDraw.property(withName: "DownPaymentsToDrawDetails")
        }
        if !B1PreDownPaymentToDrawDetails.docInternalID.isRemoved {
            B1PreDownPaymentToDrawDetails.docInternalID = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "DocInternalID")
        }
        if !B1PreDownPaymentToDrawDetails.rowNum.isRemoved {
            B1PreDownPaymentToDrawDetails.rowNum = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "RowNum")
        }
        if !B1PreDownPaymentToDrawDetails.seqNum.isRemoved {
            B1PreDownPaymentToDrawDetails.seqNum = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "SeqNum")
        }
        if !B1PreDownPaymentToDrawDetails.docEntry.isRemoved {
            B1PreDownPaymentToDrawDetails.docEntry = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "DocEntry")
        }
        if !B1PreDownPaymentToDrawDetails.vatGroupCode.isRemoved {
            B1PreDownPaymentToDrawDetails.vatGroupCode = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "VatGroupCode")
        }
        if !B1PreDownPaymentToDrawDetails.vatPercent.isRemoved {
            B1PreDownPaymentToDrawDetails.vatPercent = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "VatPercent")
        }
        if !B1PreDownPaymentToDrawDetails.amountToDraw.isRemoved {
            B1PreDownPaymentToDrawDetails.amountToDraw = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "AmountToDraw")
        }
        if !B1PreDownPaymentToDrawDetails.amountToDrawFC.isRemoved {
            B1PreDownPaymentToDrawDetails.amountToDrawFC = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "AmountToDrawFC")
        }
        if !B1PreDownPaymentToDrawDetails.amountToDrawSC.isRemoved {
            B1PreDownPaymentToDrawDetails.amountToDrawSC = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "AmountToDrawSC")
        }
        if !B1PreDownPaymentToDrawDetails.tax.isRemoved {
            B1PreDownPaymentToDrawDetails.tax = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "Tax")
        }
        if !B1PreDownPaymentToDrawDetails.taxFC.isRemoved {
            B1PreDownPaymentToDrawDetails.taxFC = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "TaxFC")
        }
        if !B1PreDownPaymentToDrawDetails.taxSC.isRemoved {
            B1PreDownPaymentToDrawDetails.taxSC = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "TaxSC")
        }
        if !B1PreDownPaymentToDrawDetails.isGrossLine.isRemoved {
            B1PreDownPaymentToDrawDetails.isGrossLine = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "IsGrossLine")
        }
        if !B1PreDownPaymentToDrawDetails.grossAmountToDraw.isRemoved {
            B1PreDownPaymentToDrawDetails.grossAmountToDraw = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "GrossAmountToDraw")
        }
        if !B1PreDownPaymentToDrawDetails.grossAmountToDrawFC.isRemoved {
            B1PreDownPaymentToDrawDetails.grossAmountToDrawFC = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "GrossAmountToDrawFC")
        }
        if !B1PreDownPaymentToDrawDetails.grossAmountToDrawSC.isRemoved {
            B1PreDownPaymentToDrawDetails.grossAmountToDrawSC = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "GrossAmountToDrawSC")
        }
        if !B1PreDownPaymentToDrawDetails.lineType.isRemoved {
            B1PreDownPaymentToDrawDetails.lineType = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "LineType")
        }
        if !B1PreDownPaymentToDrawDetails.taxAdjust.isRemoved {
            B1PreDownPaymentToDrawDetails.taxAdjust = B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.property(withName: "TaxAdjust")
        }
        if !B1PreDppChangeParams.fromDate.isRemoved {
            B1PreDppChangeParams.fromDate = B1ClassMetadata.ComplexTypes.dppChangeParams.property(withName: "FromDate")
        }
        if !B1PreDppChangeParams.fromTime.isRemoved {
            B1PreDppChangeParams.fromTime = B1ClassMetadata.ComplexTypes.dppChangeParams.property(withName: "FromTime")
        }
        if !B1PreDppChangeParams.hasChanged.isRemoved {
            B1PreDppChangeParams.hasChanged = B1ClassMetadata.ComplexTypes.dppChangeParams.property(withName: "HasChanged")
        }
        if !B1PreDunningLetterParams.rowNumber.isRemoved {
            B1PreDunningLetterParams.rowNumber = B1ClassMetadata.ComplexTypes.dunningLetterParams.property(withName: "RowNumber")
        }
        if !B1PreDunningTermLine.levelNum.isRemoved {
            B1PreDunningTermLine.levelNum = B1ClassMetadata.ComplexTypes.dunningTermLine.property(withName: "LevelNum")
        }
        if !B1PreDunningTermLine.letterFormat.isRemoved {
            B1PreDunningTermLine.letterFormat = B1ClassMetadata.ComplexTypes.dunningTermLine.property(withName: "LetterFormat")
        }
        if !B1PreDunningTermLine.effectiveafter.isRemoved {
            B1PreDunningTermLine.effectiveafter = B1ClassMetadata.ComplexTypes.dunningTermLine.property(withName: "Effectiveafter")
        }
        if !B1PreDunningTermLine.letterFee.isRemoved {
            B1PreDunningTermLine.letterFee = B1ClassMetadata.ComplexTypes.dunningTermLine.property(withName: "LetterFee")
        }
        if !B1PreDunningTermLine.letterFeeCurrency.isRemoved {
            B1PreDunningTermLine.letterFeeCurrency = B1ClassMetadata.ComplexTypes.dunningTermLine.property(withName: "LetterFeeCurrency")
        }
        if !B1PreDunningTermLine.mininumBalance.isRemoved {
            B1PreDunningTermLine.mininumBalance = B1ClassMetadata.ComplexTypes.dunningTermLine.property(withName: "MininumBalance")
        }
        if !B1PreDunningTermLine.mininumBalanceCurrency.isRemoved {
            B1PreDunningTermLine.mininumBalanceCurrency = B1ClassMetadata.ComplexTypes.dunningTermLine.property(withName: "MininumBalanceCurrency")
        }
        if !B1PreDunningTermLine.calculateInterest.isRemoved {
            B1PreDunningTermLine.calculateInterest = B1ClassMetadata.ComplexTypes.dunningTermLine.property(withName: "CalculateInterest")
        }
        if !B1PreDunningTermParams.code.isRemoved {
            B1PreDunningTermParams.code = B1ClassMetadata.ComplexTypes.dunningTermParams.property(withName: "Code")
        }
        if !B1PreDunningTermParams.name.isRemoved {
            B1PreDunningTermParams.name = B1ClassMetadata.ComplexTypes.dunningTermParams.property(withName: "Name")
        }
        if !B1PreDynamicSystemStringParams.formID.isRemoved {
            B1PreDynamicSystemStringParams.formID = B1ClassMetadata.ComplexTypes.dynamicSystemStringParams.property(withName: "FormID")
        }
        if !B1PreDynamicSystemStringParams.itemID.isRemoved {
            B1PreDynamicSystemStringParams.itemID = B1ClassMetadata.ComplexTypes.dynamicSystemStringParams.property(withName: "ItemID")
        }
        if !B1PreDynamicSystemStringParams.columnID.isRemoved {
            B1PreDynamicSystemStringParams.columnID = B1ClassMetadata.ComplexTypes.dynamicSystemStringParams.property(withName: "ColumnID")
        }
        if !B1PreECMActionStatusData.absEntry.isRemoved {
            B1PreECMActionStatusData.absEntry = B1ClassMetadata.ComplexTypes.ecmActionStatusData.property(withName: "AbsEntry")
        }
        if !B1PreECMActionStatusData.actStatus.isRemoved {
            B1PreECMActionStatusData.actStatus = B1ClassMetadata.ComplexTypes.ecmActionStatusData.property(withName: "ActStatus")
        }
        if !B1PreECMActionStatusData.reportID.isRemoved {
            B1PreECMActionStatusData.reportID = B1ClassMetadata.ComplexTypes.ecmActionStatusData.property(withName: "ReportID")
        }
        if !B1PreECMActionStatusData.receivDate.isRemoved {
            B1PreECMActionStatusData.receivDate = B1ClassMetadata.ComplexTypes.ecmActionStatusData.property(withName: "ReceivDate")
        }
        if !B1PreECMActionStatusData.actMessage.isRemoved {
            B1PreECMActionStatusData.actMessage = B1ClassMetadata.ComplexTypes.ecmActionStatusData.property(withName: "ActMessage")
        }
        if !B1PreECMCodeParams.absEntry.isRemoved {
            B1PreECMCodeParams.absEntry = B1ClassMetadata.ComplexTypes.ecmCodeParams.property(withName: "AbsEntry")
        }
        if !B1PreEcmAction.actionID.isRemoved {
            B1PreEcmAction.actionID = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "ActionID")
        }
        if !B1PreEcmAction.protocol.isRemoved {
            B1PreEcmAction.protocol = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "Protocol")
        }
        if !B1PreEcmAction.type_.isRemoved {
            B1PreEcmAction.type_ = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "Type")
        }
        if !B1PreEcmAction.description.isRemoved {
            B1PreEcmAction.description = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "Description")
        }
        if !B1PreEcmAction.status.isRemoved {
            B1PreEcmAction.status = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "Status")
        }
        if !B1PreEcmAction.message.isRemoved {
            B1PreEcmAction.message = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "Message")
        }
        if !B1PreEcmAction.environment.isRemoved {
            B1PreEcmAction.environment = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "Environment")
        }
        if !B1PreEcmAction.businessPlace.isRemoved {
            B1PreEcmAction.businessPlace = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "BusinessPlace")
        }
        if !B1PreEcmAction.submits.isRemoved {
            B1PreEcmAction.submits = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "Submits")
        }
        if !B1PreEcmAction.objectID.isRemoved {
            B1PreEcmAction.objectID = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "ObjectID")
        }
        if !B1PreEcmAction.reportID.isRemoved {
            B1PreEcmAction.reportID = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "ReportID")
        }
        if !B1PreEcmAction.sourceType.isRemoved {
            B1PreEcmAction.sourceType = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "SourceType")
        }
        if !B1PreEcmAction.sourceObject.isRemoved {
            B1PreEcmAction.sourceObject = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "SourceObject")
        }
        if !B1PreEcmAction.assignedID.isRemoved {
            B1PreEcmAction.assignedID = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "AssignedID")
        }
        if !B1PreEcmAction.documentBatch.isRemoved {
            B1PreEcmAction.documentBatch = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "DocumentBatch")
        }
        if !B1PreEcmAction.documentBatchLine.isRemoved {
            B1PreEcmAction.documentBatchLine = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "DocumentBatchLine")
        }
        if !B1PreEcmAction.periodType.isRemoved {
            B1PreEcmAction.periodType = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "PeriodType")
        }
        if !B1PreEcmAction.periodNumber.isRemoved {
            B1PreEcmAction.periodNumber = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "PeriodNumber")
        }
        if !B1PreEcmAction.periodYear.isRemoved {
            B1PreEcmAction.periodYear = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "PeriodYear")
        }
        if !B1PreEcmAction.periodDateFrom.isRemoved {
            B1PreEcmAction.periodDateFrom = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "PeriodDateFrom")
        }
        if !B1PreEcmAction.periodDateTo.isRemoved {
            B1PreEcmAction.periodDateTo = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "PeriodDateTo")
        }
        if !B1PreEcmAction.isRemoved.isRemoved {
            B1PreEcmAction.isRemoved = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "IsRemoved")
        }
        if !B1PreEcmAction.isCanceled.isRemoved {
            B1PreEcmAction.isCanceled = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "IsCanceled")
        }
        if !B1PreEcmAction.generationType.isRemoved {
            B1PreEcmAction.generationType = B1ClassMetadata.ComplexTypes.ecmAction.property(withName: "GenerationType")
        }
        if !B1PreEcmActionDocParams.protocol.isRemoved {
            B1PreEcmActionDocParams.protocol = B1ClassMetadata.ComplexTypes.ecmActionDocParams.property(withName: "Protocol")
        }
        if !B1PreEcmActionDocParams.sourceType.isRemoved {
            B1PreEcmActionDocParams.sourceType = B1ClassMetadata.ComplexTypes.ecmActionDocParams.property(withName: "SourceType")
        }
        if !B1PreEcmActionDocParams.sourceObject.isRemoved {
            B1PreEcmActionDocParams.sourceObject = B1ClassMetadata.ComplexTypes.ecmActionDocParams.property(withName: "SourceObject")
        }
        if !B1PreEcmActionLog.actionID.isRemoved {
            B1PreEcmActionLog.actionID = B1ClassMetadata.ComplexTypes.ecmActionLog.property(withName: "ActionID")
        }
        if !B1PreEcmActionLog.logID.isRemoved {
            B1PreEcmActionLog.logID = B1ClassMetadata.ComplexTypes.ecmActionLog.property(withName: "LogID")
        }
        if !B1PreEcmActionLog.type_.isRemoved {
            B1PreEcmActionLog.type_ = B1ClassMetadata.ComplexTypes.ecmActionLog.property(withName: "Type")
        }
        if !B1PreEcmActionLog.message.isRemoved {
            B1PreEcmActionLog.message = B1ClassMetadata.ComplexTypes.ecmActionLog.property(withName: "Message")
        }
        if !B1PreEcmActionLog.data.isRemoved {
            B1PreEcmActionLog.data = B1ClassMetadata.ComplexTypes.ecmActionLog.property(withName: "Data")
        }
        if !B1PreEcmActionLog.logDate.isRemoved {
            B1PreEcmActionLog.logDate = B1ClassMetadata.ComplexTypes.ecmActionLog.property(withName: "LogDate")
        }
        if !B1PreEcmActionLog.logTime.isRemoved {
            B1PreEcmActionLog.logTime = B1ClassMetadata.ComplexTypes.ecmActionLog.property(withName: "LogTime")
        }
        if !B1PreEcmActionLog.exportFormat.isRemoved {
            B1PreEcmActionLog.exportFormat = B1ClassMetadata.ComplexTypes.ecmActionLog.property(withName: "ExportFormat")
        }
        if !B1PreEcmActionLogParams.actionID.isRemoved {
            B1PreEcmActionLogParams.actionID = B1ClassMetadata.ComplexTypes.ecmActionLogParams.property(withName: "ActionID")
        }
        if !B1PreEcmActionLogParams.logID.isRemoved {
            B1PreEcmActionLogParams.logID = B1ClassMetadata.ComplexTypes.ecmActionLogParams.property(withName: "LogID")
        }
        if !B1PreEcmActionParams.actionID.isRemoved {
            B1PreEcmActionParams.actionID = B1ClassMetadata.ComplexTypes.ecmActionParams.property(withName: "ActionID")
        }
        if !B1PreElectronicFileFormatParams.formatID.isRemoved {
            B1PreElectronicFileFormatParams.formatID = B1ClassMetadata.ComplexTypes.electronicFileFormatParams.property(withName: "FormatID")
        }
        if !B1PreElectronicFileFormatParams.name.isRemoved {
            B1PreElectronicFileFormatParams.name = B1ClassMetadata.ComplexTypes.electronicFileFormatParams.property(withName: "Name")
        }
        if !B1PreElectronicSeries.electronicSeries.isRemoved {
            B1PreElectronicSeries.electronicSeries = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "ElectronicSeries")
        }
        if !B1PreElectronicSeries.series.isRemoved {
            B1PreElectronicSeries.series = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "Series")
        }
        if !B1PreElectronicSeries.name.isRemoved {
            B1PreElectronicSeries.name = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "Name")
        }
        if !B1PreElectronicSeries.initialNumber.isRemoved {
            B1PreElectronicSeries.initialNumber = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "InitialNumber")
        }
        if !B1PreElectronicSeries.nextNumber.isRemoved {
            B1PreElectronicSeries.nextNumber = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "NextNumber")
        }
        if !B1PreElectronicSeries.lastNumber.isRemoved {
            B1PreElectronicSeries.lastNumber = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "LastNumber")
        }
        if !B1PreElectronicSeries.prefix.isRemoved {
            B1PreElectronicSeries.prefix = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "Prefix")
        }
        if !B1PreElectronicSeries.approvalYear.isRemoved {
            B1PreElectronicSeries.approvalYear = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "ApprovalYear")
        }
        if !B1PreElectronicSeries.approvalNumber.isRemoved {
            B1PreElectronicSeries.approvalNumber = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "ApprovalNumber")
        }
        if !B1PreElectronicSeries.remarks.isRemoved {
            B1PreElectronicSeries.remarks = B1ClassMetadata.ComplexTypes.electronicSeries.property(withName: "Remarks")
        }
        if !B1PreElectronicSeriesParams.electronicSeries.isRemoved {
            B1PreElectronicSeriesParams.electronicSeries = B1ClassMetadata.ComplexTypes.electronicSeriesParams.property(withName: "ElectronicSeries")
        }
        if !B1PreEmailGroupParams.emailGroupCode.isRemoved {
            B1PreEmailGroupParams.emailGroupCode = B1ClassMetadata.ComplexTypes.emailGroupParams.property(withName: "EmailGroupCode")
        }
        if !B1PreEmailGroupParams.emailGroupName.isRemoved {
            B1PreEmailGroupParams.emailGroupName = B1ClassMetadata.ComplexTypes.emailGroupParams.property(withName: "EmailGroupName")
        }
        if !B1PreEmployeeAbsenceInfo.employeeID.isRemoved {
            B1PreEmployeeAbsenceInfo.employeeID = B1ClassMetadata.ComplexTypes.employeeAbsenceInfo.property(withName: "EmployeeID")
        }
        if !B1PreEmployeeAbsenceInfo.lineNum.isRemoved {
            B1PreEmployeeAbsenceInfo.lineNum = B1ClassMetadata.ComplexTypes.employeeAbsenceInfo.property(withName: "LineNum")
        }
        if !B1PreEmployeeAbsenceInfo.fromDate.isRemoved {
            B1PreEmployeeAbsenceInfo.fromDate = B1ClassMetadata.ComplexTypes.employeeAbsenceInfo.property(withName: "FromDate")
        }
        if !B1PreEmployeeAbsenceInfo.toDate.isRemoved {
            B1PreEmployeeAbsenceInfo.toDate = B1ClassMetadata.ComplexTypes.employeeAbsenceInfo.property(withName: "ToDate")
        }
        if !B1PreEmployeeAbsenceInfo.reason.isRemoved {
            B1PreEmployeeAbsenceInfo.reason = B1ClassMetadata.ComplexTypes.employeeAbsenceInfo.property(withName: "Reason")
        }
        if !B1PreEmployeeAbsenceInfo.approvedBy.isRemoved {
            B1PreEmployeeAbsenceInfo.approvedBy = B1ClassMetadata.ComplexTypes.employeeAbsenceInfo.property(withName: "ApprovedBy")
        }
        if !B1PreEmployeeAbsenceInfo.confirmerNumber.isRemoved {
            B1PreEmployeeAbsenceInfo.confirmerNumber = B1ClassMetadata.ComplexTypes.employeeAbsenceInfo.property(withName: "ConfirmerNumber")
        }
        if !B1PreEmployeeBranchAssignmentItem.employeeID.isRemoved {
            B1PreEmployeeBranchAssignmentItem.employeeID = B1ClassMetadata.ComplexTypes.employeeBranchAssignmentItem.property(withName: "EmployeeID")
        }
        if !B1PreEmployeeBranchAssignmentItem.bplid.isRemoved {
            B1PreEmployeeBranchAssignmentItem.bplid = B1ClassMetadata.ComplexTypes.employeeBranchAssignmentItem.property(withName: "BPLID")
        }
        if !B1PreEmployeeEducationInfo.employeeNo.isRemoved {
            B1PreEmployeeEducationInfo.employeeNo = B1ClassMetadata.ComplexTypes.employeeEducationInfo.property(withName: "EmployeeNo")
        }
        if !B1PreEmployeeEducationInfo.lineNum.isRemoved {
            B1PreEmployeeEducationInfo.lineNum = B1ClassMetadata.ComplexTypes.employeeEducationInfo.property(withName: "LineNum")
        }
        if !B1PreEmployeeEducationInfo.fromDate.isRemoved {
            B1PreEmployeeEducationInfo.fromDate = B1ClassMetadata.ComplexTypes.employeeEducationInfo.property(withName: "FromDate")
        }
        if !B1PreEmployeeEducationInfo.toDate.isRemoved {
            B1PreEmployeeEducationInfo.toDate = B1ClassMetadata.ComplexTypes.employeeEducationInfo.property(withName: "ToDate")
        }
        if !B1PreEmployeeEducationInfo.educationType.isRemoved {
            B1PreEmployeeEducationInfo.educationType = B1ClassMetadata.ComplexTypes.employeeEducationInfo.property(withName: "EducationType")
        }
        if !B1PreEmployeeEducationInfo.institute.isRemoved {
            B1PreEmployeeEducationInfo.institute = B1ClassMetadata.ComplexTypes.employeeEducationInfo.property(withName: "Institute")
        }
        if !B1PreEmployeeEducationInfo.major.isRemoved {
            B1PreEmployeeEducationInfo.major = B1ClassMetadata.ComplexTypes.employeeEducationInfo.property(withName: "Major")
        }
        if !B1PreEmployeeEducationInfo.diploma.isRemoved {
            B1PreEmployeeEducationInfo.diploma = B1ClassMetadata.ComplexTypes.employeeEducationInfo.property(withName: "Diploma")
        }
        if !B1PreEmployeeFullNamesParams.employeeID.isRemoved {
            B1PreEmployeeFullNamesParams.employeeID = B1ClassMetadata.ComplexTypes.employeeFullNamesParams.property(withName: "EmployeeID")
        }
        if !B1PreEmployeeFullNamesParams.employeeFullName.isRemoved {
            B1PreEmployeeFullNamesParams.employeeFullName = B1ClassMetadata.ComplexTypes.employeeFullNamesParams.property(withName: "EmployeeFullName")
        }
        if !B1PreEmployeeIDTypeParams.idType.isRemoved {
            B1PreEmployeeIDTypeParams.idType = B1ClassMetadata.ComplexTypes.employeeIDTypeParams.property(withName: "IDType")
        }
        if !B1PreEmployeeInfoParams.employeeID.isRemoved {
            B1PreEmployeeInfoParams.employeeID = B1ClassMetadata.ComplexTypes.employeeInfoParams.property(withName: "EmployeeID")
        }
        if !B1PreEmployeePositionParams.positionID.isRemoved {
            B1PreEmployeePositionParams.positionID = B1ClassMetadata.ComplexTypes.employeePositionParams.property(withName: "PositionID")
        }
        if !B1PreEmployeePositionParams.name.isRemoved {
            B1PreEmployeePositionParams.name = B1ClassMetadata.ComplexTypes.employeePositionParams.property(withName: "Name")
        }
        if !B1PreEmployeePositionParams.description.isRemoved {
            B1PreEmployeePositionParams.description = B1ClassMetadata.ComplexTypes.employeePositionParams.property(withName: "Description")
        }
        if !B1PreEmployeePreviousEmpoymentInfo.employeeNo.isRemoved {
            B1PreEmployeePreviousEmpoymentInfo.employeeNo = B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo.property(withName: "EmployeeNo")
        }
        if !B1PreEmployeePreviousEmpoymentInfo.lineNum.isRemoved {
            B1PreEmployeePreviousEmpoymentInfo.lineNum = B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo.property(withName: "LineNum")
        }
        if !B1PreEmployeePreviousEmpoymentInfo.fromDtae.isRemoved {
            B1PreEmployeePreviousEmpoymentInfo.fromDtae = B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo.property(withName: "FromDtae")
        }
        if !B1PreEmployeePreviousEmpoymentInfo.toDate.isRemoved {
            B1PreEmployeePreviousEmpoymentInfo.toDate = B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo.property(withName: "ToDate")
        }
        if !B1PreEmployeePreviousEmpoymentInfo.employer.isRemoved {
            B1PreEmployeePreviousEmpoymentInfo.employer = B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo.property(withName: "Employer")
        }
        if !B1PreEmployeePreviousEmpoymentInfo.position.isRemoved {
            B1PreEmployeePreviousEmpoymentInfo.position = B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo.property(withName: "Position")
        }
        if !B1PreEmployeePreviousEmpoymentInfo.remarks.isRemoved {
            B1PreEmployeePreviousEmpoymentInfo.remarks = B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo.property(withName: "Remarks")
        }
        if !B1PreEmployeeReviewsInfo.employeeNo.isRemoved {
            B1PreEmployeeReviewsInfo.employeeNo = B1ClassMetadata.ComplexTypes.employeeReviewsInfo.property(withName: "EmployeeNo")
        }
        if !B1PreEmployeeReviewsInfo.lineNum.isRemoved {
            B1PreEmployeeReviewsInfo.lineNum = B1ClassMetadata.ComplexTypes.employeeReviewsInfo.property(withName: "LineNum")
        }
        if !B1PreEmployeeReviewsInfo.date.isRemoved {
            B1PreEmployeeReviewsInfo.date = B1ClassMetadata.ComplexTypes.employeeReviewsInfo.property(withName: "Date")
        }
        if !B1PreEmployeeReviewsInfo.reviewDescription.isRemoved {
            B1PreEmployeeReviewsInfo.reviewDescription = B1ClassMetadata.ComplexTypes.employeeReviewsInfo.property(withName: "ReviewDescription")
        }
        if !B1PreEmployeeReviewsInfo.manager.isRemoved {
            B1PreEmployeeReviewsInfo.manager = B1ClassMetadata.ComplexTypes.employeeReviewsInfo.property(withName: "Manager")
        }
        if !B1PreEmployeeReviewsInfo.grade.isRemoved {
            B1PreEmployeeReviewsInfo.grade = B1ClassMetadata.ComplexTypes.employeeReviewsInfo.property(withName: "Grade")
        }
        if !B1PreEmployeeReviewsInfo.remarks.isRemoved {
            B1PreEmployeeReviewsInfo.remarks = B1ClassMetadata.ComplexTypes.employeeReviewsInfo.property(withName: "Remarks")
        }
        if !B1PreEmployeeRoleSetupParams.typeID.isRemoved {
            B1PreEmployeeRoleSetupParams.typeID = B1ClassMetadata.ComplexTypes.employeeRoleSetupParams.property(withName: "TypeID")
        }
        if !B1PreEmployeeRoleSetupParams.name.isRemoved {
            B1PreEmployeeRoleSetupParams.name = B1ClassMetadata.ComplexTypes.employeeRoleSetupParams.property(withName: "Name")
        }
        if !B1PreEmployeeRolesInfo.employeeID.isRemoved {
            B1PreEmployeeRolesInfo.employeeID = B1ClassMetadata.ComplexTypes.employeeRolesInfo.property(withName: "EmployeeID")
        }
        if !B1PreEmployeeRolesInfo.lineNum.isRemoved {
            B1PreEmployeeRolesInfo.lineNum = B1ClassMetadata.ComplexTypes.employeeRolesInfo.property(withName: "LineNum")
        }
        if !B1PreEmployeeRolesInfo.roleID.isRemoved {
            B1PreEmployeeRolesInfo.roleID = B1ClassMetadata.ComplexTypes.employeeRolesInfo.property(withName: "RoleID")
        }
        if !B1PreEmployeeSavingsPaymentInfo.employeeID.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.employeeID = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "EmployeeID")
        }
        if !B1PreEmployeeSavingsPaymentInfo.lineNum.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.lineNum = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "LineNum")
        }
        if !B1PreEmployeeSavingsPaymentInfo.contractName.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.contractName = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "ContractName")
        }
        if !B1PreEmployeeSavingsPaymentInfo.paymentNotes.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.paymentNotes = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "PaymentNotes")
        }
        if !B1PreEmployeeSavingsPaymentInfo.an.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.an = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "AN")
        }
        if !B1PreEmployeeSavingsPaymentInfo.aNcurrency.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.aNcurrency = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "ANcurrency")
        }
        if !B1PreEmployeeSavingsPaymentInfo.ag.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.ag = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "AG")
        }
        if !B1PreEmployeeSavingsPaymentInfo.aGcurrency.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.aGcurrency = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "AGcurrency")
        }
        if !B1PreEmployeeSavingsPaymentInfo.bankName.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.bankName = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "BankName")
        }
        if !B1PreEmployeeSavingsPaymentInfo.bankCode.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.bankCode = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "BankCode")
        }
        if !B1PreEmployeeSavingsPaymentInfo.bankAccount.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.bankAccount = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "BankAccount")
        }
        if !B1PreEmployeeSavingsPaymentInfo.sequence.isRemoved {
            B1PreEmployeeSavingsPaymentInfo.sequence = B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.property(withName: "Sequence")
        }
        if !B1PreEmployeeStatusParams.statusID.isRemoved {
            B1PreEmployeeStatusParams.statusID = B1ClassMetadata.ComplexTypes.employeeStatusParams.property(withName: "StatusId")
        }
        if !B1PreEmployeeStatusParams.name.isRemoved {
            B1PreEmployeeStatusParams.name = B1ClassMetadata.ComplexTypes.employeeStatusParams.property(withName: "Name")
        }
        if !B1PreEmployeeStatusParams.description.isRemoved {
            B1PreEmployeeStatusParams.description = B1ClassMetadata.ComplexTypes.employeeStatusParams.property(withName: "Description")
        }
        if !B1PreEmployeeTransferDetail.transferID.isRemoved {
            B1PreEmployeeTransferDetail.transferID = B1ClassMetadata.ComplexTypes.employeeTransferDetail.property(withName: "TransferID")
        }
        if !B1PreEmployeeTransferDetail.employeeID.isRemoved {
            B1PreEmployeeTransferDetail.employeeID = B1ClassMetadata.ComplexTypes.employeeTransferDetail.property(withName: "EmployeeID")
        }
        if !B1PreEmployeeTransferDetail.transferedDate.isRemoved {
            B1PreEmployeeTransferDetail.transferedDate = B1ClassMetadata.ComplexTypes.employeeTransferDetail.property(withName: "TransferedDate")
        }
        if !B1PreEmployeeTransferDetail.transferedTime.isRemoved {
            B1PreEmployeeTransferDetail.transferedTime = B1ClassMetadata.ComplexTypes.employeeTransferDetail.property(withName: "TransferedTime")
        }
        if !B1PreEmployeeTransferDetail.status.isRemoved {
            B1PreEmployeeTransferDetail.status = B1ClassMetadata.ComplexTypes.employeeTransferDetail.property(withName: "Status")
        }
        if !B1PreEmployeeTransferDetail.comment.isRemoved {
            B1PreEmployeeTransferDetail.comment = B1ClassMetadata.ComplexTypes.employeeTransferDetail.property(withName: "Comment")
        }
        if !B1PreEmployeeTransferParams.transferID.isRemoved {
            B1PreEmployeeTransferParams.transferID = B1ClassMetadata.ComplexTypes.employeeTransferParams.property(withName: "TransferID")
        }
        if !B1PreEnhancedDiscountGroupParams.absEntry.isRemoved {
            B1PreEnhancedDiscountGroupParams.absEntry = B1ClassMetadata.ComplexTypes.enhancedDiscountGroupParams.property(withName: "AbsEntry")
        }
        if !B1PreEnhancedDiscountGroupParams.type_.isRemoved {
            B1PreEnhancedDiscountGroupParams.type_ = B1ClassMetadata.ComplexTypes.enhancedDiscountGroupParams.property(withName: "Type")
        }
        if !B1PreEnhancedDiscountGroupParams.objectCode.isRemoved {
            B1PreEnhancedDiscountGroupParams.objectCode = B1ClassMetadata.ComplexTypes.enhancedDiscountGroupParams.property(withName: "ObjectCode")
        }
        if !B1PreExpenseTypeParams.expenseType.isRemoved {
            B1PreExpenseTypeParams.expenseType = B1ClassMetadata.ComplexTypes.expenseTypeParams.property(withName: "ExpenseType")
        }
        if !B1PreExportProcess.lineNumber.isRemoved {
            B1PreExportProcess.lineNumber = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "LineNumber")
        }
        if !B1PreExportProcess.exportationDocumentTypeCode.isRemoved {
            B1PreExportProcess.exportationDocumentTypeCode = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "ExportationDocumentTypeCode")
        }
        if !B1PreExportProcess.exportationDeclarationNumber.isRemoved {
            B1PreExportProcess.exportationDeclarationNumber = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "ExportationDeclarationNumber")
        }
        if !B1PreExportProcess.exportationDeclarationDate.isRemoved {
            B1PreExportProcess.exportationDeclarationDate = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "ExportationDeclarationDate")
        }
        if !B1PreExportProcess.exportationNatureCode.isRemoved {
            B1PreExportProcess.exportationNatureCode = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "ExportationNatureCode")
        }
        if !B1PreExportProcess.exportationRegistryNumber.isRemoved {
            B1PreExportProcess.exportationRegistryNumber = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "ExportationRegistryNumber")
        }
        if !B1PreExportProcess.exportationRegistryDate.isRemoved {
            B1PreExportProcess.exportationRegistryDate = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "ExportationRegistryDate")
        }
        if !B1PreExportProcess.ladingBillNumber.isRemoved {
            B1PreExportProcess.ladingBillNumber = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "LadingBillNumber")
        }
        if !B1PreExportProcess.ladingBillDate.isRemoved {
            B1PreExportProcess.ladingBillDate = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "LadingBillDate")
        }
        if !B1PreExportProcess.merchandiseLeftCustomsDate.isRemoved {
            B1PreExportProcess.merchandiseLeftCustomsDate = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "MerchandiseLeftCustomsDate")
        }
        if !B1PreExportProcess.ladingBillTypeCode.isRemoved {
            B1PreExportProcess.ladingBillTypeCode = B1ClassMetadata.ComplexTypes.exportProcess.property(withName: "LadingBillTypeCode")
        }
        if !B1PreExtendedAdminInfo.addressType.isRemoved {
            B1PreExtendedAdminInfo.addressType = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "AddressType")
        }
        if !B1PreExtendedAdminInfo.streetNo.isRemoved {
            B1PreExtendedAdminInfo.streetNo = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "StreetNo")
        }
        if !B1PreExtendedAdminInfo.stdCode.isRemoved {
            B1PreExtendedAdminInfo.stdCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "STDCode")
        }
        if !B1PreExtendedAdminInfo.stdCodeForeign.isRemoved {
            B1PreExtendedAdminInfo.stdCodeForeign = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "STDCodeForeign")
        }
        if !B1PreExtendedAdminInfo.natureOfCompanyCode.isRemoved {
            B1PreExtendedAdminInfo.natureOfCompanyCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "NatureOfCompanyCode")
        }
        if !B1PreExtendedAdminInfo.economicActivityTypeCode.isRemoved {
            B1PreExtendedAdminInfo.economicActivityTypeCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "EconomicActivityTypeCode")
        }
        if !B1PreExtendedAdminInfo.creditContributionOriginCode.isRemoved {
            B1PreExtendedAdminInfo.creditContributionOriginCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "CreditContributionOriginCode")
        }
        if !B1PreExtendedAdminInfo.ipiPeriodCode.isRemoved {
            B1PreExtendedAdminInfo.ipiPeriodCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "IPIPeriodCode")
        }
        if !B1PreExtendedAdminInfo.cooperativeAssociationTypeCode.isRemoved {
            B1PreExtendedAdminInfo.cooperativeAssociationTypeCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "CooperativeAssociationTypeCode")
        }
        if !B1PreExtendedAdminInfo.profitTaxationCode.isRemoved {
            B1PreExtendedAdminInfo.profitTaxationCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "ProfitTaxationCode")
        }
        if !B1PreExtendedAdminInfo.companyQualificationCode.isRemoved {
            B1PreExtendedAdminInfo.companyQualificationCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "CompanyQualificationCode")
        }
        if !B1PreExtendedAdminInfo.declarerTypeCode.isRemoved {
            B1PreExtendedAdminInfo.declarerTypeCode = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "DeclarerTypeCode")
        }
        if !B1PreExtendedAdminInfo.ipiTaxContributor.isRemoved {
            B1PreExtendedAdminInfo.ipiTaxContributor = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "IPITaxContributor")
        }
        if !B1PreExtendedAdminInfo.commercialRegister.isRemoved {
            B1PreExtendedAdminInfo.commercialRegister = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "CommercialRegister")
        }
        if !B1PreExtendedAdminInfo.dateOfIncorporation.isRemoved {
            B1PreExtendedAdminInfo.dateOfIncorporation = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "DateOfIncorporation")
        }
        if !B1PreExtendedAdminInfo.spedProfile.isRemoved {
            B1PreExtendedAdminInfo.spedProfile = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "SPEDProfile")
        }
        if !B1PreExtendedAdminInfo.environmentType.isRemoved {
            B1PreExtendedAdminInfo.environmentType = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "EnvironmentType")
        }
        if !B1PreExtendedAdminInfo.opting4ICMS.isRemoved {
            B1PreExtendedAdminInfo.opting4ICMS = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "Opting4ICMS")
        }
        if !B1PreExtendedAdminInfo.okdpNumber.isRemoved {
            B1PreExtendedAdminInfo.okdpNumber = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "OKDPNumber")
        }
        if !B1PreExtendedAdminInfo.globalLocationNumber.isRemoved {
            B1PreExtendedAdminInfo.globalLocationNumber = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "GlobalLocationNumber")
        }
        if !B1PreExtendedAdminInfo.enableIntrastat.isRemoved {
            B1PreExtendedAdminInfo.enableIntrastat = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "EnableIntrastat")
        }
        if !B1PreExtendedAdminInfo.authorityUser.isRemoved {
            B1PreExtendedAdminInfo.authorityUser = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "AuthorityUser")
        }
        if !B1PreExtendedAdminInfo.authorityPassword.isRemoved {
            B1PreExtendedAdminInfo.authorityPassword = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "AuthorityPassword")
        }
        if !B1PreExtendedAdminInfo.urLforGoodsTransportService.isRemoved {
            B1PreExtendedAdminInfo.urLforGoodsTransportService = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "URLforGoodsTransportService")
        }
        if !B1PreExtendedAdminInfo.urLforInvoiceTypeService.isRemoved {
            B1PreExtendedAdminInfo.urLforInvoiceTypeService = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "URLforInvoiceTypeService")
        }
        if !B1PreExtendedAdminInfo.electronicApprovalForGoodsTransEnabled.isRemoved {
            B1PreExtendedAdminInfo.electronicApprovalForGoodsTransEnabled = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "ElectronicApprovalForGoodsTransEnabled")
        }
        if !B1PreExtendedAdminInfo.electronicApprovalForInvoiceEnabled.isRemoved {
            B1PreExtendedAdminInfo.electronicApprovalForInvoiceEnabled = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "ElectronicApprovalForInvoiceEnabled")
        }
        if !B1PreExtendedAdminInfo.allowInactiveItemsInInventoryOpeningBalance.isRemoved {
            B1PreExtendedAdminInfo.allowInactiveItemsInInventoryOpeningBalance = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "AllowInactiveItemsInInventoryOpeningBalance")
        }
        if !B1PreExtendedAdminInfo.allowInactiveItemsInInventoryCountingAndPosting.isRemoved {
            B1PreExtendedAdminInfo.allowInactiveItemsInInventoryCountingAndPosting = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "AllowInactiveItemsInInventoryCountingAndPosting")
        }
        if !B1PreExtendedAdminInfo.autoAssignNewBranchToBP.isRemoved {
            B1PreExtendedAdminInfo.autoAssignNewBranchToBP = B1ClassMetadata.ComplexTypes.extendedAdminInfo.property(withName: "AutoAssignNewBranchToBP")
        }
        if !B1PreExtendedTranslationParams.docEntry.isRemoved {
            B1PreExtendedTranslationParams.docEntry = B1ClassMetadata.ComplexTypes.extendedTranslationParams.property(withName: "DocEntry")
        }
        if !B1PreExtendedTranslationParams.category.isRemoved {
            B1PreExtendedTranslationParams.category = B1ClassMetadata.ComplexTypes.extendedTranslationParams.property(withName: "Category")
        }
        if !B1PreExtendedTranslationParams.id.isRemoved {
            B1PreExtendedTranslationParams.id = B1ClassMetadata.ComplexTypes.extendedTranslationParams.property(withName: "ID")
        }
        if !B1PreExtendedTranslationParams.secondaryID.isRemoved {
            B1PreExtendedTranslationParams.secondaryID = B1ClassMetadata.ComplexTypes.extendedTranslationParams.property(withName: "SecondaryID")
        }
        if !B1PreExtendedTranslationItemLine.docEntry.isRemoved {
            B1PreExtendedTranslationItemLine.docEntry = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "DocEntry")
        }
        if !B1PreExtendedTranslationItemLine.lineNumber.isRemoved {
            B1PreExtendedTranslationItemLine.lineNumber = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "LineNumber")
        }
        if !B1PreExtendedTranslationItemLine.itemCode.isRemoved {
            B1PreExtendedTranslationItemLine.itemCode = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "ItemCode")
        }
        if !B1PreExtendedTranslationItemLine.itemType.isRemoved {
            B1PreExtendedTranslationItemLine.itemType = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "ItemType")
        }
        if !B1PreExtendedTranslationItemLine.slimType.isRemoved {
            B1PreExtendedTranslationItemLine.slimType = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "SlimType")
        }
        if !B1PreExtendedTranslationItemLine.maxLength.isRemoved {
            B1PreExtendedTranslationItemLine.maxLength = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "MaxLength")
        }
        if !B1PreExtendedTranslationItemLine.sourceText.isRemoved {
            B1PreExtendedTranslationItemLine.sourceText = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "SourceText")
        }
        if !B1PreExtendedTranslationItemLine.memo.isRemoved {
            B1PreExtendedTranslationItemLine.memo = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "Memo")
        }
        if !B1PreExtendedTranslationItemLine.extendedTranslationResultLines.isRemoved {
            B1PreExtendedTranslationItemLine.extendedTranslationResultLines = B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.property(withName: "ExtendedTranslation_ResultLines")
        }
        if !B1PreExtendedTranslationResultLine.docEntry.isRemoved {
            B1PreExtendedTranslationResultLine.docEntry = B1ClassMetadata.ComplexTypes.extendedTranslationResultLine.property(withName: "DocEntry")
        }
        if !B1PreExtendedTranslationResultLine.lineNumber.isRemoved {
            B1PreExtendedTranslationResultLine.lineNumber = B1ClassMetadata.ComplexTypes.extendedTranslationResultLine.property(withName: "LineNumber")
        }
        if !B1PreExtendedTranslationResultLine.subLineNumber.isRemoved {
            B1PreExtendedTranslationResultLine.subLineNumber = B1ClassMetadata.ComplexTypes.extendedTranslationResultLine.property(withName: "SubLineNumber")
        }
        if !B1PreExtendedTranslationResultLine.languageCode.isRemoved {
            B1PreExtendedTranslationResultLine.languageCode = B1ClassMetadata.ComplexTypes.extendedTranslationResultLine.property(withName: "LanguageCode")
        }
        if !B1PreExtendedTranslationResultLine.translatedText.isRemoved {
            B1PreExtendedTranslationResultLine.translatedText = B1ClassMetadata.ComplexTypes.extendedTranslationResultLine.property(withName: "TranslatedText")
        }
        if !B1PreExternalCall.id.isRemoved {
            B1PreExternalCall.id = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "ID")
        }
        if !B1PreExternalCall.category.isRemoved {
            B1PreExternalCall.category = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "Category")
        }
        if !B1PreExternalCall.status.isRemoved {
            B1PreExternalCall.status = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "Status")
        }
        if !B1PreExternalCall.creationDate.isRemoved {
            B1PreExternalCall.creationDate = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "CreationDate")
        }
        if !B1PreExternalCall.creationTime.isRemoved {
            B1PreExternalCall.creationTime = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "CreationTime")
        }
        if !B1PreExternalCall.lastUpdateDate.isRemoved {
            B1PreExternalCall.lastUpdateDate = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "LastUpdateDate")
        }
        if !B1PreExternalCall.lastUpdateTime.isRemoved {
            B1PreExternalCall.lastUpdateTime = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "LastUpdateTime")
        }
        if !B1PreExternalCall.lastUpdateUserCode.isRemoved {
            B1PreExternalCall.lastUpdateUserCode = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "LastUpdateUserCode")
        }
        if !B1PreExternalCall.callArguments.isRemoved {
            B1PreExternalCall.callArguments = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "CallArguments")
        }
        if !B1PreExternalCall.callMessages.isRemoved {
            B1PreExternalCall.callMessages = B1ClassMetadata.ComplexTypes.externalCall.property(withName: "CallMessages")
        }
        if !B1PreExternalCallParams.id.isRemoved {
            B1PreExternalCallParams.id = B1ClassMetadata.ComplexTypes.externalCallParams.property(withName: "ID")
        }
        if !B1PreExternalReconciliation.reconciliationAccountType.isRemoved {
            B1PreExternalReconciliation.reconciliationAccountType = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "ReconciliationAccountType")
        }
        if !B1PreExternalReconciliation.accountCode.isRemoved {
            B1PreExternalReconciliation.accountCode = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "AccountCode")
        }
        if !B1PreExternalReconciliation.reconciliationNo.isRemoved {
            B1PreExternalReconciliation.reconciliationNo = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "ReconciliationNo")
        }
        if !B1PreExternalReconciliation.amount.isRemoved {
            B1PreExternalReconciliation.amount = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "Amount")
        }
        if !B1PreExternalReconciliation.currencyType.isRemoved {
            B1PreExternalReconciliation.currencyType = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "CurrencyType")
        }
        if !B1PreExternalReconciliation.reconciliationType.isRemoved {
            B1PreExternalReconciliation.reconciliationType = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "ReconciliationType")
        }
        if !B1PreExternalReconciliation.reconciliationDate.isRemoved {
            B1PreExternalReconciliation.reconciliationDate = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "ReconciliationDate")
        }
        if !B1PreExternalReconciliation.creationDate.isRemoved {
            B1PreExternalReconciliation.creationDate = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "CreationDate")
        }
        if !B1PreExternalReconciliation.reconciliationJournalEntryLines.isRemoved {
            B1PreExternalReconciliation.reconciliationJournalEntryLines = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "ReconciliationJournalEntryLines")
        }
        if !B1PreExternalReconciliation.reconciliationBankStatementLines.isRemoved {
            B1PreExternalReconciliation.reconciliationBankStatementLines = B1ClassMetadata.ComplexTypes.externalReconciliation.property(withName: "ReconciliationBankStatementLines")
        }
        if !B1PreExternalReconciliationFilterParams.accountCodeFrom.isRemoved {
            B1PreExternalReconciliationFilterParams.accountCodeFrom = B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams.property(withName: "AccountCodeFrom")
        }
        if !B1PreExternalReconciliationFilterParams.accountCodeTo.isRemoved {
            B1PreExternalReconciliationFilterParams.accountCodeTo = B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams.property(withName: "AccountCodeTo")
        }
        if !B1PreExternalReconciliationFilterParams.reconciliationDateFrom.isRemoved {
            B1PreExternalReconciliationFilterParams.reconciliationDateFrom = B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams.property(withName: "ReconciliationDateFrom")
        }
        if !B1PreExternalReconciliationFilterParams.reconciliationDateTo.isRemoved {
            B1PreExternalReconciliationFilterParams.reconciliationDateTo = B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams.property(withName: "ReconciliationDateTo")
        }
        if !B1PreExternalReconciliationFilterParams.reconciliationNoFrom.isRemoved {
            B1PreExternalReconciliationFilterParams.reconciliationNoFrom = B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams.property(withName: "ReconciliationNoFrom")
        }
        if !B1PreExternalReconciliationFilterParams.reconciliationNoTo.isRemoved {
            B1PreExternalReconciliationFilterParams.reconciliationNoTo = B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams.property(withName: "ReconciliationNoTo")
        }
        if !B1PreExternalReconciliationFilterParams.reconciliationAccountType.isRemoved {
            B1PreExternalReconciliationFilterParams.reconciliationAccountType = B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams.property(withName: "ReconciliationAccountType")
        }
        if !B1PreExternalReconciliationParams.accountCode.isRemoved {
            B1PreExternalReconciliationParams.accountCode = B1ClassMetadata.ComplexTypes.externalReconciliationParams.property(withName: "AccountCode")
        }
        if !B1PreExternalReconciliationParams.reconciliationNo.isRemoved {
            B1PreExternalReconciliationParams.reconciliationNo = B1ClassMetadata.ComplexTypes.externalReconciliationParams.property(withName: "ReconciliationNo")
        }
        if !B1PreFAAccountDeterminationParams.code.isRemoved {
            B1PreFAAccountDeterminationParams.code = B1ClassMetadata.ComplexTypes.faAccountDeterminationParams.property(withName: "Code")
        }
        if !B1PreFAAccountDeterminationParams.description.isRemoved {
            B1PreFAAccountDeterminationParams.description = B1ClassMetadata.ComplexTypes.faAccountDeterminationParams.property(withName: "Description")
        }
        if !B1PreFIFOLayer.transactionSequenceNum.isRemoved {
            B1PreFIFOLayer.transactionSequenceNum = B1ClassMetadata.ComplexTypes.fifoLayer.property(withName: "TransactionSequenceNum")
        }
        if !B1PreFIFOLayer.layerID.isRemoved {
            B1PreFIFOLayer.layerID = B1ClassMetadata.ComplexTypes.fifoLayer.property(withName: "LayerID")
        }
        if !B1PreFIFOLayer.quantity.isRemoved {
            B1PreFIFOLayer.quantity = B1ClassMetadata.ComplexTypes.fifoLayer.property(withName: "Quantity")
        }
        if !B1PreFIFOLayer.price.isRemoved {
            B1PreFIFOLayer.price = B1ClassMetadata.ComplexTypes.fifoLayer.property(withName: "Price")
        }
        if !B1PreFIFOLayer.lineTotal.isRemoved {
            B1PreFIFOLayer.lineTotal = B1ClassMetadata.ComplexTypes.fifoLayer.property(withName: "LineTotal")
        }
        if !B1PreFIFOLayer.baseLine.isRemoved {
            B1PreFIFOLayer.baseLine = B1ClassMetadata.ComplexTypes.fifoLayer.property(withName: "BaseLine")
        }
        if !B1PreFactoringIndicatorParams.indicatorCode.isRemoved {
            B1PreFactoringIndicatorParams.indicatorCode = B1ClassMetadata.ComplexTypes.factoringIndicatorParams.property(withName: "IndicatorCode")
        }
        if !B1PreFeatureStatus.featureID.isRemoved {
            B1PreFeatureStatus.featureID = B1ClassMetadata.ComplexTypes.featureStatus.property(withName: "FeatureID")
        }
        if !B1PreFeatureStatus.blocked.isRemoved {
            B1PreFeatureStatus.blocked = B1ClassMetadata.ComplexTypes.featureStatus.property(withName: "Blocked")
        }
        if !B1PreFinancePeriod.absoluteEntry.isRemoved {
            B1PreFinancePeriod.absoluteEntry = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "AbsoluteEntry")
        }
        if !B1PreFinancePeriod.periodCode.isRemoved {
            B1PreFinancePeriod.periodCode = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "PeriodCode")
        }
        if !B1PreFinancePeriod.periodName.isRemoved {
            B1PreFinancePeriod.periodName = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "PeriodName")
        }
        if !B1PreFinancePeriod.postingDateFrom.isRemoved {
            B1PreFinancePeriod.postingDateFrom = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "PostingDateFrom")
        }
        if !B1PreFinancePeriod.postingDateTo.isRemoved {
            B1PreFinancePeriod.postingDateTo = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "PostingDateTo")
        }
        if !B1PreFinancePeriod.valueDateFrom.isRemoved {
            B1PreFinancePeriod.valueDateFrom = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "ValueDateFrom")
        }
        if !B1PreFinancePeriod.valueDateTo.isRemoved {
            B1PreFinancePeriod.valueDateTo = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "ValueDateTo")
        }
        if !B1PreFinancePeriod.taxDateFrom.isRemoved {
            B1PreFinancePeriod.taxDateFrom = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "TaxDateFrom")
        }
        if !B1PreFinancePeriod.taxDateTo.isRemoved {
            B1PreFinancePeriod.taxDateTo = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "TaxDateTo")
        }
        if !B1PreFinancePeriod.activeforFeed.isRemoved {
            B1PreFinancePeriod.activeforFeed = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "ActiveforFeed")
        }
        if !B1PreFinancePeriod.locked.isRemoved {
            B1PreFinancePeriod.locked = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "Locked")
        }
        if !B1PreFinancePeriod.additionalSubPeriods.isRemoved {
            B1PreFinancePeriod.additionalSubPeriods = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "AdditionalSubPeriods")
        }
        if !B1PreFinancePeriod.periodIndicator.isRemoved {
            B1PreFinancePeriod.periodIndicator = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "PeriodIndicator")
        }
        if !B1PreFinancePeriod.subNum.isRemoved {
            B1PreFinancePeriod.subNum = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "SubNum")
        }
        if !B1PreFinancePeriod.periodStatus.isRemoved {
            B1PreFinancePeriod.periodStatus = B1ClassMetadata.ComplexTypes.financePeriod.property(withName: "PeriodStatus")
        }
        if !B1PreFinancePeriodParams.absoluteEntry.isRemoved {
            B1PreFinancePeriodParams.absoluteEntry = B1ClassMetadata.ComplexTypes.financePeriodParams.property(withName: "AbsoluteEntry")
        }
        if !B1PreFinancePeriodParams.periodIndicator.isRemoved {
            B1PreFinancePeriodParams.periodIndicator = B1ClassMetadata.ComplexTypes.financePeriodParams.property(withName: "PeriodIndicator")
        }
        if !B1PreFinancialYearParams.absEntry.isRemoved {
            B1PreFinancialYearParams.absEntry = B1ClassMetadata.ComplexTypes.financialYearParams.property(withName: "AbsEntry")
        }
        if !B1PreFinancialYearParams.code.isRemoved {
            B1PreFinancialYearParams.code = B1ClassMetadata.ComplexTypes.financialYearParams.property(withName: "Code")
        }
        if !B1PreFinancialYearParams.description.isRemoved {
            B1PreFinancialYearParams.description = B1ClassMetadata.ComplexTypes.financialYearParams.property(withName: "Description")
        }
        if !B1PreFiscalPrinterParams.equipmentNo.isRemoved {
            B1PreFiscalPrinterParams.equipmentNo = B1ClassMetadata.ComplexTypes.fiscalPrinterParams.property(withName: "EquipmentNo")
        }
        if !B1PreFixedAssetEndBalance.historicalAPC.isRemoved {
            B1PreFixedAssetEndBalance.historicalAPC = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "HistoricalAPC")
        }
        if !B1PreFixedAssetEndBalance.acquisitionCost.isRemoved {
            B1PreFixedAssetEndBalance.acquisitionCost = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "AcquisitionCost")
        }
        if !B1PreFixedAssetEndBalance.netBookValue.isRemoved {
            B1PreFixedAssetEndBalance.netBookValue = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "NetBookValue")
        }
        if !B1PreFixedAssetEndBalance.historicalNBV.isRemoved {
            B1PreFixedAssetEndBalance.historicalNBV = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "HistoricalNBV")
        }
        if !B1PreFixedAssetEndBalance.ordinaryDepreciationValue.isRemoved {
            B1PreFixedAssetEndBalance.ordinaryDepreciationValue = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "OrdinaryDepreciationValue")
        }
        if !B1PreFixedAssetEndBalance.unplanedDepreciationValue.isRemoved {
            B1PreFixedAssetEndBalance.unplanedDepreciationValue = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "UnplanedDepreciationValue")
        }
        if !B1PreFixedAssetEndBalance.specialDepreciationValue.isRemoved {
            B1PreFixedAssetEndBalance.specialDepreciationValue = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "SpecialDepreciationValue")
        }
        if !B1PreFixedAssetEndBalance.writeUp.isRemoved {
            B1PreFixedAssetEndBalance.writeUp = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "WriteUp")
        }
        if !B1PreFixedAssetEndBalance.salvageValue.isRemoved {
            B1PreFixedAssetEndBalance.salvageValue = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "SalvageValue")
        }
        if !B1PreFixedAssetEndBalance.quantity.isRemoved {
            B1PreFixedAssetEndBalance.quantity = B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.property(withName: "Quantity")
        }
        if !B1PreFixedAssetValues.transactionType.isRemoved {
            B1PreFixedAssetValues.transactionType = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "TransactionType")
        }
        if !B1PreFixedAssetValues.acquisitionCost.isRemoved {
            B1PreFixedAssetValues.acquisitionCost = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "AcquisitionCost")
        }
        if !B1PreFixedAssetValues.quantity.isRemoved {
            B1PreFixedAssetValues.quantity = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "Quantity")
        }
        if !B1PreFixedAssetValues.depreciationValue.isRemoved {
            B1PreFixedAssetValues.depreciationValue = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "DepreciationValue")
        }
        if !B1PreFixedAssetValues.netBookValue.isRemoved {
            B1PreFixedAssetValues.netBookValue = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "NetBookValue")
        }
        if !B1PreFixedAssetValues.ordinaryDepreciationValue.isRemoved {
            B1PreFixedAssetValues.ordinaryDepreciationValue = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "OrdinaryDepreciationValue")
        }
        if !B1PreFixedAssetValues.unplanedDepreciationValue.isRemoved {
            B1PreFixedAssetValues.unplanedDepreciationValue = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "UnplanedDepreciationValue")
        }
        if !B1PreFixedAssetValues.specialDepreciationValue.isRemoved {
            B1PreFixedAssetValues.specialDepreciationValue = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "SpecialDepreciationValue")
        }
        if !B1PreFixedAssetValues.writeUp.isRemoved {
            B1PreFixedAssetValues.writeUp = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "WriteUp")
        }
        if !B1PreFixedAssetValues.appreciation.isRemoved {
            B1PreFixedAssetValues.appreciation = B1ClassMetadata.ComplexTypes.fixedAssetValues.property(withName: "Appreciation")
        }
        if !B1PreFixedAssetValuesParams.itemCode.isRemoved {
            B1PreFixedAssetValuesParams.itemCode = B1ClassMetadata.ComplexTypes.fixedAssetValuesParams.property(withName: "ItemCode")
        }
        if !B1PreFixedAssetValuesParams.fiscalYear.isRemoved {
            B1PreFixedAssetValuesParams.fiscalYear = B1ClassMetadata.ComplexTypes.fixedAssetValuesParams.property(withName: "FiscalYear")
        }
        if !B1PreFixedAssetValuesParams.depreciationArea.isRemoved {
            B1PreFixedAssetValuesParams.depreciationArea = B1ClassMetadata.ComplexTypes.fixedAssetValuesParams.property(withName: "DepreciationArea")
        }
        if !B1PreFormattedSearchParams.index.isRemoved {
            B1PreFormattedSearchParams.index = B1ClassMetadata.ComplexTypes.formattedSearchParams.property(withName: "Index")
        }
        if !B1PreForms1099Params.formCode.isRemoved {
            B1PreForms1099Params.formCode = B1ClassMetadata.ComplexTypes.forms1099Params.property(withName: "FormCode")
        }
        if !B1PreGLAccount.code.isRemoved {
            B1PreGLAccount.code = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "Code")
        }
        if !B1PreGLAccount.dueDate.isRemoved {
            B1PreGLAccount.dueDate = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "DueDate")
        }
        if !B1PreGLAccount.debit.isRemoved {
            B1PreGLAccount.debit = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "Debit")
        }
        if !B1PreGLAccount.credit.isRemoved {
            B1PreGLAccount.credit = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "Credit")
        }
        if !B1PreGLAccount.systemDebit.isRemoved {
            B1PreGLAccount.systemDebit = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "SystemDebit")
        }
        if !B1PreGLAccount.systemCredit.isRemoved {
            B1PreGLAccount.systemCredit = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "SystemCredit")
        }
        if !B1PreGLAccount.foreignDebit.isRemoved {
            B1PreGLAccount.foreignDebit = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "ForeignDebit")
        }
        if !B1PreGLAccount.foreignCredit.isRemoved {
            B1PreGLAccount.foreignCredit = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "ForeignCredit")
        }
        if !B1PreGLAccount.foreignCurrency.isRemoved {
            B1PreGLAccount.foreignCurrency = B1ClassMetadata.ComplexTypes.glAccount.property(withName: "ForeignCurrency")
        }
        if !B1PreGLAccountAdvancedRuleParams.absoluteEntry.isRemoved {
            B1PreGLAccountAdvancedRuleParams.absoluteEntry = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "AbsoluteEntry")
        }
        if !B1PreGLAccountAdvancedRuleParams.period.isRemoved {
            B1PreGLAccountAdvancedRuleParams.period = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "Period")
        }
        if !B1PreGLAccountAdvancedRuleParams.code.isRemoved {
            B1PreGLAccountAdvancedRuleParams.code = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "Code")
        }
        if !B1PreGLAccountAdvancedRuleParams.itemCode.isRemoved {
            B1PreGLAccountAdvancedRuleParams.itemCode = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "ItemCode")
        }
        if !B1PreGLAccountAdvancedRuleParams.itemGroup.isRemoved {
            B1PreGLAccountAdvancedRuleParams.itemGroup = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "ItemGroup")
        }
        if !B1PreGLAccountAdvancedRuleParams.warehouse.isRemoved {
            B1PreGLAccountAdvancedRuleParams.warehouse = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "Warehouse")
        }
        if !B1PreGLAccountAdvancedRuleParams.bpGroup.isRemoved {
            B1PreGLAccountAdvancedRuleParams.bpGroup = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "BPGroup")
        }
        if !B1PreGLAccountAdvancedRuleParams.federalTaxID.isRemoved {
            B1PreGLAccountAdvancedRuleParams.federalTaxID = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "FederalTaxID")
        }
        if !B1PreGLAccountAdvancedRuleParams.shipToCountry.isRemoved {
            B1PreGLAccountAdvancedRuleParams.shipToCountry = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "ShipToCountry")
        }
        if !B1PreGLAccountAdvancedRuleParams.shipToState.isRemoved {
            B1PreGLAccountAdvancedRuleParams.shipToState = B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.property(withName: "ShipToState")
        }
    }

    private static func merge11(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PreGTIParams.inboundFile.isRemoved {
            B1PreGTIParams.inboundFile = B1ClassMetadata.ComplexTypes.gtiParams.property(withName: "InboundFile")
        }
        if !B1PreGTIParams.absEntry.isRemoved {
            B1PreGTIParams.absEntry = B1ClassMetadata.ComplexTypes.gtiParams.property(withName: "AbsEntry")
        }
        if !B1PreGeneratedAsset.docEntry.isRemoved {
            B1PreGeneratedAsset.docEntry = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "DocEntry")
        }
        if !B1PreGeneratedAsset.lineNumber.isRemoved {
            B1PreGeneratedAsset.lineNumber = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "LineNumber")
        }
        if !B1PreGeneratedAsset.visualOrder.isRemoved {
            B1PreGeneratedAsset.visualOrder = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "VisualOrder")
        }
        if !B1PreGeneratedAsset.assetCode.isRemoved {
            B1PreGeneratedAsset.assetCode = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "AssetCode")
        }
        if !B1PreGeneratedAsset.status.isRemoved {
            B1PreGeneratedAsset.status = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "Status")
        }
        if !B1PreGeneratedAsset.remarks.isRemoved {
            B1PreGeneratedAsset.remarks = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "Remarks")
        }
        if !B1PreGeneratedAsset.serialNumber.isRemoved {
            B1PreGeneratedAsset.serialNumber = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "SerialNumber")
        }
        if !B1PreGeneratedAsset.amount.isRemoved {
            B1PreGeneratedAsset.amount = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "amount")
        }
        if !B1PreGeneratedAsset.amountSC.isRemoved {
            B1PreGeneratedAsset.amountSC = B1ClassMetadata.ComplexTypes.generatedAsset.property(withName: "amountSC")
        }
        if !B1PreGetChangeLogParams.primaryKey.isRemoved {
            B1PreGetChangeLogParams.primaryKey = B1ClassMetadata.ComplexTypes.getChangeLogParams.property(withName: "PrimaryKey")
        }
        if !B1PreGetChangeLogParams.udoObjectCode.isRemoved {
            B1PreGetChangeLogParams.udoObjectCode = B1ClassMetadata.ComplexTypes.getChangeLogParams.property(withName: "UDOObjectCode")
        }
        if !B1PreGetChangeLogParams.object.isRemoved {
            B1PreGetChangeLogParams.object = B1ClassMetadata.ComplexTypes.getChangeLogParams.property(withName: "Object")
        }
        if !B1PreGovPayCodeAuthority.absID.isRemoved {
            B1PreGovPayCodeAuthority.absID = B1ClassMetadata.ComplexTypes.govPayCodeAuthority.property(withName: "AbsId")
        }
        if !B1PreGovPayCodeAuthority.bplid.isRemoved {
            B1PreGovPayCodeAuthority.bplid = B1ClassMetadata.ComplexTypes.govPayCodeAuthority.property(withName: "BPLId")
        }
        if !B1PreGovPayCodeAuthority.state.isRemoved {
            B1PreGovPayCodeAuthority.state = B1ClassMetadata.ComplexTypes.govPayCodeAuthority.property(withName: "State")
        }
        if !B1PreGovPayCodeAuthority.cardCode.isRemoved {
            B1PreGovPayCodeAuthority.cardCode = B1ClassMetadata.ComplexTypes.govPayCodeAuthority.property(withName: "CardCode")
        }
        if !B1PreGovPayCodeParams.absID.isRemoved {
            B1PreGovPayCodeParams.absID = B1ClassMetadata.ComplexTypes.govPayCodeParams.property(withName: "AbsId")
        }
        if !B1PreGovPayCodeParams.code.isRemoved {
            B1PreGovPayCodeParams.code = B1ClassMetadata.ComplexTypes.govPayCodeParams.property(withName: "Code")
        }
        if !B1PreHouseBankAccountParams.absoluteEntry.isRemoved {
            B1PreHouseBankAccountParams.absoluteEntry = B1ClassMetadata.ComplexTypes.houseBankAccountParams.property(withName: "AbsoluteEntry")
        }
        if !B1PreImportProcess.lineNumber.isRemoved {
            B1PreImportProcess.lineNumber = B1ClassMetadata.ComplexTypes.importProcess.property(withName: "LineNumber")
        }
        if !B1PreImportProcess.importationDocumentTypeCode.isRemoved {
            B1PreImportProcess.importationDocumentTypeCode = B1ClassMetadata.ComplexTypes.importProcess.property(withName: "ImportationDocumentTypeCode")
        }
        if !B1PreImportProcess.importationDocumentNumber.isRemoved {
            B1PreImportProcess.importationDocumentNumber = B1ClassMetadata.ComplexTypes.importProcess.property(withName: "ImportationDocumentNumber")
        }
        if !B1PreImportProcess.dateOfRegistryDIDSIDA.isRemoved {
            B1PreImportProcess.dateOfRegistryDIDSIDA = B1ClassMetadata.ComplexTypes.importProcess.property(withName: "DateOfRegistry_DI_DSI_DA")
        }
        if !B1PreImportProcess.customsClearanceDate.isRemoved {
            B1PreImportProcess.customsClearanceDate = B1ClassMetadata.ComplexTypes.importProcess.property(withName: "CustomsClearanceDate")
        }
        if !B1PreImportProcess.drawbackRegimeConcessionAccountNumber.isRemoved {
            B1PreImportProcess.drawbackRegimeConcessionAccountNumber = B1ClassMetadata.ComplexTypes.importProcess.property(withName: "DrawbackRegimeConcessionAccountNumber")
        }
        if !B1PreImportProcess.additionalNumber.isRemoved {
            B1PreImportProcess.additionalNumber = B1ClassMetadata.ComplexTypes.importProcess.property(withName: "AdditionalNumber")
        }
        if !B1PreImportProcess.additionalItemDiscountValue.isRemoved {
            B1PreImportProcess.additionalItemDiscountValue = B1ClassMetadata.ComplexTypes.importProcess.property(withName: "AdditionalItemDiscountValue")
        }
        if !B1PreIndiaSacCodeParams.absEntry.isRemoved {
            B1PreIndiaSacCodeParams.absEntry = B1ClassMetadata.ComplexTypes.indiaSacCodeParams.property(withName: "AbsEntry")
        }
        if !B1PreIndiaSacCodeParams.serviceCode.isRemoved {
            B1PreIndiaSacCodeParams.serviceCode = B1ClassMetadata.ComplexTypes.indiaSacCodeParams.property(withName: "ServiceCode")
        }
        if !B1PreIndividualCounter.documentEntry.isRemoved {
            B1PreIndividualCounter.documentEntry = B1ClassMetadata.ComplexTypes.individualCounter.property(withName: "DocumentEntry")
        }
        if !B1PreIndividualCounter.counterID.isRemoved {
            B1PreIndividualCounter.counterID = B1ClassMetadata.ComplexTypes.individualCounter.property(withName: "CounterID")
        }
        if !B1PreIndividualCounter.counterType.isRemoved {
            B1PreIndividualCounter.counterType = B1ClassMetadata.ComplexTypes.individualCounter.property(withName: "CounterType")
        }
        if !B1PreIndividualCounter.counterName.isRemoved {
            B1PreIndividualCounter.counterName = B1ClassMetadata.ComplexTypes.individualCounter.property(withName: "CounterName")
        }
        if !B1PreIndividualCounter.counterNumber.isRemoved {
            B1PreIndividualCounter.counterNumber = B1ClassMetadata.ComplexTypes.individualCounter.property(withName: "CounterNumber")
        }
        if !B1PreIndividualCounter.counterVisualOrder.isRemoved {
            B1PreIndividualCounter.counterVisualOrder = B1ClassMetadata.ComplexTypes.individualCounter.property(withName: "CounterVisualOrder")
        }
        if !B1PreIndustryParams.industryCode.isRemoved {
            B1PreIndustryParams.industryCode = B1ClassMetadata.ComplexTypes.industryParams.property(withName: "IndustryCode")
        }
        if !B1PreIntegrationPackageParams.absEntry.isRemoved {
            B1PreIntegrationPackageParams.absEntry = B1ClassMetadata.ComplexTypes.integrationPackageParams.property(withName: "AbsEntry")
        }
        if !B1PreInternalReconciliationBP.bpCode.isRemoved {
            B1PreInternalReconciliationBP.bpCode = B1ClassMetadata.ComplexTypes.internalReconciliationBP.property(withName: "BPCode")
        }
        if !B1PreInternalReconciliationOpenTrans.reconDate.isRemoved {
            B1PreInternalReconciliationOpenTrans.reconDate = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTrans.property(withName: "ReconDate")
        }
        if !B1PreInternalReconciliationOpenTrans.cardOrAccount.isRemoved {
            B1PreInternalReconciliationOpenTrans.cardOrAccount = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTrans.property(withName: "CardOrAccount")
        }
        if !B1PreInternalReconciliationOpenTrans.internalReconciliationOpenTransRows.isRemoved {
            B1PreInternalReconciliationOpenTrans.internalReconciliationOpenTransRows = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTrans.property(withName: "InternalReconciliationOpenTransRows")
        }
        if !B1PreInternalReconciliationOpenTransParams.reconDate.isRemoved {
            B1PreInternalReconciliationOpenTransParams.reconDate = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams.property(withName: "ReconDate")
        }
        if !B1PreInternalReconciliationOpenTransParams.cardOrAccount.isRemoved {
            B1PreInternalReconciliationOpenTransParams.cardOrAccount = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams.property(withName: "CardOrAccount")
        }
        if !B1PreInternalReconciliationOpenTransParams.accountNo.isRemoved {
            B1PreInternalReconciliationOpenTransParams.accountNo = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams.property(withName: "AccountNo")
        }
        if !B1PreInternalReconciliationOpenTransParams.dateType.isRemoved {
            B1PreInternalReconciliationOpenTransParams.dateType = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams.property(withName: "DateType")
        }
        if !B1PreInternalReconciliationOpenTransParams.fromDate.isRemoved {
            B1PreInternalReconciliationOpenTransParams.fromDate = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams.property(withName: "FromDate")
        }
        if !B1PreInternalReconciliationOpenTransParams.toDate.isRemoved {
            B1PreInternalReconciliationOpenTransParams.toDate = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams.property(withName: "ToDate")
        }
        if !B1PreInternalReconciliationOpenTransParams.internalReconciliationBPs.isRemoved {
            B1PreInternalReconciliationOpenTransParams.internalReconciliationBPs = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams.property(withName: "InternalReconciliationBPs")
        }
        if !B1PreInternalReconciliationOpenTransRow.selected.isRemoved {
            B1PreInternalReconciliationOpenTransRow.selected = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "Selected")
        }
        if !B1PreInternalReconciliationOpenTransRow.shortName.isRemoved {
            B1PreInternalReconciliationOpenTransRow.shortName = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "ShortName")
        }
        if !B1PreInternalReconciliationOpenTransRow.transID.isRemoved {
            B1PreInternalReconciliationOpenTransRow.transID = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "TransId")
        }
        if !B1PreInternalReconciliationOpenTransRow.transRowID.isRemoved {
            B1PreInternalReconciliationOpenTransRow.transRowID = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "TransRowId")
        }
        if !B1PreInternalReconciliationOpenTransRow.srcObjTyp.isRemoved {
            B1PreInternalReconciliationOpenTransRow.srcObjTyp = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "SrcObjTyp")
        }
        if !B1PreInternalReconciliationOpenTransRow.srcObjAbs.isRemoved {
            B1PreInternalReconciliationOpenTransRow.srcObjAbs = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "SrcObjAbs")
        }
        if !B1PreInternalReconciliationOpenTransRow.creditOrDebit.isRemoved {
            B1PreInternalReconciliationOpenTransRow.creditOrDebit = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "CreditOrDebit")
        }
        if !B1PreInternalReconciliationOpenTransRow.reconcileAmount.isRemoved {
            B1PreInternalReconciliationOpenTransRow.reconcileAmount = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "ReconcileAmount")
        }
        if !B1PreInternalReconciliationOpenTransRow.cashDiscount.isRemoved {
            B1PreInternalReconciliationOpenTransRow.cashDiscount = B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.property(withName: "CashDiscount")
        }
        if !B1PreInternalReconciliationParams.reconNum.isRemoved {
            B1PreInternalReconciliationParams.reconNum = B1ClassMetadata.ComplexTypes.internalReconciliationParams.property(withName: "ReconNum")
        }
        if !B1PreInternalReconciliationRow.lineSeq.isRemoved {
            B1PreInternalReconciliationRow.lineSeq = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "LineSeq")
        }
        if !B1PreInternalReconciliationRow.shortName.isRemoved {
            B1PreInternalReconciliationRow.shortName = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "ShortName")
        }
        if !B1PreInternalReconciliationRow.transID.isRemoved {
            B1PreInternalReconciliationRow.transID = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "TransId")
        }
        if !B1PreInternalReconciliationRow.transRowID.isRemoved {
            B1PreInternalReconciliationRow.transRowID = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "TransRowId")
        }
        if !B1PreInternalReconciliationRow.srcObjTyp.isRemoved {
            B1PreInternalReconciliationRow.srcObjTyp = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "SrcObjTyp")
        }
        if !B1PreInternalReconciliationRow.srcObjAbs.isRemoved {
            B1PreInternalReconciliationRow.srcObjAbs = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "SrcObjAbs")
        }
        if !B1PreInternalReconciliationRow.creditOrDebit.isRemoved {
            B1PreInternalReconciliationRow.creditOrDebit = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "CreditOrDebit")
        }
        if !B1PreInternalReconciliationRow.reconcileAmount.isRemoved {
            B1PreInternalReconciliationRow.reconcileAmount = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "ReconcileAmount")
        }
        if !B1PreInternalReconciliationRow.cashDiscount.isRemoved {
            B1PreInternalReconciliationRow.cashDiscount = B1ClassMetadata.ComplexTypes.internalReconciliationRow.property(withName: "CashDiscount")
        }
        if !B1PreIntrastatConfigurationParams.absEntry.isRemoved {
            B1PreIntrastatConfigurationParams.absEntry = B1ClassMetadata.ComplexTypes.intrastatConfigurationParams.property(withName: "AbsEntry")
        }
        if !B1PreIntrastatConfigurationParams.confType.isRemoved {
            B1PreIntrastatConfigurationParams.confType = B1ClassMetadata.ComplexTypes.intrastatConfigurationParams.property(withName: "ConfType")
        }
        if !B1PreIntrastatConfigurationParams.code.isRemoved {
            B1PreIntrastatConfigurationParams.code = B1ClassMetadata.ComplexTypes.intrastatConfigurationParams.property(withName: "Code")
        }
        if !B1PreIntrastatConfigurationParams.statCode.isRemoved {
            B1PreIntrastatConfigurationParams.statCode = B1ClassMetadata.ComplexTypes.intrastatConfigurationParams.property(withName: "StatCode")
        }
        if !B1PreIntrastatConfigurationParams.dateFrom.isRemoved {
            B1PreIntrastatConfigurationParams.dateFrom = B1ClassMetadata.ComplexTypes.intrastatConfigurationParams.property(withName: "DateFrom")
        }
        if !B1PreIntrastatConfigurationParams.dateTo.isRemoved {
            B1PreIntrastatConfigurationParams.dateTo = B1ClassMetadata.ComplexTypes.intrastatConfigurationParams.property(withName: "DateTo")
        }
        if !B1PreIntrastatConfigurationParams.country.isRemoved {
            B1PreIntrastatConfigurationParams.country = B1ClassMetadata.ComplexTypes.intrastatConfigurationParams.property(withName: "Country")
        }
        if !B1PreInventoryCountingBatchNumber.batchNumber.isRemoved {
            B1PreInventoryCountingBatchNumber.batchNumber = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "BatchNumber")
        }
        if !B1PreInventoryCountingBatchNumber.manufacturerSerialNumber.isRemoved {
            B1PreInventoryCountingBatchNumber.manufacturerSerialNumber = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "ManufacturerSerialNumber")
        }
        if !B1PreInventoryCountingBatchNumber.internalSerialNumber.isRemoved {
            B1PreInventoryCountingBatchNumber.internalSerialNumber = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "InternalSerialNumber")
        }
        if !B1PreInventoryCountingBatchNumber.expiryDate.isRemoved {
            B1PreInventoryCountingBatchNumber.expiryDate = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "ExpiryDate")
        }
        if !B1PreInventoryCountingBatchNumber.manufactureDate.isRemoved {
            B1PreInventoryCountingBatchNumber.manufactureDate = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "ManufactureDate")
        }
        if !B1PreInventoryCountingBatchNumber.addmisionDate.isRemoved {
            B1PreInventoryCountingBatchNumber.addmisionDate = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "AddmisionDate")
        }
        if !B1PreInventoryCountingBatchNumber.location.isRemoved {
            B1PreInventoryCountingBatchNumber.location = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "Location")
        }
        if !B1PreInventoryCountingBatchNumber.notes.isRemoved {
            B1PreInventoryCountingBatchNumber.notes = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "Notes")
        }
        if !B1PreInventoryCountingBatchNumber.quantity.isRemoved {
            B1PreInventoryCountingBatchNumber.quantity = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "Quantity")
        }
        if !B1PreInventoryCountingBatchNumber.baseLineNumber.isRemoved {
            B1PreInventoryCountingBatchNumber.baseLineNumber = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "BaseLineNumber")
        }
        if !B1PreInventoryCountingBatchNumber.documentEntry.isRemoved {
            B1PreInventoryCountingBatchNumber.documentEntry = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryCountingBatchNumber.counterType.isRemoved {
            B1PreInventoryCountingBatchNumber.counterType = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "CounterType")
        }
        if !B1PreInventoryCountingBatchNumber.counterID.isRemoved {
            B1PreInventoryCountingBatchNumber.counterID = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "CounterID")
        }
        if !B1PreInventoryCountingBatchNumber.multipleCounterRole.isRemoved {
            B1PreInventoryCountingBatchNumber.multipleCounterRole = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "MultipleCounterRole")
        }
        if !B1PreInventoryCountingBatchNumber.trackingNote.isRemoved {
            B1PreInventoryCountingBatchNumber.trackingNote = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "TrackingNote")
        }
        if !B1PreInventoryCountingBatchNumber.trackingNoteLine.isRemoved {
            B1PreInventoryCountingBatchNumber.trackingNoteLine = B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.property(withName: "TrackingNoteLine")
        }
        if !B1PreInventoryCountingLine.documentEntry.isRemoved {
            B1PreInventoryCountingLine.documentEntry = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryCountingLine.lineNumber.isRemoved {
            B1PreInventoryCountingLine.lineNumber = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "LineNumber")
        }
        if !B1PreInventoryCountingLine.itemCode.isRemoved {
            B1PreInventoryCountingLine.itemCode = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "ItemCode")
        }
        if !B1PreInventoryCountingLine.itemDescription.isRemoved {
            B1PreInventoryCountingLine.itemDescription = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "ItemDescription")
        }
        if !B1PreInventoryCountingLine.freeze.isRemoved {
            B1PreInventoryCountingLine.freeze = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "Freeze")
        }
        if !B1PreInventoryCountingLine.warehouseCode.isRemoved {
            B1PreInventoryCountingLine.warehouseCode = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "WarehouseCode")
        }
        if !B1PreInventoryCountingLine.binEntry.isRemoved {
            B1PreInventoryCountingLine.binEntry = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "BinEntry")
        }
        if !B1PreInventoryCountingLine.inWarehouseQuantity.isRemoved {
            B1PreInventoryCountingLine.inWarehouseQuantity = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "InWarehouseQuantity")
        }
        if !B1PreInventoryCountingLine.counted.isRemoved {
            B1PreInventoryCountingLine.counted = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "Counted")
        }
        if !B1PreInventoryCountingLine.uoMCode.isRemoved {
            B1PreInventoryCountingLine.uoMCode = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "UoMCode")
        }
        if !B1PreInventoryCountingLine.barCode.isRemoved {
            B1PreInventoryCountingLine.barCode = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "BarCode")
        }
        if !B1PreInventoryCountingLine.uoMCountedQuantity.isRemoved {
            B1PreInventoryCountingLine.uoMCountedQuantity = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "UoMCountedQuantity")
        }
        if !B1PreInventoryCountingLine.itemsPerUnit.isRemoved {
            B1PreInventoryCountingLine.itemsPerUnit = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "ItemsPerUnit")
        }
        if !B1PreInventoryCountingLine.countedQuantity.isRemoved {
            B1PreInventoryCountingLine.countedQuantity = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "CountedQuantity")
        }
        if !B1PreInventoryCountingLine.variance.isRemoved {
            B1PreInventoryCountingLine.variance = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "Variance")
        }
        if !B1PreInventoryCountingLine.variancePercentage.isRemoved {
            B1PreInventoryCountingLine.variancePercentage = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "VariancePercentage")
        }
        if !B1PreInventoryCountingLine.visualOrder.isRemoved {
            B1PreInventoryCountingLine.visualOrder = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "VisualOrder")
        }
        if !B1PreInventoryCountingLine.targetEntry.isRemoved {
            B1PreInventoryCountingLine.targetEntry = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "TargetEntry")
        }
        if !B1PreInventoryCountingLine.targetLine.isRemoved {
            B1PreInventoryCountingLine.targetLine = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "TargetLine")
        }
        if !B1PreInventoryCountingLine.targetType.isRemoved {
            B1PreInventoryCountingLine.targetType = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "TargetType")
        }
        if !B1PreInventoryCountingLine.targetReference.isRemoved {
            B1PreInventoryCountingLine.targetReference = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "TargetReference")
        }
        if !B1PreInventoryCountingLine.projectCode.isRemoved {
            B1PreInventoryCountingLine.projectCode = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "ProjectCode")
        }
        if !B1PreInventoryCountingLine.manufacturer.isRemoved {
            B1PreInventoryCountingLine.manufacturer = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "Manufacturer")
        }
        if !B1PreInventoryCountingLine.supplierCatalogNo.isRemoved {
            B1PreInventoryCountingLine.supplierCatalogNo = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "SupplierCatalogNo")
        }
        if !B1PreInventoryCountingLine.preferredVendor.isRemoved {
            B1PreInventoryCountingLine.preferredVendor = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "PreferredVendor")
        }
        if !B1PreInventoryCountingLine.costingCode.isRemoved {
            B1PreInventoryCountingLine.costingCode = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "CostingCode")
        }
        if !B1PreInventoryCountingLine.costingCode2.isRemoved {
            B1PreInventoryCountingLine.costingCode2 = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "CostingCode2")
        }
        if !B1PreInventoryCountingLine.costingCode3.isRemoved {
            B1PreInventoryCountingLine.costingCode3 = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "CostingCode3")
        }
        if !B1PreInventoryCountingLine.costingCode4.isRemoved {
            B1PreInventoryCountingLine.costingCode4 = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "CostingCode4")
        }
        if !B1PreInventoryCountingLine.costingCode5.isRemoved {
            B1PreInventoryCountingLine.costingCode5 = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "CostingCode5")
        }
        if !B1PreInventoryCountingLine.remarks.isRemoved {
            B1PreInventoryCountingLine.remarks = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "Remarks")
        }
        if !B1PreInventoryCountingLine.lineStatus.isRemoved {
            B1PreInventoryCountingLine.lineStatus = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "LineStatus")
        }
        if !B1PreInventoryCountingLine.counterType.isRemoved {
            B1PreInventoryCountingLine.counterType = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "CounterType")
        }
        if !B1PreInventoryCountingLine.counterID.isRemoved {
            B1PreInventoryCountingLine.counterID = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "CounterID")
        }
        if !B1PreInventoryCountingLine.multipleCounterRole.isRemoved {
            B1PreInventoryCountingLine.multipleCounterRole = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "MultipleCounterRole")
        }
        if !B1PreInventoryCountingLine.inventoryCountingLineUoMs.isRemoved {
            B1PreInventoryCountingLine.inventoryCountingLineUoMs = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "InventoryCountingLineUoMs")
        }
        if !B1PreInventoryCountingLine.inventoryCountingSerialNumbers.isRemoved {
            B1PreInventoryCountingLine.inventoryCountingSerialNumbers = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "InventoryCountingSerialNumbers")
        }
        if !B1PreInventoryCountingLine.inventoryCountingBatchNumbers.isRemoved {
            B1PreInventoryCountingLine.inventoryCountingBatchNumbers = B1ClassMetadata.ComplexTypes.inventoryCountingLine.property(withName: "InventoryCountingBatchNumbers")
        }
        if !B1PreInventoryCountingLineUoM.documentEntry.isRemoved {
            B1PreInventoryCountingLineUoM.documentEntry = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryCountingLineUoM.lineNumber.isRemoved {
            B1PreInventoryCountingLineUoM.lineNumber = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "LineNumber")
        }
        if !B1PreInventoryCountingLineUoM.childNumber.isRemoved {
            B1PreInventoryCountingLineUoM.childNumber = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "ChildNumber")
        }
        if !B1PreInventoryCountingLineUoM.uoMCountedQuantity.isRemoved {
            B1PreInventoryCountingLineUoM.uoMCountedQuantity = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "UoMCountedQuantity")
        }
        if !B1PreInventoryCountingLineUoM.itemsPerUnit.isRemoved {
            B1PreInventoryCountingLineUoM.itemsPerUnit = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "ItemsPerUnit")
        }
        if !B1PreInventoryCountingLineUoM.countedQuantity.isRemoved {
            B1PreInventoryCountingLineUoM.countedQuantity = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "CountedQuantity")
        }
        if !B1PreInventoryCountingLineUoM.uoMCode.isRemoved {
            B1PreInventoryCountingLineUoM.uoMCode = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "UoMCode")
        }
        if !B1PreInventoryCountingLineUoM.barCode.isRemoved {
            B1PreInventoryCountingLineUoM.barCode = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "BarCode")
        }
        if !B1PreInventoryCountingLineUoM.counterType.isRemoved {
            B1PreInventoryCountingLineUoM.counterType = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "CounterType")
        }
        if !B1PreInventoryCountingLineUoM.counterID.isRemoved {
            B1PreInventoryCountingLineUoM.counterID = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "CounterID")
        }
        if !B1PreInventoryCountingLineUoM.multipleCounterRole.isRemoved {
            B1PreInventoryCountingLineUoM.multipleCounterRole = B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.property(withName: "MultipleCounterRole")
        }
        if !B1PreInventoryCountingParams.documentEntry.isRemoved {
            B1PreInventoryCountingParams.documentEntry = B1ClassMetadata.ComplexTypes.inventoryCountingParams.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryCountingParams.documentNumber.isRemoved {
            B1PreInventoryCountingParams.documentNumber = B1ClassMetadata.ComplexTypes.inventoryCountingParams.property(withName: "DocumentNumber")
        }
        if !B1PreInventoryCountingSerialNumber.manufacturerSerialNumber.isRemoved {
            B1PreInventoryCountingSerialNumber.manufacturerSerialNumber = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "ManufacturerSerialNumber")
        }
        if !B1PreInventoryCountingSerialNumber.internalSerialNumber.isRemoved {
            B1PreInventoryCountingSerialNumber.internalSerialNumber = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "InternalSerialNumber")
        }
        if !B1PreInventoryCountingSerialNumber.expiryDate.isRemoved {
            B1PreInventoryCountingSerialNumber.expiryDate = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "ExpiryDate")
        }
        if !B1PreInventoryCountingSerialNumber.manufactureDate.isRemoved {
            B1PreInventoryCountingSerialNumber.manufactureDate = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "ManufactureDate")
        }
        if !B1PreInventoryCountingSerialNumber.receptionDate.isRemoved {
            B1PreInventoryCountingSerialNumber.receptionDate = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "ReceptionDate")
        }
        if !B1PreInventoryCountingSerialNumber.warrantyStart.isRemoved {
            B1PreInventoryCountingSerialNumber.warrantyStart = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "WarrantyStart")
        }
        if !B1PreInventoryCountingSerialNumber.warrantyEnd.isRemoved {
            B1PreInventoryCountingSerialNumber.warrantyEnd = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "WarrantyEnd")
        }
        if !B1PreInventoryCountingSerialNumber.location.isRemoved {
            B1PreInventoryCountingSerialNumber.location = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "Location")
        }
        if !B1PreInventoryCountingSerialNumber.notes.isRemoved {
            B1PreInventoryCountingSerialNumber.notes = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "Notes")
        }
        if !B1PreInventoryCountingSerialNumber.batchID.isRemoved {
            B1PreInventoryCountingSerialNumber.batchID = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "BatchID")
        }
        if !B1PreInventoryCountingSerialNumber.systemSerialNumber.isRemoved {
            B1PreInventoryCountingSerialNumber.systemSerialNumber = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "SystemSerialNumber")
        }
        if !B1PreInventoryCountingSerialNumber.baseLineNumber.isRemoved {
            B1PreInventoryCountingSerialNumber.baseLineNumber = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "BaseLineNumber")
        }
        if !B1PreInventoryCountingSerialNumber.quantity.isRemoved {
            B1PreInventoryCountingSerialNumber.quantity = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "Quantity")
        }
        if !B1PreInventoryCountingSerialNumber.documentEntry.isRemoved {
            B1PreInventoryCountingSerialNumber.documentEntry = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryCountingSerialNumber.counterType.isRemoved {
            B1PreInventoryCountingSerialNumber.counterType = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "CounterType")
        }
        if !B1PreInventoryCountingSerialNumber.counterID.isRemoved {
            B1PreInventoryCountingSerialNumber.counterID = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "CounterID")
        }
        if !B1PreInventoryCountingSerialNumber.multipleCounterRole.isRemoved {
            B1PreInventoryCountingSerialNumber.multipleCounterRole = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "MultipleCounterRole")
        }
        if !B1PreInventoryCountingSerialNumber.trackingNote.isRemoved {
            B1PreInventoryCountingSerialNumber.trackingNote = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "TrackingNote")
        }
        if !B1PreInventoryCountingSerialNumber.trackingNoteLine.isRemoved {
            B1PreInventoryCountingSerialNumber.trackingNoteLine = B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.property(withName: "TrackingNoteLine")
        }
        if !B1PreInventoryCyclesParams.cycleCode.isRemoved {
            B1PreInventoryCyclesParams.cycleCode = B1ClassMetadata.ComplexTypes.inventoryCyclesParams.property(withName: "CycleCode")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.documentEntry.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.documentEntry = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.batchNumber.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.batchNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "BatchNumber")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.manufacturerSerialNumber.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.manufacturerSerialNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "ManufacturerSerialNumber")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.internalSerialNumber.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.internalSerialNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "InternalSerialNumber")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.expiryDate.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.expiryDate = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "ExpiryDate")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.manufactureDate.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.manufactureDate = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "ManufactureDate")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.addmisionDate.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.addmisionDate = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "AddmisionDate")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.location.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.location = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "Location")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.notes.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.notes = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "Notes")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.quantity.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.quantity = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "Quantity")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.baseLineNumber.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.baseLineNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "BaseLineNumber")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.trackingNote.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.trackingNote = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "TrackingNote")
        }
        if !B1PreInventoryOpeningBalanceBatchNumber.trackingNoteLine.isRemoved {
            B1PreInventoryOpeningBalanceBatchNumber.trackingNoteLine = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.property(withName: "TrackingNoteLine")
        }
        if !B1PreInventoryOpeningBalanceLine.documentEntry.isRemoved {
            B1PreInventoryOpeningBalanceLine.documentEntry = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryOpeningBalanceLine.lineNumber.isRemoved {
            B1PreInventoryOpeningBalanceLine.lineNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "LineNumber")
        }
        if !B1PreInventoryOpeningBalanceLine.itemCode.isRemoved {
            B1PreInventoryOpeningBalanceLine.itemCode = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "ItemCode")
        }
        if !B1PreInventoryOpeningBalanceLine.itemDescription.isRemoved {
            B1PreInventoryOpeningBalanceLine.itemDescription = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "ItemDescription")
        }
        if !B1PreInventoryOpeningBalanceLine.warehouseCode.isRemoved {
            B1PreInventoryOpeningBalanceLine.warehouseCode = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "WarehouseCode")
        }
        if !B1PreInventoryOpeningBalanceLine.binEntry.isRemoved {
            B1PreInventoryOpeningBalanceLine.binEntry = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "BinEntry")
        }
        if !B1PreInventoryOpeningBalanceLine.inWarehouseQuantity.isRemoved {
            B1PreInventoryOpeningBalanceLine.inWarehouseQuantity = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "InWarehouseQuantity")
        }
        if !B1PreInventoryOpeningBalanceLine.openingBalance.isRemoved {
            B1PreInventoryOpeningBalanceLine.openingBalance = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "OpeningBalance")
        }
        if !B1PreInventoryOpeningBalanceLine.remarks.isRemoved {
            B1PreInventoryOpeningBalanceLine.remarks = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "Remarks")
        }
        if !B1PreInventoryOpeningBalanceLine.barCode.isRemoved {
            B1PreInventoryOpeningBalanceLine.barCode = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "BarCode")
        }
        if !B1PreInventoryOpeningBalanceLine.visualOrder.isRemoved {
            B1PreInventoryOpeningBalanceLine.visualOrder = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "VisualOrder")
        }
        if !B1PreInventoryOpeningBalanceLine.price.isRemoved {
            B1PreInventoryOpeningBalanceLine.price = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "Price")
        }
        if !B1PreInventoryOpeningBalanceLine.total.isRemoved {
            B1PreInventoryOpeningBalanceLine.total = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "Total")
        }
        if !B1PreInventoryOpeningBalanceLine.openInventoryAccount.isRemoved {
            B1PreInventoryOpeningBalanceLine.openInventoryAccount = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "OpenInventoryAccount")
        }
        if !B1PreInventoryOpeningBalanceLine.projectCode.isRemoved {
            B1PreInventoryOpeningBalanceLine.projectCode = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "ProjectCode")
        }
        if !B1PreInventoryOpeningBalanceLine.manufacturer.isRemoved {
            B1PreInventoryOpeningBalanceLine.manufacturer = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "Manufacturer")
        }
        if !B1PreInventoryOpeningBalanceLine.supplierCatalogNo.isRemoved {
            B1PreInventoryOpeningBalanceLine.supplierCatalogNo = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "SupplierCatalogNo")
        }
        if !B1PreInventoryOpeningBalanceLine.costingCode.isRemoved {
            B1PreInventoryOpeningBalanceLine.costingCode = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "CostingCode")
        }
        if !B1PreInventoryOpeningBalanceLine.costingCode2.isRemoved {
            B1PreInventoryOpeningBalanceLine.costingCode2 = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "CostingCode2")
        }
        if !B1PreInventoryOpeningBalanceLine.costingCode3.isRemoved {
            B1PreInventoryOpeningBalanceLine.costingCode3 = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "CostingCode3")
        }
        if !B1PreInventoryOpeningBalanceLine.costingCode4.isRemoved {
            B1PreInventoryOpeningBalanceLine.costingCode4 = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "CostingCode4")
        }
        if !B1PreInventoryOpeningBalanceLine.costingCode5.isRemoved {
            B1PreInventoryOpeningBalanceLine.costingCode5 = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "CostingCode5")
        }
        if !B1PreInventoryOpeningBalanceLine.preferredVendor.isRemoved {
            B1PreInventoryOpeningBalanceLine.preferredVendor = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "PreferredVendor")
        }
        if !B1PreInventoryOpeningBalanceLine.currency.isRemoved {
            B1PreInventoryOpeningBalanceLine.currency = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "Currency")
        }
        if !B1PreInventoryOpeningBalanceLine.allowBinNegativeQuantity.isRemoved {
            B1PreInventoryOpeningBalanceLine.allowBinNegativeQuantity = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "AllowBinNegativeQuantity")
        }
        if !B1PreInventoryOpeningBalanceLine.actualPrice.isRemoved {
            B1PreInventoryOpeningBalanceLine.actualPrice = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "ActualPrice")
        }
        if !B1PreInventoryOpeningBalanceLine.postedValueLC.isRemoved {
            B1PreInventoryOpeningBalanceLine.postedValueLC = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "PostedValueLC")
        }
        if !B1PreInventoryOpeningBalanceLine.postedValueSC.isRemoved {
            B1PreInventoryOpeningBalanceLine.postedValueSC = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "PostedValueSC")
        }
        if !B1PreInventoryOpeningBalanceLine.inventoryOpeningBalanceSerialNumbers.isRemoved {
            B1PreInventoryOpeningBalanceLine.inventoryOpeningBalanceSerialNumbers = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "InventoryOpeningBalanceSerialNumbers")
        }
        if !B1PreInventoryOpeningBalanceLine.inventoryOpeningBalanceBatchNumbers.isRemoved {
            B1PreInventoryOpeningBalanceLine.inventoryOpeningBalanceBatchNumbers = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.property(withName: "InventoryOpeningBalanceBatchNumbers")
        }
        if !B1PreInventoryOpeningBalanceParams.documentEntry.isRemoved {
            B1PreInventoryOpeningBalanceParams.documentEntry = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceParams.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryOpeningBalanceParams.documentNumber.isRemoved {
            B1PreInventoryOpeningBalanceParams.documentNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceParams.property(withName: "DocumentNumber")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.documentEntry.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.documentEntry = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.manufacturerSerialNumber.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.manufacturerSerialNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "ManufacturerSerialNumber")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.internalSerialNumber.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.internalSerialNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "InternalSerialNumber")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.expiryDate.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.expiryDate = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "ExpiryDate")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.manufactureDate.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.manufactureDate = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "ManufactureDate")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.receptionDate.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.receptionDate = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "ReceptionDate")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.warrantyStart.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.warrantyStart = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "WarrantyStart")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.warrantyEnd.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.warrantyEnd = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "WarrantyEnd")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.location.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.location = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "Location")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.notes.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.notes = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "Notes")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.batchID.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.batchID = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "BatchID")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.systemSerialNumber.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.systemSerialNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "SystemSerialNumber")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.baseLineNumber.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.baseLineNumber = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "BaseLineNumber")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.quantity.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.quantity = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "Quantity")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.trackingNote.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.trackingNote = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "TrackingNote")
        }
        if !B1PreInventoryOpeningBalanceSerialNumber.trackingNoteLine.isRemoved {
            B1PreInventoryOpeningBalanceSerialNumber.trackingNoteLine = B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.property(withName: "TrackingNoteLine")
        }
        if !B1PreInventoryPostingBatchNumber.documentEntry.isRemoved {
            B1PreInventoryPostingBatchNumber.documentEntry = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryPostingBatchNumber.batchNumber.isRemoved {
            B1PreInventoryPostingBatchNumber.batchNumber = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "BatchNumber")
        }
        if !B1PreInventoryPostingBatchNumber.manufacturerSerialNumber.isRemoved {
            B1PreInventoryPostingBatchNumber.manufacturerSerialNumber = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "ManufacturerSerialNumber")
        }
        if !B1PreInventoryPostingBatchNumber.internalSerialNumber.isRemoved {
            B1PreInventoryPostingBatchNumber.internalSerialNumber = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "InternalSerialNumber")
        }
        if !B1PreInventoryPostingBatchNumber.expiryDate.isRemoved {
            B1PreInventoryPostingBatchNumber.expiryDate = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "ExpiryDate")
        }
        if !B1PreInventoryPostingBatchNumber.manufactureDate.isRemoved {
            B1PreInventoryPostingBatchNumber.manufactureDate = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "ManufactureDate")
        }
        if !B1PreInventoryPostingBatchNumber.addmisionDate.isRemoved {
            B1PreInventoryPostingBatchNumber.addmisionDate = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "AddmisionDate")
        }
        if !B1PreInventoryPostingBatchNumber.location.isRemoved {
            B1PreInventoryPostingBatchNumber.location = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "Location")
        }
        if !B1PreInventoryPostingBatchNumber.notes.isRemoved {
            B1PreInventoryPostingBatchNumber.notes = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "Notes")
        }
        if !B1PreInventoryPostingBatchNumber.quantity.isRemoved {
            B1PreInventoryPostingBatchNumber.quantity = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "Quantity")
        }
        if !B1PreInventoryPostingBatchNumber.baseLineNumber.isRemoved {
            B1PreInventoryPostingBatchNumber.baseLineNumber = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "BaseLineNumber")
        }
        if !B1PreInventoryPostingBatchNumber.trackingNote.isRemoved {
            B1PreInventoryPostingBatchNumber.trackingNote = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "TrackingNote")
        }
        if !B1PreInventoryPostingBatchNumber.trackingNoteLine.isRemoved {
            B1PreInventoryPostingBatchNumber.trackingNoteLine = B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.property(withName: "TrackingNoteLine")
        }
        if !B1PreInventoryPostingCopyOption.baseEntry.isRemoved {
            B1PreInventoryPostingCopyOption.baseEntry = B1ClassMetadata.ComplexTypes.inventoryPostingCopyOption.property(withName: "BaseEntry")
        }
        if !B1PreInventoryPostingCopyOption.copyOption.isRemoved {
            B1PreInventoryPostingCopyOption.copyOption = B1ClassMetadata.ComplexTypes.inventoryPostingCopyOption.property(withName: "CopyOption")
        }
        if !B1PreInventoryPostingLine.documentEntry.isRemoved {
            B1PreInventoryPostingLine.documentEntry = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryPostingLine.lineNumber.isRemoved {
            B1PreInventoryPostingLine.lineNumber = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "LineNumber")
        }
        if !B1PreInventoryPostingLine.itemCode.isRemoved {
            B1PreInventoryPostingLine.itemCode = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "ItemCode")
        }
        if !B1PreInventoryPostingLine.itemDescription.isRemoved {
            B1PreInventoryPostingLine.itemDescription = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "ItemDescription")
        }
        if !B1PreInventoryPostingLine.warehouseCode.isRemoved {
            B1PreInventoryPostingLine.warehouseCode = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "WarehouseCode")
        }
        if !B1PreInventoryPostingLine.binEntry.isRemoved {
            B1PreInventoryPostingLine.binEntry = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "BinEntry")
        }
        if !B1PreInventoryPostingLine.inWarehouseQuantity.isRemoved {
            B1PreInventoryPostingLine.inWarehouseQuantity = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "InWarehouseQuantity")
        }
        if !B1PreInventoryPostingLine.barCode.isRemoved {
            B1PreInventoryPostingLine.barCode = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "BarCode")
        }
        if !B1PreInventoryPostingLine.variance.isRemoved {
            B1PreInventoryPostingLine.variance = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "Variance")
        }
        if !B1PreInventoryPostingLine.variancePercentage.isRemoved {
            B1PreInventoryPostingLine.variancePercentage = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "VariancePercentage")
        }
        if !B1PreInventoryPostingLine.countedQuantity.isRemoved {
            B1PreInventoryPostingLine.countedQuantity = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "CountedQuantity")
        }
        if !B1PreInventoryPostingLine.price.isRemoved {
            B1PreInventoryPostingLine.price = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "Price")
        }
        if !B1PreInventoryPostingLine.currency.isRemoved {
            B1PreInventoryPostingLine.currency = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "Currency")
        }
        if !B1PreInventoryPostingLine.total.isRemoved {
            B1PreInventoryPostingLine.total = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "Total")
        }
        if !B1PreInventoryPostingLine.visualOrder.isRemoved {
            B1PreInventoryPostingLine.visualOrder = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "VisualOrder")
        }
        if !B1PreInventoryPostingLine.countDate.isRemoved {
            B1PreInventoryPostingLine.countDate = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "CountDate")
        }
        if !B1PreInventoryPostingLine.countTime.isRemoved {
            B1PreInventoryPostingLine.countTime = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "CountTime")
        }
        if !B1PreInventoryPostingLine.baseEntry.isRemoved {
            B1PreInventoryPostingLine.baseEntry = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "BaseEntry")
        }
        if !B1PreInventoryPostingLine.baseLine.isRemoved {
            B1PreInventoryPostingLine.baseLine = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "BaseLine")
        }
        if !B1PreInventoryPostingLine.baseType.isRemoved {
            B1PreInventoryPostingLine.baseType = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "BaseType")
        }
        if !B1PreInventoryPostingLine.baseReference.isRemoved {
            B1PreInventoryPostingLine.baseReference = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "BaseReference")
        }
        if !B1PreInventoryPostingLine.remarks.isRemoved {
            B1PreInventoryPostingLine.remarks = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "Remarks")
        }
        if !B1PreInventoryPostingLine.inventoryOffsetIncreaseAccount.isRemoved {
            B1PreInventoryPostingLine.inventoryOffsetIncreaseAccount = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "InventoryOffsetIncreaseAccount")
        }
        if !B1PreInventoryPostingLine.inventoryOffsetDecreaseAccount.isRemoved {
            B1PreInventoryPostingLine.inventoryOffsetDecreaseAccount = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "InventoryOffsetDecreaseAccount")
        }
        if !B1PreInventoryPostingLine.projectCode.isRemoved {
            B1PreInventoryPostingLine.projectCode = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "ProjectCode")
        }
        if !B1PreInventoryPostingLine.manufacturer.isRemoved {
            B1PreInventoryPostingLine.manufacturer = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "Manufacturer")
        }
        if !B1PreInventoryPostingLine.supplierCatalogNo.isRemoved {
            B1PreInventoryPostingLine.supplierCatalogNo = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "SupplierCatalogNo")
        }
        if !B1PreInventoryPostingLine.preferredVendor.isRemoved {
            B1PreInventoryPostingLine.preferredVendor = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "PreferredVendor")
        }
        if !B1PreInventoryPostingLine.costingCode.isRemoved {
            B1PreInventoryPostingLine.costingCode = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "CostingCode")
        }
        if !B1PreInventoryPostingLine.costingCode2.isRemoved {
            B1PreInventoryPostingLine.costingCode2 = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "CostingCode2")
        }
        if !B1PreInventoryPostingLine.costingCode3.isRemoved {
            B1PreInventoryPostingLine.costingCode3 = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "CostingCode3")
        }
        if !B1PreInventoryPostingLine.costingCode4.isRemoved {
            B1PreInventoryPostingLine.costingCode4 = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "CostingCode4")
        }
        if !B1PreInventoryPostingLine.costingCode5.isRemoved {
            B1PreInventoryPostingLine.costingCode5 = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "CostingCode5")
        }
        if !B1PreInventoryPostingLine.uoMCode.isRemoved {
            B1PreInventoryPostingLine.uoMCode = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "UoMCode")
        }
        if !B1PreInventoryPostingLine.uoMCountedQuantity.isRemoved {
            B1PreInventoryPostingLine.uoMCountedQuantity = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "UoMCountedQuantity")
        }
        if !B1PreInventoryPostingLine.itemsPerUnit.isRemoved {
            B1PreInventoryPostingLine.itemsPerUnit = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "ItemsPerUnit")
        }
        if !B1PreInventoryPostingLine.allowBinNegativeQuantity.isRemoved {
            B1PreInventoryPostingLine.allowBinNegativeQuantity = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "AllowBinNegativeQuantity")
        }
        if !B1PreInventoryPostingLine.actualPrice.isRemoved {
            B1PreInventoryPostingLine.actualPrice = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "ActualPrice")
        }
        if !B1PreInventoryPostingLine.postedValueLC.isRemoved {
            B1PreInventoryPostingLine.postedValueLC = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "PostedValueLC")
        }
        if !B1PreInventoryPostingLine.postedValueSC.isRemoved {
            B1PreInventoryPostingLine.postedValueSC = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "PostedValueSC")
        }
        if !B1PreInventoryPostingLine.inventoryPostingLineUoMs.isRemoved {
            B1PreInventoryPostingLine.inventoryPostingLineUoMs = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "InventoryPostingLineUoMs")
        }
        if !B1PreInventoryPostingLine.inventoryPostingSerialNumbers.isRemoved {
            B1PreInventoryPostingLine.inventoryPostingSerialNumbers = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "InventoryPostingSerialNumbers")
        }
        if !B1PreInventoryPostingLine.inventoryPostingBatchNumbers.isRemoved {
            B1PreInventoryPostingLine.inventoryPostingBatchNumbers = B1ClassMetadata.ComplexTypes.inventoryPostingLine.property(withName: "InventoryPostingBatchNumbers")
        }
        if !B1PreInventoryPostingLineUoM.documentEntry.isRemoved {
            B1PreInventoryPostingLineUoM.documentEntry = B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryPostingLineUoM.lineNumber.isRemoved {
            B1PreInventoryPostingLineUoM.lineNumber = B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.property(withName: "LineNumber")
        }
        if !B1PreInventoryPostingLineUoM.childNumber.isRemoved {
            B1PreInventoryPostingLineUoM.childNumber = B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.property(withName: "ChildNumber")
        }
        if !B1PreInventoryPostingLineUoM.uoMCountedQuantity.isRemoved {
            B1PreInventoryPostingLineUoM.uoMCountedQuantity = B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.property(withName: "UoMCountedQuantity")
        }
        if !B1PreInventoryPostingLineUoM.itemsPerUnit.isRemoved {
            B1PreInventoryPostingLineUoM.itemsPerUnit = B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.property(withName: "ItemsPerUnit")
        }
        if !B1PreInventoryPostingLineUoM.countedQuantity.isRemoved {
            B1PreInventoryPostingLineUoM.countedQuantity = B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.property(withName: "CountedQuantity")
        }
        if !B1PreInventoryPostingLineUoM.uoMCode.isRemoved {
            B1PreInventoryPostingLineUoM.uoMCode = B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.property(withName: "UoMCode")
        }
        if !B1PreInventoryPostingLineUoM.barCode.isRemoved {
            B1PreInventoryPostingLineUoM.barCode = B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.property(withName: "BarCode")
        }
        if !B1PreInventoryPostingParams.documentEntry.isRemoved {
            B1PreInventoryPostingParams.documentEntry = B1ClassMetadata.ComplexTypes.inventoryPostingParams.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryPostingParams.documentNumber.isRemoved {
            B1PreInventoryPostingParams.documentNumber = B1ClassMetadata.ComplexTypes.inventoryPostingParams.property(withName: "DocumentNumber")
        }
        if !B1PreInventoryPostingSerialNumber.documentEntry.isRemoved {
            B1PreInventoryPostingSerialNumber.documentEntry = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "DocumentEntry")
        }
        if !B1PreInventoryPostingSerialNumber.manufacturerSerialNumber.isRemoved {
            B1PreInventoryPostingSerialNumber.manufacturerSerialNumber = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "ManufacturerSerialNumber")
        }
        if !B1PreInventoryPostingSerialNumber.internalSerialNumber.isRemoved {
            B1PreInventoryPostingSerialNumber.internalSerialNumber = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "InternalSerialNumber")
        }
        if !B1PreInventoryPostingSerialNumber.expiryDate.isRemoved {
            B1PreInventoryPostingSerialNumber.expiryDate = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "ExpiryDate")
        }
        if !B1PreInventoryPostingSerialNumber.manufactureDate.isRemoved {
            B1PreInventoryPostingSerialNumber.manufactureDate = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "ManufactureDate")
        }
        if !B1PreInventoryPostingSerialNumber.receptionDate.isRemoved {
            B1PreInventoryPostingSerialNumber.receptionDate = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "ReceptionDate")
        }
        if !B1PreInventoryPostingSerialNumber.warrantyStart.isRemoved {
            B1PreInventoryPostingSerialNumber.warrantyStart = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "WarrantyStart")
        }
        if !B1PreInventoryPostingSerialNumber.warrantyEnd.isRemoved {
            B1PreInventoryPostingSerialNumber.warrantyEnd = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "WarrantyEnd")
        }
        if !B1PreInventoryPostingSerialNumber.location.isRemoved {
            B1PreInventoryPostingSerialNumber.location = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "Location")
        }
        if !B1PreInventoryPostingSerialNumber.notes.isRemoved {
            B1PreInventoryPostingSerialNumber.notes = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "Notes")
        }
        if !B1PreInventoryPostingSerialNumber.batchID.isRemoved {
            B1PreInventoryPostingSerialNumber.batchID = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "BatchID")
        }
        if !B1PreInventoryPostingSerialNumber.systemSerialNumber.isRemoved {
            B1PreInventoryPostingSerialNumber.systemSerialNumber = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "SystemSerialNumber")
        }
        if !B1PreInventoryPostingSerialNumber.baseLineNumber.isRemoved {
            B1PreInventoryPostingSerialNumber.baseLineNumber = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "BaseLineNumber")
        }
        if !B1PreInventoryPostingSerialNumber.quantity.isRemoved {
            B1PreInventoryPostingSerialNumber.quantity = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "Quantity")
        }
        if !B1PreInventoryPostingSerialNumber.trackingNote.isRemoved {
            B1PreInventoryPostingSerialNumber.trackingNote = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "TrackingNote")
        }
        if !B1PreInventoryPostingSerialNumber.trackingNoteLine.isRemoved {
            B1PreInventoryPostingSerialNumber.trackingNoteLine = B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.property(withName: "TrackingNoteLine")
        }
        if !B1PreItemAttributeGroups.attribute1.isRemoved {
            B1PreItemAttributeGroups.attribute1 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute1")
        }
        if !B1PreItemAttributeGroups.attribute2.isRemoved {
            B1PreItemAttributeGroups.attribute2 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute2")
        }
        if !B1PreItemAttributeGroups.attribute3.isRemoved {
            B1PreItemAttributeGroups.attribute3 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute3")
        }
        if !B1PreItemAttributeGroups.attribute4.isRemoved {
            B1PreItemAttributeGroups.attribute4 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute4")
        }
        if !B1PreItemAttributeGroups.attribute5.isRemoved {
            B1PreItemAttributeGroups.attribute5 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute5")
        }
        if !B1PreItemAttributeGroups.attribute6.isRemoved {
            B1PreItemAttributeGroups.attribute6 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute6")
        }
        if !B1PreItemAttributeGroups.attribute7.isRemoved {
            B1PreItemAttributeGroups.attribute7 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute7")
        }
        if !B1PreItemAttributeGroups.attribute8.isRemoved {
            B1PreItemAttributeGroups.attribute8 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute8")
        }
        if !B1PreItemAttributeGroups.attribute9.isRemoved {
            B1PreItemAttributeGroups.attribute9 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute9")
        }
        if !B1PreItemAttributeGroups.attribute10.isRemoved {
            B1PreItemAttributeGroups.attribute10 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute10")
        }
        if !B1PreItemAttributeGroups.attribute11.isRemoved {
            B1PreItemAttributeGroups.attribute11 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute11")
        }
        if !B1PreItemAttributeGroups.attribute12.isRemoved {
            B1PreItemAttributeGroups.attribute12 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute12")
        }
        if !B1PreItemAttributeGroups.attribute13.isRemoved {
            B1PreItemAttributeGroups.attribute13 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute13")
        }
        if !B1PreItemAttributeGroups.attribute14.isRemoved {
            B1PreItemAttributeGroups.attribute14 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute14")
        }
        if !B1PreItemAttributeGroups.attribute15.isRemoved {
            B1PreItemAttributeGroups.attribute15 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute15")
        }
        if !B1PreItemAttributeGroups.attribute16.isRemoved {
            B1PreItemAttributeGroups.attribute16 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute16")
        }
        if !B1PreItemAttributeGroups.attribute17.isRemoved {
            B1PreItemAttributeGroups.attribute17 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute17")
        }
        if !B1PreItemAttributeGroups.attribute18.isRemoved {
            B1PreItemAttributeGroups.attribute18 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute18")
        }
        if !B1PreItemAttributeGroups.attribute19.isRemoved {
            B1PreItemAttributeGroups.attribute19 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute19")
        }
        if !B1PreItemAttributeGroups.attribute20.isRemoved {
            B1PreItemAttributeGroups.attribute20 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute20")
        }
        if !B1PreItemAttributeGroups.attribute21.isRemoved {
            B1PreItemAttributeGroups.attribute21 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute21")
        }
        if !B1PreItemAttributeGroups.attribute22.isRemoved {
            B1PreItemAttributeGroups.attribute22 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute22")
        }
        if !B1PreItemAttributeGroups.attribute23.isRemoved {
            B1PreItemAttributeGroups.attribute23 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute23")
        }
        if !B1PreItemAttributeGroups.attribute24.isRemoved {
            B1PreItemAttributeGroups.attribute24 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute24")
        }
        if !B1PreItemAttributeGroups.attribute25.isRemoved {
            B1PreItemAttributeGroups.attribute25 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute25")
        }
        if !B1PreItemAttributeGroups.attribute26.isRemoved {
            B1PreItemAttributeGroups.attribute26 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute26")
        }
        if !B1PreItemAttributeGroups.attribute27.isRemoved {
            B1PreItemAttributeGroups.attribute27 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute27")
        }
        if !B1PreItemAttributeGroups.attribute28.isRemoved {
            B1PreItemAttributeGroups.attribute28 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute28")
        }
        if !B1PreItemAttributeGroups.attribute29.isRemoved {
            B1PreItemAttributeGroups.attribute29 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute29")
        }
        if !B1PreItemAttributeGroups.attribute30.isRemoved {
            B1PreItemAttributeGroups.attribute30 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute30")
        }
        if !B1PreItemAttributeGroups.attribute31.isRemoved {
            B1PreItemAttributeGroups.attribute31 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute31")
        }
        if !B1PreItemAttributeGroups.attribute32.isRemoved {
            B1PreItemAttributeGroups.attribute32 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute32")
        }
        if !B1PreItemAttributeGroups.attribute33.isRemoved {
            B1PreItemAttributeGroups.attribute33 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute33")
        }
        if !B1PreItemAttributeGroups.attribute34.isRemoved {
            B1PreItemAttributeGroups.attribute34 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute34")
        }
        if !B1PreItemAttributeGroups.attribute35.isRemoved {
            B1PreItemAttributeGroups.attribute35 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute35")
        }
        if !B1PreItemAttributeGroups.attribute36.isRemoved {
            B1PreItemAttributeGroups.attribute36 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute36")
        }
        if !B1PreItemAttributeGroups.attribute37.isRemoved {
            B1PreItemAttributeGroups.attribute37 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute37")
        }
        if !B1PreItemAttributeGroups.attribute38.isRemoved {
            B1PreItemAttributeGroups.attribute38 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute38")
        }
        if !B1PreItemAttributeGroups.attribute39.isRemoved {
            B1PreItemAttributeGroups.attribute39 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute39")
        }
        if !B1PreItemAttributeGroups.attribute40.isRemoved {
            B1PreItemAttributeGroups.attribute40 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute40")
        }
        if !B1PreItemAttributeGroups.attribute41.isRemoved {
            B1PreItemAttributeGroups.attribute41 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute41")
        }
        if !B1PreItemAttributeGroups.attribute42.isRemoved {
            B1PreItemAttributeGroups.attribute42 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute42")
        }
        if !B1PreItemAttributeGroups.attribute43.isRemoved {
            B1PreItemAttributeGroups.attribute43 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute43")
        }
        if !B1PreItemAttributeGroups.attribute44.isRemoved {
            B1PreItemAttributeGroups.attribute44 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute44")
        }
        if !B1PreItemAttributeGroups.attribute45.isRemoved {
            B1PreItemAttributeGroups.attribute45 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute45")
        }
        if !B1PreItemAttributeGroups.attribute46.isRemoved {
            B1PreItemAttributeGroups.attribute46 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute46")
        }
        if !B1PreItemAttributeGroups.attribute47.isRemoved {
            B1PreItemAttributeGroups.attribute47 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute47")
        }
        if !B1PreItemAttributeGroups.attribute48.isRemoved {
            B1PreItemAttributeGroups.attribute48 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute48")
        }
        if !B1PreItemAttributeGroups.attribute49.isRemoved {
            B1PreItemAttributeGroups.attribute49 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute49")
        }
        if !B1PreItemAttributeGroups.attribute50.isRemoved {
            B1PreItemAttributeGroups.attribute50 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute50")
        }
        if !B1PreItemAttributeGroups.attribute51.isRemoved {
            B1PreItemAttributeGroups.attribute51 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute51")
        }
        if !B1PreItemAttributeGroups.attribute52.isRemoved {
            B1PreItemAttributeGroups.attribute52 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute52")
        }
        if !B1PreItemAttributeGroups.attribute53.isRemoved {
            B1PreItemAttributeGroups.attribute53 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute53")
        }
        if !B1PreItemAttributeGroups.attribute54.isRemoved {
            B1PreItemAttributeGroups.attribute54 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute54")
        }
        if !B1PreItemAttributeGroups.attribute55.isRemoved {
            B1PreItemAttributeGroups.attribute55 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute55")
        }
        if !B1PreItemAttributeGroups.attribute56.isRemoved {
            B1PreItemAttributeGroups.attribute56 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute56")
        }
        if !B1PreItemAttributeGroups.attribute57.isRemoved {
            B1PreItemAttributeGroups.attribute57 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute57")
        }
        if !B1PreItemAttributeGroups.attribute58.isRemoved {
            B1PreItemAttributeGroups.attribute58 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute58")
        }
        if !B1PreItemAttributeGroups.attribute59.isRemoved {
            B1PreItemAttributeGroups.attribute59 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute59")
        }
        if !B1PreItemAttributeGroups.attribute60.isRemoved {
            B1PreItemAttributeGroups.attribute60 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute60")
        }
        if !B1PreItemAttributeGroups.attribute61.isRemoved {
            B1PreItemAttributeGroups.attribute61 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute61")
        }
        if !B1PreItemAttributeGroups.attribute62.isRemoved {
            B1PreItemAttributeGroups.attribute62 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute62")
        }
        if !B1PreItemAttributeGroups.attribute63.isRemoved {
            B1PreItemAttributeGroups.attribute63 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute63")
        }
        if !B1PreItemAttributeGroups.attribute64.isRemoved {
            B1PreItemAttributeGroups.attribute64 = B1ClassMetadata.ComplexTypes.itemAttributeGroups.property(withName: "Attribute64")
        }
        if !B1PreItemBarCode.absEntry.isRemoved {
            B1PreItemBarCode.absEntry = B1ClassMetadata.ComplexTypes.itemBarCode.property(withName: "AbsEntry")
        }
        if !B1PreItemBarCode.uoMEntry.isRemoved {
            B1PreItemBarCode.uoMEntry = B1ClassMetadata.ComplexTypes.itemBarCode.property(withName: "UoMEntry")
        }
        if !B1PreItemBarCode.barcode.isRemoved {
            B1PreItemBarCode.barcode = B1ClassMetadata.ComplexTypes.itemBarCode.property(withName: "Barcode")
        }
        if !B1PreItemBarCode.freeText.isRemoved {
            B1PreItemBarCode.freeText = B1ClassMetadata.ComplexTypes.itemBarCode.property(withName: "FreeText")
        }
        if !B1PreItemCycleCount.cycleCode.isRemoved {
            B1PreItemCycleCount.cycleCode = B1ClassMetadata.ComplexTypes.itemCycleCount.property(withName: "CycleCode")
        }
        if !B1PreItemCycleCount.alert.isRemoved {
            B1PreItemCycleCount.alert = B1ClassMetadata.ComplexTypes.itemCycleCount.property(withName: "Alert")
        }
        if !B1PreItemCycleCount.nextCountingDate.isRemoved {
            B1PreItemCycleCount.nextCountingDate = B1ClassMetadata.ComplexTypes.itemCycleCount.property(withName: "NextCountingDate")
        }
        if !B1PreItemCycleCount.alertTime.isRemoved {
            B1PreItemCycleCount.alertTime = B1ClassMetadata.ComplexTypes.itemCycleCount.property(withName: "AlertTime")
        }
        if !B1PreItemCycleCount.destinationUser.isRemoved {
            B1PreItemCycleCount.destinationUser = B1ClassMetadata.ComplexTypes.itemCycleCount.property(withName: "DestinationUser")
        }
        if !B1PreItemCycleCount.warehouseCode.isRemoved {
            B1PreItemCycleCount.warehouseCode = B1ClassMetadata.ComplexTypes.itemCycleCount.property(withName: "WarehouseCode")
        }
        if !B1PreItemDepreciationParameter.fiscalYear.isRemoved {
            B1PreItemDepreciationParameter.fiscalYear = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "FiscalYear")
        }
        if !B1PreItemDepreciationParameter.depreciationArea.isRemoved {
            B1PreItemDepreciationParameter.depreciationArea = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "DepreciationArea")
        }
        if !B1PreItemDepreciationParameter.depreciationStartDate.isRemoved {
            B1PreItemDepreciationParameter.depreciationStartDate = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "DepreciationStartDate")
        }
        if !B1PreItemDepreciationParameter.depreciationEndDate.isRemoved {
            B1PreItemDepreciationParameter.depreciationEndDate = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "DepreciationEndDate")
        }
        if !B1PreItemDepreciationParameter.usefulLife.isRemoved {
            B1PreItemDepreciationParameter.usefulLife = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "UsefulLife")
        }
        if !B1PreItemDepreciationParameter.remainingLife.isRemoved {
            B1PreItemDepreciationParameter.remainingLife = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "RemainingLife")
        }
        if !B1PreItemDepreciationParameter.depreciationType.isRemoved {
            B1PreItemDepreciationParameter.depreciationType = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "DepreciationType")
        }
        if !B1PreItemDepreciationParameter.totalUnitsInUsefulLife.isRemoved {
            B1PreItemDepreciationParameter.totalUnitsInUsefulLife = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "TotalUnitsInUsefulLife")
        }
        if !B1PreItemDepreciationParameter.remainingUnits.isRemoved {
            B1PreItemDepreciationParameter.remainingUnits = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "RemainingUnits")
        }
        if !B1PreItemDepreciationParameter.standardUnits.isRemoved {
            B1PreItemDepreciationParameter.standardUnits = B1ClassMetadata.ComplexTypes.itemDepreciationParameter.property(withName: "StandardUnits")
        }
        if !B1PreItemDistributionRule.lineNumber.isRemoved {
            B1PreItemDistributionRule.lineNumber = B1ClassMetadata.ComplexTypes.itemDistributionRule.property(withName: "LineNumber")
        }
        if !B1PreItemDistributionRule.validFrom.isRemoved {
            B1PreItemDistributionRule.validFrom = B1ClassMetadata.ComplexTypes.itemDistributionRule.property(withName: "ValidFrom")
        }
        if !B1PreItemDistributionRule.validTo.isRemoved {
            B1PreItemDistributionRule.validTo = B1ClassMetadata.ComplexTypes.itemDistributionRule.property(withName: "ValidTo")
        }
        if !B1PreItemDistributionRule.distributionRule.isRemoved {
            B1PreItemDistributionRule.distributionRule = B1ClassMetadata.ComplexTypes.itemDistributionRule.property(withName: "DistributionRule")
        }
        if !B1PreItemDistributionRule.distributionRule2.isRemoved {
            B1PreItemDistributionRule.distributionRule2 = B1ClassMetadata.ComplexTypes.itemDistributionRule.property(withName: "DistributionRule2")
        }
        if !B1PreItemDistributionRule.distributionRule3.isRemoved {
            B1PreItemDistributionRule.distributionRule3 = B1ClassMetadata.ComplexTypes.itemDistributionRule.property(withName: "DistributionRule3")
        }
        if !B1PreItemDistributionRule.distributionRule4.isRemoved {
            B1PreItemDistributionRule.distributionRule4 = B1ClassMetadata.ComplexTypes.itemDistributionRule.property(withName: "DistributionRule4")
        }
        if !B1PreItemDistributionRule.distributionRule5.isRemoved {
            B1PreItemDistributionRule.distributionRule5 = B1ClassMetadata.ComplexTypes.itemDistributionRule.property(withName: "DistributionRule5")
        }
        if !B1PreItemGroupParams.number.isRemoved {
            B1PreItemGroupParams.number = B1ClassMetadata.ComplexTypes.itemGroupParams.property(withName: "Number")
        }
        if !B1PreItemGroupsWarehouseInfo.itmsGrpCod.isRemoved {
            B1PreItemGroupsWarehouseInfo.itmsGrpCod = B1ClassMetadata.ComplexTypes.itemGroupsWarehouseInfo.property(withName: "ItmsGrpCod")
        }
        if !B1PreItemGroupsWarehouseInfo.warehouseCode.isRemoved {
            B1PreItemGroupsWarehouseInfo.warehouseCode = B1ClassMetadata.ComplexTypes.itemGroupsWarehouseInfo.property(withName: "WarehouseCode")
        }
        if !B1PreItemGroupsWarehouseInfo.defaultBin.isRemoved {
            B1PreItemGroupsWarehouseInfo.defaultBin = B1ClassMetadata.ComplexTypes.itemGroupsWarehouseInfo.property(withName: "DefaultBin")
        }
        if !B1PreItemGroupsWarehouseInfo.defaultBinEnforced.isRemoved {
            B1PreItemGroupsWarehouseInfo.defaultBinEnforced = B1ClassMetadata.ComplexTypes.itemGroupsWarehouseInfo.property(withName: "DefaultBinEnforced")
        }
        if !B1PreItemIntrastatExtension.itemCode.isRemoved {
            B1PreItemIntrastatExtension.itemCode = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ItemCode")
        }
        if !B1PreItemIntrastatExtension.commodityCode.isRemoved {
            B1PreItemIntrastatExtension.commodityCode = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "CommodityCode")
        }
        if !B1PreItemIntrastatExtension.supplementaryUnit.isRemoved {
            B1PreItemIntrastatExtension.supplementaryUnit = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "SupplementaryUnit")
        }
        if !B1PreItemIntrastatExtension.factorOfSupplementaryUnit.isRemoved {
            B1PreItemIntrastatExtension.factorOfSupplementaryUnit = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "FactorOfSupplementaryUnit")
        }
        if !B1PreItemIntrastatExtension.importRegionState.isRemoved {
            B1PreItemIntrastatExtension.importRegionState = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ImportRegionState")
        }
        if !B1PreItemIntrastatExtension.exportRegionState.isRemoved {
            B1PreItemIntrastatExtension.exportRegionState = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ExportRegionState")
        }
        if !B1PreItemIntrastatExtension.importNatureOfTransaction.isRemoved {
            B1PreItemIntrastatExtension.importNatureOfTransaction = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ImportNatureOfTransaction")
        }
        if !B1PreItemIntrastatExtension.exportNatureOfTransaction.isRemoved {
            B1PreItemIntrastatExtension.exportNatureOfTransaction = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ExportNatureOfTransaction")
        }
        if !B1PreItemIntrastatExtension.importStatisticalProcedure.isRemoved {
            B1PreItemIntrastatExtension.importStatisticalProcedure = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ImportStatisticalProcedure")
        }
        if !B1PreItemIntrastatExtension.exportStatisticalProcedure.isRemoved {
            B1PreItemIntrastatExtension.exportStatisticalProcedure = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ExportStatisticalProcedure")
        }
        if !B1PreItemIntrastatExtension.countryOfOrigin.isRemoved {
            B1PreItemIntrastatExtension.countryOfOrigin = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "CountryOfOrigin")
        }
        if !B1PreItemIntrastatExtension.serviceCode.isRemoved {
            B1PreItemIntrastatExtension.serviceCode = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ServiceCode")
        }
        if !B1PreItemIntrastatExtension.type_.isRemoved {
            B1PreItemIntrastatExtension.type_ = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "Type")
        }
        if !B1PreItemIntrastatExtension.serviceSupplyMethod.isRemoved {
            B1PreItemIntrastatExtension.serviceSupplyMethod = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ServiceSupplyMethod")
        }
        if !B1PreItemIntrastatExtension.servicePaymentMethod.isRemoved {
            B1PreItemIntrastatExtension.servicePaymentMethod = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ServicePaymentMethod")
        }
        if !B1PreItemIntrastatExtension.importRegionCountry.isRemoved {
            B1PreItemIntrastatExtension.importRegionCountry = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ImportRegionCountry")
        }
        if !B1PreItemIntrastatExtension.exportRegionCountry.isRemoved {
            B1PreItemIntrastatExtension.exportRegionCountry = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "ExportRegionCountry")
        }
        if !B1PreItemIntrastatExtension.useWeightInCalculation.isRemoved {
            B1PreItemIntrastatExtension.useWeightInCalculation = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "UseWeightInCalculation")
        }
        if !B1PreItemIntrastatExtension.intrastatRelevant.isRemoved {
            B1PreItemIntrastatExtension.intrastatRelevant = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "IntrastatRelevant")
        }
        if !B1PreItemIntrastatExtension.statisticalCode.isRemoved {
            B1PreItemIntrastatExtension.statisticalCode = B1ClassMetadata.ComplexTypes.itemIntrastatExtension.property(withName: "StatisticalCode")
        }
        if !B1PreItemLocalizationInfo.itemCode.isRemoved {
            B1PreItemLocalizationInfo.itemCode = B1ClassMetadata.ComplexTypes.itemLocalizationInfo.property(withName: "ItemCode")
        }
        if !B1PreItemLocalizationInfo.incomeNature.isRemoved {
            B1PreItemLocalizationInfo.incomeNature = B1ClassMetadata.ComplexTypes.itemLocalizationInfo.property(withName: "IncomeNature")
        }
        if !B1PreItemParams.itemCode.isRemoved {
            B1PreItemParams.itemCode = B1ClassMetadata.ComplexTypes.itemParams.property(withName: "ItemCode")
        }
        if !B1PreItemPeriodControl.fiscalYear.isRemoved {
            B1PreItemPeriodControl.fiscalYear = B1ClassMetadata.ComplexTypes.itemPeriodControl.property(withName: "FiscalYear")
        }
        if !B1PreItemPeriodControl.depreciationArea.isRemoved {
            B1PreItemPeriodControl.depreciationArea = B1ClassMetadata.ComplexTypes.itemPeriodControl.property(withName: "DepreciationArea")
        }
        if !B1PreItemPeriodControl.subPeriod.isRemoved {
            B1PreItemPeriodControl.subPeriod = B1ClassMetadata.ComplexTypes.itemPeriodControl.property(withName: "SubPeriod")
        }
        if !B1PreItemPeriodControl.depreciationStatus.isRemoved {
            B1PreItemPeriodControl.depreciationStatus = B1ClassMetadata.ComplexTypes.itemPeriodControl.property(withName: "DepreciationStatus")
        }
        if !B1PreItemPeriodControl.factor.isRemoved {
            B1PreItemPeriodControl.factor = B1ClassMetadata.ComplexTypes.itemPeriodControl.property(withName: "Factor")
        }
        if !B1PreItemPeriodControl.actualUnits.isRemoved {
            B1PreItemPeriodControl.actualUnits = B1ClassMetadata.ComplexTypes.itemPeriodControl.property(withName: "ActualUnits")
        }
        if !B1PreItemPreferredVendor.bpCode.isRemoved {
            B1PreItemPreferredVendor.bpCode = B1ClassMetadata.ComplexTypes.itemPreferredVendor.property(withName: "BPCode")
        }
        if !B1PreItemPrice.priceList.isRemoved {
            B1PreItemPrice.priceList = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "PriceList")
        }
        if !B1PreItemPrice.price.isRemoved {
            B1PreItemPrice.price = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "Price")
        }
        if !B1PreItemPrice.currency.isRemoved {
            B1PreItemPrice.currency = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "Currency")
        }
        if !B1PreItemPrice.additionalPrice1.isRemoved {
            B1PreItemPrice.additionalPrice1 = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "AdditionalPrice1")
        }
        if !B1PreItemPrice.additionalCurrency1.isRemoved {
            B1PreItemPrice.additionalCurrency1 = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "AdditionalCurrency1")
        }
        if !B1PreItemPrice.additionalPrice2.isRemoved {
            B1PreItemPrice.additionalPrice2 = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "AdditionalPrice2")
        }
        if !B1PreItemPrice.additionalCurrency2.isRemoved {
            B1PreItemPrice.additionalCurrency2 = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "AdditionalCurrency2")
        }
        if !B1PreItemPrice.basePriceList.isRemoved {
            B1PreItemPrice.basePriceList = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "BasePriceList")
        }
        if !B1PreItemPrice.factor.isRemoved {
            B1PreItemPrice.factor = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "Factor")
        }
        if !B1PreItemPrice.uoMPrices.isRemoved {
            B1PreItemPrice.uoMPrices = B1ClassMetadata.ComplexTypes.itemPrice.property(withName: "UoMPrices")
        }
        if !B1PreItemPriceParams.date.isRemoved {
            B1PreItemPriceParams.date = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "Date")
        }
        if !B1PreItemPriceParams.uoMEntry.isRemoved {
            B1PreItemPriceParams.uoMEntry = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "UoMEntry")
        }
        if !B1PreItemPriceParams.blanketAgreementNumber.isRemoved {
            B1PreItemPriceParams.blanketAgreementNumber = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "BlanketAgreementNumber")
        }
        if !B1PreItemPriceParams.blanketAgreementLine.isRemoved {
            B1PreItemPriceParams.blanketAgreementLine = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "BlanketAgreementLine")
        }
        if !B1PreItemPriceParams.uoMQuantity.isRemoved {
            B1PreItemPriceParams.uoMQuantity = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "UoMQuantity")
        }
        if !B1PreItemPriceParams.inventoryQuantity.isRemoved {
            B1PreItemPriceParams.inventoryQuantity = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "InventoryQuantity")
        }
        if !B1PreItemPriceParams.currency.isRemoved {
            B1PreItemPriceParams.currency = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "Currency")
        }
        if !B1PreItemPriceParams.itemCode.isRemoved {
            B1PreItemPriceParams.itemCode = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "ItemCode")
        }
        if !B1PreItemPriceParams.cardCode.isRemoved {
            B1PreItemPriceParams.cardCode = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "CardCode")
        }
        if !B1PreItemPriceParams.priceList.isRemoved {
            B1PreItemPriceParams.priceList = B1ClassMetadata.ComplexTypes.itemPriceParams.property(withName: "PriceList")
        }
        if !B1PreItemPriceReturnParams.price.isRemoved {
            B1PreItemPriceReturnParams.price = B1ClassMetadata.ComplexTypes.itemPriceReturnParams.property(withName: "Price")
        }
        if !B1PreItemPriceReturnParams.currency.isRemoved {
            B1PreItemPriceReturnParams.currency = B1ClassMetadata.ComplexTypes.itemPriceReturnParams.property(withName: "Currency")
        }
        if !B1PreItemPriceReturnParams.discount.isRemoved {
            B1PreItemPriceReturnParams.discount = B1ClassMetadata.ComplexTypes.itemPriceReturnParams.property(withName: "Discount")
        }
        if !B1PreItemProject.lineNumber.isRemoved {
            B1PreItemProject.lineNumber = B1ClassMetadata.ComplexTypes.itemProject.property(withName: "LineNumber")
        }
        if !B1PreItemProject.validFrom.isRemoved {
            B1PreItemProject.validFrom = B1ClassMetadata.ComplexTypes.itemProject.property(withName: "ValidFrom")
        }
        if !B1PreItemProject.validTo.isRemoved {
            B1PreItemProject.validTo = B1ClassMetadata.ComplexTypes.itemProject.property(withName: "ValidTo")
        }
        if !B1PreItemProject.project.isRemoved {
            B1PreItemProject.project = B1ClassMetadata.ComplexTypes.itemProject.property(withName: "Project")
        }
        if !B1PreItemPropertyParams.number.isRemoved {
            B1PreItemPropertyParams.number = B1ClassMetadata.ComplexTypes.itemPropertyParams.property(withName: "Number")
        }
        if !B1PreItemUnitOfMeasurement.uoMType.isRemoved {
            B1PreItemUnitOfMeasurement.uoMType = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "UoMType")
        }
        if !B1PreItemUnitOfMeasurement.uoMEntry.isRemoved {
            B1PreItemUnitOfMeasurement.uoMEntry = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "UoMEntry")
        }
        if !B1PreItemUnitOfMeasurement.defaultBarcode.isRemoved {
            B1PreItemUnitOfMeasurement.defaultBarcode = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "DefaultBarcode")
        }
        if !B1PreItemUnitOfMeasurement.defaultPackage.isRemoved {
            B1PreItemUnitOfMeasurement.defaultPackage = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "DefaultPackage")
        }
        if !B1PreItemUnitOfMeasurement.length1.isRemoved {
            B1PreItemUnitOfMeasurement.length1 = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Length1")
        }
        if !B1PreItemUnitOfMeasurement.length1Unit.isRemoved {
            B1PreItemUnitOfMeasurement.length1Unit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Length1Unit")
        }
        if !B1PreItemUnitOfMeasurement.length2.isRemoved {
            B1PreItemUnitOfMeasurement.length2 = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Length2")
        }
        if !B1PreItemUnitOfMeasurement.length2Unit.isRemoved {
            B1PreItemUnitOfMeasurement.length2Unit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Length2Unit")
        }
        if !B1PreItemUnitOfMeasurement.width1.isRemoved {
            B1PreItemUnitOfMeasurement.width1 = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Width1")
        }
        if !B1PreItemUnitOfMeasurement.width1Unit.isRemoved {
            B1PreItemUnitOfMeasurement.width1Unit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Width1Unit")
        }
        if !B1PreItemUnitOfMeasurement.width2.isRemoved {
            B1PreItemUnitOfMeasurement.width2 = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Width2")
        }
        if !B1PreItemUnitOfMeasurement.width2Unit.isRemoved {
            B1PreItemUnitOfMeasurement.width2Unit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Width2Unit")
        }
        if !B1PreItemUnitOfMeasurement.height1.isRemoved {
            B1PreItemUnitOfMeasurement.height1 = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Height1")
        }
        if !B1PreItemUnitOfMeasurement.height1Unit.isRemoved {
            B1PreItemUnitOfMeasurement.height1Unit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Height1Unit")
        }
        if !B1PreItemUnitOfMeasurement.height2.isRemoved {
            B1PreItemUnitOfMeasurement.height2 = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Height2")
        }
        if !B1PreItemUnitOfMeasurement.height2Unit.isRemoved {
            B1PreItemUnitOfMeasurement.height2Unit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Height2Unit")
        }
        if !B1PreItemUnitOfMeasurement.volume.isRemoved {
            B1PreItemUnitOfMeasurement.volume = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Volume")
        }
        if !B1PreItemUnitOfMeasurement.volumeUnit.isRemoved {
            B1PreItemUnitOfMeasurement.volumeUnit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "VolumeUnit")
        }
        if !B1PreItemUnitOfMeasurement.weight1.isRemoved {
            B1PreItemUnitOfMeasurement.weight1 = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Weight1")
        }
        if !B1PreItemUnitOfMeasurement.weight1Unit.isRemoved {
            B1PreItemUnitOfMeasurement.weight1Unit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Weight1Unit")
        }
        if !B1PreItemUnitOfMeasurement.weight2.isRemoved {
            B1PreItemUnitOfMeasurement.weight2 = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Weight2")
        }
        if !B1PreItemUnitOfMeasurement.weight2Unit.isRemoved {
            B1PreItemUnitOfMeasurement.weight2Unit = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "Weight2Unit")
        }
        if !B1PreItemUnitOfMeasurement.itemUoMPackageCollection.isRemoved {
            B1PreItemUnitOfMeasurement.itemUoMPackageCollection = B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.property(withName: "ItemUoMPackageCollection")
        }
        if !B1PreItemUoMPackage.uoMType.isRemoved {
            B1PreItemUoMPackage.uoMType = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "UoMType")
        }
        if !B1PreItemUoMPackage.uoMEntry.isRemoved {
            B1PreItemUoMPackage.uoMEntry = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "UoMEntry")
        }
        if !B1PreItemUoMPackage.packageTypeEntry.isRemoved {
            B1PreItemUoMPackage.packageTypeEntry = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "PackageTypeEntry")
        }
        if !B1PreItemUoMPackage.length1.isRemoved {
            B1PreItemUoMPackage.length1 = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Length1")
        }
        if !B1PreItemUoMPackage.length1Unit.isRemoved {
            B1PreItemUoMPackage.length1Unit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Length1Unit")
        }
        if !B1PreItemUoMPackage.length2.isRemoved {
            B1PreItemUoMPackage.length2 = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Length2")
        }
        if !B1PreItemUoMPackage.length2Unit.isRemoved {
            B1PreItemUoMPackage.length2Unit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Length2Unit")
        }
        if !B1PreItemUoMPackage.width1.isRemoved {
            B1PreItemUoMPackage.width1 = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Width1")
        }
        if !B1PreItemUoMPackage.width1Unit.isRemoved {
            B1PreItemUoMPackage.width1Unit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Width1Unit")
        }
        if !B1PreItemUoMPackage.width2.isRemoved {
            B1PreItemUoMPackage.width2 = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Width2")
        }
        if !B1PreItemUoMPackage.width2Unit.isRemoved {
            B1PreItemUoMPackage.width2Unit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Width2Unit")
        }
        if !B1PreItemUoMPackage.height1.isRemoved {
            B1PreItemUoMPackage.height1 = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Height1")
        }
        if !B1PreItemUoMPackage.height1Unit.isRemoved {
            B1PreItemUoMPackage.height1Unit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Height1Unit")
        }
        if !B1PreItemUoMPackage.height2.isRemoved {
            B1PreItemUoMPackage.height2 = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Height2")
        }
    }

    private static func merge12(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PreItemUoMPackage.height2Unit.isRemoved {
            B1PreItemUoMPackage.height2Unit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Height2Unit")
        }
        if !B1PreItemUoMPackage.volume.isRemoved {
            B1PreItemUoMPackage.volume = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Volume")
        }
        if !B1PreItemUoMPackage.volumeUnit.isRemoved {
            B1PreItemUoMPackage.volumeUnit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "VolumeUnit")
        }
        if !B1PreItemUoMPackage.weight1.isRemoved {
            B1PreItemUoMPackage.weight1 = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Weight1")
        }
        if !B1PreItemUoMPackage.weight1Unit.isRemoved {
            B1PreItemUoMPackage.weight1Unit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Weight1Unit")
        }
        if !B1PreItemUoMPackage.weight2.isRemoved {
            B1PreItemUoMPackage.weight2 = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Weight2")
        }
        if !B1PreItemUoMPackage.weight2Unit.isRemoved {
            B1PreItemUoMPackage.weight2Unit = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "Weight2Unit")
        }
        if !B1PreItemUoMPackage.quantityPerPackage.isRemoved {
            B1PreItemUoMPackage.quantityPerPackage = B1ClassMetadata.ComplexTypes.itemUoMPackage.property(withName: "QuantityPerPackage")
        }
        if !B1PreItemWarehouseInfo.minimalStock.isRemoved {
            B1PreItemWarehouseInfo.minimalStock = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "MinimalStock")
        }
        if !B1PreItemWarehouseInfo.maximalStock.isRemoved {
            B1PreItemWarehouseInfo.maximalStock = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "MaximalStock")
        }
        if !B1PreItemWarehouseInfo.minimalOrder.isRemoved {
            B1PreItemWarehouseInfo.minimalOrder = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "MinimalOrder")
        }
        if !B1PreItemWarehouseInfo.standardAveragePrice.isRemoved {
            B1PreItemWarehouseInfo.standardAveragePrice = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "StandardAveragePrice")
        }
        if !B1PreItemWarehouseInfo.locked.isRemoved {
            B1PreItemWarehouseInfo.locked = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "Locked")
        }
        if !B1PreItemWarehouseInfo.inventoryAccount.isRemoved {
            B1PreItemWarehouseInfo.inventoryAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "InventoryAccount")
        }
        if !B1PreItemWarehouseInfo.costAccount.isRemoved {
            B1PreItemWarehouseInfo.costAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "CostAccount")
        }
        if !B1PreItemWarehouseInfo.transferAccount.isRemoved {
            B1PreItemWarehouseInfo.transferAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "TransferAccount")
        }
        if !B1PreItemWarehouseInfo.revenuesAccount.isRemoved {
            B1PreItemWarehouseInfo.revenuesAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "RevenuesAccount")
        }
        if !B1PreItemWarehouseInfo.varienceAccount.isRemoved {
            B1PreItemWarehouseInfo.varienceAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "VarienceAccount")
        }
        if !B1PreItemWarehouseInfo.decreasingAccount.isRemoved {
            B1PreItemWarehouseInfo.decreasingAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "DecreasingAccount")
        }
        if !B1PreItemWarehouseInfo.increasingAccount.isRemoved {
            B1PreItemWarehouseInfo.increasingAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "IncreasingAccount")
        }
        if !B1PreItemWarehouseInfo.returningAccount.isRemoved {
            B1PreItemWarehouseInfo.returningAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ReturningAccount")
        }
        if !B1PreItemWarehouseInfo.expensesAccount.isRemoved {
            B1PreItemWarehouseInfo.expensesAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ExpensesAccount")
        }
        if !B1PreItemWarehouseInfo.euRevenuesAccount.isRemoved {
            B1PreItemWarehouseInfo.euRevenuesAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "EURevenuesAccount")
        }
        if !B1PreItemWarehouseInfo.euExpensesAccount.isRemoved {
            B1PreItemWarehouseInfo.euExpensesAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "EUExpensesAccount")
        }
        if !B1PreItemWarehouseInfo.foreignRevenueAcc.isRemoved {
            B1PreItemWarehouseInfo.foreignRevenueAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ForeignRevenueAcc")
        }
        if !B1PreItemWarehouseInfo.foreignExpensAcc.isRemoved {
            B1PreItemWarehouseInfo.foreignExpensAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ForeignExpensAcc")
        }
        if !B1PreItemWarehouseInfo.exemptIncomeAcc.isRemoved {
            B1PreItemWarehouseInfo.exemptIncomeAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ExemptIncomeAcc")
        }
        if !B1PreItemWarehouseInfo.priceDifferenceAcc.isRemoved {
            B1PreItemWarehouseInfo.priceDifferenceAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "PriceDifferenceAcc")
        }
        if !B1PreItemWarehouseInfo.warehouseCode.isRemoved {
            B1PreItemWarehouseInfo.warehouseCode = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "WarehouseCode")
        }
        if !B1PreItemWarehouseInfo.inStock.isRemoved {
            B1PreItemWarehouseInfo.inStock = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "InStock")
        }
        if !B1PreItemWarehouseInfo.committed.isRemoved {
            B1PreItemWarehouseInfo.committed = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "Committed")
        }
        if !B1PreItemWarehouseInfo.ordered.isRemoved {
            B1PreItemWarehouseInfo.ordered = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "Ordered")
        }
        if !B1PreItemWarehouseInfo.countedQuantity.isRemoved {
            B1PreItemWarehouseInfo.countedQuantity = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "CountedQuantity")
        }
        if !B1PreItemWarehouseInfo.wasCounted.isRemoved {
            B1PreItemWarehouseInfo.wasCounted = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "WasCounted")
        }
        if !B1PreItemWarehouseInfo.userSignature.isRemoved {
            B1PreItemWarehouseInfo.userSignature = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "UserSignature")
        }
        if !B1PreItemWarehouseInfo.counted.isRemoved {
            B1PreItemWarehouseInfo.counted = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "Counted")
        }
        if !B1PreItemWarehouseInfo.expenseClearingAct.isRemoved {
            B1PreItemWarehouseInfo.expenseClearingAct = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ExpenseClearingAct")
        }
        if !B1PreItemWarehouseInfo.purchaseCreditAcc.isRemoved {
            B1PreItemWarehouseInfo.purchaseCreditAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "PurchaseCreditAcc")
        }
        if !B1PreItemWarehouseInfo.euPurchaseCreditAcc.isRemoved {
            B1PreItemWarehouseInfo.euPurchaseCreditAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "EUPurchaseCreditAcc")
        }
        if !B1PreItemWarehouseInfo.foreignPurchaseCreditAcc.isRemoved {
            B1PreItemWarehouseInfo.foreignPurchaseCreditAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ForeignPurchaseCreditAcc")
        }
        if !B1PreItemWarehouseInfo.salesCreditAcc.isRemoved {
            B1PreItemWarehouseInfo.salesCreditAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "SalesCreditAcc")
        }
        if !B1PreItemWarehouseInfo.salesCreditEUAcc.isRemoved {
            B1PreItemWarehouseInfo.salesCreditEUAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "SalesCreditEUAcc")
        }
        if !B1PreItemWarehouseInfo.exemptedCredits.isRemoved {
            B1PreItemWarehouseInfo.exemptedCredits = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ExemptedCredits")
        }
        if !B1PreItemWarehouseInfo.salesCreditForeignAcc.isRemoved {
            B1PreItemWarehouseInfo.salesCreditForeignAcc = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "SalesCreditForeignAcc")
        }
        if !B1PreItemWarehouseInfo.expenseOffsettingAccount.isRemoved {
            B1PreItemWarehouseInfo.expenseOffsettingAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ExpenseOffsettingAccount")
        }
        if !B1PreItemWarehouseInfo.wipAccount.isRemoved {
            B1PreItemWarehouseInfo.wipAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "WipAccount")
        }
        if !B1PreItemWarehouseInfo.exchangeRateDifferencesAcct.isRemoved {
            B1PreItemWarehouseInfo.exchangeRateDifferencesAcct = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ExchangeRateDifferencesAcct")
        }
        if !B1PreItemWarehouseInfo.goodsClearingAcct.isRemoved {
            B1PreItemWarehouseInfo.goodsClearingAcct = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "GoodsClearingAcct")
        }
        if !B1PreItemWarehouseInfo.negativeInventoryAdjustmentAccount.isRemoved {
            B1PreItemWarehouseInfo.negativeInventoryAdjustmentAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "NegativeInventoryAdjustmentAccount")
        }
        if !B1PreItemWarehouseInfo.costInflationOffsetAccount.isRemoved {
            B1PreItemWarehouseInfo.costInflationOffsetAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "CostInflationOffsetAccount")
        }
        if !B1PreItemWarehouseInfo.glDecreaseAcct.isRemoved {
            B1PreItemWarehouseInfo.glDecreaseAcct = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "GLDecreaseAcct")
        }
        if !B1PreItemWarehouseInfo.glIncreaseAcct.isRemoved {
            B1PreItemWarehouseInfo.glIncreaseAcct = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "GLIncreaseAcct")
        }
        if !B1PreItemWarehouseInfo.paReturnAcct.isRemoved {
            B1PreItemWarehouseInfo.paReturnAcct = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "PAReturnAcct")
        }
        if !B1PreItemWarehouseInfo.purchaseAcct.isRemoved {
            B1PreItemWarehouseInfo.purchaseAcct = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "PurchaseAcct")
        }
        if !B1PreItemWarehouseInfo.purchaseOffsetAcct.isRemoved {
            B1PreItemWarehouseInfo.purchaseOffsetAcct = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "PurchaseOffsetAcct")
        }
        if !B1PreItemWarehouseInfo.shippedGoodsAccount.isRemoved {
            B1PreItemWarehouseInfo.shippedGoodsAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ShippedGoodsAccount")
        }
        if !B1PreItemWarehouseInfo.stockInflationOffsetAccount.isRemoved {
            B1PreItemWarehouseInfo.stockInflationOffsetAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "StockInflationOffsetAccount")
        }
        if !B1PreItemWarehouseInfo.stockInflationAdjustAccount.isRemoved {
            B1PreItemWarehouseInfo.stockInflationAdjustAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "StockInflationAdjustAccount")
        }
        if !B1PreItemWarehouseInfo.vatInRevenueAccount.isRemoved {
            B1PreItemWarehouseInfo.vatInRevenueAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "VATInRevenueAccount")
        }
        if !B1PreItemWarehouseInfo.wipVarianceAccount.isRemoved {
            B1PreItemWarehouseInfo.wipVarianceAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "WipVarianceAccount")
        }
        if !B1PreItemWarehouseInfo.costInflationAccount.isRemoved {
            B1PreItemWarehouseInfo.costInflationAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "CostInflationAccount")
        }
        if !B1PreItemWarehouseInfo.whIncomingCenvatAccount.isRemoved {
            B1PreItemWarehouseInfo.whIncomingCenvatAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "WHIncomingCenvatAccount")
        }
        if !B1PreItemWarehouseInfo.whOutgoingCenvatAccount.isRemoved {
            B1PreItemWarehouseInfo.whOutgoingCenvatAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "WHOutgoingCenvatAccount")
        }
        if !B1PreItemWarehouseInfo.stockInTransitAccount.isRemoved {
            B1PreItemWarehouseInfo.stockInTransitAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "StockInTransitAccount")
        }
        if !B1PreItemWarehouseInfo.wipOffsetProfitAndLossAccount.isRemoved {
            B1PreItemWarehouseInfo.wipOffsetProfitAndLossAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "WipOffsetProfitAndLossAccount")
        }
        if !B1PreItemWarehouseInfo.inventoryOffsetProfitAndLossAccount.isRemoved {
            B1PreItemWarehouseInfo.inventoryOffsetProfitAndLossAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "InventoryOffsetProfitAndLossAccount")
        }
        if !B1PreItemWarehouseInfo.defaultBin.isRemoved {
            B1PreItemWarehouseInfo.defaultBin = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "DefaultBin")
        }
        if !B1PreItemWarehouseInfo.defaultBinEnforced.isRemoved {
            B1PreItemWarehouseInfo.defaultBinEnforced = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "DefaultBinEnforced")
        }
        if !B1PreItemWarehouseInfo.purchaseBalanceAccount.isRemoved {
            B1PreItemWarehouseInfo.purchaseBalanceAccount = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "PurchaseBalanceAccount")
        }
        if !B1PreItemWarehouseInfo.itemCycleCounts.isRemoved {
            B1PreItemWarehouseInfo.itemCycleCounts = B1ClassMetadata.ComplexTypes.itemWarehouseInfo.property(withName: "ItemCycleCounts")
        }
        if !B1PreJournalEntryDocumentTypeParams.journalEntryType.isRemoved {
            B1PreJournalEntryDocumentTypeParams.journalEntryType = B1ClassMetadata.ComplexTypes.journalEntryDocumentTypeParams.property(withName: "JournalEntryType")
        }
        if !B1PreJournalEntryDocumentTypeParams.docTypeDescription.isRemoved {
            B1PreJournalEntryDocumentTypeParams.docTypeDescription = B1ClassMetadata.ComplexTypes.journalEntryDocumentTypeParams.property(withName: "DocTypeDescription")
        }
        if !B1PreJournalEntryDocumentTypeParams.shortName.isRemoved {
            B1PreJournalEntryDocumentTypeParams.shortName = B1ClassMetadata.ComplexTypes.journalEntryDocumentTypeParams.property(withName: "ShortName")
        }
        if !B1PreJournalEntryLine.lineID.isRemoved {
            B1PreJournalEntryLine.lineID = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "Line_ID")
        }
        if !B1PreJournalEntryLine.accountCode.isRemoved {
            B1PreJournalEntryLine.accountCode = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "AccountCode")
        }
        if !B1PreJournalEntryLine.debit.isRemoved {
            B1PreJournalEntryLine.debit = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "Debit")
        }
        if !B1PreJournalEntryLine.credit.isRemoved {
            B1PreJournalEntryLine.credit = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "Credit")
        }
        if !B1PreJournalEntryLine.fcDebit.isRemoved {
            B1PreJournalEntryLine.fcDebit = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "FCDebit")
        }
        if !B1PreJournalEntryLine.fcCredit.isRemoved {
            B1PreJournalEntryLine.fcCredit = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "FCCredit")
        }
        if !B1PreJournalEntryLine.fcCurrency.isRemoved {
            B1PreJournalEntryLine.fcCurrency = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "FCCurrency")
        }
        if !B1PreJournalEntryLine.dueDate.isRemoved {
            B1PreJournalEntryLine.dueDate = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "DueDate")
        }
        if !B1PreJournalEntryLine.shortName.isRemoved {
            B1PreJournalEntryLine.shortName = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "ShortName")
        }
        if !B1PreJournalEntryLine.contraAccount.isRemoved {
            B1PreJournalEntryLine.contraAccount = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "ContraAccount")
        }
        if !B1PreJournalEntryLine.lineMemo.isRemoved {
            B1PreJournalEntryLine.lineMemo = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "LineMemo")
        }
        if !B1PreJournalEntryLine.referenceDate1.isRemoved {
            B1PreJournalEntryLine.referenceDate1 = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "ReferenceDate1")
        }
        if !B1PreJournalEntryLine.referenceDate2.isRemoved {
            B1PreJournalEntryLine.referenceDate2 = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "ReferenceDate2")
        }
        if !B1PreJournalEntryLine.reference1.isRemoved {
            B1PreJournalEntryLine.reference1 = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "Reference1")
        }
        if !B1PreJournalEntryLine.reference2.isRemoved {
            B1PreJournalEntryLine.reference2 = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "Reference2")
        }
        if !B1PreJournalEntryLine.projectCode.isRemoved {
            B1PreJournalEntryLine.projectCode = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "ProjectCode")
        }
        if !B1PreJournalEntryLine.costingCode.isRemoved {
            B1PreJournalEntryLine.costingCode = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CostingCode")
        }
        if !B1PreJournalEntryLine.taxDate.isRemoved {
            B1PreJournalEntryLine.taxDate = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "TaxDate")
        }
        if !B1PreJournalEntryLine.baseSum.isRemoved {
            B1PreJournalEntryLine.baseSum = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "BaseSum")
        }
        if !B1PreJournalEntryLine.taxGroup.isRemoved {
            B1PreJournalEntryLine.taxGroup = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "TaxGroup")
        }
        if !B1PreJournalEntryLine.debitSys.isRemoved {
            B1PreJournalEntryLine.debitSys = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "DebitSys")
        }
        if !B1PreJournalEntryLine.creditSys.isRemoved {
            B1PreJournalEntryLine.creditSys = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CreditSys")
        }
        if !B1PreJournalEntryLine.vatDate.isRemoved {
            B1PreJournalEntryLine.vatDate = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "VatDate")
        }
        if !B1PreJournalEntryLine.vatLine.isRemoved {
            B1PreJournalEntryLine.vatLine = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "VatLine")
        }
        if !B1PreJournalEntryLine.systemBaseAmount.isRemoved {
            B1PreJournalEntryLine.systemBaseAmount = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "SystemBaseAmount")
        }
        if !B1PreJournalEntryLine.vatAmount.isRemoved {
            B1PreJournalEntryLine.vatAmount = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "VatAmount")
        }
        if !B1PreJournalEntryLine.systemVatAmount.isRemoved {
            B1PreJournalEntryLine.systemVatAmount = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "SystemVatAmount")
        }
        if !B1PreJournalEntryLine.grossValue.isRemoved {
            B1PreJournalEntryLine.grossValue = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "GrossValue")
        }
        if !B1PreJournalEntryLine.additionalReference.isRemoved {
            B1PreJournalEntryLine.additionalReference = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "AdditionalReference")
        }
        if !B1PreJournalEntryLine.checkAbs.isRemoved {
            B1PreJournalEntryLine.checkAbs = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CheckAbs")
        }
        if !B1PreJournalEntryLine.costingCode2.isRemoved {
            B1PreJournalEntryLine.costingCode2 = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CostingCode2")
        }
        if !B1PreJournalEntryLine.costingCode3.isRemoved {
            B1PreJournalEntryLine.costingCode3 = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CostingCode3")
        }
        if !B1PreJournalEntryLine.costingCode4.isRemoved {
            B1PreJournalEntryLine.costingCode4 = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CostingCode4")
        }
        if !B1PreJournalEntryLine.taxCode.isRemoved {
            B1PreJournalEntryLine.taxCode = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "TaxCode")
        }
        if !B1PreJournalEntryLine.taxPostAccount.isRemoved {
            B1PreJournalEntryLine.taxPostAccount = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "TaxPostAccount")
        }
        if !B1PreJournalEntryLine.costingCode5.isRemoved {
            B1PreJournalEntryLine.costingCode5 = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CostingCode5")
        }
        if !B1PreJournalEntryLine.locationCode.isRemoved {
            B1PreJournalEntryLine.locationCode = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "LocationCode")
        }
        if !B1PreJournalEntryLine.controlAccount.isRemoved {
            B1PreJournalEntryLine.controlAccount = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "ControlAccount")
        }
        if !B1PreJournalEntryLine.equalizationTaxAmount.isRemoved {
            B1PreJournalEntryLine.equalizationTaxAmount = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "EqualizationTaxAmount")
        }
        if !B1PreJournalEntryLine.systemEqualizationTaxAmount.isRemoved {
            B1PreJournalEntryLine.systemEqualizationTaxAmount = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "SystemEqualizationTaxAmount")
        }
        if !B1PreJournalEntryLine.totalTax.isRemoved {
            B1PreJournalEntryLine.totalTax = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "TotalTax")
        }
        if !B1PreJournalEntryLine.systemTotalTax.isRemoved {
            B1PreJournalEntryLine.systemTotalTax = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "SystemTotalTax")
        }
        if !B1PreJournalEntryLine.wtLiable.isRemoved {
            B1PreJournalEntryLine.wtLiable = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "WTLiable")
        }
        if !B1PreJournalEntryLine.wtRow.isRemoved {
            B1PreJournalEntryLine.wtRow = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "WTRow")
        }
        if !B1PreJournalEntryLine.paymentBlock.isRemoved {
            B1PreJournalEntryLine.paymentBlock = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "PaymentBlock")
        }
        if !B1PreJournalEntryLine.blockReason.isRemoved {
            B1PreJournalEntryLine.blockReason = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "BlockReason")
        }
        if !B1PreJournalEntryLine.federalTaxID.isRemoved {
            B1PreJournalEntryLine.federalTaxID = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "FederalTaxID")
        }
        if !B1PreJournalEntryLine.bplid.isRemoved {
            B1PreJournalEntryLine.bplid = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "BPLID")
        }
        if !B1PreJournalEntryLine.bplName.isRemoved {
            B1PreJournalEntryLine.bplName = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "BPLName")
        }
        if !B1PreJournalEntryLine.vatRegNum.isRemoved {
            B1PreJournalEntryLine.vatRegNum = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "VATRegNum")
        }
        if !B1PreJournalEntryLine.paymentOrdered.isRemoved {
            B1PreJournalEntryLine.paymentOrdered = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "PaymentOrdered")
        }
        if !B1PreJournalEntryLine.exposedTransNumber.isRemoved {
            B1PreJournalEntryLine.exposedTransNumber = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "ExposedTransNumber")
        }
        if !B1PreJournalEntryLine.documentArray.isRemoved {
            B1PreJournalEntryLine.documentArray = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "DocumentArray")
        }
        if !B1PreJournalEntryLine.documentLine.isRemoved {
            B1PreJournalEntryLine.documentLine = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "DocumentLine")
        }
        if !B1PreJournalEntryLine.costElementCode.isRemoved {
            B1PreJournalEntryLine.costElementCode = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CostElementCode")
        }
        if !B1PreJournalEntryLine.cashFlowAssignments.isRemoved {
            B1PreJournalEntryLine.cashFlowAssignments = B1ClassMetadata.ComplexTypes.journalEntryLine.property(withName: "CashFlowAssignments")
        }
        if !B1PreJournalEntryParams.jdtNum.isRemoved {
            B1PreJournalEntryParams.jdtNum = B1ClassMetadata.ComplexTypes.journalEntryParams.property(withName: "JdtNum")
        }
        if !B1PreKPIParams.kpiCode.isRemoved {
            B1PreKPIParams.kpiCode = B1ClassMetadata.ComplexTypes.kpiParams.property(withName: "KPICode")
        }
        if !B1PreKPIParams.kpiName.isRemoved {
            B1PreKPIParams.kpiName = B1ClassMetadata.ComplexTypes.kpiParams.property(withName: "KPIName")
        }
        if !B1PreKPIItemLine.kpiCode.isRemoved {
            B1PreKPIItemLine.kpiCode = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPICode")
        }
        if !B1PreKPIItemLine.kpiLineNumber.isRemoved {
            B1PreKPIItemLine.kpiLineNumber = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPILineNumber")
        }
        if !B1PreKPIItemLine.kpiName.isRemoved {
            B1PreKPIItemLine.kpiName = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIName")
        }
        if !B1PreKPIItemLine.kpiValue1.isRemoved {
            B1PreKPIItemLine.kpiValue1 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue1")
        }
        if !B1PreKPIItemLine.kpiValue2.isRemoved {
            B1PreKPIItemLine.kpiValue2 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue2")
        }
        if !B1PreKPIItemLine.kpiValue3.isRemoved {
            B1PreKPIItemLine.kpiValue3 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue3")
        }
        if !B1PreKPIItemLine.kpiValue4.isRemoved {
            B1PreKPIItemLine.kpiValue4 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue4")
        }
        if !B1PreKPIItemLine.kpiValue5.isRemoved {
            B1PreKPIItemLine.kpiValue5 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue5")
        }
        if !B1PreKPIItemLine.kpiValue6.isRemoved {
            B1PreKPIItemLine.kpiValue6 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue6")
        }
        if !B1PreKPIItemLine.kpiValue7.isRemoved {
            B1PreKPIItemLine.kpiValue7 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue7")
        }
        if !B1PreKPIItemLine.kpiValue8.isRemoved {
            B1PreKPIItemLine.kpiValue8 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue8")
        }
        if !B1PreKPIItemLine.kpiValue9.isRemoved {
            B1PreKPIItemLine.kpiValue9 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue9")
        }
        if !B1PreKPIItemLine.kpiValue10.isRemoved {
            B1PreKPIItemLine.kpiValue10 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue10")
        }
        if !B1PreKPIItemLine.kpiValue11.isRemoved {
            B1PreKPIItemLine.kpiValue11 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue11")
        }
        if !B1PreKPIItemLine.kpiValue12.isRemoved {
            B1PreKPIItemLine.kpiValue12 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue12")
        }
        if !B1PreKPIItemLine.kpiValue13.isRemoved {
            B1PreKPIItemLine.kpiValue13 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue13")
        }
        if !B1PreKPIItemLine.kpiValue14.isRemoved {
            B1PreKPIItemLine.kpiValue14 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue14")
        }
        if !B1PreKPIItemLine.kpiValue15.isRemoved {
            B1PreKPIItemLine.kpiValue15 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue15")
        }
        if !B1PreKPIItemLine.kpiValue16.isRemoved {
            B1PreKPIItemLine.kpiValue16 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue16")
        }
        if !B1PreKPIItemLine.kpiValue17.isRemoved {
            B1PreKPIItemLine.kpiValue17 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue17")
        }
        if !B1PreKPIItemLine.kpiValue18.isRemoved {
            B1PreKPIItemLine.kpiValue18 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue18")
        }
        if !B1PreKPIItemLine.kpiValue19.isRemoved {
            B1PreKPIItemLine.kpiValue19 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue19")
        }
        if !B1PreKPIItemLine.kpiValue20.isRemoved {
            B1PreKPIItemLine.kpiValue20 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue20")
        }
        if !B1PreKPIItemLine.kpiValue21.isRemoved {
            B1PreKPIItemLine.kpiValue21 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue21")
        }
        if !B1PreKPIItemLine.kpiValue22.isRemoved {
            B1PreKPIItemLine.kpiValue22 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue22")
        }
        if !B1PreKPIItemLine.kpiValue23.isRemoved {
            B1PreKPIItemLine.kpiValue23 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue23")
        }
        if !B1PreKPIItemLine.kpiValue24.isRemoved {
            B1PreKPIItemLine.kpiValue24 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue24")
        }
        if !B1PreKPIItemLine.kpiValue25.isRemoved {
            B1PreKPIItemLine.kpiValue25 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue25")
        }
        if !B1PreKPIItemLine.kpiValue26.isRemoved {
            B1PreKPIItemLine.kpiValue26 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue26")
        }
        if !B1PreKPIItemLine.kpiValue27.isRemoved {
            B1PreKPIItemLine.kpiValue27 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue27")
        }
        if !B1PreKPIItemLine.kpiValue28.isRemoved {
            B1PreKPIItemLine.kpiValue28 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue28")
        }
        if !B1PreKPIItemLine.kpiValue29.isRemoved {
            B1PreKPIItemLine.kpiValue29 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue29")
        }
        if !B1PreKPIItemLine.kpiValue30.isRemoved {
            B1PreKPIItemLine.kpiValue30 = B1ClassMetadata.ComplexTypes.kpiItemLine.property(withName: "KPIValue30")
        }
        if !B1PreKnowledgeBaseSolutionParams.solutionCode.isRemoved {
            B1PreKnowledgeBaseSolutionParams.solutionCode = B1ClassMetadata.ComplexTypes.knowledgeBaseSolutionParams.property(withName: "SolutionCode")
        }
        if !B1PreLandedCostParams.landedCostNumber.isRemoved {
            B1PreLandedCostParams.landedCostNumber = B1ClassMetadata.ComplexTypes.landedCostParams.property(withName: "LandedCostNumber")
        }
        if !B1PreLandedCostCostLine.docEntry.isRemoved {
            B1PreLandedCostCostLine.docEntry = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "DocEntry")
        }
        if !B1PreLandedCostCostLine.landedCostCode.isRemoved {
            B1PreLandedCostCostLine.landedCostCode = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "LandedCostCode")
        }
        if !B1PreLandedCostCostLine.allocationBy.isRemoved {
            B1PreLandedCostCostLine.allocationBy = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "AllocationBy")
        }
        if !B1PreLandedCostCostLine.amount.isRemoved {
            B1PreLandedCostCostLine.amount = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "Amount")
        }
        if !B1PreLandedCostCostLine.amountFC.isRemoved {
            B1PreLandedCostCostLine.amountFC = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "AmountFC")
        }
        if !B1PreLandedCostCostLine.factor.isRemoved {
            B1PreLandedCostCostLine.factor = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "Factor")
        }
        if !B1PreLandedCostCostLine.costType.isRemoved {
            B1PreLandedCostCostLine.costType = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "CostType")
        }
        if !B1PreLandedCostCostLine.includeForCustoms.isRemoved {
            B1PreLandedCostCostLine.includeForCustoms = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "IncludeForCustoms")
        }
        if !B1PreLandedCostCostLine.openAmount.isRemoved {
            B1PreLandedCostCostLine.openAmount = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "OpenAmount")
        }
        if !B1PreLandedCostCostLine.openAmountFC.isRemoved {
            B1PreLandedCostCostLine.openAmountFC = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "OpenAmountFC")
        }
        if !B1PreLandedCostCostLine.broker.isRemoved {
            B1PreLandedCostCostLine.broker = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "Broker")
        }
        if !B1PreLandedCostCostLine.brokerName.isRemoved {
            B1PreLandedCostCostLine.brokerName = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "BrokerName")
        }
        if !B1PreLandedCostCostLine.costCategory.isRemoved {
            B1PreLandedCostCostLine.costCategory = B1ClassMetadata.ComplexTypes.landedCostCostLine.property(withName: "CostCategory")
        }
        if !B1PreLandedCostItemLine.docEntry.isRemoved {
            B1PreLandedCostItemLine.docEntry = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "DocEntry")
        }
        if !B1PreLandedCostItemLine.lineNumber.isRemoved {
            B1PreLandedCostItemLine.lineNumber = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "LineNumber")
        }
        if !B1PreLandedCostItemLine.baseDocumentType.isRemoved {
            B1PreLandedCostItemLine.baseDocumentType = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "BaseDocumentType")
        }
        if !B1PreLandedCostItemLine.baseEntry.isRemoved {
            B1PreLandedCostItemLine.baseEntry = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "BaseEntry")
        }
        if !B1PreLandedCostItemLine.number.isRemoved {
            B1PreLandedCostItemLine.number = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Number")
        }
        if !B1PreLandedCostItemLine.itemDescription.isRemoved {
            B1PreLandedCostItemLine.itemDescription = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ItemDescription")
        }
        if !B1PreLandedCostItemLine.quantity.isRemoved {
            B1PreLandedCostItemLine.quantity = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Quantity")
        }
        if !B1PreLandedCostItemLine.baseDocumentPrice.isRemoved {
            B1PreLandedCostItemLine.baseDocumentPrice = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "BaseDocumentPrice")
        }
        if !B1PreLandedCostItemLine.rate.isRemoved {
            B1PreLandedCostItemLine.rate = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Rate")
        }
        if !B1PreLandedCostItemLine.projectedCustoms.isRemoved {
            B1PreLandedCostItemLine.projectedCustoms = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ProjectedCustoms")
        }
        if !B1PreLandedCostItemLine.projectedCustomsFC.isRemoved {
            B1PreLandedCostItemLine.projectedCustomsFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ProjectedCustomsFC")
        }
        if !B1PreLandedCostItemLine.expenditure.isRemoved {
            B1PreLandedCostItemLine.expenditure = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Expenditure")
        }
        if !B1PreLandedCostItemLine.expenditureFC.isRemoved {
            B1PreLandedCostItemLine.expenditureFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ExpenditureFC")
        }
        if !B1PreLandedCostItemLine.warehousePrice.isRemoved {
            B1PreLandedCostItemLine.warehousePrice = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "WarehousePrice")
        }
        if !B1PreLandedCostItemLine.warehousePriceFC.isRemoved {
            B1PreLandedCostItemLine.warehousePriceFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "WarehousePriceFC")
        }
        if !B1PreLandedCostItemLine.lineTotal.isRemoved {
            B1PreLandedCostItemLine.lineTotal = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "LineTotal")
        }
        if !B1PreLandedCostItemLine.lineTotalFC.isRemoved {
            B1PreLandedCostItemLine.lineTotalFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "LineTotalFC")
        }
        if !B1PreLandedCostItemLine.volume.isRemoved {
            B1PreLandedCostItemLine.volume = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Volume")
        }
        if !B1PreLandedCostItemLine.volumeUoM.isRemoved {
            B1PreLandedCostItemLine.volumeUoM = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "VolumeUoM")
        }
        if !B1PreLandedCostItemLine.weight1.isRemoved {
            B1PreLandedCostItemLine.weight1 = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Weight1")
        }
        if !B1PreLandedCostItemLine.weight1UnitCode.isRemoved {
            B1PreLandedCostItemLine.weight1UnitCode = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Weight1UnitCode")
        }
        if !B1PreLandedCostItemLine.weight2.isRemoved {
            B1PreLandedCostItemLine.weight2 = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Weight2")
        }
        if !B1PreLandedCostItemLine.weight2UnitCode.isRemoved {
            B1PreLandedCostItemLine.weight2UnitCode = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Weight2UnitCode")
        }
        if !B1PreLandedCostItemLine.vendorCode.isRemoved {
            B1PreLandedCostItemLine.vendorCode = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "VendorCode")
        }
        if !B1PreLandedCostItemLine.reference.isRemoved {
            B1PreLandedCostItemLine.reference = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Reference")
        }
        if !B1PreLandedCostItemLine.factorWithoutCustoms.isRemoved {
            B1PreLandedCostItemLine.factorWithoutCustoms = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "FactorWithoutCustoms")
        }
        if !B1PreLandedCostItemLine.factorWithCustoms.isRemoved {
            B1PreLandedCostItemLine.factorWithCustoms = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "FactorWithCustoms")
        }
        if !B1PreLandedCostItemLine.inventoryUoM.isRemoved {
            B1PreLandedCostItemLine.inventoryUoM = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "InventoryUoM")
        }
        if !B1PreLandedCostItemLine.blockNumber.isRemoved {
            B1PreLandedCostItemLine.blockNumber = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "BlockNumber")
        }
        if !B1PreLandedCostItemLine.importLog.isRemoved {
            B1PreLandedCostItemLine.importLog = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ImportLog")
        }
        if !B1PreLandedCostItemLine.originalWarehouse.isRemoved {
            B1PreLandedCostItemLine.originalWarehouse = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "OriginalWarehouse")
        }
        if !B1PreLandedCostItemLine.warehouse.isRemoved {
            B1PreLandedCostItemLine.warehouse = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Warehouse")
        }
        if !B1PreLandedCostItemLine.releaseNumber.isRemoved {
            B1PreLandedCostItemLine.releaseNumber = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ReleaseNumber")
        }
        if !B1PreLandedCostItemLine.variantCosts.isRemoved {
            B1PreLandedCostItemLine.variantCosts = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "VariantCosts")
        }
        if !B1PreLandedCostItemLine.fixCosts.isRemoved {
            B1PreLandedCostItemLine.fixCosts = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "FixCosts")
        }
        if !B1PreLandedCostItemLine.variantCostsFC.isRemoved {
            B1PreLandedCostItemLine.variantCostsFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "VariantCostsFC")
        }
        if !B1PreLandedCostItemLine.fixCostsFC.isRemoved {
            B1PreLandedCostItemLine.fixCostsFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "FixCostsFC")
        }
        if !B1PreLandedCostItemLine.customs.isRemoved {
            B1PreLandedCostItemLine.customs = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Customs")
        }
        if !B1PreLandedCostItemLine.customsFC.isRemoved {
            B1PreLandedCostItemLine.customsFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsFC")
        }
        if !B1PreLandedCostItemLine.baseDocumentValueLineTotal.isRemoved {
            B1PreLandedCostItemLine.baseDocumentValueLineTotal = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "BaseDocumentValueLineTotal")
        }
        if !B1PreLandedCostItemLine.baseDocumentValueLineTotalFC.isRemoved {
            B1PreLandedCostItemLine.baseDocumentValueLineTotalFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "BaseDocumentValueLineTotalFC")
        }
        if !B1PreLandedCostItemLine.allocatedUnitCostsLineTotal.isRemoved {
            B1PreLandedCostItemLine.allocatedUnitCostsLineTotal = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "AllocatedUnitCostsLineTotal")
        }
        if !B1PreLandedCostItemLine.allocatedUnitCostsLineTotalFC.isRemoved {
            B1PreLandedCostItemLine.allocatedUnitCostsLineTotalFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "AllocatedUnitCostsLineTotalFC")
        }
        if !B1PreLandedCostItemLine.customsValue.isRemoved {
            B1PreLandedCostItemLine.customsValue = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsValue")
        }
        if !B1PreLandedCostItemLine.customsValueFC.isRemoved {
            B1PreLandedCostItemLine.customsValueFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsValueFC")
        }
        if !B1PreLandedCostItemLine.totalCosts.isRemoved {
            B1PreLandedCostItemLine.totalCosts = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "TotalCosts")
        }
        if !B1PreLandedCostItemLine.totalCostsFC.isRemoved {
            B1PreLandedCostItemLine.totalCostsFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "TotalCostsFC")
        }
        if !B1PreLandedCostItemLine.totalVolume.isRemoved {
            B1PreLandedCostItemLine.totalVolume = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "TotalVolume")
        }
        if !B1PreLandedCostItemLine.baseLine.isRemoved {
            B1PreLandedCostItemLine.baseLine = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "BaseLine")
        }
        if !B1PreLandedCostItemLine.totalLineProjectedCustoms.isRemoved {
            B1PreLandedCostItemLine.totalLineProjectedCustoms = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "TotalLineProjectedCustoms")
        }
        if !B1PreLandedCostItemLine.allocatedCostsLineTotal.isRemoved {
            B1PreLandedCostItemLine.allocatedCostsLineTotal = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "AllocatedCostsLineTotal")
        }
        if !B1PreLandedCostItemLine.foBandIncludedCosts.isRemoved {
            B1PreLandedCostItemLine.foBandIncludedCosts = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "FOBandIncludedCosts")
        }
        if !B1PreLandedCostItemLine.foBandIncludedCostsFC.isRemoved {
            B1PreLandedCostItemLine.foBandIncludedCostsFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "FOBandIncludedCostsFC")
        }
        if !B1PreLandedCostItemLine.project.isRemoved {
            B1PreLandedCostItemLine.project = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Project")
        }
        if !B1PreLandedCostItemLine.distributionRule.isRemoved {
            B1PreLandedCostItemLine.distributionRule = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "DistributionRule")
        }
        if !B1PreLandedCostItemLine.distributionRule2.isRemoved {
            B1PreLandedCostItemLine.distributionRule2 = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "DistributionRule2")
        }
        if !B1PreLandedCostItemLine.distributionRule3.isRemoved {
            B1PreLandedCostItemLine.distributionRule3 = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "DistributionRule3")
        }
        if !B1PreLandedCostItemLine.distributionRule4.isRemoved {
            B1PreLandedCostItemLine.distributionRule4 = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "DistributionRule4")
        }
        if !B1PreLandedCostItemLine.distributionRule5.isRemoved {
            B1PreLandedCostItemLine.distributionRule5 = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "DistributionRule5")
        }
        if !B1PreLandedCostItemLine.priceList.isRemoved {
            B1PreLandedCostItemLine.priceList = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "PriceList")
        }
        if !B1PreLandedCostItemLine.automaticExpenditure.isRemoved {
            B1PreLandedCostItemLine.automaticExpenditure = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "AutomaticExpenditure")
        }
        if !B1PreLandedCostItemLine.inventoryValuation.isRemoved {
            B1PreLandedCostItemLine.inventoryValuation = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "InventoryValuation")
        }
        if !B1PreLandedCostItemLine.originLine.isRemoved {
            B1PreLandedCostItemLine.originLine = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "OriginLine")
        }
        if !B1PreLandedCostItemLine.currency.isRemoved {
            B1PreLandedCostItemLine.currency = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "Currency")
        }
        if !B1PreLandedCostItemLine.customsGroupRate.isRemoved {
            B1PreLandedCostItemLine.customsGroupRate = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsGroupRate")
        }
        if !B1PreLandedCostItemLine.vatGroup.isRemoved {
            B1PreLandedCostItemLine.vatGroup = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "VatGroup")
        }
        if !B1PreLandedCostItemLine.vatPercent.isRemoved {
            B1PreLandedCostItemLine.vatPercent = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "VatPercent")
        }
        if !B1PreLandedCostItemLine.exciseSum.isRemoved {
            B1PreLandedCostItemLine.exciseSum = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ExciseSum")
        }
        if !B1PreLandedCostItemLine.exciseSumFC.isRemoved {
            B1PreLandedCostItemLine.exciseSumFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ExciseSumFC")
        }
        if !B1PreLandedCostItemLine.exciseAffectStock.isRemoved {
            B1PreLandedCostItemLine.exciseAffectStock = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "ExciseAffectStock")
        }
        if !B1PreLandedCostItemLine.customsCost.isRemoved {
            B1PreLandedCostItemLine.customsCost = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsCost")
        }
        if !B1PreLandedCostItemLine.customsCostFC.isRemoved {
            B1PreLandedCostItemLine.customsCostFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsCostFC")
        }
        if !B1PreLandedCostItemLine.customsAffectStock.isRemoved {
            B1PreLandedCostItemLine.customsAffectStock = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsAffectStock")
        }
        if !B1PreLandedCostItemLine.customsVat.isRemoved {
            B1PreLandedCostItemLine.customsVat = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsVat")
        }
        if !B1PreLandedCostItemLine.customsVatFC.isRemoved {
            B1PreLandedCostItemLine.customsVatFC = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsVatFC")
        }
        if !B1PreLandedCostItemLine.customsVatAffectStock.isRemoved {
            B1PreLandedCostItemLine.customsVatAffectStock = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CustomsVatAffectStock")
        }
        if !B1PreLandedCostItemLine.ccdNumber.isRemoved {
            B1PreLandedCostItemLine.ccdNumber = B1ClassMetadata.ComplexTypes.landedCostItemLine.property(withName: "CCDNumber")
        }
        if !B1PreLandedCostsCodeParams.code.isRemoved {
            B1PreLandedCostsCodeParams.code = B1ClassMetadata.ComplexTypes.landedCostsCodeParams.property(withName: "Code")
        }
        if !B1PreLayer.transactionSequenceNum.isRemoved {
            B1PreLayer.transactionSequenceNum = B1ClassMetadata.ComplexTypes.layer.property(withName: "TransactionSequenceNum")
        }
        if !B1PreLayer.layerID.isRemoved {
            B1PreLayer.layerID = B1ClassMetadata.ComplexTypes.layer.property(withName: "LayerID")
        }
        if !B1PreLayer.docNumber.isRemoved {
            B1PreLayer.docNumber = B1ClassMetadata.ComplexTypes.layer.property(withName: "DocNumber")
        }
        if !B1PreLayer.docType.isRemoved {
            B1PreLayer.docType = B1ClassMetadata.ComplexTypes.layer.property(withName: "DocType")
        }
        if !B1PreLayer.entryDate.isRemoved {
            B1PreLayer.entryDate = B1ClassMetadata.ComplexTypes.layer.property(withName: "EntryDate")
        }
        if !B1PreLayer.currentCost.isRemoved {
            B1PreLayer.currentCost = B1ClassMetadata.ComplexTypes.layer.property(withName: "CurrentCost")
        }
        if !B1PreLayer.openQty.isRemoved {
            B1PreLayer.openQty = B1ClassMetadata.ComplexTypes.layer.property(withName: "OpenQty")
        }
        if !B1PreLegalDataDetail.docEntry.isRemoved {
            B1PreLegalDataDetail.docEntry = B1ClassMetadata.ComplexTypes.legalDataDetail.property(withName: "DocEntry")
        }
        if !B1PreLegalDataDetail.lineSequence.isRemoved {
            B1PreLegalDataDetail.lineSequence = B1ClassMetadata.ComplexTypes.legalDataDetail.property(withName: "LineSequence")
        }
        if !B1PreLegalDataDetail.lineType.isRemoved {
            B1PreLegalDataDetail.lineType = B1ClassMetadata.ComplexTypes.legalDataDetail.property(withName: "LineType")
        }
        if !B1PreLegalDataDetail.taxCode.isRemoved {
            B1PreLegalDataDetail.taxCode = B1ClassMetadata.ComplexTypes.legalDataDetail.property(withName: "TaxCode")
        }
        if !B1PreLegalDataDetail.taxRate.isRemoved {
            B1PreLegalDataDetail.taxRate = B1ClassMetadata.ComplexTypes.legalDataDetail.property(withName: "TaxRate")
        }
        if !B1PreLegalDataDetail.amount.isRemoved {
            B1PreLegalDataDetail.amount = B1ClassMetadata.ComplexTypes.legalDataDetail.property(withName: "Amount")
        }
        if !B1PreLegalDataParams.docEntry.isRemoved {
            B1PreLegalDataParams.docEntry = B1ClassMetadata.ComplexTypes.legalDataParams.property(withName: "DocEntry")
        }
        if !B1PreLegalDataParams.sourceObjectType.isRemoved {
            B1PreLegalDataParams.sourceObjectType = B1ClassMetadata.ComplexTypes.legalDataParams.property(withName: "SourceObjectType")
        }
        if !B1PreLegalDataParams.sourceObjectEntry.isRemoved {
            B1PreLegalDataParams.sourceObjectEntry = B1ClassMetadata.ComplexTypes.legalDataParams.property(withName: "SourceObjectEntry")
        }
        if !B1PreLengthMeasureParams.unitCode.isRemoved {
            B1PreLengthMeasureParams.unitCode = B1ClassMetadata.ComplexTypes.lengthMeasureParams.property(withName: "UnitCode")
        }
        if !B1PreLineExpenseTaxJurisdiction.jurisdictionCode.isRemoved {
            B1PreLineExpenseTaxJurisdiction.jurisdictionCode = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "JurisdictionCode")
        }
        if !B1PreLineExpenseTaxJurisdiction.jurisdictionType.isRemoved {
            B1PreLineExpenseTaxJurisdiction.jurisdictionType = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "JurisdictionType")
        }
        if !B1PreLineExpenseTaxJurisdiction.taxAmount.isRemoved {
            B1PreLineExpenseTaxJurisdiction.taxAmount = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "TaxAmount")
        }
        if !B1PreLineExpenseTaxJurisdiction.taxAmountSC.isRemoved {
            B1PreLineExpenseTaxJurisdiction.taxAmountSC = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "TaxAmountSC")
        }
        if !B1PreLineExpenseTaxJurisdiction.taxAmountFC.isRemoved {
            B1PreLineExpenseTaxJurisdiction.taxAmountFC = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "TaxAmountFC")
        }
        if !B1PreLineExpenseTaxJurisdiction.taxRate.isRemoved {
            B1PreLineExpenseTaxJurisdiction.taxRate = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "TaxRate")
        }
        if !B1PreLineExpenseTaxJurisdiction.docEntry.isRemoved {
            B1PreLineExpenseTaxJurisdiction.docEntry = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "DocEntry")
        }
        if !B1PreLineExpenseTaxJurisdiction.lineNumber.isRemoved {
            B1PreLineExpenseTaxJurisdiction.lineNumber = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "LineNumber")
        }
        if !B1PreLineExpenseTaxJurisdiction.rowSequence.isRemoved {
            B1PreLineExpenseTaxJurisdiction.rowSequence = B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.property(withName: "RowSequence")
        }
        if !B1PreLineTaxJurisdiction.jurisdictionCode.isRemoved {
            B1PreLineTaxJurisdiction.jurisdictionCode = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "JurisdictionCode")
        }
        if !B1PreLineTaxJurisdiction.jurisdictionType.isRemoved {
            B1PreLineTaxJurisdiction.jurisdictionType = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "JurisdictionType")
        }
        if !B1PreLineTaxJurisdiction.taxAmount.isRemoved {
            B1PreLineTaxJurisdiction.taxAmount = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "TaxAmount")
        }
        if !B1PreLineTaxJurisdiction.taxAmountSC.isRemoved {
            B1PreLineTaxJurisdiction.taxAmountSC = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "TaxAmountSC")
        }
        if !B1PreLineTaxJurisdiction.taxAmountFC.isRemoved {
            B1PreLineTaxJurisdiction.taxAmountFC = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "TaxAmountFC")
        }
        if !B1PreLineTaxJurisdiction.taxRate.isRemoved {
            B1PreLineTaxJurisdiction.taxRate = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "TaxRate")
        }
        if !B1PreLineTaxJurisdiction.docEntry.isRemoved {
            B1PreLineTaxJurisdiction.docEntry = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "DocEntry")
        }
        if !B1PreLineTaxJurisdiction.lineNumber.isRemoved {
            B1PreLineTaxJurisdiction.lineNumber = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "LineNumber")
        }
        if !B1PreLineTaxJurisdiction.rowSequence.isRemoved {
            B1PreLineTaxJurisdiction.rowSequence = B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.property(withName: "RowSequence")
        }
        if !B1PreLocalEraParams.code.isRemoved {
            B1PreLocalEraParams.code = B1ClassMetadata.ComplexTypes.localEraParams.property(withName: "Code")
        }
        if !B1PreManufacturerParams.code.isRemoved {
            B1PreManufacturerParams.code = B1ClassMetadata.ComplexTypes.manufacturerParams.property(withName: "Code")
        }
        if !B1PreMaterialGroupParams.absEntry.isRemoved {
            B1PreMaterialGroupParams.absEntry = B1ClassMetadata.ComplexTypes.materialGroupParams.property(withName: "AbsEntry")
        }
        if !B1PreMaterialGroupParams.materialGroupCode.isRemoved {
            B1PreMaterialGroupParams.materialGroupCode = B1ClassMetadata.ComplexTypes.materialGroupParams.property(withName: "MaterialGroupCode")
        }
        if !B1PreMaterialRevaluationFIFO.layers.isRemoved {
            B1PreMaterialRevaluationFIFO.layers = B1ClassMetadata.ComplexTypes.materialRevaluationFIFO.property(withName: "Layers")
        }
        if !B1PreMaterialRevaluationFIFOParams.itemCode.isRemoved {
            B1PreMaterialRevaluationFIFOParams.itemCode = B1ClassMetadata.ComplexTypes.materialRevaluationFIFOParams.property(withName: "ItemCode")
        }
        if !B1PreMaterialRevaluationFIFOParams.locationType.isRemoved {
            B1PreMaterialRevaluationFIFOParams.locationType = B1ClassMetadata.ComplexTypes.materialRevaluationFIFOParams.property(withName: "LocationType")
        }
        if !B1PreMaterialRevaluationFIFOParams.locationCode.isRemoved {
            B1PreMaterialRevaluationFIFOParams.locationCode = B1ClassMetadata.ComplexTypes.materialRevaluationFIFOParams.property(withName: "LocationCode")
        }
        if !B1PreMaterialRevaluationFIFOParams.showIssuedLayers.isRemoved {
            B1PreMaterialRevaluationFIFOParams.showIssuedLayers = B1ClassMetadata.ComplexTypes.materialRevaluationFIFOParams.property(withName: "ShowIssuedLayers")
        }
        if !B1PreMaterialRevaluationLine.lineNum.isRemoved {
            B1PreMaterialRevaluationLine.lineNum = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "LineNum")
        }
        if !B1PreMaterialRevaluationLine.itemCode.isRemoved {
            B1PreMaterialRevaluationLine.itemCode = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "ItemCode")
        }
        if !B1PreMaterialRevaluationLine.itemDescription.isRemoved {
            B1PreMaterialRevaluationLine.itemDescription = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "ItemDescription")
        }
        if !B1PreMaterialRevaluationLine.quantity.isRemoved {
            B1PreMaterialRevaluationLine.quantity = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "Quantity")
        }
        if !B1PreMaterialRevaluationLine.price.isRemoved {
            B1PreMaterialRevaluationLine.price = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "Price")
        }
        if !B1PreMaterialRevaluationLine.warehouseCode.isRemoved {
            B1PreMaterialRevaluationLine.warehouseCode = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "WarehouseCode")
        }
        if !B1PreMaterialRevaluationLine.actualPrice.isRemoved {
            B1PreMaterialRevaluationLine.actualPrice = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "ActualPrice")
        }
        if !B1PreMaterialRevaluationLine.onHand.isRemoved {
            B1PreMaterialRevaluationLine.onHand = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "OnHand")
        }
        if !B1PreMaterialRevaluationLine.debitCredit.isRemoved {
            B1PreMaterialRevaluationLine.debitCredit = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "DebitCredit")
        }
        if !B1PreMaterialRevaluationLine.docEntry.isRemoved {
            B1PreMaterialRevaluationLine.docEntry = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "DocEntry")
        }
        if !B1PreMaterialRevaluationLine.revaluationDecrementAccount.isRemoved {
            B1PreMaterialRevaluationLine.revaluationDecrementAccount = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "RevaluationDecrementAccount")
        }
        if !B1PreMaterialRevaluationLine.revaluationIncrementAccount.isRemoved {
            B1PreMaterialRevaluationLine.revaluationIncrementAccount = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "RevaluationIncrementAccount")
        }
        if !B1PreMaterialRevaluationLine.revalAmountToStock.isRemoved {
            B1PreMaterialRevaluationLine.revalAmountToStock = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "RevalAmountToStock")
        }
        if !B1PreMaterialRevaluationLine.project.isRemoved {
            B1PreMaterialRevaluationLine.project = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "Project")
        }
        if !B1PreMaterialRevaluationLine.distributionRule.isRemoved {
            B1PreMaterialRevaluationLine.distributionRule = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "DistributionRule")
        }
        if !B1PreMaterialRevaluationLine.distributionRule2.isRemoved {
            B1PreMaterialRevaluationLine.distributionRule2 = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "DistributionRule2")
        }
        if !B1PreMaterialRevaluationLine.distributionRule3.isRemoved {
            B1PreMaterialRevaluationLine.distributionRule3 = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "DistributionRule3")
        }
        if !B1PreMaterialRevaluationLine.distributionRule4.isRemoved {
            B1PreMaterialRevaluationLine.distributionRule4 = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "DistributionRule4")
        }
        if !B1PreMaterialRevaluationLine.distributionRule5.isRemoved {
            B1PreMaterialRevaluationLine.distributionRule5 = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "DistributionRule5")
        }
        if !B1PreMaterialRevaluationLine.fifoLayers.isRemoved {
            B1PreMaterialRevaluationLine.fifoLayers = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "FIFOLayers")
        }
        if !B1PreMaterialRevaluationLine.snbLinesCollection.isRemoved {
            B1PreMaterialRevaluationLine.snbLinesCollection = B1ClassMetadata.ComplexTypes.materialRevaluationLine.property(withName: "SNBLinesCollection")
        }
        if !B1PreMaterialRevaluationParams.docEntry.isRemoved {
            B1PreMaterialRevaluationParams.docEntry = B1ClassMetadata.ComplexTypes.materialRevaluationParams.property(withName: "DocEntry")
        }
        if !B1PreMaterialRevaluationSNBParam.itemCode.isRemoved {
            B1PreMaterialRevaluationSNBParam.itemCode = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParam.property(withName: "ItemCode")
        }
        if !B1PreMaterialRevaluationSNBParams.snbAbsEntry.isRemoved {
            B1PreMaterialRevaluationSNBParams.snbAbsEntry = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.property(withName: "SnbAbsEntry")
        }
        if !B1PreMaterialRevaluationSNBParams.newCost.isRemoved {
            B1PreMaterialRevaluationSNBParams.newCost = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.property(withName: "NewCost")
        }
        if !B1PreMaterialRevaluationSNBParams.debitCredit.isRemoved {
            B1PreMaterialRevaluationSNBParams.debitCredit = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.property(withName: "DebitCredit")
        }
        if !B1PreMaterialRevaluationSNBParams.systemNumber.isRemoved {
            B1PreMaterialRevaluationSNBParams.systemNumber = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.property(withName: "SystemNumber")
        }
        if !B1PreMaterialRevaluationSNBParams.lotNumber.isRemoved {
            B1PreMaterialRevaluationSNBParams.lotNumber = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.property(withName: "LotNumber")
        }
        if !B1PreMaterialRevaluationSNBParams.manufactureNumber.isRemoved {
            B1PreMaterialRevaluationSNBParams.manufactureNumber = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.property(withName: "ManufactureNumber")
        }
        if !B1PreMaterialRevaluationSNBParams.admissionDate.isRemoved {
            B1PreMaterialRevaluationSNBParams.admissionDate = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.property(withName: "AdmissionDate")
        }
        if !B1PreMaterialRevaluationSNBParams.expirationDate.isRemoved {
            B1PreMaterialRevaluationSNBParams.expirationDate = B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.property(withName: "ExpirationDate")
        }
        if !B1PreMessageDataColumn.columnName.isRemoved {
            B1PreMessageDataColumn.columnName = B1ClassMetadata.ComplexTypes.messageDataColumn.property(withName: "ColumnName")
        }
        if !B1PreMessageDataColumn.link.isRemoved {
            B1PreMessageDataColumn.link = B1ClassMetadata.ComplexTypes.messageDataColumn.property(withName: "Link")
        }
        if !B1PreMessageDataColumn.messageDataLines.isRemoved {
            B1PreMessageDataColumn.messageDataLines = B1ClassMetadata.ComplexTypes.messageDataColumn.property(withName: "MessageDataLines")
        }
        if !B1PreMessageDataLine.value.isRemoved {
            B1PreMessageDataLine.value = B1ClassMetadata.ComplexTypes.messageDataLine.property(withName: "Value")
        }
        if !B1PreMessageDataLine.object.isRemoved {
            B1PreMessageDataLine.object = B1ClassMetadata.ComplexTypes.messageDataLine.property(withName: "Object")
        }
        if !B1PreMessageDataLine.objectKey.isRemoved {
            B1PreMessageDataLine.objectKey = B1ClassMetadata.ComplexTypes.messageDataLine.property(withName: "ObjectKey")
        }
        if !B1PreMessageHeader.code.isRemoved {
            B1PreMessageHeader.code = B1ClassMetadata.ComplexTypes.messageHeader.property(withName: "Code")
        }
        if !B1PreMessageHeader.received.isRemoved {
            B1PreMessageHeader.received = B1ClassMetadata.ComplexTypes.messageHeader.property(withName: "Received")
        }
        if !B1PreMessageHeader.read.isRemoved {
            B1PreMessageHeader.read = B1ClassMetadata.ComplexTypes.messageHeader.property(withName: "Read")
        }
        if !B1PreMessageHeader.receivedDate.isRemoved {
            B1PreMessageHeader.receivedDate = B1ClassMetadata.ComplexTypes.messageHeader.property(withName: "ReceivedDate")
        }
        if !B1PreMessageHeader.receivedTime.isRemoved {
            B1PreMessageHeader.receivedTime = B1ClassMetadata.ComplexTypes.messageHeader.property(withName: "ReceivedTime")
        }
        if !B1PreMessageHeader.sentDate.isRemoved {
            B1PreMessageHeader.sentDate = B1ClassMetadata.ComplexTypes.messageHeader.property(withName: "SentDate")
        }
        if !B1PreMessageHeader.sentTime.isRemoved {
            B1PreMessageHeader.sentTime = B1ClassMetadata.ComplexTypes.messageHeader.property(withName: "SentTime")
        }
        if !B1PreMobileAddOnSettingParams.code.isRemoved {
            B1PreMobileAddOnSettingParams.code = B1ClassMetadata.ComplexTypes.mobileAddOnSettingParams.property(withName: "Code")
        }
        if !B1PreMobileAddOnSettingParams.description.isRemoved {
            B1PreMobileAddOnSettingParams.description = B1ClassMetadata.ComplexTypes.mobileAddOnSettingParams.property(withName: "Description")
        }
        if !B1PreMobileServerDateTime.date.isRemoved {
            B1PreMobileServerDateTime.date = B1ClassMetadata.ComplexTypes.mobileServerDateTime.property(withName: "Date")
        }
        if !B1PreMobileServerDateTime.time.isRemoved {
            B1PreMobileServerDateTime.time = B1ClassMetadata.ComplexTypes.mobileServerDateTime.property(withName: "Time")
        }
        if !B1PreMultiLanguageTranslationParams.numerator.isRemoved {
            B1PreMultiLanguageTranslationParams.numerator = B1ClassMetadata.ComplexTypes.multiLanguageTranslationParams.property(withName: "Numerator")
        }
        if !B1PreMultiplePayment.bankStatmentLineID.isRemoved {
            B1PreMultiplePayment.bankStatmentLineID = B1ClassMetadata.ComplexTypes.multiplePayment.property(withName: "BankStatmentLineID")
        }
        if !B1PreMultiplePayment.listLineID.isRemoved {
            B1PreMultiplePayment.listLineID = B1ClassMetadata.ComplexTypes.multiplePayment.property(withName: "ListLineID")
        }
        if !B1PreMultiplePayment.documentIdentifier.isRemoved {
            B1PreMultiplePayment.documentIdentifier = B1ClassMetadata.ComplexTypes.multiplePayment.property(withName: "DocumentIdentifier")
        }
        if !B1PreMultiplePayment.amountLC.isRemoved {
            B1PreMultiplePayment.amountLC = B1ClassMetadata.ComplexTypes.multiplePayment.property(withName: "AmountLC")
        }
        if !B1PreMultiplePayment.amountFC.isRemoved {
            B1PreMultiplePayment.amountFC = B1ClassMetadata.ComplexTypes.multiplePayment.property(withName: "AmountFC")
        }
        if !B1PreMultiplePayment.isDebit.isRemoved {
            B1PreMultiplePayment.isDebit = B1ClassMetadata.ComplexTypes.multiplePayment.property(withName: "IsDebit")
        }
        if !B1PreNCMCodeSetupParams.absEntry.isRemoved {
            B1PreNCMCodeSetupParams.absEntry = B1ClassMetadata.ComplexTypes.ncmCodeSetupParams.property(withName: "AbsEntry")
        }
        if !B1PreNCMCodeSetupParams.ncmCode.isRemoved {
            B1PreNCMCodeSetupParams.ncmCode = B1ClassMetadata.ComplexTypes.ncmCodeSetupParams.property(withName: "NCMCode")
        }
        if !B1PreNCMCodeSetupParams.description.isRemoved {
            B1PreNCMCodeSetupParams.description = B1ClassMetadata.ComplexTypes.ncmCodeSetupParams.property(withName: "Description")
        }
        if !B1PreNFModelParams.absEntry.isRemoved {
            B1PreNFModelParams.absEntry = B1ClassMetadata.ComplexTypes.nfModelParams.property(withName: "AbsEntry")
        }
        if !B1PreNFModelParams.nfmName.isRemoved {
            B1PreNFModelParams.nfmName = B1ClassMetadata.ComplexTypes.nfModelParams.property(withName: "NFMName")
        }
        if !B1PreNFModelParams.nfmDescription.isRemoved {
            B1PreNFModelParams.nfmDescription = B1ClassMetadata.ComplexTypes.nfModelParams.property(withName: "NFMDescription")
        }
        if !B1PreNFModelParams.nfmCode.isRemoved {
            B1PreNFModelParams.nfmCode = B1ClassMetadata.ComplexTypes.nfModelParams.property(withName: "NFMCode")
        }
        if !B1PreNFTaxCategoryParams.absID.isRemoved {
            B1PreNFTaxCategoryParams.absID = B1ClassMetadata.ComplexTypes.nfTaxCategoryParams.property(withName: "AbsId")
        }
        if !B1PreNFTaxCategoryParams.code.isRemoved {
            B1PreNFTaxCategoryParams.code = B1ClassMetadata.ComplexTypes.nfTaxCategoryParams.property(withName: "Code")
        }
        if !B1PreNatureOfAssesseeParams.absEntry.isRemoved {
            B1PreNatureOfAssesseeParams.absEntry = B1ClassMetadata.ComplexTypes.natureOfAssesseeParams.property(withName: "AbsEntry")
        }
        if !B1PreNatureOfAssesseeParams.code.isRemoved {
            B1PreNatureOfAssesseeParams.code = B1ClassMetadata.ComplexTypes.natureOfAssesseeParams.property(withName: "Code")
        }
        if !B1PreNatureOfAssesseeParams.description.isRemoved {
            B1PreNatureOfAssesseeParams.description = B1ClassMetadata.ComplexTypes.natureOfAssesseeParams.property(withName: "Description")
        }
        if !B1PreOccurenceCodeParams.absEntry.isRemoved {
            B1PreOccurenceCodeParams.absEntry = B1ClassMetadata.ComplexTypes.occurenceCodeParams.property(withName: "AbsEntry")
        }
        if !B1PreOccurenceCodeParams.code.isRemoved {
            B1PreOccurenceCodeParams.code = B1ClassMetadata.ComplexTypes.occurenceCodeParams.property(withName: "Code")
        }
        if !B1PreOccurenceCodeParams.description.isRemoved {
            B1PreOccurenceCodeParams.description = B1ClassMetadata.ComplexTypes.occurenceCodeParams.property(withName: "Description")
        }
        if !B1PreOccurenceCodeParams.note.isRemoved {
            B1PreOccurenceCodeParams.note = B1ClassMetadata.ComplexTypes.occurenceCodeParams.property(withName: "Note")
        }
        if !B1PreOccurenceCodeParams.requestedBoeStatus.isRemoved {
            B1PreOccurenceCodeParams.requestedBoeStatus = B1ClassMetadata.ComplexTypes.occurenceCodeParams.property(withName: "RequestedBoeStatus")
        }
        if !B1PreOccurenceCodeParams.isMovement.isRemoved {
            B1PreOccurenceCodeParams.isMovement = B1ClassMetadata.ComplexTypes.occurenceCodeParams.property(withName: "IsMovement")
        }
        if !B1PreOpenningBalanceAccount.openBalanceAccount.isRemoved {
            B1PreOpenningBalanceAccount.openBalanceAccount = B1ClassMetadata.ComplexTypes.openningBalanceAccount.property(withName: "OpenBalanceAccount")
        }
        if !B1PreOpenningBalanceAccount.date.isRemoved {
            B1PreOpenningBalanceAccount.date = B1ClassMetadata.ComplexTypes.openningBalanceAccount.property(withName: "Date")
        }
        if !B1PreOpenningBalanceAccount.ref1.isRemoved {
            B1PreOpenningBalanceAccount.ref1 = B1ClassMetadata.ComplexTypes.openningBalanceAccount.property(withName: "Ref1")
        }
        if !B1PreOpenningBalanceAccount.ref2.isRemoved {
            B1PreOpenningBalanceAccount.ref2 = B1ClassMetadata.ComplexTypes.openningBalanceAccount.property(withName: "Ref2")
        }
        if !B1PreOpenningBalanceAccount.details.isRemoved {
            B1PreOpenningBalanceAccount.details = B1ClassMetadata.ComplexTypes.openningBalanceAccount.property(withName: "Details")
        }
        if !B1PreOpenningBalanceAccount.bplid.isRemoved {
            B1PreOpenningBalanceAccount.bplid = B1ClassMetadata.ComplexTypes.openningBalanceAccount.property(withName: "BPLID")
        }
        if !B1PreOriginalItem.itemCode.isRemoved {
            B1PreOriginalItem.itemCode = B1ClassMetadata.ComplexTypes.originalItem.property(withName: "ItemCode")
        }
        if !B1PreOriginalItem.itemName.isRemoved {
            B1PreOriginalItem.itemName = B1ClassMetadata.ComplexTypes.originalItem.property(withName: "ItemName")
        }
        if !B1PreOriginalItem.alternativeItems.isRemoved {
            B1PreOriginalItem.alternativeItems = B1ClassMetadata.ComplexTypes.originalItem.property(withName: "AlternativeItems")
        }
        if !B1PreOriginalItemParams.itemCode.isRemoved {
            B1PreOriginalItemParams.itemCode = B1ClassMetadata.ComplexTypes.originalItemParams.property(withName: "ItemCode")
        }
        if !B1PreOriginalItemParams.itemName.isRemoved {
            B1PreOriginalItemParams.itemName = B1ClassMetadata.ComplexTypes.originalItemParams.property(withName: "ItemName")
        }
        if !B1PrePMCActivityData.activityID.isRemoved {
            B1PrePMCActivityData.activityID = B1ClassMetadata.ComplexTypes.pmcActivityData.property(withName: "ActivityID")
        }
        if !B1PrePMCActivityData.activityType.isRemoved {
            B1PrePMCActivityData.activityType = B1ClassMetadata.ComplexTypes.pmcActivityData.property(withName: "ActivityType")
        }
        if !B1PrePMCActivityData.laborItem.isRemoved {
            B1PrePMCActivityData.laborItem = B1ClassMetadata.ComplexTypes.pmcActivityData.property(withName: "LaborItem")
        }
        if !B1PrePMCActivityData.isChargeable.isRemoved {
            B1PrePMCActivityData.isChargeable = B1ClassMetadata.ComplexTypes.pmcActivityData.property(withName: "IsChargeable")
        }
        if !B1PrePMCActivityData.isAbsence.isRemoved {
            B1PrePMCActivityData.isAbsence = B1ClassMetadata.ComplexTypes.pmcActivityData.property(withName: "IsAbsence")
        }
        if !B1PrePMCAreaData.areaID.isRemoved {
            B1PrePMCAreaData.areaID = B1ClassMetadata.ComplexTypes.pmcAreaData.property(withName: "AreaID")
        }
        if !B1PrePMCAreaData.areaName.isRemoved {
            B1PrePMCAreaData.areaName = B1ClassMetadata.ComplexTypes.pmcAreaData.property(withName: "AreaName")
        }
        if !B1PrePMCPriorityData.priorityID.isRemoved {
            B1PrePMCPriorityData.priorityID = B1ClassMetadata.ComplexTypes.pmcPriorityData.property(withName: "PriorityID")
        }
        if !B1PrePMCPriorityData.priorityName.isRemoved {
            B1PrePMCPriorityData.priorityName = B1ClassMetadata.ComplexTypes.pmcPriorityData.property(withName: "PriorityName")
        }
        if !B1PrePMCStageTypeData.stageID.isRemoved {
            B1PrePMCStageTypeData.stageID = B1ClassMetadata.ComplexTypes.pmcStageTypeData.property(withName: "StageID")
        }
        if !B1PrePMCStageTypeData.stageName.isRemoved {
            B1PrePMCStageTypeData.stageName = B1ClassMetadata.ComplexTypes.pmcStageTypeData.property(withName: "StageName")
        }
        if !B1PrePMCStageTypeData.stageDescription.isRemoved {
            B1PrePMCStageTypeData.stageDescription = B1ClassMetadata.ComplexTypes.pmcStageTypeData.property(withName: "StageDescription")
        }
        if !B1PrePMCSubprojectTypeData.subprojectTypeID.isRemoved {
            B1PrePMCSubprojectTypeData.subprojectTypeID = B1ClassMetadata.ComplexTypes.pmcSubprojectTypeData.property(withName: "SubprojectTypeID")
        }
        if !B1PrePMCSubprojectTypeData.subprojectTypeName.isRemoved {
            B1PrePMCSubprojectTypeData.subprojectTypeName = B1ClassMetadata.ComplexTypes.pmcSubprojectTypeData.property(withName: "SubprojectTypeName")
        }
        if !B1PrePMCTaskData.taskID.isRemoved {
            B1PrePMCTaskData.taskID = B1ClassMetadata.ComplexTypes.pmcTaskData.property(withName: "TaskID")
        }
        if !B1PrePMCTaskData.taskName.isRemoved {
            B1PrePMCTaskData.taskName = B1ClassMetadata.ComplexTypes.pmcTaskData.property(withName: "TaskName")
        }
        if !B1PrePMSActivityData.lineID.isRemoved {
            B1PrePMSActivityData.lineID = B1ClassMetadata.ComplexTypes.pmsActivityData.property(withName: "LineID")
        }
        if !B1PrePMSActivityData.stageID.isRemoved {
            B1PrePMSActivityData.stageID = B1ClassMetadata.ComplexTypes.pmsActivityData.property(withName: "StageID")
        }
        if !B1PrePMSActivityData.activityID.isRemoved {
            B1PrePMSActivityData.activityID = B1ClassMetadata.ComplexTypes.pmsActivityData.property(withName: "ActivityID")
        }
        if !B1PrePMSDocAttachement.absEntry.isRemoved {
            B1PrePMSDocAttachement.absEntry = B1ClassMetadata.ComplexTypes.pmsDocAttachement.property(withName: "AbsEntry")
        }
        if !B1PrePMSDocAttachement.lineID.isRemoved {
            B1PrePMSDocAttachement.lineID = B1ClassMetadata.ComplexTypes.pmsDocAttachement.property(withName: "LineID")
        }
        if !B1PrePMSDocAttachement.sourcePath.isRemoved {
            B1PrePMSDocAttachement.sourcePath = B1ClassMetadata.ComplexTypes.pmsDocAttachement.property(withName: "SourcePath")
        }
        if !B1PrePMSDocAttachement.fileName.isRemoved {
            B1PrePMSDocAttachement.fileName = B1ClassMetadata.ComplexTypes.pmsDocAttachement.property(withName: "FileName")
        }
        if !B1PrePMSDocAttachement.fileExtension.isRemoved {
            B1PrePMSDocAttachement.fileExtension = B1ClassMetadata.ComplexTypes.pmsDocAttachement.property(withName: "FileExtension")
        }
        if !B1PrePMSDocAttachement.attachementDate.isRemoved {
            B1PrePMSDocAttachement.attachementDate = B1ClassMetadata.ComplexTypes.pmsDocAttachement.property(withName: "AttachementDate")
        }
        if !B1PrePMSDocumentData.lineID.isRemoved {
            B1PrePMSDocumentData.lineID = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "LineID")
        }
        if !B1PrePMSDocumentData.stageID.isRemoved {
            B1PrePMSDocumentData.stageID = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "StageID")
        }
        if !B1PrePMSDocumentData.docType.isRemoved {
            B1PrePMSDocumentData.docType = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "DocType")
        }
        if !B1PrePMSDocumentData.docEntry.isRemoved {
            B1PrePMSDocumentData.docEntry = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "DocEntry")
        }
        if !B1PrePMSDocumentData.docDate.isRemoved {
            B1PrePMSDocumentData.docDate = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "DocDate")
        }
        if !B1PrePMSDocumentData.total.isRemoved {
            B1PrePMSDocumentData.total = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "Total")
        }
        if !B1PrePMSDocumentData.lineNumber.isRemoved {
            B1PrePMSDocumentData.lineNumber = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "LineNumber")
        }
        if !B1PrePMSDocumentData.status.isRemoved {
            B1PrePMSDocumentData.status = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "Status")
        }
        if !B1PrePMSDocumentData.amountCategory.isRemoved {
            B1PrePMSDocumentData.amountCategory = B1ClassMetadata.ComplexTypes.pmsDocumentData.property(withName: "AmountCategory")
        }
        if !B1PrePMSOpenIssueData.lineID.isRemoved {
            B1PrePMSOpenIssueData.lineID = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "LineID")
        }
        if !B1PrePMSOpenIssueData.stageID.isRemoved {
            B1PrePMSOpenIssueData.stageID = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "StageID")
        }
        if !B1PrePMSOpenIssueData.area.isRemoved {
            B1PrePMSOpenIssueData.area = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "Area")
        }
        if !B1PrePMSOpenIssueData.priority.isRemoved {
            B1PrePMSOpenIssueData.priority = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "Priority")
        }
        if !B1PrePMSOpenIssueData.remarks.isRemoved {
            B1PrePMSOpenIssueData.remarks = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "Remarks")
        }
        if !B1PrePMSOpenIssueData.closed.isRemoved {
            B1PrePMSOpenIssueData.closed = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "Closed")
        }
        if !B1PrePMSOpenIssueData.solutionID.isRemoved {
            B1PrePMSOpenIssueData.solutionID = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "SolutionID")
        }
        if !B1PrePMSOpenIssueData.responsible.isRemoved {
            B1PrePMSOpenIssueData.responsible = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "Responsible")
        }
        if !B1PrePMSOpenIssueData.enteredBy.isRemoved {
            B1PrePMSOpenIssueData.enteredBy = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "EnteredBy")
        }
        if !B1PrePMSOpenIssueData.enteredDate.isRemoved {
            B1PrePMSOpenIssueData.enteredDate = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "EnteredDate")
        }
        if !B1PrePMSOpenIssueData.effort.isRemoved {
            B1PrePMSOpenIssueData.effort = B1ClassMetadata.ComplexTypes.pmsOpenIssueData.property(withName: "Effort")
        }
        if !B1PrePMSStageAttachement.absEntry.isRemoved {
            B1PrePMSStageAttachement.absEntry = B1ClassMetadata.ComplexTypes.pmsStageAttachement.property(withName: "AbsEntry")
        }
        if !B1PrePMSStageAttachement.lineID.isRemoved {
            B1PrePMSStageAttachement.lineID = B1ClassMetadata.ComplexTypes.pmsStageAttachement.property(withName: "LineID")
        }
        if !B1PrePMSStageAttachement.sourcePath.isRemoved {
            B1PrePMSStageAttachement.sourcePath = B1ClassMetadata.ComplexTypes.pmsStageAttachement.property(withName: "SourcePath")
        }
        if !B1PrePMSStageAttachement.fileName.isRemoved {
            B1PrePMSStageAttachement.fileName = B1ClassMetadata.ComplexTypes.pmsStageAttachement.property(withName: "FileName")
        }
        if !B1PrePMSStageAttachement.fileExtension.isRemoved {
            B1PrePMSStageAttachement.fileExtension = B1ClassMetadata.ComplexTypes.pmsStageAttachement.property(withName: "FileExtension")
        }
        if !B1PrePMSStageAttachement.attachementDate.isRemoved {
            B1PrePMSStageAttachement.attachementDate = B1ClassMetadata.ComplexTypes.pmsStageAttachement.property(withName: "AttachementDate")
        }
        if !B1PrePMSStageData.lineID.isRemoved {
            B1PrePMSStageData.lineID = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "LineID")
        }
        if !B1PrePMSStageData.stageID.isRemoved {
            B1PrePMSStageData.stageID = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "StageID")
        }
        if !B1PrePMSStageData.stageType.isRemoved {
            B1PrePMSStageData.stageType = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "StageType")
        }
        if !B1PrePMSStageData.startDate.isRemoved {
            B1PrePMSStageData.startDate = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "StartDate")
        }
        if !B1PrePMSStageData.closeDate.isRemoved {
            B1PrePMSStageData.closeDate = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "CloseDate")
        }
        if !B1PrePMSStageData.task.isRemoved {
            B1PrePMSStageData.task = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "Task")
        }
        if !B1PrePMSStageData.description.isRemoved {
            B1PrePMSStageData.description = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "Description")
        }
        if !B1PrePMSStageData.expectedCosts.isRemoved {
            B1PrePMSStageData.expectedCosts = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "ExpectedCosts")
        }
        if !B1PrePMSStageData.invoicedAmountSales.isRemoved {
            B1PrePMSStageData.invoicedAmountSales = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "InvoicedAmountSales")
        }
        if !B1PrePMSStageData.openAmountSales.isRemoved {
            B1PrePMSStageData.openAmountSales = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "OpenAmountSales")
        }
        if !B1PrePMSStageData.invoicedAmountPurchase.isRemoved {
            B1PrePMSStageData.invoicedAmountPurchase = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "InvoicedAmountPurchase")
        }
        if !B1PrePMSStageData.openAmountPurchase.isRemoved {
            B1PrePMSStageData.openAmountPurchase = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "OpenAmountPurchase")
        }
        if !B1PrePMSStageData.percentualCompletness.isRemoved {
            B1PrePMSStageData.percentualCompletness = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "PercentualCompletness")
        }
        if !B1PrePMSStageData.isFinished.isRemoved {
            B1PrePMSStageData.isFinished = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "IsFinished")
        }
        if !B1PrePMSStageData.stageOwner.isRemoved {
            B1PrePMSStageData.stageOwner = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "StageOwner")
        }
        if !B1PrePMSStageData.dependsOnStage1.isRemoved {
            B1PrePMSStageData.dependsOnStage1 = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "DependsOnStage1")
        }
        if !B1PrePMSStageData.dependsOnStage2.isRemoved {
            B1PrePMSStageData.dependsOnStage2 = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "DependsOnStage2")
        }
        if !B1PrePMSStageData.dependsOnStage3.isRemoved {
            B1PrePMSStageData.dependsOnStage3 = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "DependsOnStage3")
        }
        if !B1PrePMSStageData.dependsOnStage4.isRemoved {
            B1PrePMSStageData.dependsOnStage4 = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "DependsOnStage4")
        }
        if !B1PrePMSStageData.stageDependency1Type.isRemoved {
            B1PrePMSStageData.stageDependency1Type = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "StageDependency1Type")
        }
        if !B1PrePMSStageData.stageDependency2Type.isRemoved {
            B1PrePMSStageData.stageDependency2Type = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "StageDependency2Type")
        }
        if !B1PrePMSStageData.stageDependency3Type.isRemoved {
            B1PrePMSStageData.stageDependency3Type = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "StageDependency3Type")
        }
        if !B1PrePMSStageData.stageDependency4Type.isRemoved {
            B1PrePMSStageData.stageDependency4Type = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "StageDependency4Type")
        }
        if !B1PrePMSStageData.dependsOnStageID1.isRemoved {
            B1PrePMSStageData.dependsOnStageID1 = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "DependsOnStageID1")
        }
        if !B1PrePMSStageData.dependsOnStageID2.isRemoved {
            B1PrePMSStageData.dependsOnStageID2 = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "DependsOnStageID2")
        }
        if !B1PrePMSStageData.dependsOnStageID3.isRemoved {
            B1PrePMSStageData.dependsOnStageID3 = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "DependsOnStageID3")
        }
        if !B1PrePMSStageData.dependsOnStageID4.isRemoved {
            B1PrePMSStageData.dependsOnStageID4 = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "DependsOnStageID4")
        }
        if !B1PrePMSStageData.attachmentEntry.isRemoved {
            B1PrePMSStageData.attachmentEntry = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "AttachmentEntry")
        }
        if !B1PrePMSStageData.uniqueID.isRemoved {
            B1PrePMSStageData.uniqueID = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "UniqueID")
        }
        if !B1PrePMSStageData.finishedDate.isRemoved {
            B1PrePMSStageData.finishedDate = B1ClassMetadata.ComplexTypes.pmsStageData.property(withName: "FinishedDate")
        }
        if !B1PrePMSSummaryData.lineID.isRemoved {
            B1PrePMSSummaryData.lineID = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "LineID")
        }
        if !B1PrePMSSummaryData.subprojectBudget.isRemoved {
            B1PrePMSSummaryData.subprojectBudget = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "SubprojectBudget")
        }
        if !B1PrePMSSummaryData.sumOpenAmountPurchase.isRemoved {
            B1PrePMSSummaryData.sumOpenAmountPurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "SumOpenAmountPurchase")
        }
        if !B1PrePMSSummaryData.sumInvoicedAmountPurchase.isRemoved {
            B1PrePMSSummaryData.sumInvoicedAmountPurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "SumInvoicedAmountPurchase")
        }
        if !B1PrePMSSummaryData.totalAmountPurchase.isRemoved {
            B1PrePMSSummaryData.totalAmountPurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "TotalAmountPurchase")
        }
        if !B1PrePMSSummaryData.totalVariancePurchase.isRemoved {
            B1PrePMSSummaryData.totalVariancePurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "TotalVariancePurchase")
        }
        if !B1PrePMSSummaryData.variancePerceptionPurchase.isRemoved {
            B1PrePMSSummaryData.variancePerceptionPurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "VariancePerceptionPurchase")
        }
        if !B1PrePMSSummaryData.accumSubprojectBudget.isRemoved {
            B1PrePMSSummaryData.accumSubprojectBudget = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumSubprojectBudget")
        }
        if !B1PrePMSSummaryData.accumOpenAmountPurchase.isRemoved {
            B1PrePMSSummaryData.accumOpenAmountPurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumOpenAmountPurchase")
        }
        if !B1PrePMSSummaryData.accumInvoicedAmountPurchase.isRemoved {
            B1PrePMSSummaryData.accumInvoicedAmountPurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumInvoicedAmountPurchase")
        }
        if !B1PrePMSSummaryData.accumTotalPurchase.isRemoved {
            B1PrePMSSummaryData.accumTotalPurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumTotalPurchase")
        }
        if !B1PrePMSSummaryData.accumTotalVariancePurchase.isRemoved {
            B1PrePMSSummaryData.accumTotalVariancePurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumTotalVariancePurchase")
        }
        if !B1PrePMSSummaryData.accumVariancePerceptionPurchase.isRemoved {
            B1PrePMSSummaryData.accumVariancePerceptionPurchase = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumVariancePerceptionPurchase")
        }
        if !B1PrePMSSummaryData.potentialSubprojectAmount.isRemoved {
            B1PrePMSSummaryData.potentialSubprojectAmount = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "PotentialSubprojectAmount")
        }
        if !B1PrePMSSummaryData.sumOpenAmountSales.isRemoved {
            B1PrePMSSummaryData.sumOpenAmountSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "SumOpenAmountSales")
        }
        if !B1PrePMSSummaryData.sumInvoicedAmountSales.isRemoved {
            B1PrePMSSummaryData.sumInvoicedAmountSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "SumInvoicedAmountSales")
        }
        if !B1PrePMSSummaryData.totalAmountSales.isRemoved {
            B1PrePMSSummaryData.totalAmountSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "TotalAmountSales")
        }
        if !B1PrePMSSummaryData.totalVarianceSales.isRemoved {
            B1PrePMSSummaryData.totalVarianceSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "TotalVarianceSales")
        }
        if !B1PrePMSSummaryData.variancePerceptionSales.isRemoved {
            B1PrePMSSummaryData.variancePerceptionSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "VariancePerceptionSales")
        }
        if !B1PrePMSSummaryData.accumPotentialSubprojectAmount.isRemoved {
            B1PrePMSSummaryData.accumPotentialSubprojectAmount = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumPotentialSubprojectAmount")
        }
        if !B1PrePMSSummaryData.accumOpenAmountSales.isRemoved {
            B1PrePMSSummaryData.accumOpenAmountSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumOpenAmountSales")
        }
        if !B1PrePMSSummaryData.accumInvoicedAmountSales.isRemoved {
            B1PrePMSSummaryData.accumInvoicedAmountSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumInvoicedAmountSales")
        }
        if !B1PrePMSSummaryData.accumTotalSales.isRemoved {
            B1PrePMSSummaryData.accumTotalSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumTotalSales")
        }
        if !B1PrePMSSummaryData.accumTotalVarianceSales.isRemoved {
            B1PrePMSSummaryData.accumTotalVarianceSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumTotalVarianceSales")
        }
        if !B1PrePMSSummaryData.accumVariancePerceptionSales.isRemoved {
            B1PrePMSSummaryData.accumVariancePerceptionSales = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "AccumVariancePerceptionSales")
        }
        if !B1PrePMSSummaryData.actualItemComponentCost.isRemoved {
            B1PrePMSSummaryData.actualItemComponentCost = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "ActualItemComponentCost")
        }
        if !B1PrePMSSummaryData.actualResourceComponentCost.isRemoved {
            B1PrePMSSummaryData.actualResourceComponentCost = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "ActualResourceComponentCost")
        }
        if !B1PrePMSSummaryData.actualAdditionalCost.isRemoved {
            B1PrePMSSummaryData.actualAdditionalCost = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "ActualAdditionalCost")
        }
        if !B1PrePMSSummaryData.actualProductCost.isRemoved {
            B1PrePMSSummaryData.actualProductCost = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "ActualProductCost")
        }
        if !B1PrePMSSummaryData.actualByProductCost.isRemoved {
            B1PrePMSSummaryData.actualByProductCost = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "ActualByProductCost")
        }
        if !B1PrePMSSummaryData.totalVariance.isRemoved {
            B1PrePMSSummaryData.totalVariance = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "TotalVariance")
        }
        if !B1PrePMSSummaryData.dueDate.isRemoved {
            B1PrePMSSummaryData.dueDate = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "DueDate")
        }
        if !B1PrePMSSummaryData.actualClosingDate.isRemoved {
            B1PrePMSSummaryData.actualClosingDate = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "ActualClosingDate")
        }
    }

    private static func merge13(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PrePMSSummaryData.overdue.isRemoved {
            B1PrePMSSummaryData.overdue = B1ClassMetadata.ComplexTypes.pmsSummaryData.property(withName: "Overdue")
        }
        if !B1PrePMSWorkOrderData.lineID.isRemoved {
            B1PrePMSWorkOrderData.lineID = B1ClassMetadata.ComplexTypes.pmsWorkOrderData.property(withName: "LineID")
        }
        if !B1PrePMSWorkOrderData.stageID.isRemoved {
            B1PrePMSWorkOrderData.stageID = B1ClassMetadata.ComplexTypes.pmsWorkOrderData.property(withName: "StageID")
        }
        if !B1PrePMSWorkOrderData.docNumber.isRemoved {
            B1PrePMSWorkOrderData.docNumber = B1ClassMetadata.ComplexTypes.pmsWorkOrderData.property(withName: "DocNumber")
        }
        if !B1PrePMSWorkOrderData.docEntry.isRemoved {
            B1PrePMSWorkOrderData.docEntry = B1ClassMetadata.ComplexTypes.pmsWorkOrderData.property(withName: "DocEntry")
        }
        if !B1PrePMActivityData.lineID.isRemoved {
            B1PrePMActivityData.lineID = B1ClassMetadata.ComplexTypes.pmActivityData.property(withName: "LineID")
        }
        if !B1PrePMActivityData.stageID.isRemoved {
            B1PrePMActivityData.stageID = B1ClassMetadata.ComplexTypes.pmActivityData.property(withName: "StageID")
        }
        if !B1PrePMActivityData.activityID.isRemoved {
            B1PrePMActivityData.activityID = B1ClassMetadata.ComplexTypes.pmActivityData.property(withName: "ActivityID")
        }
        if !B1PrePMDocAttachement.absEntry.isRemoved {
            B1PrePMDocAttachement.absEntry = B1ClassMetadata.ComplexTypes.pmDocAttachement.property(withName: "AbsEntry")
        }
        if !B1PrePMDocAttachement.lineID.isRemoved {
            B1PrePMDocAttachement.lineID = B1ClassMetadata.ComplexTypes.pmDocAttachement.property(withName: "LineID")
        }
        if !B1PrePMDocAttachement.sourcePath.isRemoved {
            B1PrePMDocAttachement.sourcePath = B1ClassMetadata.ComplexTypes.pmDocAttachement.property(withName: "SourcePath")
        }
        if !B1PrePMDocAttachement.fileName.isRemoved {
            B1PrePMDocAttachement.fileName = B1ClassMetadata.ComplexTypes.pmDocAttachement.property(withName: "FileName")
        }
        if !B1PrePMDocAttachement.fileExtension.isRemoved {
            B1PrePMDocAttachement.fileExtension = B1ClassMetadata.ComplexTypes.pmDocAttachement.property(withName: "FileExtension")
        }
        if !B1PrePMDocAttachement.attachementDate.isRemoved {
            B1PrePMDocAttachement.attachementDate = B1ClassMetadata.ComplexTypes.pmDocAttachement.property(withName: "AttachementDate")
        }
        if !B1PrePMDocumentData.lineID.isRemoved {
            B1PrePMDocumentData.lineID = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "LineID")
        }
        if !B1PrePMDocumentData.stageID.isRemoved {
            B1PrePMDocumentData.stageID = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "StageID")
        }
        if !B1PrePMDocumentData.docType.isRemoved {
            B1PrePMDocumentData.docType = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "DocType")
        }
        if !B1PrePMDocumentData.docEntry.isRemoved {
            B1PrePMDocumentData.docEntry = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "DocEntry")
        }
        if !B1PrePMDocumentData.docDate.isRemoved {
            B1PrePMDocumentData.docDate = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "DocDate")
        }
        if !B1PrePMDocumentData.total.isRemoved {
            B1PrePMDocumentData.total = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "Total")
        }
        if !B1PrePMDocumentData.lineNumber.isRemoved {
            B1PrePMDocumentData.lineNumber = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "LineNumber")
        }
        if !B1PrePMDocumentData.status.isRemoved {
            B1PrePMDocumentData.status = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "Status")
        }
        if !B1PrePMDocumentData.amountCategory.isRemoved {
            B1PrePMDocumentData.amountCategory = B1ClassMetadata.ComplexTypes.pmDocumentData.property(withName: "AmountCategory")
        }
        if !B1PrePMOpenIssueData.lineID.isRemoved {
            B1PrePMOpenIssueData.lineID = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "LineID")
        }
        if !B1PrePMOpenIssueData.stageID.isRemoved {
            B1PrePMOpenIssueData.stageID = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "StageID")
        }
        if !B1PrePMOpenIssueData.area.isRemoved {
            B1PrePMOpenIssueData.area = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "Area")
        }
        if !B1PrePMOpenIssueData.priority.isRemoved {
            B1PrePMOpenIssueData.priority = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "Priority")
        }
        if !B1PrePMOpenIssueData.remarks.isRemoved {
            B1PrePMOpenIssueData.remarks = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "Remarks")
        }
        if !B1PrePMOpenIssueData.closed.isRemoved {
            B1PrePMOpenIssueData.closed = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "Closed")
        }
        if !B1PrePMOpenIssueData.solutionID.isRemoved {
            B1PrePMOpenIssueData.solutionID = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "SolutionID")
        }
        if !B1PrePMOpenIssueData.responsible.isRemoved {
            B1PrePMOpenIssueData.responsible = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "Responsible")
        }
        if !B1PrePMOpenIssueData.enteredBy.isRemoved {
            B1PrePMOpenIssueData.enteredBy = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "EnteredBy")
        }
        if !B1PrePMOpenIssueData.enteredDate.isRemoved {
            B1PrePMOpenIssueData.enteredDate = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "EnteredDate")
        }
        if !B1PrePMOpenIssueData.effort.isRemoved {
            B1PrePMOpenIssueData.effort = B1ClassMetadata.ComplexTypes.pmOpenIssueData.property(withName: "Effort")
        }
        if !B1PrePMProjectDocumentParams.absEntry.isRemoved {
            B1PrePMProjectDocumentParams.absEntry = B1ClassMetadata.ComplexTypes.pmProjectDocumentParams.property(withName: "AbsEntry")
        }
        if !B1PrePMStageAttachement.absEntry.isRemoved {
            B1PrePMStageAttachement.absEntry = B1ClassMetadata.ComplexTypes.pmStageAttachement.property(withName: "AbsEntry")
        }
        if !B1PrePMStageAttachement.lineID.isRemoved {
            B1PrePMStageAttachement.lineID = B1ClassMetadata.ComplexTypes.pmStageAttachement.property(withName: "LineID")
        }
        if !B1PrePMStageAttachement.sourcePath.isRemoved {
            B1PrePMStageAttachement.sourcePath = B1ClassMetadata.ComplexTypes.pmStageAttachement.property(withName: "SourcePath")
        }
        if !B1PrePMStageAttachement.fileName.isRemoved {
            B1PrePMStageAttachement.fileName = B1ClassMetadata.ComplexTypes.pmStageAttachement.property(withName: "FileName")
        }
        if !B1PrePMStageAttachement.fileExtension.isRemoved {
            B1PrePMStageAttachement.fileExtension = B1ClassMetadata.ComplexTypes.pmStageAttachement.property(withName: "FileExtension")
        }
        if !B1PrePMStageAttachement.attachementDate.isRemoved {
            B1PrePMStageAttachement.attachementDate = B1ClassMetadata.ComplexTypes.pmStageAttachement.property(withName: "AttachementDate")
        }
        if !B1PrePMStageData.lineID.isRemoved {
            B1PrePMStageData.lineID = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "LineID")
        }
        if !B1PrePMStageData.stageID.isRemoved {
            B1PrePMStageData.stageID = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "StageID")
        }
        if !B1PrePMStageData.stageType.isRemoved {
            B1PrePMStageData.stageType = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "StageType")
        }
        if !B1PrePMStageData.startDate.isRemoved {
            B1PrePMStageData.startDate = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "StartDate")
        }
        if !B1PrePMStageData.closeDate.isRemoved {
            B1PrePMStageData.closeDate = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "CloseDate")
        }
        if !B1PrePMStageData.task.isRemoved {
            B1PrePMStageData.task = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "Task")
        }
        if !B1PrePMStageData.description.isRemoved {
            B1PrePMStageData.description = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "Description")
        }
        if !B1PrePMStageData.expectedCosts.isRemoved {
            B1PrePMStageData.expectedCosts = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "ExpectedCosts")
        }
        if !B1PrePMStageData.invoicedAmountSales.isRemoved {
            B1PrePMStageData.invoicedAmountSales = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "InvoicedAmountSales")
        }
        if !B1PrePMStageData.openAmountSales.isRemoved {
            B1PrePMStageData.openAmountSales = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "OpenAmountSales")
        }
        if !B1PrePMStageData.invoicedAmountPurchase.isRemoved {
            B1PrePMStageData.invoicedAmountPurchase = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "InvoicedAmountPurchase")
        }
        if !B1PrePMStageData.openAmountPurchase.isRemoved {
            B1PrePMStageData.openAmountPurchase = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "OpenAmountPurchase")
        }
        if !B1PrePMStageData.percentualCompletness.isRemoved {
            B1PrePMStageData.percentualCompletness = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "PercentualCompletness")
        }
        if !B1PrePMStageData.isFinished.isRemoved {
            B1PrePMStageData.isFinished = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "IsFinished")
        }
        if !B1PrePMStageData.stageOwner.isRemoved {
            B1PrePMStageData.stageOwner = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "StageOwner")
        }
        if !B1PrePMStageData.dependsOnStage1.isRemoved {
            B1PrePMStageData.dependsOnStage1 = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "DependsOnStage1")
        }
        if !B1PrePMStageData.dependsOnStage2.isRemoved {
            B1PrePMStageData.dependsOnStage2 = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "DependsOnStage2")
        }
        if !B1PrePMStageData.dependsOnStage3.isRemoved {
            B1PrePMStageData.dependsOnStage3 = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "DependsOnStage3")
        }
        if !B1PrePMStageData.dependsOnStage4.isRemoved {
            B1PrePMStageData.dependsOnStage4 = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "DependsOnStage4")
        }
        if !B1PrePMStageData.stageDependency1Type.isRemoved {
            B1PrePMStageData.stageDependency1Type = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "StageDependency1Type")
        }
        if !B1PrePMStageData.stageDependency2Type.isRemoved {
            B1PrePMStageData.stageDependency2Type = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "StageDependency2Type")
        }
        if !B1PrePMStageData.stageDependency3Type.isRemoved {
            B1PrePMStageData.stageDependency3Type = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "StageDependency3Type")
        }
        if !B1PrePMStageData.stageDependency4Type.isRemoved {
            B1PrePMStageData.stageDependency4Type = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "StageDependency4Type")
        }
        if !B1PrePMStageData.dependsOnStageID1.isRemoved {
            B1PrePMStageData.dependsOnStageID1 = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "DependsOnStageID1")
        }
        if !B1PrePMStageData.dependsOnStageID2.isRemoved {
            B1PrePMStageData.dependsOnStageID2 = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "DependsOnStageID2")
        }
        if !B1PrePMStageData.dependsOnStageID3.isRemoved {
            B1PrePMStageData.dependsOnStageID3 = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "DependsOnStageID3")
        }
        if !B1PrePMStageData.dependsOnStageID4.isRemoved {
            B1PrePMStageData.dependsOnStageID4 = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "DependsOnStageID4")
        }
        if !B1PrePMStageData.attachmentEntry.isRemoved {
            B1PrePMStageData.attachmentEntry = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "AttachmentEntry")
        }
        if !B1PrePMStageData.uniqueID.isRemoved {
            B1PrePMStageData.uniqueID = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "UniqueID")
        }
        if !B1PrePMStageData.finishedDate.isRemoved {
            B1PrePMStageData.finishedDate = B1ClassMetadata.ComplexTypes.pmStageData.property(withName: "FinishedDate")
        }
        if !B1PrePMSubprojectDocumentData.absEntry.isRemoved {
            B1PrePMSubprojectDocumentData.absEntry = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "AbsEntry")
        }
        if !B1PrePMSubprojectDocumentData.owner.isRemoved {
            B1PrePMSubprojectDocumentData.owner = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "Owner")
        }
        if !B1PrePMSubprojectDocumentData.subprojectName.isRemoved {
            B1PrePMSubprojectDocumentData.subprojectName = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "SubprojectName")
        }
        if !B1PrePMSubprojectDocumentData.startDate.isRemoved {
            B1PrePMSubprojectDocumentData.startDate = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "StartDate")
        }
        if !B1PrePMSubprojectDocumentData.finishedPercent.isRemoved {
            B1PrePMSubprojectDocumentData.finishedPercent = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "FinishedPercent")
        }
        if !B1PrePMSubprojectDocumentData.parentID.isRemoved {
            B1PrePMSubprojectDocumentData.parentID = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "ParentID")
        }
        if !B1PrePMSubprojectDocumentData.projectID.isRemoved {
            B1PrePMSubprojectDocumentData.projectID = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "ProjectID")
        }
        if !B1PrePMSubprojectDocumentData.order.isRemoved {
            B1PrePMSubprojectDocumentData.order = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "Order")
        }
        if !B1PrePMSubprojectDocumentData.subprojectType.isRemoved {
            B1PrePMSubprojectDocumentData.subprojectType = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "SubprojectType")
        }
        if !B1PrePMSubprojectDocumentData.subprojectContribution.isRemoved {
            B1PrePMSubprojectDocumentData.subprojectContribution = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "SubprojectContribution")
        }
        if !B1PrePMSubprojectDocumentData.subprojectStatus.isRemoved {
            B1PrePMSubprojectDocumentData.subprojectStatus = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "SubprojectStatus")
        }
        if !B1PrePMSubprojectDocumentData.subprojectEndDate.isRemoved {
            B1PrePMSubprojectDocumentData.subprojectEndDate = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "SubprojectEndDate")
        }
        if !B1PrePMSubprojectDocumentData.actualCost.isRemoved {
            B1PrePMSubprojectDocumentData.actualCost = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "ActualCost")
        }
        if !B1PrePMSubprojectDocumentData.plannedCost.isRemoved {
            B1PrePMSubprojectDocumentData.plannedCost = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PlannedCost")
        }
        if !B1PrePMSubprojectDocumentData.subprojectDepth.isRemoved {
            B1PrePMSubprojectDocumentData.subprojectDepth = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "SubprojectDepth")
        }
        if !B1PrePMSubprojectDocumentData.dueDate.isRemoved {
            B1PrePMSubprojectDocumentData.dueDate = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "DueDate")
        }
        if !B1PrePMSubprojectDocumentData.pmsStagesCollection.isRemoved {
            B1PrePMSubprojectDocumentData.pmsStagesCollection = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PMS_StagesCollection")
        }
        if !B1PrePMSubprojectDocumentData.pmsOpenIssuesCollection.isRemoved {
            B1PrePMSubprojectDocumentData.pmsOpenIssuesCollection = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PMS_OpenIssuesCollection")
        }
        if !B1PrePMSubprojectDocumentData.pmsDocumentsCollection.isRemoved {
            B1PrePMSubprojectDocumentData.pmsDocumentsCollection = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PMS_DocumentsCollection")
        }
        if !B1PrePMSubprojectDocumentData.pmsActivitiesCollection.isRemoved {
            B1PrePMSubprojectDocumentData.pmsActivitiesCollection = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PMS_ActivitiesCollection")
        }
        if !B1PrePMSubprojectDocumentData.pmsWorkOrdersCollection.isRemoved {
            B1PrePMSubprojectDocumentData.pmsWorkOrdersCollection = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PMS_WorkOrdersCollection")
        }
        if !B1PrePMSubprojectDocumentData.pmsSummaryData.isRemoved {
            B1PrePMSubprojectDocumentData.pmsSummaryData = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PMS_SummaryData")
        }
        if !B1PrePMSubprojectDocumentData.pmsDocAttachements.isRemoved {
            B1PrePMSubprojectDocumentData.pmsDocAttachements = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PMS_DocAttachements")
        }
        if !B1PrePMSubprojectDocumentData.pmsStageAttachements.isRemoved {
            B1PrePMSubprojectDocumentData.pmsStageAttachements = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.property(withName: "PMS_StageAttachements")
        }
        if !B1PrePMSubprojectDocumentParams.absEntry.isRemoved {
            B1PrePMSubprojectDocumentParams.absEntry = B1ClassMetadata.ComplexTypes.pmSubprojectDocumentParams.property(withName: "AbsEntry")
        }
        if !B1PrePMSubprojectParams.absEntry.isRemoved {
            B1PrePMSubprojectParams.absEntry = B1ClassMetadata.ComplexTypes.pmSubprojectParams.property(withName: "AbsEntry")
        }
        if !B1PrePMSubprojectParams.isSubproject.isRemoved {
            B1PrePMSubprojectParams.isSubproject = B1ClassMetadata.ComplexTypes.pmSubprojectParams.property(withName: "IsSubproject")
        }
        if !B1PrePMSummaryData.lineID.isRemoved {
            B1PrePMSummaryData.lineID = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "LineID")
        }
        if !B1PrePMSummaryData.subprojectBudget.isRemoved {
            B1PrePMSummaryData.subprojectBudget = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "SubprojectBudget")
        }
        if !B1PrePMSummaryData.sumOpenAmountPurchase.isRemoved {
            B1PrePMSummaryData.sumOpenAmountPurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "SumOpenAmountPurchase")
        }
        if !B1PrePMSummaryData.sumInvoicedAmountPurchase.isRemoved {
            B1PrePMSummaryData.sumInvoicedAmountPurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "SumInvoicedAmountPurchase")
        }
        if !B1PrePMSummaryData.totalAmountPurchase.isRemoved {
            B1PrePMSummaryData.totalAmountPurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "TotalAmountPurchase")
        }
        if !B1PrePMSummaryData.totalVariancePurchase.isRemoved {
            B1PrePMSummaryData.totalVariancePurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "TotalVariancePurchase")
        }
        if !B1PrePMSummaryData.variancePerceptionPurchase.isRemoved {
            B1PrePMSummaryData.variancePerceptionPurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "VariancePerceptionPurchase")
        }
        if !B1PrePMSummaryData.accumSubprojectBudget.isRemoved {
            B1PrePMSummaryData.accumSubprojectBudget = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumSubprojectBudget")
        }
        if !B1PrePMSummaryData.accumOpenAmountPurchase.isRemoved {
            B1PrePMSummaryData.accumOpenAmountPurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumOpenAmountPurchase")
        }
        if !B1PrePMSummaryData.accumInvoicedAmountPurchase.isRemoved {
            B1PrePMSummaryData.accumInvoicedAmountPurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumInvoicedAmountPurchase")
        }
        if !B1PrePMSummaryData.accumTotalPurchase.isRemoved {
            B1PrePMSummaryData.accumTotalPurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumTotalPurchase")
        }
        if !B1PrePMSummaryData.accumTotalVariancePurchase.isRemoved {
            B1PrePMSummaryData.accumTotalVariancePurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumTotalVariancePurchase")
        }
        if !B1PrePMSummaryData.accumVariancePerceptionPurchase.isRemoved {
            B1PrePMSummaryData.accumVariancePerceptionPurchase = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumVariancePerceptionPurchase")
        }
        if !B1PrePMSummaryData.potentialSubprojectAmount.isRemoved {
            B1PrePMSummaryData.potentialSubprojectAmount = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "PotentialSubprojectAmount")
        }
        if !B1PrePMSummaryData.sumOpenAmountSales.isRemoved {
            B1PrePMSummaryData.sumOpenAmountSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "SumOpenAmountSales")
        }
        if !B1PrePMSummaryData.sumInvoicedAmountSales.isRemoved {
            B1PrePMSummaryData.sumInvoicedAmountSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "SumInvoicedAmountSales")
        }
        if !B1PrePMSummaryData.totalAmountSales.isRemoved {
            B1PrePMSummaryData.totalAmountSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "TotalAmountSales")
        }
        if !B1PrePMSummaryData.totalVarianceSales.isRemoved {
            B1PrePMSummaryData.totalVarianceSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "TotalVarianceSales")
        }
        if !B1PrePMSummaryData.variancePerceptionSales.isRemoved {
            B1PrePMSummaryData.variancePerceptionSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "VariancePerceptionSales")
        }
        if !B1PrePMSummaryData.accumPotentialSubprojectAmount.isRemoved {
            B1PrePMSummaryData.accumPotentialSubprojectAmount = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumPotentialSubprojectAmount")
        }
        if !B1PrePMSummaryData.accumOpenAmountSales.isRemoved {
            B1PrePMSummaryData.accumOpenAmountSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumOpenAmountSales")
        }
        if !B1PrePMSummaryData.accumInvoicedAmountSales.isRemoved {
            B1PrePMSummaryData.accumInvoicedAmountSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumInvoicedAmountSales")
        }
        if !B1PrePMSummaryData.accumTotalSales.isRemoved {
            B1PrePMSummaryData.accumTotalSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumTotalSales")
        }
        if !B1PrePMSummaryData.accumTotalVarianceSales.isRemoved {
            B1PrePMSummaryData.accumTotalVarianceSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumTotalVarianceSales")
        }
        if !B1PrePMSummaryData.accumVariancePerceptionSales.isRemoved {
            B1PrePMSummaryData.accumVariancePerceptionSales = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "AccumVariancePerceptionSales")
        }
        if !B1PrePMSummaryData.actualItemComponentCost.isRemoved {
            B1PrePMSummaryData.actualItemComponentCost = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "ActualItemComponentCost")
        }
        if !B1PrePMSummaryData.actualResourceComponentCost.isRemoved {
            B1PrePMSummaryData.actualResourceComponentCost = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "ActualResourceComponentCost")
        }
        if !B1PrePMSummaryData.actualAdditionalCost.isRemoved {
            B1PrePMSummaryData.actualAdditionalCost = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "ActualAdditionalCost")
        }
        if !B1PrePMSummaryData.actualProductCost.isRemoved {
            B1PrePMSummaryData.actualProductCost = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "ActualProductCost")
        }
        if !B1PrePMSummaryData.actualByProductCost.isRemoved {
            B1PrePMSummaryData.actualByProductCost = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "ActualByProductCost")
        }
        if !B1PrePMSummaryData.totalVariance.isRemoved {
            B1PrePMSummaryData.totalVariance = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "TotalVariance")
        }
        if !B1PrePMSummaryData.dueDate.isRemoved {
            B1PrePMSummaryData.dueDate = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "DueDate")
        }
        if !B1PrePMSummaryData.actualClosingDate.isRemoved {
            B1PrePMSummaryData.actualClosingDate = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "ActualClosingDate")
        }
        if !B1PrePMSummaryData.overdue.isRemoved {
            B1PrePMSummaryData.overdue = B1ClassMetadata.ComplexTypes.pmSummaryData.property(withName: "Overdue")
        }
        if !B1PrePMTimeSheetLineData.lineID.isRemoved {
            B1PrePMTimeSheetLineData.lineID = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "LineID")
        }
        if !B1PrePMTimeSheetLineData.date.isRemoved {
            B1PrePMTimeSheetLineData.date = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "Date")
        }
        if !B1PrePMTimeSheetLineData.activityType.isRemoved {
            B1PrePMTimeSheetLineData.activityType = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "ActivityType")
        }
        if !B1PrePMTimeSheetLineData.laborItem.isRemoved {
            B1PrePMTimeSheetLineData.laborItem = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "LaborItem")
        }
        if !B1PrePMTimeSheetLineData.startTime.isRemoved {
            B1PrePMTimeSheetLineData.startTime = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "StartTime")
        }
        if !B1PrePMTimeSheetLineData.endTime.isRemoved {
            B1PrePMTimeSheetLineData.endTime = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "EndTime")
        }
        if !B1PrePMTimeSheetLineData.workorder.isRemoved {
            B1PrePMTimeSheetLineData.workorder = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "Workorder")
        }
        if !B1PrePMTimeSheetLineData.serviceCall.isRemoved {
            B1PrePMTimeSheetLineData.serviceCall = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "ServiceCall")
        }
        if !B1PrePMTimeSheetLineData.costCenter.isRemoved {
            B1PrePMTimeSheetLineData.costCenter = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "CostCenter")
        }
        if !B1PrePMTimeSheetLineData.financialProject.isRemoved {
            B1PrePMTimeSheetLineData.financialProject = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "FinancialProject")
        }
        if !B1PrePMTimeSheetLineData.location.isRemoved {
            B1PrePMTimeSheetLineData.location = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "Location")
        }
        if !B1PrePMTimeSheetLineData.gpsData.isRemoved {
            B1PrePMTimeSheetLineData.gpsData = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "GPSData")
        }
        if !B1PrePMTimeSheetLineData.branch.isRemoved {
            B1PrePMTimeSheetLineData.branch = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "Branch")
        }
        if !B1PrePMTimeSheetLineData.break.isRemoved {
            B1PrePMTimeSheetLineData.break = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "Break")
        }
        if !B1PrePMTimeSheetLineData.nonBillableTime.isRemoved {
            B1PrePMTimeSheetLineData.nonBillableTime = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "NonBillableTime")
        }
        if !B1PrePMTimeSheetLineData.effectiveTime.isRemoved {
            B1PrePMTimeSheetLineData.effectiveTime = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "EffectiveTime")
        }
        if !B1PrePMTimeSheetLineData.billableTime.isRemoved {
            B1PrePMTimeSheetLineData.billableTime = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "BillableTime")
        }
        if !B1PrePMTimeSheetLineData.fullDay.isRemoved {
            B1PrePMTimeSheetLineData.fullDay = B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.property(withName: "FullDay")
        }
        if !B1PrePMTimeSheetParams.absEntry.isRemoved {
            B1PrePMTimeSheetParams.absEntry = B1ClassMetadata.ComplexTypes.pmTimeSheetParams.property(withName: "AbsEntry")
        }
        if !B1PrePMWorkOrderData.lineID.isRemoved {
            B1PrePMWorkOrderData.lineID = B1ClassMetadata.ComplexTypes.pmWorkOrderData.property(withName: "LineID")
        }
        if !B1PrePMWorkOrderData.stageID.isRemoved {
            B1PrePMWorkOrderData.stageID = B1ClassMetadata.ComplexTypes.pmWorkOrderData.property(withName: "StageID")
        }
        if !B1PrePMWorkOrderData.docNumber.isRemoved {
            B1PrePMWorkOrderData.docNumber = B1ClassMetadata.ComplexTypes.pmWorkOrderData.property(withName: "DocNumber")
        }
        if !B1PrePMWorkOrderData.docEntry.isRemoved {
            B1PrePMWorkOrderData.docEntry = B1ClassMetadata.ComplexTypes.pmWorkOrderData.property(withName: "DocEntry")
        }
        if !B1PrePOSDailySummaryParams.absEntry.isRemoved {
            B1PrePOSDailySummaryParams.absEntry = B1ClassMetadata.ComplexTypes.posDailySummaryParams.property(withName: "AbsEntry")
        }
        if !B1PrePOSTotalizer.lineNum.isRemoved {
            B1PrePOSTotalizer.lineNum = B1ClassMetadata.ComplexTypes.posTotalizer.property(withName: "LineNum")
        }
        if !B1PrePOSTotalizer.code.isRemoved {
            B1PrePOSTotalizer.code = B1ClassMetadata.ComplexTypes.posTotalizer.property(withName: "Code")
        }
        if !B1PrePOSTotalizer.number.isRemoved {
            B1PrePOSTotalizer.number = B1ClassMetadata.ComplexTypes.posTotalizer.property(withName: "Number")
        }
        if !B1PrePOSTotalizer.total.isRemoved {
            B1PrePOSTotalizer.total = B1ClassMetadata.ComplexTypes.posTotalizer.property(withName: "Total")
        }
        if !B1PrePOSTotalizer.description.isRemoved {
            B1PrePOSTotalizer.description = B1ClassMetadata.ComplexTypes.posTotalizer.property(withName: "Description")
        }
        if !B1PrePackagesTypeParams.code.isRemoved {
            B1PrePackagesTypeParams.code = B1ClassMetadata.ComplexTypes.packagesTypeParams.property(withName: "Code")
        }
        if !B1PrePartnersSetupParams.partnerID.isRemoved {
            B1PrePartnersSetupParams.partnerID = B1ClassMetadata.ComplexTypes.partnersSetupParams.property(withName: "PartnerID")
        }
        if !B1PrePartnersSetupParams.name.isRemoved {
            B1PrePartnersSetupParams.name = B1ClassMetadata.ComplexTypes.partnersSetupParams.property(withName: "Name")
        }
        if !B1PrePartnersSetupParams.defaultRelationship.isRemoved {
            B1PrePartnersSetupParams.defaultRelationship = B1ClassMetadata.ComplexTypes.partnersSetupParams.property(withName: "DefaultRelationship")
        }
        if !B1PrePartnersSetupParams.relatedBP.isRemoved {
            B1PrePartnersSetupParams.relatedBP = B1ClassMetadata.ComplexTypes.partnersSetupParams.property(withName: "RelatedBP")
        }
        if !B1PrePartnersSetupParams.details.isRemoved {
            B1PrePartnersSetupParams.details = B1ClassMetadata.ComplexTypes.partnersSetupParams.property(withName: "Details")
        }
        if !B1PrePathAdmin.wordTemplateFolderPath.isRemoved {
            B1PrePathAdmin.wordTemplateFolderPath = B1ClassMetadata.ComplexTypes.pathAdmin.property(withName: "WordTemplateFolderPath")
        }
        if !B1PrePathAdmin.picturesFolderPath.isRemoved {
            B1PrePathAdmin.picturesFolderPath = B1ClassMetadata.ComplexTypes.pathAdmin.property(withName: "PicturesFolderPath")
        }
        if !B1PrePathAdmin.attachmentsFolderPath.isRemoved {
            B1PrePathAdmin.attachmentsFolderPath = B1ClassMetadata.ComplexTypes.pathAdmin.property(withName: "AttachmentsFolderPath")
        }
        if !B1PrePathAdmin.extensionsFolderPath.isRemoved {
            B1PrePathAdmin.extensionsFolderPath = B1ClassMetadata.ComplexTypes.pathAdmin.property(withName: "ExtensionsFolderPath")
        }
        if !B1PrePathAdmin.printID.isRemoved {
            B1PrePathAdmin.printID = B1ClassMetadata.ComplexTypes.pathAdmin.property(withName: "PrintId")
        }
        if !B1PrePaymentAccount.lineNum.isRemoved {
            B1PrePaymentAccount.lineNum = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "LineNum")
        }
        if !B1PrePaymentAccount.accountCode.isRemoved {
            B1PrePaymentAccount.accountCode = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "AccountCode")
        }
        if !B1PrePaymentAccount.sumPaid.isRemoved {
            B1PrePaymentAccount.sumPaid = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "SumPaid")
        }
        if !B1PrePaymentAccount.sumPaidFC.isRemoved {
            B1PrePaymentAccount.sumPaidFC = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "SumPaidFC")
        }
        if !B1PrePaymentAccount.decription.isRemoved {
            B1PrePaymentAccount.decription = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "Decription")
        }
        if !B1PrePaymentAccount.vatGroup.isRemoved {
            B1PrePaymentAccount.vatGroup = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "VatGroup")
        }
        if !B1PrePaymentAccount.accountName.isRemoved {
            B1PrePaymentAccount.accountName = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "AccountName")
        }
        if !B1PrePaymentAccount.grossAmount.isRemoved {
            B1PrePaymentAccount.grossAmount = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "GrossAmount")
        }
        if !B1PrePaymentAccount.profitCenter.isRemoved {
            B1PrePaymentAccount.profitCenter = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "ProfitCenter")
        }
        if !B1PrePaymentAccount.projectCode.isRemoved {
            B1PrePaymentAccount.projectCode = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "ProjectCode")
        }
        if !B1PrePaymentAccount.vatAmount.isRemoved {
            B1PrePaymentAccount.vatAmount = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "VatAmount")
        }
        if !B1PrePaymentAccount.profitCenter2.isRemoved {
            B1PrePaymentAccount.profitCenter2 = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "ProfitCenter2")
        }
        if !B1PrePaymentAccount.profitCenter3.isRemoved {
            B1PrePaymentAccount.profitCenter3 = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "ProfitCenter3")
        }
        if !B1PrePaymentAccount.profitCenter4.isRemoved {
            B1PrePaymentAccount.profitCenter4 = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "ProfitCenter4")
        }
        if !B1PrePaymentAccount.profitCenter5.isRemoved {
            B1PrePaymentAccount.profitCenter5 = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "ProfitCenter5")
        }
        if !B1PrePaymentAccount.locationCode.isRemoved {
            B1PrePaymentAccount.locationCode = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "LocationCode")
        }
        if !B1PrePaymentAccount.equalizationVatAmount.isRemoved {
            B1PrePaymentAccount.equalizationVatAmount = B1ClassMetadata.ComplexTypes.paymentAccount.property(withName: "EqualizationVatAmount")
        }
        if !B1PrePaymentAmountParams.docType.isRemoved {
            B1PrePaymentAmountParams.docType = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "DocType")
        }
        if !B1PrePaymentAmountParams.docEntry.isRemoved {
            B1PrePaymentAmountParams.docEntry = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "DocEntry")
        }
        if !B1PrePaymentAmountParams.installmentID.isRemoved {
            B1PrePaymentAmountParams.installmentID = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "InstallmentId")
        }
        if !B1PrePaymentAmountParams.cashDiscountPercentage.isRemoved {
            B1PrePaymentAmountParams.cashDiscountPercentage = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "CashDiscountPercentage")
        }
        if !B1PrePaymentAmountParams.cashDiscountAmount.isRemoved {
            B1PrePaymentAmountParams.cashDiscountAmount = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "CashDiscountAmount")
        }
        if !B1PrePaymentAmountParams.cashDiscountAmountFC.isRemoved {
            B1PrePaymentAmountParams.cashDiscountAmountFC = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "CashDiscountAmountFC")
        }
        if !B1PrePaymentAmountParams.cashDiscountAmountSC.isRemoved {
            B1PrePaymentAmountParams.cashDiscountAmountSC = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "CashDiscountAmountSC")
        }
        if !B1PrePaymentAmountParams.totalPaymentAmount.isRemoved {
            B1PrePaymentAmountParams.totalPaymentAmount = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "TotalPaymentAmount")
        }
        if !B1PrePaymentAmountParams.totalPaymentAmountFC.isRemoved {
            B1PrePaymentAmountParams.totalPaymentAmountFC = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "TotalPaymentAmountFC")
        }
        if !B1PrePaymentAmountParams.totalPaymentAmountSC.isRemoved {
            B1PrePaymentAmountParams.totalPaymentAmountSC = B1ClassMetadata.ComplexTypes.paymentAmountParams.property(withName: "TotalPaymentAmountSC")
        }
        if !B1PrePaymentBPCode.bpCode.isRemoved {
            B1PrePaymentBPCode.bpCode = B1ClassMetadata.ComplexTypes.paymentBPCode.property(withName: "BPCode")
        }
        if !B1PrePaymentBPCode.date.isRemoved {
            B1PrePaymentBPCode.date = B1ClassMetadata.ComplexTypes.paymentBPCode.property(withName: "Date")
        }
        if !B1PrePaymentBlockParams.absEntry.isRemoved {
            B1PrePaymentBlockParams.absEntry = B1ClassMetadata.ComplexTypes.paymentBlockParams.property(withName: "AbsEntry")
        }
        if !B1PrePaymentBlockParams.paymentBlockCode.isRemoved {
            B1PrePaymentBlockParams.paymentBlockCode = B1ClassMetadata.ComplexTypes.paymentBlockParams.property(withName: "PaymentBlockCode")
        }
        if !B1PrePaymentCheck.lineNum.isRemoved {
            B1PrePaymentCheck.lineNum = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "LineNum")
        }
        if !B1PrePaymentCheck.dueDate.isRemoved {
            B1PrePaymentCheck.dueDate = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "DueDate")
        }
        if !B1PrePaymentCheck.checkNumber.isRemoved {
            B1PrePaymentCheck.checkNumber = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "CheckNumber")
        }
        if !B1PrePaymentCheck.bankCode.isRemoved {
            B1PrePaymentCheck.bankCode = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "BankCode")
        }
        if !B1PrePaymentCheck.branch.isRemoved {
            B1PrePaymentCheck.branch = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "Branch")
        }
        if !B1PrePaymentCheck.accounttNum.isRemoved {
            B1PrePaymentCheck.accounttNum = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "AccounttNum")
        }
        if !B1PrePaymentCheck.details.isRemoved {
            B1PrePaymentCheck.details = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "Details")
        }
        if !B1PrePaymentCheck.trnsfrable.isRemoved {
            B1PrePaymentCheck.trnsfrable = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "Trnsfrable")
        }
        if !B1PrePaymentCheck.checkSum.isRemoved {
            B1PrePaymentCheck.checkSum = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "CheckSum")
        }
        if !B1PrePaymentCheck.currency.isRemoved {
            B1PrePaymentCheck.currency = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "Currency")
        }
        if !B1PrePaymentCheck.countryCode.isRemoved {
            B1PrePaymentCheck.countryCode = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "CountryCode")
        }
        if !B1PrePaymentCheck.checkAbsEntry.isRemoved {
            B1PrePaymentCheck.checkAbsEntry = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "CheckAbsEntry")
        }
        if !B1PrePaymentCheck.checkAccount.isRemoved {
            B1PrePaymentCheck.checkAccount = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "CheckAccount")
        }
        if !B1PrePaymentCheck.manualCheck.isRemoved {
            B1PrePaymentCheck.manualCheck = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "ManualCheck")
        }
        if !B1PrePaymentCheck.fiscalID.isRemoved {
            B1PrePaymentCheck.fiscalID = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "FiscalID")
        }
        if !B1PrePaymentCheck.originallyIssuedBy.isRemoved {
            B1PrePaymentCheck.originallyIssuedBy = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "OriginallyIssuedBy")
        }
        if !B1PrePaymentCheck.endorse.isRemoved {
            B1PrePaymentCheck.endorse = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "Endorse")
        }
        if !B1PrePaymentCheck.endorsableCheckNo.isRemoved {
            B1PrePaymentCheck.endorsableCheckNo = B1ClassMetadata.ComplexTypes.paymentCheck.property(withName: "EndorsableCheckNo")
        }
        if !B1PrePaymentCreditCard.lineNum.isRemoved {
            B1PrePaymentCreditCard.lineNum = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "LineNum")
        }
        if !B1PrePaymentCreditCard.creditCard.isRemoved {
            B1PrePaymentCreditCard.creditCard = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "CreditCard")
        }
        if !B1PrePaymentCreditCard.creditAcct.isRemoved {
            B1PrePaymentCreditCard.creditAcct = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "CreditAcct")
        }
        if !B1PrePaymentCreditCard.creditCardNumber.isRemoved {
            B1PrePaymentCreditCard.creditCardNumber = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "CreditCardNumber")
        }
        if !B1PrePaymentCreditCard.cardValidUntil.isRemoved {
            B1PrePaymentCreditCard.cardValidUntil = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "CardValidUntil")
        }
        if !B1PrePaymentCreditCard.voucherNum.isRemoved {
            B1PrePaymentCreditCard.voucherNum = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "VoucherNum")
        }
        if !B1PrePaymentCreditCard.ownerIdNum.isRemoved {
            B1PrePaymentCreditCard.ownerIdNum = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "OwnerIdNum")
        }
        if !B1PrePaymentCreditCard.ownerPhone.isRemoved {
            B1PrePaymentCreditCard.ownerPhone = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "OwnerPhone")
        }
        if !B1PrePaymentCreditCard.paymentMethodCode.isRemoved {
            B1PrePaymentCreditCard.paymentMethodCode = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "PaymentMethodCode")
        }
        if !B1PrePaymentCreditCard.numOfPayments.isRemoved {
            B1PrePaymentCreditCard.numOfPayments = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "NumOfPayments")
        }
        if !B1PrePaymentCreditCard.firstPaymentDue.isRemoved {
            B1PrePaymentCreditCard.firstPaymentDue = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "FirstPaymentDue")
        }
        if !B1PrePaymentCreditCard.firstPaymentSum.isRemoved {
            B1PrePaymentCreditCard.firstPaymentSum = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "FirstPaymentSum")
        }
        if !B1PrePaymentCreditCard.additionalPaymentSum.isRemoved {
            B1PrePaymentCreditCard.additionalPaymentSum = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "AdditionalPaymentSum")
        }
        if !B1PrePaymentCreditCard.creditSum.isRemoved {
            B1PrePaymentCreditCard.creditSum = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "CreditSum")
        }
        if !B1PrePaymentCreditCard.creditCur.isRemoved {
            B1PrePaymentCreditCard.creditCur = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "CreditCur")
        }
        if !B1PrePaymentCreditCard.creditRate.isRemoved {
            B1PrePaymentCreditCard.creditRate = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "CreditRate")
        }
        if !B1PrePaymentCreditCard.confirmationNum.isRemoved {
            B1PrePaymentCreditCard.confirmationNum = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "ConfirmationNum")
        }
        if !B1PrePaymentCreditCard.numOfCreditPayments.isRemoved {
            B1PrePaymentCreditCard.numOfCreditPayments = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "NumOfCreditPayments")
        }
        if !B1PrePaymentCreditCard.creditType.isRemoved {
            B1PrePaymentCreditCard.creditType = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "CreditType")
        }
        if !B1PrePaymentCreditCard.splitPayments.isRemoved {
            B1PrePaymentCreditCard.splitPayments = B1ClassMetadata.ComplexTypes.paymentCreditCard.property(withName: "SplitPayments")
        }
        if !B1PrePaymentInvoice.lineNum.isRemoved {
            B1PrePaymentInvoice.lineNum = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "LineNum")
        }
        if !B1PrePaymentInvoice.docEntry.isRemoved {
            B1PrePaymentInvoice.docEntry = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DocEntry")
        }
        if !B1PrePaymentInvoice.sumApplied.isRemoved {
            B1PrePaymentInvoice.sumApplied = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "SumApplied")
        }
        if !B1PrePaymentInvoice.appliedFC.isRemoved {
            B1PrePaymentInvoice.appliedFC = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "AppliedFC")
        }
        if !B1PrePaymentInvoice.appliedSys.isRemoved {
            B1PrePaymentInvoice.appliedSys = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "AppliedSys")
        }
        if !B1PrePaymentInvoice.docRate.isRemoved {
            B1PrePaymentInvoice.docRate = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DocRate")
        }
        if !B1PrePaymentInvoice.docLine.isRemoved {
            B1PrePaymentInvoice.docLine = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DocLine")
        }
        if !B1PrePaymentInvoice.invoiceType.isRemoved {
            B1PrePaymentInvoice.invoiceType = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "InvoiceType")
        }
        if !B1PrePaymentInvoice.discountPercent.isRemoved {
            B1PrePaymentInvoice.discountPercent = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DiscountPercent")
        }
        if !B1PrePaymentInvoice.paidSum.isRemoved {
            B1PrePaymentInvoice.paidSum = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "PaidSum")
        }
        if !B1PrePaymentInvoice.installmentID.isRemoved {
            B1PrePaymentInvoice.installmentID = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "InstallmentId")
        }
        if !B1PrePaymentInvoice.witholdingTaxApplied.isRemoved {
            B1PrePaymentInvoice.witholdingTaxApplied = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "WitholdingTaxApplied")
        }
        if !B1PrePaymentInvoice.witholdingTaxAppliedFC.isRemoved {
            B1PrePaymentInvoice.witholdingTaxAppliedFC = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "WitholdingTaxAppliedFC")
        }
        if !B1PrePaymentInvoice.witholdingTaxAppliedSC.isRemoved {
            B1PrePaymentInvoice.witholdingTaxAppliedSC = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "WitholdingTaxAppliedSC")
        }
        if !B1PrePaymentInvoice.linkDate.isRemoved {
            B1PrePaymentInvoice.linkDate = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "LinkDate")
        }
        if !B1PrePaymentInvoice.distributionRule.isRemoved {
            B1PrePaymentInvoice.distributionRule = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DistributionRule")
        }
        if !B1PrePaymentInvoice.distributionRule2.isRemoved {
            B1PrePaymentInvoice.distributionRule2 = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DistributionRule2")
        }
        if !B1PrePaymentInvoice.distributionRule3.isRemoved {
            B1PrePaymentInvoice.distributionRule3 = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DistributionRule3")
        }
        if !B1PrePaymentInvoice.distributionRule4.isRemoved {
            B1PrePaymentInvoice.distributionRule4 = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DistributionRule4")
        }
        if !B1PrePaymentInvoice.distributionRule5.isRemoved {
            B1PrePaymentInvoice.distributionRule5 = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "DistributionRule5")
        }
        if !B1PrePaymentInvoice.totalDiscount.isRemoved {
            B1PrePaymentInvoice.totalDiscount = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "TotalDiscount")
        }
        if !B1PrePaymentInvoice.totalDiscountFC.isRemoved {
            B1PrePaymentInvoice.totalDiscountFC = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "TotalDiscountFC")
        }
        if !B1PrePaymentInvoice.totalDiscountSC.isRemoved {
            B1PrePaymentInvoice.totalDiscountSC = B1ClassMetadata.ComplexTypes.paymentInvoice.property(withName: "TotalDiscountSC")
        }
        if !B1PrePaymentInvoiceEntry.docType.isRemoved {
            B1PrePaymentInvoiceEntry.docType = B1ClassMetadata.ComplexTypes.paymentInvoiceEntry.property(withName: "DocType")
        }
        if !B1PrePaymentInvoiceEntry.docEntry.isRemoved {
            B1PrePaymentInvoiceEntry.docEntry = B1ClassMetadata.ComplexTypes.paymentInvoiceEntry.property(withName: "DocEntry")
        }
        if !B1PrePaymentInvoiceEntry.installmentID.isRemoved {
            B1PrePaymentInvoiceEntry.installmentID = B1ClassMetadata.ComplexTypes.paymentInvoiceEntry.property(withName: "InstallmentId")
        }
        if !B1PrePaymentParams.docEntry.isRemoved {
            B1PrePaymentParams.docEntry = B1ClassMetadata.ComplexTypes.paymentParams.property(withName: "DocEntry")
        }
        if !B1PrePaymentRunExportParams.absoluteEntry.isRemoved {
            B1PrePaymentRunExportParams.absoluteEntry = B1ClassMetadata.ComplexTypes.paymentRunExportParams.property(withName: "AbsoluteEntry")
        }
        if !B1PrePaymentRunExportLine.rowNumber.isRemoved {
            B1PrePaymentRunExportLine.rowNumber = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "RowNumber")
        }
        if !B1PrePaymentRunExportLine.dateOfPaymentRun.isRemoved {
            B1PrePaymentRunExportLine.dateOfPaymentRun = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DateOfPaymentRun")
        }
        if !B1PrePaymentRunExportLine.paymentWizardCode.isRemoved {
            B1PrePaymentRunExportLine.paymentWizardCode = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "PaymentWizardCode")
        }
        if !B1PrePaymentRunExportLine.vendorNumber.isRemoved {
            B1PrePaymentRunExportLine.vendorNumber = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "VendorNumber")
        }
        if !B1PrePaymentRunExportLine.customerNumber.isRemoved {
            B1PrePaymentRunExportLine.customerNumber = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "CustomerNumber")
        }
        if !B1PrePaymentRunExportLine.paymentMeans.isRemoved {
            B1PrePaymentRunExportLine.paymentMeans = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "PaymentMeans")
        }
        if !B1PrePaymentRunExportLine.paymentDocNum.isRemoved {
            B1PrePaymentRunExportLine.paymentDocNum = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "PaymentDocNum")
        }
        if !B1PrePaymentRunExportLine.fiscalYear.isRemoved {
            B1PrePaymentRunExportLine.fiscalYear = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "FiscalYear")
        }
        if !B1PrePaymentRunExportLine.vendorRefNum.isRemoved {
            B1PrePaymentRunExportLine.vendorRefNum = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "VendorRefNum")
        }
        if !B1PrePaymentRunExportLine.documentObjectType.isRemoved {
            B1PrePaymentRunExportLine.documentObjectType = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentObjectType")
        }
        if !B1PrePaymentRunExportLine.documentPostingDate.isRemoved {
            B1PrePaymentRunExportLine.documentPostingDate = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentPostingDate")
        }
        if !B1PrePaymentRunExportLine.documentTaxDate.isRemoved {
            B1PrePaymentRunExportLine.documentTaxDate = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentTaxDate")
        }
        if !B1PrePaymentRunExportLine.bpDebitPayableAccount.isRemoved {
            B1PrePaymentRunExportLine.bpDebitPayableAccount = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "BPDebitPayableAccount")
        }
        if !B1PrePaymentRunExportLine.documentCurrency.isRemoved {
            B1PrePaymentRunExportLine.documentCurrency = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentCurrency")
        }
        if !B1PrePaymentRunExportLine.documentRate.isRemoved {
            B1PrePaymentRunExportLine.documentRate = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentRate")
        }
        if !B1PrePaymentRunExportLine.documentTotal.isRemoved {
            B1PrePaymentRunExportLine.documentTotal = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentTotal")
        }
        if !B1PrePaymentRunExportLine.documentTotalFC.isRemoved {
            B1PrePaymentRunExportLine.documentTotalFC = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentTotalFC")
        }
        if !B1PrePaymentRunExportLine.documentTaxAmount.isRemoved {
            B1PrePaymentRunExportLine.documentTaxAmount = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentTaxAmount")
        }
        if !B1PrePaymentRunExportLine.documentTaxAmountFC.isRemoved {
            B1PrePaymentRunExportLine.documentTaxAmountFC = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentTaxAmountFC")
        }
        if !B1PrePaymentRunExportLine.documentRemarks.isRemoved {
            B1PrePaymentRunExportLine.documentRemarks = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentRemarks")
        }
        if !B1PrePaymentRunExportLine.documentPaymentTerms.isRemoved {
            B1PrePaymentRunExportLine.documentPaymentTerms = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentPaymentTerms")
        }
        if !B1PrePaymentRunExportLine.paymentDocReference.isRemoved {
            B1PrePaymentRunExportLine.paymentDocReference = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "PaymentDocReference")
        }
        if !B1PrePaymentRunExportLine.documentLocalCurrency.isRemoved {
            B1PrePaymentRunExportLine.documentLocalCurrency = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentLocalCurrency")
        }
        if !B1PrePaymentRunExportLine.paymentTermsPeriod.isRemoved {
            B1PrePaymentRunExportLine.paymentTermsPeriod = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "PaymentTermsPeriod")
        }
        if !B1PrePaymentRunExportLine.documentObjectTypeEx.isRemoved {
            B1PrePaymentRunExportLine.documentObjectTypeEx = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentObjectTypeEx")
        }
        if !B1PrePaymentRunExportLine.documentNumber.isRemoved {
            B1PrePaymentRunExportLine.documentNumber = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "DocumentNumber")
        }
        if !B1PrePaymentRunExportLine.paymentNumber.isRemoved {
            B1PrePaymentRunExportLine.paymentNumber = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "PaymentNumber")
        }
        if !B1PrePaymentRunExportLine.paymentOrderNum.isRemoved {
            B1PrePaymentRunExportLine.paymentOrderNum = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "PaymentOrderNum")
        }
        if !B1PrePaymentRunExportLine.freeText1.isRemoved {
            B1PrePaymentRunExportLine.freeText1 = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "FreeText1")
        }
        if !B1PrePaymentRunExportLine.freeText2.isRemoved {
            B1PrePaymentRunExportLine.freeText2 = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "FreeText2")
        }
        if !B1PrePaymentRunExportLine.freeText3.isRemoved {
            B1PrePaymentRunExportLine.freeText3 = B1ClassMetadata.ComplexTypes.paymentRunExportLine.property(withName: "FreeText3")
        }
        if !B1PrePaymentTermsTypeParams.groupNumber.isRemoved {
            B1PrePaymentTermsTypeParams.groupNumber = B1ClassMetadata.ComplexTypes.paymentTermsTypeParams.property(withName: "GroupNumber")
        }
        if !B1PrePaymentsApprovalRequest.approvalTemplatesID.isRemoved {
            B1PrePaymentsApprovalRequest.approvalTemplatesID = B1ClassMetadata.ComplexTypes.paymentsApprovalRequest.property(withName: "ApprovalTemplatesID")
        }
        if !B1PrePaymentsApprovalRequest.remarks.isRemoved {
            B1PrePaymentsApprovalRequest.remarks = B1ClassMetadata.ComplexTypes.paymentsApprovalRequest.property(withName: "Remarks")
        }
        if !B1PrePeriodCategory.absoluteEntry.isRemoved {
            B1PrePeriodCategory.absoluteEntry = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "AbsoluteEntry")
        }
        if !B1PrePeriodCategory.beginningofFinancialYear.isRemoved {
            B1PrePeriodCategory.beginningofFinancialYear = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "BeginningofFinancialYear")
        }
        if !B1PrePeriodCategory.periodCategory.isRemoved {
            B1PrePeriodCategory.periodCategory = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PeriodCategory")
        }
        if !B1PrePeriodCategory.subPeriodType.isRemoved {
            B1PrePeriodCategory.subPeriodType = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SubPeriodType")
        }
        if !B1PrePeriodCategory.numberOfPeriods.isRemoved {
            B1PrePeriodCategory.numberOfPeriods = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "NumberOfPeriods")
        }
        if !B1PrePeriodCategory.periodName.isRemoved {
            B1PrePeriodCategory.periodName = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PeriodName")
        }
        if !B1PrePeriodCategory.debitorsFollowUpAccount.isRemoved {
            B1PrePeriodCategory.debitorsFollowUpAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DebitorsFollowUpAccount")
        }
        if !B1PrePeriodCategory.accountforOutgoingChecks.isRemoved {
            B1PrePeriodCategory.accountforOutgoingChecks = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "AccountforOutgoingChecks")
        }
        if !B1PrePeriodCategory.accountforCashReceipt.isRemoved {
            B1PrePeriodCategory.accountforCashReceipt = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "AccountforCashReceipt")
        }
        if !B1PrePeriodCategory.customersDeductionatSource.isRemoved {
            B1PrePeriodCategory.customersDeductionatSource = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CustomersDeductionatSource")
        }
        if !B1PrePeriodCategory.commissionAccountDefault.isRemoved {
            B1PrePeriodCategory.commissionAccountDefault = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CommissionAccountDefault")
        }
        if !B1PrePeriodCategory.purchaseTax.isRemoved {
            B1PrePeriodCategory.purchaseTax = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PurchaseTax")
        }
        if !B1PrePeriodCategory.foreignAccountsReceivables.isRemoved {
            B1PrePeriodCategory.foreignAccountsReceivables = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ForeignAccountsReceivables")
        }
        if !B1PrePeriodCategory.creditorsFollowUpAccount.isRemoved {
            B1PrePeriodCategory.creditorsFollowUpAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CreditorsFollowUpAccount")
        }
        if !B1PrePeriodCategory.outgoingChecksAccount.isRemoved {
            B1PrePeriodCategory.outgoingChecksAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "OutgoingChecksAccount")
        }
        if !B1PrePeriodCategory.outgoingCashAccount.isRemoved {
            B1PrePeriodCategory.outgoingCashAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "OutgoingCashAccount")
        }
        if !B1PrePeriodCategory.accountforCreditMemoPayme.isRemoved {
            B1PrePeriodCategory.accountforCreditMemoPayme = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "AccountforCreditMemoPayme")
        }
        if !B1PrePeriodCategory.inputTaxAccount.isRemoved {
            B1PrePeriodCategory.inputTaxAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "InputTaxAccount")
        }
        if !B1PrePeriodCategory.taxDefinition.isRemoved {
            B1PrePeriodCategory.taxDefinition = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "TaxDefinition")
        }
        if !B1PrePeriodCategory.withholodingTax.isRemoved {
            B1PrePeriodCategory.withholodingTax = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "WithholodingTax")
        }
        if !B1PrePeriodCategory.openingBalancesAccount.isRemoved {
            B1PrePeriodCategory.openingBalancesAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "OpeningBalancesAccount")
        }
        if !B1PrePeriodCategory.defaultSaleAccount.isRemoved {
            B1PrePeriodCategory.defaultSaleAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DefaultSaleAccount")
        }
        if !B1PrePeriodCategory.taxExemptRevenuesDefault.isRemoved {
            B1PrePeriodCategory.taxExemptRevenuesDefault = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "TaxExemptRevenuesDefault")
        }
        if !B1PrePeriodCategory.expenseAccountDefault.isRemoved {
            B1PrePeriodCategory.expenseAccountDefault = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ExpenseAccountDefault")
        }
        if !B1PrePeriodCategory.revenuesAccountForeign.isRemoved {
            B1PrePeriodCategory.revenuesAccountForeign = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "RevenuesAccountForeign")
        }
        if !B1PrePeriodCategory.salesRevenueEU.isRemoved {
            B1PrePeriodCategory.salesRevenueEU = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SalesRevenueEU")
        }
        if !B1PrePeriodCategory.expensesAccountForeign.isRemoved {
            B1PrePeriodCategory.expensesAccountForeign = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ExpensesAccountForeign")
        }
        if !B1PrePeriodCategory.rateDifferencesDefaultAcc.isRemoved {
            B1PrePeriodCategory.rateDifferencesDefaultAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "RateDifferencesDefaultAcc")
        }
        if !B1PrePeriodCategory.decreaseGLAcc.isRemoved {
            B1PrePeriodCategory.decreaseGLAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DecreaseGLAcc")
        }
        if !B1PrePeriodCategory.reconciliationDifference.isRemoved {
            B1PrePeriodCategory.reconciliationDifference = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ReconciliationDifference")
        }
        if !B1PrePeriodCategory.acountforOpeningWHBalance.isRemoved {
            B1PrePeriodCategory.acountforOpeningWHBalance = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "AcountforOpeningWHBalance")
        }
        if !B1PrePeriodCategory.apCashDiscountAccount.isRemoved {
            B1PrePeriodCategory.apCashDiscountAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "APCashDiscountAccount")
        }
        if !B1PrePeriodCategory.apLossCashDiscountAccount.isRemoved {
            B1PrePeriodCategory.apLossCashDiscountAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "APLossCashDiscountAccount")
        }
        if !B1PrePeriodCategory.apLossRealizedExchangeDif.isRemoved {
            B1PrePeriodCategory.apLossRealizedExchangeDif = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "APLossRealizedExchangeDif")
        }
        if !B1PrePeriodCategory.arCashDiscountAccount.isRemoved {
            B1PrePeriodCategory.arCashDiscountAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ARCashDiscountAccount")
        }
        if !B1PrePeriodCategory.arLossRealizedExchangeDi.isRemoved {
            B1PrePeriodCategory.arLossRealizedExchangeDi = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ARLossRealizedExchangeDi")
        }
        if !B1PrePeriodCategory.roundingAccount.isRemoved {
            B1PrePeriodCategory.roundingAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "RoundingAccount")
        }
        if !B1PrePeriodCategory.apGainRealizedExchngeDif.isRemoved {
            B1PrePeriodCategory.apGainRealizedExchngeDif = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "APGainRealizedExchngeDif")
        }
        if !B1PrePeriodCategory.arGainRealizedExchngeDif.isRemoved {
            B1PrePeriodCategory.arGainRealizedExchngeDif = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ARGainRealizedExchngeDif")
        }
        if !B1PrePeriodCategory.increaseGLAccount.isRemoved {
            B1PrePeriodCategory.increaseGLAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "IncreaseGLAccount")
        }
        if !B1PrePeriodCategory.salesReturns.isRemoved {
            B1PrePeriodCategory.salesReturns = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SalesReturns")
        }
        if !B1PrePeriodCategory.costOfGoodsSold.isRemoved {
            B1PrePeriodCategory.costOfGoodsSold = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CostOfGoodsSold")
        }
        if !B1PrePeriodCategory.allocationAcc.isRemoved {
            B1PrePeriodCategory.allocationAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "AllocationAcc")
        }
        if !B1PrePeriodCategory.varianceAcc.isRemoved {
            B1PrePeriodCategory.varianceAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "VarianceAcc")
        }
        if !B1PrePeriodCategory.priceDifferenceAccount.isRemoved {
            B1PrePeriodCategory.priceDifferenceAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PriceDifferenceAccount")
        }
        if !B1PrePeriodCategory.customerDownPaymentsAccount.isRemoved {
            B1PrePeriodCategory.customerDownPaymentsAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CustomerDownPaymentsAccount")
        }
        if !B1PrePeriodCategory.vendorDownPaymentsAccount.isRemoved {
            B1PrePeriodCategory.vendorDownPaymentsAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "VendorDownPaymentsAccount")
        }
        if !B1PrePeriodCategory.billofExchangeAccountsRece.isRemoved {
            B1PrePeriodCategory.billofExchangeAccountsRece = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "BillofExchangeAccountsRece")
        }
        if !B1PrePeriodCategory.custBillofExchangeonC.isRemoved {
            B1PrePeriodCategory.custBillofExchangeonC = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CustBillofExchangeonC")
        }
        if !B1PrePeriodCategory.customerBillofExchangePres.isRemoved {
            B1PrePeriodCategory.customerBillofExchangePres = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CustomerBillofExchangePres")
        }
        if !B1PrePeriodCategory.customerBillofExchngeDisc.isRemoved {
            B1PrePeriodCategory.customerBillofExchngeDisc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CustomerBillofExchngeDisc")
        }
        if !B1PrePeriodCategory.customerUnpaidBoE.isRemoved {
            B1PrePeriodCategory.customerUnpaidBoE = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CustomerUnpaidBoE")
        }
        if !B1PrePeriodCategory.boEAccountsPayable.isRemoved {
            B1PrePeriodCategory.boEAccountsPayable = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "BoEAccountsPayable")
        }
        if !B1PrePeriodCategory.boEAccountsPayable2.isRemoved {
            B1PrePeriodCategory.boEAccountsPayable2 = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "BoEAccountsPayable2")
        }
        if !B1PrePeriodCategory.customerDoubtfulDebtsAcct.isRemoved {
            B1PrePeriodCategory.customerDoubtfulDebtsAcct = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CustomerDoubtfulDebtsAcct")
        }
        if !B1PrePeriodCategory.vendorDoubtfulDebtsAcct.isRemoved {
            B1PrePeriodCategory.vendorDoubtfulDebtsAcct = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "VendorDoubtfulDebtsAcct")
        }
        if !B1PrePeriodCategory.purchaseAccount.isRemoved {
            B1PrePeriodCategory.purchaseAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PurchaseAccount")
        }
        if !B1PrePeriodCategory.purchaseReturnAccount.isRemoved {
            B1PrePeriodCategory.purchaseReturnAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PurchaseReturnAccount")
        }
        if !B1PrePeriodCategory.purchaseOffsetAccount.isRemoved {
            B1PrePeriodCategory.purchaseOffsetAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PurchaseOffsetAccount")
        }
        if !B1PrePeriodCategory.eoyControlAccount.isRemoved {
            B1PrePeriodCategory.eoyControlAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "EOYControlAccount")
        }
        if !B1PrePeriodCategory.exchangeRateDifferencesAcct.isRemoved {
            B1PrePeriodCategory.exchangeRateDifferencesAcct = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ExchangeRateDifferencesAcct")
        }
        if !B1PrePeriodCategory.goodsClearingAcc.isRemoved {
            B1PrePeriodCategory.goodsClearingAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "GoodsClearingAcc")
        }
        if !B1PrePeriodCategory.expenseClearingAccount.isRemoved {
            B1PrePeriodCategory.expenseClearingAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ExpenseClearingAccount")
        }
        if !B1PrePeriodCategory.expenseOffsetAccount.isRemoved {
            B1PrePeriodCategory.expenseOffsetAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ExpenseOffsetAccount")
        }
        if !B1PrePeriodCategory.costofSaleRevaluationAcct.isRemoved {
            B1PrePeriodCategory.costofSaleRevaluationAcct = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CostofSaleRevaluationAcct")
        }
        if !B1PrePeriodCategory.repomoAccount.isRemoved {
            B1PrePeriodCategory.repomoAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "RepomoAccount")
        }
        if !B1PrePeriodCategory.wipMaterialVarianceAccount.isRemoved {
            B1PrePeriodCategory.wipMaterialVarianceAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "WIPMaterialVarianceAccount")
        }
        if !B1PrePeriodCategory.downPaymentVATAcctSale.isRemoved {
            B1PrePeriodCategory.downPaymentVATAcctSale = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DownPaymentVATAcctSale")
        }
        if !B1PrePeriodCategory.downPaymentVATAcctPurch.isRemoved {
            B1PrePeriodCategory.downPaymentVATAcctPurch = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DownPaymentVATAcctPurch")
        }
        if !B1PrePeriodCategory.downPaymentSClearingAcct.isRemoved {
            B1PrePeriodCategory.downPaymentSClearingAcct = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DownPaymentSClearingAcct")
        }
        if !B1PrePeriodCategory.downPaymentPClearingAcct.isRemoved {
            B1PrePeriodCategory.downPaymentPClearingAcct = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DownPaymentPClearingAcct")
        }
        if !B1PrePeriodCategory.expenseVarianceAccount.isRemoved {
            B1PrePeriodCategory.expenseVarianceAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ExpenseVarianceAccount")
        }
        if !B1PrePeriodCategory.costofSaleRevOffsetAcct.isRemoved {
            B1PrePeriodCategory.costofSaleRevOffsetAcct = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "CostofSaleRevOffsetAcct")
        }
        if !B1PrePeriodCategory.euExpenseAccount.isRemoved {
            B1PrePeriodCategory.euExpenseAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "EUExpenseAccount")
        }
        if !B1PrePeriodCategory.stockAccount.isRemoved {
            B1PrePeriodCategory.stockAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "StockAccount")
        }
        if !B1PrePeriodCategory.inventoryOffsetIncrease.isRemoved {
            B1PrePeriodCategory.inventoryOffsetIncrease = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "InventoryOffsetIncrease")
        }
        if !B1PrePeriodCategory.inventoryOffsetDecrease.isRemoved {
            B1PrePeriodCategory.inventoryOffsetDecrease = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "InventoryOffsetDecrease")
        }
        if !B1PrePeriodCategory.vendorAssetsAccount.isRemoved {
            B1PrePeriodCategory.vendorAssetsAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "VendorAssetsAccount")
        }
        if !B1PrePeriodCategory.stockRevaluationAccount.isRemoved {
            B1PrePeriodCategory.stockRevaluationAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "StockRevaluationAccount")
        }
        if !B1PrePeriodCategory.stockRevaluationOffsetAcct.isRemoved {
            B1PrePeriodCategory.stockRevaluationOffsetAcct = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "StockRevaluationOffsetAcct")
        }
        if !B1PrePeriodCategory.wipMaterialAccount.isRemoved {
            B1PrePeriodCategory.wipMaterialAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "WIPMaterialAccount")
        }
        if !B1PrePeriodCategory.invoicePaymentBP.isRemoved {
            B1PrePeriodCategory.invoicePaymentBP = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "InvoicePaymentBP")
        }
        if !B1PrePeriodCategory.glRevaluationOffsetAccount.isRemoved {
            B1PrePeriodCategory.glRevaluationOffsetAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "GLRevaluationOffsetAccount")
        }
        if !B1PrePeriodCategory.overpaymentsAPAccount.isRemoved {
            B1PrePeriodCategory.overpaymentsAPAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "OverpaymentsAPAccount")
        }
        if !B1PrePeriodCategory.underpaymentsAPAccount.isRemoved {
            B1PrePeriodCategory.underpaymentsAPAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "UnderpaymentsAPAccount")
        }
        if !B1PrePeriodCategory.overpaymentsARAccount.isRemoved {
            B1PrePeriodCategory.overpaymentsARAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "OverpaymentsARAccount")
        }
        if !B1PrePeriodCategory.underpaymentsARAccount.isRemoved {
            B1PrePeriodCategory.underpaymentsARAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "UnderpaymentsARAccount")
        }
        if !B1PrePeriodCategory.purchaseCreditAcc.isRemoved {
            B1PrePeriodCategory.purchaseCreditAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PurchaseCreditAcc")
        }
        if !B1PrePeriodCategory.euPurchaseCreditAcc.isRemoved {
            B1PrePeriodCategory.euPurchaseCreditAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "EUPurchaseCreditAcc")
        }
        if !B1PrePeriodCategory.foreignPurchaseCreditAcc.isRemoved {
            B1PrePeriodCategory.foreignPurchaseCreditAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ForeignPurchaseCreditAcc")
        }
        if !B1PrePeriodCategory.salesCreditAcc.isRemoved {
            B1PrePeriodCategory.salesCreditAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SalesCreditAcc")
        }
        if !B1PrePeriodCategory.salesCreditEUAcc.isRemoved {
            B1PrePeriodCategory.salesCreditEUAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SalesCreditEUAcc")
        }
        if !B1PrePeriodCategory.exemptedCredits.isRemoved {
            B1PrePeriodCategory.exemptedCredits = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ExemptedCredits")
        }
        if !B1PrePeriodCategory.salesCreditForeignAcc.isRemoved {
            B1PrePeriodCategory.salesCreditForeignAcc = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SalesCreditForeignAcc")
        }
        if !B1PrePeriodCategory.fromPostingDate.isRemoved {
            B1PrePeriodCategory.fromPostingDate = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "FromPostingDate")
        }
        if !B1PrePeriodCategory.toPostingDate.isRemoved {
            B1PrePeriodCategory.toPostingDate = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ToPostingDate")
        }
        if !B1PrePeriodCategory.fromDueDate.isRemoved {
            B1PrePeriodCategory.fromDueDate = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "FromDueDate")
        }
        if !B1PrePeriodCategory.toDueDate.isRemoved {
            B1PrePeriodCategory.toDueDate = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ToDueDate")
        }
        if !B1PrePeriodCategory.fromDocumentDate.isRemoved {
            B1PrePeriodCategory.fromDocumentDate = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "FromDocumentDate")
        }
        if !B1PrePeriodCategory.toDocumentDate.isRemoved {
            B1PrePeriodCategory.toDocumentDate = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ToDocumentDate")
        }
        if !B1PrePeriodCategory.outgoingTaxAccount.isRemoved {
            B1PrePeriodCategory.outgoingTaxAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "OutgoingTaxAccount")
        }
        if !B1PrePeriodCategory.negativeInventoryAdjustmentAccount.isRemoved {
            B1PrePeriodCategory.negativeInventoryAdjustmentAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "NegativeInventoryAdjustmentAccount")
        }
        if !B1PrePeriodCategory.financialYear.isRemoved {
            B1PrePeriodCategory.financialYear = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "FinancialYear")
        }
        if !B1PrePeriodCategory.selfInvoiceRevenueAccount.isRemoved {
            B1PrePeriodCategory.selfInvoiceRevenueAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SelfInvoiceRevenueAccount")
        }
        if !B1PrePeriodCategory.selfInvoiceExpenseAccount.isRemoved {
            B1PrePeriodCategory.selfInvoiceExpenseAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SelfInvoiceExpenseAccount")
        }
        if !B1PrePeriodCategory.stockInTransitAccount.isRemoved {
            B1PrePeriodCategory.stockInTransitAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "StockInTransitAccount")
        }
        if !B1PrePeriodCategory.salesDownPaymentInterimAccount.isRemoved {
            B1PrePeriodCategory.salesDownPaymentInterimAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "SalesDownPaymentInterimAccount")
        }
        if !B1PrePeriodCategory.purchaseDownPaymentInterimAccount.isRemoved {
            B1PrePeriodCategory.purchaseDownPaymentInterimAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "PurchaseDownPaymentInterimAccount")
        }
        if !B1PrePeriodCategory.euAccountsReceivable.isRemoved {
            B1PrePeriodCategory.euAccountsReceivable = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "EUAccountsReceivable")
        }
        if !B1PrePeriodCategory.euAccountsPayable.isRemoved {
            B1PrePeriodCategory.euAccountsPayable = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "EUAccountsPayable")
        }
        if !B1PrePeriodCategory.wipOffsetProfitAndLossAccount.isRemoved {
            B1PrePeriodCategory.wipOffsetProfitAndLossAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "WipOffsetProfitAndLossAccount")
        }
        if !B1PrePeriodCategory.inventoryOffsetProfitAndLossAccount.isRemoved {
            B1PrePeriodCategory.inventoryOffsetProfitAndLossAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "InventoryOffsetProfitAndLossAccount")
        }
        if !B1PrePeriodCategory.dunningInterestAccount.isRemoved {
            B1PrePeriodCategory.dunningInterestAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DunningInterestAccount")
        }
        if !B1PrePeriodCategory.dunningFeeAccount.isRemoved {
            B1PrePeriodCategory.dunningFeeAccount = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "DunningFeeAccount")
        }
        if !B1PrePeriodCategory.arGainRealizedConversionDiff.isRemoved {
            B1PrePeriodCategory.arGainRealizedConversionDiff = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ARGainRealizedConversionDiff")
        }
        if !B1PrePeriodCategory.arLossRealizedConversionDiff.isRemoved {
            B1PrePeriodCategory.arLossRealizedConversionDiff = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ARLossRealizedConversionDiff")
        }
        if !B1PrePeriodCategory.apGainRealizedConversionDiff.isRemoved {
            B1PrePeriodCategory.apGainRealizedConversionDiff = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "APGainRealizedConversionDiff")
        }
        if !B1PrePeriodCategory.apLossRealizedConversionDiff.isRemoved {
            B1PrePeriodCategory.apLossRealizedConversionDiff = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "APLossRealizedConversionDiff")
        }
        if !B1PrePeriodCategory.glGainRealizedConversionDiff.isRemoved {
            B1PrePeriodCategory.glGainRealizedConversionDiff = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "GLGainRealizedConversionDiff")
        }
        if !B1PrePeriodCategory.glLossRealizedConversionDiff.isRemoved {
            B1PrePeriodCategory.glLossRealizedConversionDiff = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "GLLossRealizedConversionDiff")
        }
        if !B1PrePeriodCategory.arExRateInterim.isRemoved {
            B1PrePeriodCategory.arExRateInterim = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ARExRateInterim")
        }
        if !B1PrePeriodCategory.apExRateInterim.isRemoved {
            B1PrePeriodCategory.apExRateInterim = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "APExRateInterim")
        }
        if !B1PrePeriodCategory.arCashDiscountInterim.isRemoved {
            B1PrePeriodCategory.arCashDiscountInterim = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "ARCashDiscountInterim")
        }
        if !B1PrePeriodCategory.apCashDiscountInterim.isRemoved {
            B1PrePeriodCategory.apCashDiscountInterim = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "APCashDiscountInterim")
        }
        if !B1PrePeriodCategory.wipMappingCollection.isRemoved {
            B1PrePeriodCategory.wipMappingCollection = B1ClassMetadata.ComplexTypes.periodCategory.property(withName: "WIPMappingCollection")
        }
        if !B1PrePeriodCategoryParams.absoluteEntry.isRemoved {
            B1PrePeriodCategoryParams.absoluteEntry = B1ClassMetadata.ComplexTypes.periodCategoryParams.property(withName: "AbsoluteEntry")
        }
        if !B1PrePickListParams.absoluteentry.isRemoved {
            B1PrePickListParams.absoluteentry = B1ClassMetadata.ComplexTypes.pickListParams.property(withName: "Absoluteentry")
        }
        if !B1PrePickListsLine.absoluteEntry.isRemoved {
            B1PrePickListsLine.absoluteEntry = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "AbsoluteEntry")
        }
        if !B1PrePickListsLine.lineNumber.isRemoved {
            B1PrePickListsLine.lineNumber = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "LineNumber")
        }
        if !B1PrePickListsLine.orderEntry.isRemoved {
            B1PrePickListsLine.orderEntry = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "OrderEntry")
        }
        if !B1PrePickListsLine.orderRowID.isRemoved {
            B1PrePickListsLine.orderRowID = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "OrderRowID")
        }
        if !B1PrePickListsLine.pickedQuantity.isRemoved {
            B1PrePickListsLine.pickedQuantity = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "PickedQuantity")
        }
        if !B1PrePickListsLine.pickStatus.isRemoved {
            B1PrePickListsLine.pickStatus = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "PickStatus")
        }
        if !B1PrePickListsLine.releasedQuantity.isRemoved {
            B1PrePickListsLine.releasedQuantity = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "ReleasedQuantity")
        }
        if !B1PrePickListsLine.previouslyReleasedQuantity.isRemoved {
            B1PrePickListsLine.previouslyReleasedQuantity = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "PreviouslyReleasedQuantity")
        }
        if !B1PrePickListsLine.baseObjectType.isRemoved {
            B1PrePickListsLine.baseObjectType = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "BaseObjectType")
        }
        if !B1PrePickListsLine.serialNumbers.isRemoved {
            B1PrePickListsLine.serialNumbers = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "SerialNumbers")
        }
        if !B1PrePickListsLine.batchNumbers.isRemoved {
            B1PrePickListsLine.batchNumbers = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "BatchNumbers")
        }
        if !B1PrePickListsLine.documentLinesBinAllocations.isRemoved {
            B1PrePickListsLine.documentLinesBinAllocations = B1ClassMetadata.ComplexTypes.pickListsLine.property(withName: "DocumentLinesBinAllocations")
        }
        if !B1PrePredefinedTextParams.numerator.isRemoved {
            B1PrePredefinedTextParams.numerator = B1ClassMetadata.ComplexTypes.predefinedTextParams.property(withName: "Numerator")
        }
        if !B1PrePredefinedTextParams.textCode.isRemoved {
            B1PrePredefinedTextParams.textCode = B1ClassMetadata.ComplexTypes.predefinedTextParams.property(withName: "TextCode")
        }
        if !B1PrePriceListParams.priceListNo.isRemoved {
            B1PrePriceListParams.priceListNo = B1ClassMetadata.ComplexTypes.priceListParams.property(withName: "PriceListNo")
        }
        if !B1PreProductTreeLine.itemCode.isRemoved {
            B1PreProductTreeLine.itemCode = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "ItemCode")
        }
        if !B1PreProductTreeLine.quantity.isRemoved {
            B1PreProductTreeLine.quantity = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "Quantity")
        }
        if !B1PreProductTreeLine.warehouse.isRemoved {
            B1PreProductTreeLine.warehouse = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "Warehouse")
        }
        if !B1PreProductTreeLine.price.isRemoved {
            B1PreProductTreeLine.price = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "Price")
        }
        if !B1PreProductTreeLine.currency.isRemoved {
            B1PreProductTreeLine.currency = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "Currency")
        }
        if !B1PreProductTreeLine.issueMethod.isRemoved {
            B1PreProductTreeLine.issueMethod = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "IssueMethod")
        }
        if !B1PreProductTreeLine.inventoryUOM.isRemoved {
            B1PreProductTreeLine.inventoryUOM = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "InventoryUOM")
        }
        if !B1PreProductTreeLine.comment.isRemoved {
            B1PreProductTreeLine.comment = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "Comment")
        }
        if !B1PreProductTreeLine.parentItem.isRemoved {
            B1PreProductTreeLine.parentItem = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "ParentItem")
        }
        if !B1PreProductTreeLine.priceList.isRemoved {
            B1PreProductTreeLine.priceList = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "PriceList")
        }
        if !B1PreProductTreeLine.distributionRule.isRemoved {
            B1PreProductTreeLine.distributionRule = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "DistributionRule")
        }
        if !B1PreProductTreeLine.project.isRemoved {
            B1PreProductTreeLine.project = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "Project")
        }
        if !B1PreProductTreeLine.distributionRule2.isRemoved {
            B1PreProductTreeLine.distributionRule2 = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "DistributionRule2")
        }
        if !B1PreProductTreeLine.distributionRule3.isRemoved {
            B1PreProductTreeLine.distributionRule3 = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "DistributionRule3")
        }
        if !B1PreProductTreeLine.distributionRule4.isRemoved {
            B1PreProductTreeLine.distributionRule4 = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "DistributionRule4")
        }
        if !B1PreProductTreeLine.distributionRule5.isRemoved {
            B1PreProductTreeLine.distributionRule5 = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "DistributionRule5")
        }
        if !B1PreProductTreeLine.wipAccount.isRemoved {
            B1PreProductTreeLine.wipAccount = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "WipAccount")
        }
        if !B1PreProductTreeLine.itemType.isRemoved {
            B1PreProductTreeLine.itemType = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "ItemType")
        }
        if !B1PreProductTreeLine.lineText.isRemoved {
            B1PreProductTreeLine.lineText = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "LineText")
        }
        if !B1PreProductTreeLine.additionalQuantity.isRemoved {
            B1PreProductTreeLine.additionalQuantity = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "AdditionalQuantity")
        }
        if !B1PreProductTreeLine.stageID.isRemoved {
            B1PreProductTreeLine.stageID = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "StageID")
        }
        if !B1PreProductTreeLine.childNum.isRemoved {
            B1PreProductTreeLine.childNum = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "ChildNum")
        }
        if !B1PreProductTreeLine.visualOrder.isRemoved {
            B1PreProductTreeLine.visualOrder = B1ClassMetadata.ComplexTypes.productTreeLine.property(withName: "VisualOrder")
        }
        if !B1PreProductTreeParams.treeCode.isRemoved {
            B1PreProductTreeParams.treeCode = B1ClassMetadata.ComplexTypes.productTreeParams.property(withName: "TreeCode")
        }
        if !B1PreProductTreeStage.father.isRemoved {
            B1PreProductTreeStage.father = B1ClassMetadata.ComplexTypes.productTreeStage.property(withName: "Father")
        }
        if !B1PreProductTreeStage.stageID.isRemoved {
            B1PreProductTreeStage.stageID = B1ClassMetadata.ComplexTypes.productTreeStage.property(withName: "StageID")
        }
        if !B1PreProductTreeStage.sequenceNumber.isRemoved {
            B1PreProductTreeStage.sequenceNumber = B1ClassMetadata.ComplexTypes.productTreeStage.property(withName: "SequenceNumber")
        }
        if !B1PreProductTreeStage.stageEntry.isRemoved {
            B1PreProductTreeStage.stageEntry = B1ClassMetadata.ComplexTypes.productTreeStage.property(withName: "StageEntry")
        }
        if !B1PreProductTreeStage.name.isRemoved {
            B1PreProductTreeStage.name = B1ClassMetadata.ComplexTypes.productTreeStage.property(withName: "Name")
        }
        if !B1PreProductTreeStage.waitingDays.isRemoved {
            B1PreProductTreeStage.waitingDays = B1ClassMetadata.ComplexTypes.productTreeStage.property(withName: "WaitingDays")
        }
        if !B1PreProductionOrderLine.documentAbsoluteEntry.isRemoved {
            B1PreProductionOrderLine.documentAbsoluteEntry = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "DocumentAbsoluteEntry")
        }
        if !B1PreProductionOrderLine.lineNumber.isRemoved {
            B1PreProductionOrderLine.lineNumber = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "LineNumber")
        }
        if !B1PreProductionOrderLine.itemNo.isRemoved {
            B1PreProductionOrderLine.itemNo = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "ItemNo")
        }
        if !B1PreProductionOrderLine.baseQuantity.isRemoved {
            B1PreProductionOrderLine.baseQuantity = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "BaseQuantity")
        }
        if !B1PreProductionOrderLine.plannedQuantity.isRemoved {
            B1PreProductionOrderLine.plannedQuantity = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "PlannedQuantity")
        }
        if !B1PreProductionOrderLine.issuedQuantity.isRemoved {
            B1PreProductionOrderLine.issuedQuantity = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "IssuedQuantity")
        }
        if !B1PreProductionOrderLine.productionOrderIssueType.isRemoved {
            B1PreProductionOrderLine.productionOrderIssueType = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "ProductionOrderIssueType")
        }
        if !B1PreProductionOrderLine.warehouse.isRemoved {
            B1PreProductionOrderLine.warehouse = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "Warehouse")
        }
        if !B1PreProductionOrderLine.visualOrder.isRemoved {
            B1PreProductionOrderLine.visualOrder = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "VisualOrder")
        }
        if !B1PreProductionOrderLine.distributionRule.isRemoved {
            B1PreProductionOrderLine.distributionRule = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "DistributionRule")
        }
        if !B1PreProductionOrderLine.locationCode.isRemoved {
            B1PreProductionOrderLine.locationCode = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "LocationCode")
        }
        if !B1PreProductionOrderLine.project.isRemoved {
            B1PreProductionOrderLine.project = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "Project")
        }
        if !B1PreProductionOrderLine.distributionRule2.isRemoved {
            B1PreProductionOrderLine.distributionRule2 = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "DistributionRule2")
        }
        if !B1PreProductionOrderLine.distributionRule3.isRemoved {
            B1PreProductionOrderLine.distributionRule3 = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "DistributionRule3")
        }
        if !B1PreProductionOrderLine.distributionRule4.isRemoved {
            B1PreProductionOrderLine.distributionRule4 = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "DistributionRule4")
        }
        if !B1PreProductionOrderLine.distributionRule5.isRemoved {
            B1PreProductionOrderLine.distributionRule5 = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "DistributionRule5")
        }
        if !B1PreProductionOrderLine.uoMEntry.isRemoved {
            B1PreProductionOrderLine.uoMEntry = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "UoMEntry")
        }
        if !B1PreProductionOrderLine.uoMCode.isRemoved {
            B1PreProductionOrderLine.uoMCode = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "UoMCode")
        }
        if !B1PreProductionOrderLine.wipAccount.isRemoved {
            B1PreProductionOrderLine.wipAccount = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "WipAccount")
        }
        if !B1PreProductionOrderLine.itemType.isRemoved {
            B1PreProductionOrderLine.itemType = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "ItemType")
        }
        if !B1PreProductionOrderLine.lineText.isRemoved {
            B1PreProductionOrderLine.lineText = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "LineText")
        }
        if !B1PreProductionOrderLine.additionalQuantity.isRemoved {
            B1PreProductionOrderLine.additionalQuantity = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "AdditionalQuantity")
        }
        if !B1PreProductionOrderLine.resourceAllocation.isRemoved {
            B1PreProductionOrderLine.resourceAllocation = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "ResourceAllocation")
        }
        if !B1PreProductionOrderLine.startDate.isRemoved {
            B1PreProductionOrderLine.startDate = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "StartDate")
        }
        if !B1PreProductionOrderLine.endDate.isRemoved {
            B1PreProductionOrderLine.endDate = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "EndDate")
        }
    }

    private static func merge14(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PreProductionOrderLine.stageID.isRemoved {
            B1PreProductionOrderLine.stageID = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "StageID")
        }
        if !B1PreProductionOrderLine.requiredDays.isRemoved {
            B1PreProductionOrderLine.requiredDays = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "RequiredDays")
        }
        if !B1PreProductionOrderLine.serialNumbers.isRemoved {
            B1PreProductionOrderLine.serialNumbers = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "SerialNumbers")
        }
        if !B1PreProductionOrderLine.batchNumbers.isRemoved {
            B1PreProductionOrderLine.batchNumbers = B1ClassMetadata.ComplexTypes.productionOrderLine.property(withName: "BatchNumbers")
        }
        if !B1PreProductionOrderParams.absoluteEntry.isRemoved {
            B1PreProductionOrderParams.absoluteEntry = B1ClassMetadata.ComplexTypes.productionOrderParams.property(withName: "AbsoluteEntry")
        }
        if !B1PreProductionOrdersSalesOrderLine.docEntry.isRemoved {
            B1PreProductionOrdersSalesOrderLine.docEntry = B1ClassMetadata.ComplexTypes.productionOrdersSalesOrderLine.property(withName: "DocEntry")
        }
        if !B1PreProductionOrdersSalesOrderLine.baseNumber.isRemoved {
            B1PreProductionOrdersSalesOrderLine.baseNumber = B1ClassMetadata.ComplexTypes.productionOrdersSalesOrderLine.property(withName: "BaseNumber")
        }
        if !B1PreProductionOrdersSalesOrderLine.baseAbsEntry.isRemoved {
            B1PreProductionOrdersSalesOrderLine.baseAbsEntry = B1ClassMetadata.ComplexTypes.productionOrdersSalesOrderLine.property(withName: "BaseAbsEntry")
        }
        if !B1PreProductionOrdersSalesOrderLine.baseLine.isRemoved {
            B1PreProductionOrdersSalesOrderLine.baseLine = B1ClassMetadata.ComplexTypes.productionOrdersSalesOrderLine.property(withName: "BaseLine")
        }
        if !B1PreProductionOrdersStage.docEntry.isRemoved {
            B1PreProductionOrdersStage.docEntry = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "DocEntry")
        }
        if !B1PreProductionOrdersStage.stageID.isRemoved {
            B1PreProductionOrdersStage.stageID = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "StageID")
        }
        if !B1PreProductionOrdersStage.sequenceNumber.isRemoved {
            B1PreProductionOrdersStage.sequenceNumber = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "SequenceNumber")
        }
        if !B1PreProductionOrdersStage.stageEntry.isRemoved {
            B1PreProductionOrdersStage.stageEntry = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "StageEntry")
        }
        if !B1PreProductionOrdersStage.name.isRemoved {
            B1PreProductionOrdersStage.name = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "Name")
        }
        if !B1PreProductionOrdersStage.startDate.isRemoved {
            B1PreProductionOrdersStage.startDate = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "StartDate")
        }
        if !B1PreProductionOrdersStage.endDate.isRemoved {
            B1PreProductionOrdersStage.endDate = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "EndDate")
        }
        if !B1PreProductionOrdersStage.requiredDays.isRemoved {
            B1PreProductionOrdersStage.requiredDays = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "RequiredDays")
        }
        if !B1PreProductionOrdersStage.waitingDays.isRemoved {
            B1PreProductionOrdersStage.waitingDays = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "WaitingDays")
        }
        if !B1PreProductionOrdersStage.calculationProportion.isRemoved {
            B1PreProductionOrdersStage.calculationProportion = B1ClassMetadata.ComplexTypes.productionOrdersStage.property(withName: "CalculationProportion")
        }
        if !B1PreProfitCenterParams.centerCode.isRemoved {
            B1PreProfitCenterParams.centerCode = B1ClassMetadata.ComplexTypes.profitCenterParams.property(withName: "CenterCode")
        }
        if !B1PreProfitCenterParams.centerName.isRemoved {
            B1PreProfitCenterParams.centerName = B1ClassMetadata.ComplexTypes.profitCenterParams.property(withName: "CenterName")
        }
        if !B1PreProgressiveTaxLine.taxRate.isRemoved {
            B1PreProgressiveTaxLine.taxRate = B1ClassMetadata.ComplexTypes.progressiveTaxLine.property(withName: "TaxRate")
        }
        if !B1PreProgressiveTaxLine.minAmount.isRemoved {
            B1PreProgressiveTaxLine.minAmount = B1ClassMetadata.ComplexTypes.progressiveTaxLine.property(withName: "MinAmount")
        }
        if !B1PreProgressiveTaxLine.maxAmount.isRemoved {
            B1PreProgressiveTaxLine.maxAmount = B1ClassMetadata.ComplexTypes.progressiveTaxLine.property(withName: "MaxAmount")
        }
        if !B1PreProjectParams.code.isRemoved {
            B1PreProjectParams.code = B1ClassMetadata.ComplexTypes.projectParams.property(withName: "Code")
        }
        if !B1PreProjectParams.name.isRemoved {
            B1PreProjectParams.name = B1ClassMetadata.ComplexTypes.projectParams.property(withName: "Name")
        }
        if !B1PrePurchaseTaxInvoiceLine.refEntry1.isRemoved {
            B1PrePurchaseTaxInvoiceLine.refEntry1 = B1ClassMetadata.ComplexTypes.purchaseTaxInvoiceLine.property(withName: "RefEntry1")
        }
        if !B1PrePurchaseTaxInvoiceLine.refEntry2.isRemoved {
            B1PrePurchaseTaxInvoiceLine.refEntry2 = B1ClassMetadata.ComplexTypes.purchaseTaxInvoiceLine.property(withName: "RefEntry2")
        }
        if !B1PrePurchaseTaxInvoiceOperationCode.opCode.isRemoved {
            B1PrePurchaseTaxInvoiceOperationCode.opCode = B1ClassMetadata.ComplexTypes.purchaseTaxInvoiceOperationCode.property(withName: "OpCode")
        }
        if !B1PreQueryAuthGroupParams.authGroupID.isRemoved {
            B1PreQueryAuthGroupParams.authGroupID = B1ClassMetadata.ComplexTypes.queryAuthGroupParams.property(withName: "AuthGroupId")
        }
        if !B1PreQueryAuthGroupParams.authGroupCode.isRemoved {
            B1PreQueryAuthGroupParams.authGroupCode = B1ClassMetadata.ComplexTypes.queryAuthGroupParams.property(withName: "AuthGroupCode")
        }
        if !B1PreQueryCategoryParams.code.isRemoved {
            B1PreQueryCategoryParams.code = B1ClassMetadata.ComplexTypes.queryCategoryParams.property(withName: "Code")
        }
        if !B1PreQueueMember.queueID.isRemoved {
            B1PreQueueMember.queueID = B1ClassMetadata.ComplexTypes.queueMember.property(withName: "QueueID")
        }
        if !B1PreQueueMember.memberUserID.isRemoved {
            B1PreQueueMember.memberUserID = B1ClassMetadata.ComplexTypes.queueMember.property(withName: "MemberUserID")
        }
        if !B1PreQueueParams.queueID.isRemoved {
            B1PreQueueParams.queueID = B1ClassMetadata.ComplexTypes.queueParams.property(withName: "QueueID")
        }
        if !B1PreRclRecurringExecutionParams.onError.isRemoved {
            B1PreRclRecurringExecutionParams.onError = B1ClassMetadata.ComplexTypes.rclRecurringExecutionParams.property(withName: "OnError")
        }
        if !B1PreRclRecurringTransaction.transactionID.isRemoved {
            B1PreRclRecurringTransaction.transactionID = B1ClassMetadata.ComplexTypes.rclRecurringTransaction.property(withName: "TransactionID")
        }
        if !B1PreRclRecurringTransaction.templateID.isRemoved {
            B1PreRclRecurringTransaction.templateID = B1ClassMetadata.ComplexTypes.rclRecurringTransaction.property(withName: "TemplateID")
        }
        if !B1PreRclRecurringTransaction.instance.isRemoved {
            B1PreRclRecurringTransaction.instance = B1ClassMetadata.ComplexTypes.rclRecurringTransaction.property(withName: "Instance")
        }
        if !B1PreRclRecurringTransaction.plannedDate.isRemoved {
            B1PreRclRecurringTransaction.plannedDate = B1ClassMetadata.ComplexTypes.rclRecurringTransaction.property(withName: "PlannedDate")
        }
        if !B1PreRclRecurringTransaction.status.isRemoved {
            B1PreRclRecurringTransaction.status = B1ClassMetadata.ComplexTypes.rclRecurringTransaction.property(withName: "Status")
        }
        if !B1PreRclRecurringTransaction.docType.isRemoved {
            B1PreRclRecurringTransaction.docType = B1ClassMetadata.ComplexTypes.rclRecurringTransaction.property(withName: "DocType")
        }
        if !B1PreRclRecurringTransaction.docEntry.isRemoved {
            B1PreRclRecurringTransaction.docEntry = B1ClassMetadata.ComplexTypes.rclRecurringTransaction.property(withName: "DocEntry")
        }
        if !B1PreRclRecurringTransactionParams.transactionID.isRemoved {
            B1PreRclRecurringTransactionParams.transactionID = B1ClassMetadata.ComplexTypes.rclRecurringTransactionParams.property(withName: "TransactionID")
        }
        if !B1PreRclRecurringTransactionParams.plannedDate.isRemoved {
            B1PreRclRecurringTransactionParams.plannedDate = B1ClassMetadata.ComplexTypes.rclRecurringTransactionParams.property(withName: "PlannedDate")
        }
        if !B1PreRecipient.userCode.isRemoved {
            B1PreRecipient.userCode = B1ClassMetadata.ComplexTypes.recipient.property(withName: "UserCode")
        }
        if !B1PreRecipient.userType.isRemoved {
            B1PreRecipient.userType = B1ClassMetadata.ComplexTypes.recipient.property(withName: "UserType")
        }
        if !B1PreRecipient.nameTo.isRemoved {
            B1PreRecipient.nameTo = B1ClassMetadata.ComplexTypes.recipient.property(withName: "NameTo")
        }
        if !B1PreRecipient.sendEmail.isRemoved {
            B1PreRecipient.sendEmail = B1ClassMetadata.ComplexTypes.recipient.property(withName: "SendEmail")
        }
        if !B1PreRecipient.emailAddress.isRemoved {
            B1PreRecipient.emailAddress = B1ClassMetadata.ComplexTypes.recipient.property(withName: "EmailAddress")
        }
        if !B1PreRecipient.sendSMS.isRemoved {
            B1PreRecipient.sendSMS = B1ClassMetadata.ComplexTypes.recipient.property(withName: "SendSMS")
        }
        if !B1PreRecipient.cellularNumber.isRemoved {
            B1PreRecipient.cellularNumber = B1ClassMetadata.ComplexTypes.recipient.property(withName: "CellularNumber")
        }
        if !B1PreRecipient.sendFax.isRemoved {
            B1PreRecipient.sendFax = B1ClassMetadata.ComplexTypes.recipient.property(withName: "SendFax")
        }
        if !B1PreRecipient.faxNumber.isRemoved {
            B1PreRecipient.faxNumber = B1ClassMetadata.ComplexTypes.recipient.property(withName: "FaxNumber")
        }
        if !B1PreRecipient.sendInternal.isRemoved {
            B1PreRecipient.sendInternal = B1ClassMetadata.ComplexTypes.recipient.property(withName: "SendInternal")
        }
        if !B1PreReconciliationBankStatementLine.bankStatementAccountCode.isRemoved {
            B1PreReconciliationBankStatementLine.bankStatementAccountCode = B1ClassMetadata.ComplexTypes.reconciliationBankStatementLine.property(withName: "BankStatementAccountCode")
        }
        if !B1PreReconciliationBankStatementLine.sequence.isRemoved {
            B1PreReconciliationBankStatementLine.sequence = B1ClassMetadata.ComplexTypes.reconciliationBankStatementLine.property(withName: "Sequence")
        }
        if !B1PreReconciliationBankStatementLine.date.isRemoved {
            B1PreReconciliationBankStatementLine.date = B1ClassMetadata.ComplexTypes.reconciliationBankStatementLine.property(withName: "Date")
        }
        if !B1PreReconciliationBankStatementLine.ref1.isRemoved {
            B1PreReconciliationBankStatementLine.ref1 = B1ClassMetadata.ComplexTypes.reconciliationBankStatementLine.property(withName: "Ref1")
        }
        if !B1PreReconciliationBankStatementLine.amount.isRemoved {
            B1PreReconciliationBankStatementLine.amount = B1ClassMetadata.ComplexTypes.reconciliationBankStatementLine.property(withName: "Amount")
        }
        if !B1PreReconciliationBankStatementLine.details.isRemoved {
            B1PreReconciliationBankStatementLine.details = B1ClassMetadata.ComplexTypes.reconciliationBankStatementLine.property(withName: "Details")
        }
        if !B1PreReconciliationJournalEntryLine.transactionNumber.isRemoved {
            B1PreReconciliationJournalEntryLine.transactionNumber = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "TransactionNumber")
        }
        if !B1PreReconciliationJournalEntryLine.lineNumber.isRemoved {
            B1PreReconciliationJournalEntryLine.lineNumber = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "LineNumber")
        }
        if !B1PreReconciliationJournalEntryLine.postingDate.isRemoved {
            B1PreReconciliationJournalEntryLine.postingDate = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "PostingDate")
        }
        if !B1PreReconciliationJournalEntryLine.dueDate.isRemoved {
            B1PreReconciliationJournalEntryLine.dueDate = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "DueDate")
        }
        if !B1PreReconciliationJournalEntryLine.ref1.isRemoved {
            B1PreReconciliationJournalEntryLine.ref1 = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "Ref1")
        }
        if !B1PreReconciliationJournalEntryLine.ref2.isRemoved {
            B1PreReconciliationJournalEntryLine.ref2 = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "Ref2")
        }
        if !B1PreReconciliationJournalEntryLine.ref3.isRemoved {
            B1PreReconciliationJournalEntryLine.ref3 = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "Ref3")
        }
        if !B1PreReconciliationJournalEntryLine.debitAmount.isRemoved {
            B1PreReconciliationJournalEntryLine.debitAmount = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "DebitAmount")
        }
        if !B1PreReconciliationJournalEntryLine.creditAmount.isRemoved {
            B1PreReconciliationJournalEntryLine.creditAmount = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "CreditAmount")
        }
        if !B1PreReconciliationJournalEntryLine.details.isRemoved {
            B1PreReconciliationJournalEntryLine.details = B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.property(withName: "Details")
        }
        if !B1PreRecordsetParams.query.isRemoved {
            B1PreRecordsetParams.query = B1ClassMetadata.ComplexTypes.recordsetParams.property(withName: "Query")
        }
        if !B1PreRelationshipParams.relationshipCode.isRemoved {
            B1PreRelationshipParams.relationshipCode = B1ClassMetadata.ComplexTypes.relationshipParams.property(withName: "RelationshipCode")
        }
        if !B1PreReportInputParams.reportLayoutMenuID.isRemoved {
            B1PreReportInputParams.reportLayoutMenuID = B1ClassMetadata.ComplexTypes.reportInputParams.property(withName: "ReportLayoutMenuID")
        }
        if !B1PreReportLayout.name.isRemoved {
            B1PreReportLayout.name = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Name")
        }
        if !B1PreReportLayout.author.isRemoved {
            B1PreReportLayout.author = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Author")
        }
        if !B1PreReportLayout.remarks.isRemoved {
            B1PreReportLayout.remarks = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Remarks")
        }
        if !B1PreReportLayout.width.isRemoved {
            B1PreReportLayout.width = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Width")
        }
        if !B1PreReportLayout.height.isRemoved {
            B1PreReportLayout.height = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Height")
        }
        if !B1PreReportLayout.leftMargin.isRemoved {
            B1PreReportLayout.leftMargin = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "LeftMargin")
        }
        if !B1PreReportLayout.rightMargin.isRemoved {
            B1PreReportLayout.rightMargin = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "RightMargin")
        }
        if !B1PreReportLayout.topMargin.isRemoved {
            B1PreReportLayout.topMargin = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "TopMargin")
        }
        if !B1PreReportLayout.bottomMargin.isRemoved {
            B1PreReportLayout.bottomMargin = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "BottomMargin")
        }
        if !B1PreReportLayout.editable.isRemoved {
            B1PreReportLayout.editable = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Editable")
        }
        if !B1PreReportLayout.paperSize.isRemoved {
            B1PreReportLayout.paperSize = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "PaperSize")
        }
        if !B1PreReportLayout.orientation.isRemoved {
            B1PreReportLayout.orientation = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Orientation")
        }
        if !B1PreReportLayout.gridSize.isRemoved {
            B1PreReportLayout.gridSize = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "GridSize")
        }
        if !B1PreReportLayout.gridType.isRemoved {
            B1PreReportLayout.gridType = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "GridType")
        }
        if !B1PreReportLayout.showGrid.isRemoved {
            B1PreReportLayout.showGrid = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ShowGrid")
        }
        if !B1PreReportLayout.snapToGrid.isRemoved {
            B1PreReportLayout.snapToGrid = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "SnapToGrid")
        }
        if !B1PreReportLayout.picture.isRemoved {
            B1PreReportLayout.picture = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Picture")
        }
        if !B1PreReportLayout.typeCode_.isRemoved {
            B1PreReportLayout.typeCode_ = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "TypeCode")
        }
        if !B1PreReportLayout.foreignLanguageReport.isRemoved {
            B1PreReportLayout.foreignLanguageReport = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ForeignLanguageReport")
        }
        if !B1PreReportLayout.sortable.isRemoved {
            B1PreReportLayout.sortable = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Sortable")
        }
        if !B1PreReportLayout.leaderReport.isRemoved {
            B1PreReportLayout.leaderReport = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "LeaderReport")
        }
        if !B1PreReportLayout.followUpReport.isRemoved {
            B1PreReportLayout.followUpReport = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "FollowUpReport")
        }
        if !B1PreReportLayout.convertFontInPrintPreview.isRemoved {
            B1PreReportLayout.convertFontInPrintPreview = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ConvertFontInPrintPreview")
        }
        if !B1PreReportLayout.previewPrintingFont.isRemoved {
            B1PreReportLayout.previewPrintingFont = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "PreviewPrintingFont")
        }
        if !B1PreReportLayout.changeFontSizeInPreview.isRemoved {
            B1PreReportLayout.changeFontSizeInPreview = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ChangeFontSizeInPreview")
        }
        if !B1PreReportLayout.convertFontForEMail.isRemoved {
            B1PreReportLayout.convertFontForEMail = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ConvertFontForEMail")
        }
        if !B1PreReportLayout.eMailFont.isRemoved {
            B1PreReportLayout.eMailFont = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "EMailFont")
        }
        if !B1PreReportLayout.changeFontSizeForEMail.isRemoved {
            B1PreReportLayout.changeFontSizeForEMail = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ChangeFontSizeForEMail")
        }
        if !B1PreReportLayout.query.isRemoved {
            B1PreReportLayout.query = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Query")
        }
        if !B1PreReportLayout.queryType.isRemoved {
            B1PreReportLayout.queryType = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "QueryType")
        }
        if !B1PreReportLayout.language.isRemoved {
            B1PreReportLayout.language = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "language")
        }
        if !B1PreReportLayout.impExpObjCode.isRemoved {
            B1PreReportLayout.impExpObjCode = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ImpExpObjCode")
        }
        if !B1PreReportLayout.extensionName.isRemoved {
            B1PreReportLayout.extensionName = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ExtensionName")
        }
        if !B1PreReportLayout.extensionErrorAction.isRemoved {
            B1PreReportLayout.extensionErrorAction = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ExtensionErrorAction")
        }
        if !B1PreReportLayout.repetitiveAreasNumber.isRemoved {
            B1PreReportLayout.repetitiveAreasNumber = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "RepetitiveAreasNumber")
        }
        if !B1PreReportLayout.allignFooterToBottom.isRemoved {
            B1PreReportLayout.allignFooterToBottom = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "AllignFooterToBottom")
        }
        if !B1PreReportLayout.layoutCode.isRemoved {
            B1PreReportLayout.layoutCode = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "LayoutCode")
        }
        if !B1PreReportLayout.category.isRemoved {
            B1PreReportLayout.category = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Category")
        }
        if !B1PreReportLayout.printer.isRemoved {
            B1PreReportLayout.printer = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Printer")
        }
        if !B1PreReportLayout.printerFirstPage.isRemoved {
            B1PreReportLayout.printerFirstPage = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "PrinterFirstPage")
        }
        if !B1PreReportLayout.numberOfCopies.isRemoved {
            B1PreReportLayout.numberOfCopies = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "NumberOfCopies")
        }
        if !B1PreReportLayout.localization.isRemoved {
            B1PreReportLayout.localization = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "Localization")
        }
        if !B1PreReportLayout.useFirstPrinter.isRemoved {
            B1PreReportLayout.useFirstPrinter = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "UseFirstPrinter")
        }
        if !B1PreReportLayout.b1Version.isRemoved {
            B1PreReportLayout.b1Version = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "B1Version")
        }
        if !B1PreReportLayout.crVersion.isRemoved {
            B1PreReportLayout.crVersion = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "CRVersion")
        }
        if !B1PreReportLayout.typeDetail.isRemoved {
            B1PreReportLayout.typeDetail = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "TypeDetail")
        }
        if !B1PreReportLayout.reportLayoutItems.isRemoved {
            B1PreReportLayout.reportLayoutItems = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ReportLayoutItems")
        }
        if !B1PreReportLayout.reportLayoutTranslationLines.isRemoved {
            B1PreReportLayout.reportLayoutTranslationLines = B1ClassMetadata.ComplexTypes.reportLayout.property(withName: "ReportLayout_TranslationLines")
        }
        if !B1PreReportLayoutItem.fieldIdentifier.isRemoved {
            B1PreReportLayoutItem.fieldIdentifier = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "FieldIdentifier")
        }
        if !B1PreReportLayoutItem.parentType.isRemoved {
            B1PreReportLayoutItem.parentType = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "ParentType")
        }
        if !B1PreReportLayoutItem.type_.isRemoved {
            B1PreReportLayoutItem.type_ = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "Type")
        }
        if !B1PreReportLayoutItem.visible.isRemoved {
            B1PreReportLayoutItem.visible = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "Visible")
        }
        if !B1PreReportLayoutItem.suppressZeros.isRemoved {
            B1PreReportLayoutItem.suppressZeros = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "SuppressZeros")
        }
        if !B1PreReportLayoutItem.left.isRemoved {
            B1PreReportLayoutItem.left = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "Left")
        }
        if !B1PreReportLayoutItem.top.isRemoved {
            B1PreReportLayoutItem.top = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "Top")
        }
        if !B1PreReportLayoutItem.width.isRemoved {
            B1PreReportLayoutItem.width = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "Width")
        }
        if !B1PreReportLayoutItem.height.isRemoved {
            B1PreReportLayoutItem.height = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "Height")
        }
        if !B1PreReportLayoutItem.leftMargin.isRemoved {
            B1PreReportLayoutItem.leftMargin = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "LeftMargin")
        }
        if !B1PreReportLayoutItem.rightMargin.isRemoved {
            B1PreReportLayoutItem.rightMargin = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "RightMargin")
        }
        if !B1PreReportLayoutItem.topMargin.isRemoved {
            B1PreReportLayoutItem.topMargin = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "TopMargin")
        }
        if !B1PreReportLayoutItem.bottomMargin.isRemoved {
            B1PreReportLayoutItem.bottomMargin = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BottomMargin")
        }
        if !B1PreReportLayoutItem.leftBorderLineThickness.isRemoved {
            B1PreReportLayoutItem.leftBorderLineThickness = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "LeftBorderLineThickness")
        }
        if !B1PreReportLayoutItem.rightBorderLineThickness.isRemoved {
            B1PreReportLayoutItem.rightBorderLineThickness = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "RightBorderLineThickness")
        }
        if !B1PreReportLayoutItem.topBorderLineThickness.isRemoved {
            B1PreReportLayoutItem.topBorderLineThickness = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "TopBorderLineThickness")
        }
        if !B1PreReportLayoutItem.bottomBorderLineThickness.isRemoved {
            B1PreReportLayoutItem.bottomBorderLineThickness = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BottomBorderLineThickness")
        }
        if !B1PreReportLayoutItem.shadowThickness.isRemoved {
            B1PreReportLayoutItem.shadowThickness = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "ShadowThickness")
        }
        if !B1PreReportLayoutItem.backgroundRed.isRemoved {
            B1PreReportLayoutItem.backgroundRed = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BackgroundRed")
        }
        if !B1PreReportLayoutItem.backgroundGreen.isRemoved {
            B1PreReportLayoutItem.backgroundGreen = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BackgroundGreen")
        }
        if !B1PreReportLayoutItem.backgroundBlue.isRemoved {
            B1PreReportLayoutItem.backgroundBlue = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BackgroundBlue")
        }
        if !B1PreReportLayoutItem.textRed.isRemoved {
            B1PreReportLayoutItem.textRed = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "TextRed")
        }
        if !B1PreReportLayoutItem.textGreen.isRemoved {
            B1PreReportLayoutItem.textGreen = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "TextGreen")
        }
        if !B1PreReportLayoutItem.textBlue.isRemoved {
            B1PreReportLayoutItem.textBlue = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "TextBlue")
        }
        if !B1PreReportLayoutItem.highlightRed.isRemoved {
            B1PreReportLayoutItem.highlightRed = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "HighlightRed")
        }
        if !B1PreReportLayoutItem.highlightGreen.isRemoved {
            B1PreReportLayoutItem.highlightGreen = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "HighlightGreen")
        }
        if !B1PreReportLayoutItem.highlightBlue.isRemoved {
            B1PreReportLayoutItem.highlightBlue = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "HighlightBlue")
        }
        if !B1PreReportLayoutItem.borderRed.isRemoved {
            B1PreReportLayoutItem.borderRed = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BorderRed")
        }
        if !B1PreReportLayoutItem.borderGreen.isRemoved {
            B1PreReportLayoutItem.borderGreen = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BorderGreen")
        }
        if !B1PreReportLayoutItem.borderBlue.isRemoved {
            B1PreReportLayoutItem.borderBlue = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BorderBlue")
        }
        if !B1PreReportLayoutItem.groupNumber.isRemoved {
            B1PreReportLayoutItem.groupNumber = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "GroupNumber")
        }
        if !B1PreReportLayoutItem.fontName.isRemoved {
            B1PreReportLayoutItem.fontName = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "FontName")
        }
        if !B1PreReportLayoutItem.fontSize.isRemoved {
            B1PreReportLayoutItem.fontSize = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "FontSize")
        }
        if !B1PreReportLayoutItem.textStyle.isRemoved {
            B1PreReportLayoutItem.textStyle = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "TextStyle")
        }
        if !B1PreReportLayoutItem.horizontalAlignment.isRemoved {
            B1PreReportLayoutItem.horizontalAlignment = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "HorizontalAlignment")
        }
        if !B1PreReportLayoutItem.lineBreak.isRemoved {
            B1PreReportLayoutItem.lineBreak = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "LineBreak")
        }
        if !B1PreReportLayoutItem.pictureSize.isRemoved {
            B1PreReportLayoutItem.pictureSize = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "PictureSize")
        }
        if !B1PreReportLayoutItem.dataSource.isRemoved {
            B1PreReportLayoutItem.dataSource = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "DataSource")
        }
        if !B1PreReportLayoutItem.string.isRemoved {
            B1PreReportLayoutItem.string = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "String")
        }
        if !B1PreReportLayoutItem.variableNumber.isRemoved {
            B1PreReportLayoutItem.variableNumber = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "VariableNumber")
        }
        if !B1PreReportLayoutItem.tableName.isRemoved {
            B1PreReportLayoutItem.tableName = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "TableName")
        }
        if !B1PreReportLayoutItem.fieldName.isRemoved {
            B1PreReportLayoutItem.fieldName = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "FieldName")
        }
        if !B1PreReportLayoutItem.displayDescription.isRemoved {
            B1PreReportLayoutItem.displayDescription = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "DisplayDescription")
        }
        if !B1PreReportLayoutItem.editable.isRemoved {
            B1PreReportLayoutItem.editable = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "Editable")
        }
        if !B1PreReportLayoutItem.itemNumber.isRemoved {
            B1PreReportLayoutItem.itemNumber = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "ItemNumber")
        }
        if !B1PreReportLayoutItem.verticalAlignment.isRemoved {
            B1PreReportLayoutItem.verticalAlignment = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "VerticalAlignment")
        }
        if !B1PreReportLayoutItem.sortLevel.isRemoved {
            B1PreReportLayoutItem.sortLevel = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "SortLevel")
        }
        if !B1PreReportLayoutItem.reverseSort.isRemoved {
            B1PreReportLayoutItem.reverseSort = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "ReverseSort")
        }
        if !B1PreReportLayoutItem.sortType.isRemoved {
            B1PreReportLayoutItem.sortType = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "SortType")
        }
        if !B1PreReportLayoutItem.unique.isRemoved {
            B1PreReportLayoutItem.unique = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "Unique")
        }
        if !B1PreReportLayoutItem.setAsGroup.isRemoved {
            B1PreReportLayoutItem.setAsGroup = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "SetAsGroup")
        }
        if !B1PreReportLayoutItem.newPage.isRemoved {
            B1PreReportLayoutItem.newPage = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "NewPage")
        }
        if !B1PreReportLayoutItem.printAsBarCode.isRemoved {
            B1PreReportLayoutItem.printAsBarCode = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "PrintAsBarCode")
        }
        if !B1PreReportLayoutItem.linkToField.isRemoved {
            B1PreReportLayoutItem.linkToField = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "LinkToField")
        }
        if !B1PreReportLayoutItem.barCodeStandard.isRemoved {
            B1PreReportLayoutItem.barCodeStandard = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BarCodeStandard")
        }
        if !B1PreReportLayoutItem.displayTotalAsAWord.isRemoved {
            B1PreReportLayoutItem.displayTotalAsAWord = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "DisplayTotalAsAWord")
        }
        if !B1PreReportLayoutItem.blockFontChange.isRemoved {
            B1PreReportLayoutItem.blockFontChange = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "BlockFontChange")
        }
        if !B1PreReportLayoutItem.parentIndex.isRemoved {
            B1PreReportLayoutItem.parentIndex = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "ParentIndex")
        }
        if !B1PreReportLayoutItem.itemIndex.isRemoved {
            B1PreReportLayoutItem.itemIndex = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "ItemIndex")
        }
        if !B1PreReportLayoutItem.stringLength.isRemoved {
            B1PreReportLayoutItem.stringLength = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "StringLength")
        }
        if !B1PreReportLayoutItem.stringFiller.isRemoved {
            B1PreReportLayoutItem.stringFiller = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "StringFiller")
        }
        if !B1PreReportLayoutItem.relateToField.isRemoved {
            B1PreReportLayoutItem.relateToField = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "RelateToField")
        }
        if !B1PreReportLayoutItem.nextSegmentItemNumber.isRemoved {
            B1PreReportLayoutItem.nextSegmentItemNumber = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "NextSegmentItemNumber")
        }
        if !B1PreReportLayoutItem.heightAdjustments.isRemoved {
            B1PreReportLayoutItem.heightAdjustments = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "HeightAdjustments")
        }
        if !B1PreReportLayoutItem.duplicateRepetitiveArea.isRemoved {
            B1PreReportLayoutItem.duplicateRepetitiveArea = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "DuplicateRepetitiveArea")
        }
        if !B1PreReportLayoutItem.numberOfLinesInRepetitiveArea.isRemoved {
            B1PreReportLayoutItem.numberOfLinesInRepetitiveArea = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "NumberOfLinesInRepetitiveArea")
        }
        if !B1PreReportLayoutItem.distanceToRepetitiveDuplicate.isRemoved {
            B1PreReportLayoutItem.distanceToRepetitiveDuplicate = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "DistanceToRepetitiveDuplicate")
        }
        if !B1PreReportLayoutItem.hideRepetitiveAreaIfEmpty.isRemoved {
            B1PreReportLayoutItem.hideRepetitiveAreaIfEmpty = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "HideRepetitiveAreaIfEmpty")
        }
        if !B1PreReportLayoutItem.displayRepetitiveAreaFooterOnAllPages.isRemoved {
            B1PreReportLayoutItem.displayRepetitiveAreaFooterOnAllPages = B1ClassMetadata.ComplexTypes.reportLayoutItem.property(withName: "DisplayRepetitiveAreaFooterOnAllPages")
        }
        if !B1PreReportLayoutParams.layoutCode.isRemoved {
            B1PreReportLayoutParams.layoutCode = B1ClassMetadata.ComplexTypes.reportLayoutParams.property(withName: "LayoutCode")
        }
        if !B1PreReportLayoutParams.layoutName.isRemoved {
            B1PreReportLayoutParams.layoutName = B1ClassMetadata.ComplexTypes.reportLayoutParams.property(withName: "LayoutName")
        }
        if !B1PreReportLayoutParams.category.isRemoved {
            B1PreReportLayoutParams.category = B1ClassMetadata.ComplexTypes.reportLayoutParams.property(withName: "Category")
        }
        if !B1PreReportLayoutPrintParams.layoutCode.isRemoved {
            B1PreReportLayoutPrintParams.layoutCode = B1ClassMetadata.ComplexTypes.reportLayoutPrintParams.property(withName: "LayoutCode")
        }
        if !B1PreReportLayoutPrintParams.docEntry.isRemoved {
            B1PreReportLayoutPrintParams.docEntry = B1ClassMetadata.ComplexTypes.reportLayoutPrintParams.property(withName: "DocEntry")
        }
        if !B1PreReportLayoutTranslationLine.docEntry.isRemoved {
            B1PreReportLayoutTranslationLine.docEntry = B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.property(withName: "DocEntry")
        }
        if !B1PreReportLayoutTranslationLine.lineNumber.isRemoved {
            B1PreReportLayoutTranslationLine.lineNumber = B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.property(withName: "LineNumber")
        }
        if !B1PreReportLayoutTranslationLine.docName.isRemoved {
            B1PreReportLayoutTranslationLine.docName = B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.property(withName: "DocName")
        }
        if !B1PreReportLayoutTranslationLine.languageCode.isRemoved {
            B1PreReportLayoutTranslationLine.languageCode = B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.property(withName: "LanguageCode")
        }
        if !B1PreReportLayoutTranslationLine.createDate.isRemoved {
            B1PreReportLayoutTranslationLine.createDate = B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.property(withName: "CreateDate")
        }
        if !B1PreReportLayoutTranslationLine.updateDate.isRemoved {
            B1PreReportLayoutTranslationLine.updateDate = B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.property(withName: "UpdateDate")
        }
        if !B1PreReportLayoutTranslationLine.createTime.isRemoved {
            B1PreReportLayoutTranslationLine.createTime = B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.property(withName: "CreateTime")
        }
        if !B1PreReportLayoutTranslationLine.updateTime.isRemoved {
            B1PreReportLayoutTranslationLine.updateTime = B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.property(withName: "UpdateTime")
        }
        if !B1PreReportParams.reportCode.isRemoved {
            B1PreReportParams.reportCode = B1ClassMetadata.ComplexTypes.reportParams.property(withName: "ReportCode")
        }
        if !B1PreReportParams.userID.isRemoved {
            B1PreReportParams.userID = B1ClassMetadata.ComplexTypes.reportParams.property(withName: "UserID")
        }
        if !B1PreReportParams.cardCode.isRemoved {
            B1PreReportParams.cardCode = B1ClassMetadata.ComplexTypes.reportParams.property(withName: "CardCode")
        }
        if !B1PreReportTypeParams.typeCode_.isRemoved {
            B1PreReportTypeParams.typeCode_ = B1ClassMetadata.ComplexTypes.reportTypeParams.property(withName: "TypeCode")
        }
        if !B1PreReportTypeParams.typeName.isRemoved {
            B1PreReportTypeParams.typeName = B1ClassMetadata.ComplexTypes.reportTypeParams.property(withName: "TypeName")
        }
        if !B1PreReportTypeParams.addonName.isRemoved {
            B1PreReportTypeParams.addonName = B1ClassMetadata.ComplexTypes.reportTypeParams.property(withName: "AddonName")
        }
        if !B1PreReportTypeParams.addonFormType.isRemoved {
            B1PreReportTypeParams.addonFormType = B1ClassMetadata.ComplexTypes.reportTypeParams.property(withName: "AddonFormType")
        }
        if !B1PreReportTypeParams.menuID.isRemoved {
            B1PreReportTypeParams.menuID = B1ClassMetadata.ComplexTypes.reportTypeParams.property(withName: "MenuID")
        }
        if !B1PreResourceCapacityParams.id.isRemoved {
            B1PreResourceCapacityParams.id = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "Id")
        }
        if !B1PreResourceCapacityParams.code.isRemoved {
            B1PreResourceCapacityParams.code = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "Code")
        }
        if !B1PreResourceCapacityParams.warehouse.isRemoved {
            B1PreResourceCapacityParams.warehouse = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "Warehouse")
        }
        if !B1PreResourceCapacityParams.date.isRemoved {
            B1PreResourceCapacityParams.date = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "Date")
        }
        if !B1PreResourceCapacityParams.type_.isRemoved {
            B1PreResourceCapacityParams.type_ = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "Type")
        }
        if !B1PreResourceCapacityParams.capacity.isRemoved {
            B1PreResourceCapacityParams.capacity = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "Capacity")
        }
        if !B1PreResourceCapacityParams.sourceType.isRemoved {
            B1PreResourceCapacityParams.sourceType = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "SourceType")
        }
        if !B1PreResourceCapacityParams.sourceEntry.isRemoved {
            B1PreResourceCapacityParams.sourceEntry = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "SourceEntry")
        }
        if !B1PreResourceCapacityParams.sourceLineNum.isRemoved {
            B1PreResourceCapacityParams.sourceLineNum = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "SourceLineNum")
        }
        if !B1PreResourceCapacityParams.baseType.isRemoved {
            B1PreResourceCapacityParams.baseType = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "BaseType")
        }
        if !B1PreResourceCapacityParams.baseEntry.isRemoved {
            B1PreResourceCapacityParams.baseEntry = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "BaseEntry")
        }
        if !B1PreResourceCapacityParams.baseLineNum.isRemoved {
            B1PreResourceCapacityParams.baseLineNum = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "BaseLineNum")
        }
        if !B1PreResourceCapacityParams.action.isRemoved {
            B1PreResourceCapacityParams.action = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "Action")
        }
        if !B1PreResourceCapacityParams.owningType.isRemoved {
            B1PreResourceCapacityParams.owningType = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "OwningType")
        }
        if !B1PreResourceCapacityParams.owningEntry.isRemoved {
            B1PreResourceCapacityParams.owningEntry = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "OwningEntry")
        }
        if !B1PreResourceCapacityParams.owningLineNum.isRemoved {
            B1PreResourceCapacityParams.owningLineNum = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "OwningLineNum")
        }
        if !B1PreResourceCapacityParams.revertedType.isRemoved {
            B1PreResourceCapacityParams.revertedType = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "RevertedType")
        }
        if !B1PreResourceCapacityParams.revertedEntry.isRemoved {
            B1PreResourceCapacityParams.revertedEntry = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "RevertedEntry")
        }
        if !B1PreResourceCapacityParams.revertedLineNum.isRemoved {
            B1PreResourceCapacityParams.revertedLineNum = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "RevertedLineNum")
        }
        if !B1PreResourceCapacityParams.memoSource.isRemoved {
            B1PreResourceCapacityParams.memoSource = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "MemoSource")
        }
        if !B1PreResourceCapacityParams.memo.isRemoved {
            B1PreResourceCapacityParams.memo = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "Memo")
        }
        if !B1PreResourceCapacityParams.singleRunCapacity.isRemoved {
            B1PreResourceCapacityParams.singleRunCapacity = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "SingleRunCapacity")
        }
        if !B1PreResourceCapacityParams.singleRunMemoSource.isRemoved {
            B1PreResourceCapacityParams.singleRunMemoSource = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "SingleRunMemoSource")
        }
        if !B1PreResourceCapacityParams.singleRunMemo.isRemoved {
            B1PreResourceCapacityParams.singleRunMemo = B1ClassMetadata.ComplexTypes.resourceCapacityParams.property(withName: "SingleRunMemo")
        }
        if !B1PreResourceCapacityWithFilterParams.code.isRemoved {
            B1PreResourceCapacityWithFilterParams.code = B1ClassMetadata.ComplexTypes.resourceCapacityWithFilterParams.property(withName: "Code")
        }
        if !B1PreResourceCapacityWithFilterParams.warehouse.isRemoved {
            B1PreResourceCapacityWithFilterParams.warehouse = B1ClassMetadata.ComplexTypes.resourceCapacityWithFilterParams.property(withName: "Warehouse")
        }
        if !B1PreResourceCapacityWithFilterParams.date.isRemoved {
            B1PreResourceCapacityWithFilterParams.date = B1ClassMetadata.ComplexTypes.resourceCapacityWithFilterParams.property(withName: "Date")
        }
        if !B1PreResourceCapacityWithFilterParams.type_.isRemoved {
            B1PreResourceCapacityWithFilterParams.type_ = B1ClassMetadata.ComplexTypes.resourceCapacityWithFilterParams.property(withName: "Type")
        }
        if !B1PreResourceDailyCapacity.code.isRemoved {
            B1PreResourceDailyCapacity.code = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "Code")
        }
        if !B1PreResourceDailyCapacity.weekday.isRemoved {
            B1PreResourceDailyCapacity.weekday = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "Weekday")
        }
        if !B1PreResourceDailyCapacity.factor1.isRemoved {
            B1PreResourceDailyCapacity.factor1 = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "Factor1")
        }
        if !B1PreResourceDailyCapacity.factor2.isRemoved {
            B1PreResourceDailyCapacity.factor2 = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "Factor2")
        }
        if !B1PreResourceDailyCapacity.factor3.isRemoved {
            B1PreResourceDailyCapacity.factor3 = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "Factor3")
        }
        if !B1PreResourceDailyCapacity.factor4.isRemoved {
            B1PreResourceDailyCapacity.factor4 = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "Factor4")
        }
        if !B1PreResourceDailyCapacity.total.isRemoved {
            B1PreResourceDailyCapacity.total = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "Total")
        }
        if !B1PreResourceDailyCapacity.remarks.isRemoved {
            B1PreResourceDailyCapacity.remarks = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "Remarks")
        }
        if !B1PreResourceDailyCapacity.singleRun.isRemoved {
            B1PreResourceDailyCapacity.singleRun = B1ClassMetadata.ComplexTypes.resourceDailyCapacity.property(withName: "SingleRun")
        }
        if !B1PreResourceEmployee.code.isRemoved {
            B1PreResourceEmployee.code = B1ClassMetadata.ComplexTypes.resourceEmployee.property(withName: "Code")
        }
        if !B1PreResourceEmployee.employee.isRemoved {
            B1PreResourceEmployee.employee = B1ClassMetadata.ComplexTypes.resourceEmployee.property(withName: "Employee")
        }
        if !B1PreResourceFixedAsset.code.isRemoved {
            B1PreResourceFixedAsset.code = B1ClassMetadata.ComplexTypes.resourceFixedAsset.property(withName: "Code")
        }
        if !B1PreResourceFixedAsset.itemCode.isRemoved {
            B1PreResourceFixedAsset.itemCode = B1ClassMetadata.ComplexTypes.resourceFixedAsset.property(withName: "ItemCode")
        }
        if !B1PreResourceGroupParams.code.isRemoved {
            B1PreResourceGroupParams.code = B1ClassMetadata.ComplexTypes.resourceGroupParams.property(withName: "Code")
        }
        if !B1PreResourceGroupParams.name.isRemoved {
            B1PreResourceGroupParams.name = B1ClassMetadata.ComplexTypes.resourceGroupParams.property(withName: "Name")
        }
        if !B1PreResourceParams.code.isRemoved {
            B1PreResourceParams.code = B1ClassMetadata.ComplexTypes.resourceParams.property(withName: "Code")
        }
        if !B1PreResourcePropertyParams.code.isRemoved {
            B1PreResourcePropertyParams.code = B1ClassMetadata.ComplexTypes.resourcePropertyParams.property(withName: "Code")
        }
        if !B1PreResourcePropertyParams.name.isRemoved {
            B1PreResourcePropertyParams.name = B1ClassMetadata.ComplexTypes.resourcePropertyParams.property(withName: "Name")
        }
        if !B1PreResourceWarehouse.code.isRemoved {
            B1PreResourceWarehouse.code = B1ClassMetadata.ComplexTypes.resourceWarehouse.property(withName: "Code")
        }
        if !B1PreResourceWarehouse.warehouse.isRemoved {
            B1PreResourceWarehouse.warehouse = B1ClassMetadata.ComplexTypes.resourceWarehouse.property(withName: "Warehouse")
        }
        if !B1PreResourceWarehouse.locked.isRemoved {
            B1PreResourceWarehouse.locked = B1ClassMetadata.ComplexTypes.resourceWarehouse.property(withName: "Locked")
        }
        if !B1PreRetornoCodeParams.absEntry.isRemoved {
            B1PreRetornoCodeParams.absEntry = B1ClassMetadata.ComplexTypes.retornoCodeParams.property(withName: "AbsEntry")
        }
        if !B1PreRetornoCodeParams.occurenceCode.isRemoved {
            B1PreRetornoCodeParams.occurenceCode = B1ClassMetadata.ComplexTypes.retornoCodeParams.property(withName: "OccurenceCode")
        }
        if !B1PreRetornoCodeParams.movementCode.isRemoved {
            B1PreRetornoCodeParams.movementCode = B1ClassMetadata.ComplexTypes.retornoCodeParams.property(withName: "MovementCode")
        }
        if !B1PreRetornoCodeParams.boeStatus.isRemoved {
            B1PreRetornoCodeParams.boeStatus = B1ClassMetadata.ComplexTypes.retornoCodeParams.property(withName: "BoeStatus")
        }
        if !B1PreRetornoCodeParams.description.isRemoved {
            B1PreRetornoCodeParams.description = B1ClassMetadata.ComplexTypes.retornoCodeParams.property(withName: "Description")
        }
        if !B1PreRetornoCodeParams.color.isRemoved {
            B1PreRetornoCodeParams.color = B1ClassMetadata.ComplexTypes.retornoCodeParams.property(withName: "Color")
        }
        if !B1PreRetornoCodeParams.fileFormat.isRemoved {
            B1PreRetornoCodeParams.fileFormat = B1ClassMetadata.ComplexTypes.retornoCodeParams.property(withName: "FileFormat")
        }
        if !B1PreRetornoCodeParams.bankCode.isRemoved {
            B1PreRetornoCodeParams.bankCode = B1ClassMetadata.ComplexTypes.retornoCodeParams.property(withName: "BankCode")
        }
        if !B1PreRoundedData.value.isRemoved {
            B1PreRoundedData.value = B1ClassMetadata.ComplexTypes.roundedData.property(withName: "Value")
        }
        if !B1PreRouteStageParams.internalNumber.isRemoved {
            B1PreRouteStageParams.internalNumber = B1ClassMetadata.ComplexTypes.routeStageParams.property(withName: "InternalNumber")
        }
        if !B1PreRouteStageParams.code.isRemoved {
            B1PreRouteStageParams.code = B1ClassMetadata.ComplexTypes.routeStageParams.property(withName: "Code")
        }
        if !B1PreRouteStageParams.description.isRemoved {
            B1PreRouteStageParams.description = B1ClassMetadata.ComplexTypes.routeStageParams.property(withName: "Description")
        }
        if !B1PreRouteStageParams.creationDate.isRemoved {
            B1PreRouteStageParams.creationDate = B1ClassMetadata.ComplexTypes.routeStageParams.property(withName: "CreationDate")
        }
        if !B1PreRouteStageParams.generationTime.isRemoved {
            B1PreRouteStageParams.generationTime = B1ClassMetadata.ComplexTypes.routeStageParams.property(withName: "GenerationTime")
        }
        if !B1PreRouteStageParams.dateOfUpdate.isRemoved {
            B1PreRouteStageParams.dateOfUpdate = B1ClassMetadata.ComplexTypes.routeStageParams.property(withName: "DateOfUpdate")
        }
        if !B1PreRoutingDateCalculationInput.resourceCode.isRemoved {
            B1PreRoutingDateCalculationInput.resourceCode = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "ResourceCode")
        }
        if !B1PreRoutingDateCalculationInput.warehouseCode.isRemoved {
            B1PreRoutingDateCalculationInput.warehouseCode = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "WarehouseCode")
        }
        if !B1PreRoutingDateCalculationInput.calculateFromDate.isRemoved {
            B1PreRoutingDateCalculationInput.calculateFromDate = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "CalculateFromDate")
        }
        if !B1PreRoutingDateCalculationInput.calculateUntilDate.isRemoved {
            B1PreRoutingDateCalculationInput.calculateUntilDate = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "CalculateUntilDate")
        }
        if !B1PreRoutingDateCalculationInput.capacitySum.isRemoved {
            B1PreRoutingDateCalculationInput.capacitySum = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "CapacitySum")
        }
        if !B1PreRoutingDateCalculationInput.firstDateProportion.isRemoved {
            B1PreRoutingDateCalculationInput.firstDateProportion = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "FirstDateProportion")
        }
        if !B1PreRoutingDateCalculationInput.resourceAlloc.isRemoved {
            B1PreRoutingDateCalculationInput.resourceAlloc = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "ResourceAlloc")
        }
        if !B1PreRoutingDateCalculationInput.worObjAbs.isRemoved {
            B1PreRoutingDateCalculationInput.worObjAbs = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "WORObjAbs")
        }
        if !B1PreRoutingDateCalculationInput.worLine.isRemoved {
            B1PreRoutingDateCalculationInput.worLine = B1ClassMetadata.ComplexTypes.routingDateCalculationInput.property(withName: "WORLine")
        }
        if !B1PreRoutingDateCalculationOutput.resultDate.isRemoved {
            B1PreRoutingDateCalculationOutput.resultDate = B1ClassMetadata.ComplexTypes.routingDateCalculationOutput.property(withName: "ResultDate")
        }
        if !B1PreRoutingDateCalculationOutput.proportion.isRemoved {
            B1PreRoutingDateCalculationOutput.proportion = B1ClassMetadata.ComplexTypes.routingDateCalculationOutput.property(withName: "Proportion")
        }
        if !B1PreSNBLines.snbAbsEntry.isRemoved {
            B1PreSNBLines.snbAbsEntry = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "SnbAbsEntry")
        }
        if !B1PreSNBLines.newCost.isRemoved {
            B1PreSNBLines.newCost = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "NewCost")
        }
        if !B1PreSNBLines.debitCredit.isRemoved {
            B1PreSNBLines.debitCredit = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "DebitCredit")
        }
        if !B1PreSNBLines.systemNumber.isRemoved {
            B1PreSNBLines.systemNumber = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "SystemNumber")
        }
        if !B1PreSNBLines.lotNumber.isRemoved {
            B1PreSNBLines.lotNumber = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "LotNumber")
        }
        if !B1PreSNBLines.manufactureNumber.isRemoved {
            B1PreSNBLines.manufactureNumber = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "ManufactureNumber")
        }
        if !B1PreSNBLines.admissionDate.isRemoved {
            B1PreSNBLines.admissionDate = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "AdmissionDate")
        }
        if !B1PreSNBLines.expirationDate.isRemoved {
            B1PreSNBLines.expirationDate = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "ExpirationDate")
        }
        if !B1PreSNBLines.baseLine.isRemoved {
            B1PreSNBLines.baseLine = B1ClassMetadata.ComplexTypes.snbLines.property(withName: "BaseLine")
        }
        if !B1PreSalesForecastLine.quantity.isRemoved {
            B1PreSalesForecastLine.quantity = B1ClassMetadata.ComplexTypes.salesForecastLine.property(withName: "Quantity")
        }
        if !B1PreSalesForecastLine.forecastedDay.isRemoved {
            B1PreSalesForecastLine.forecastedDay = B1ClassMetadata.ComplexTypes.salesForecastLine.property(withName: "ForecastedDay")
        }
        if !B1PreSalesForecastLine.itemNo.isRemoved {
            B1PreSalesForecastLine.itemNo = B1ClassMetadata.ComplexTypes.salesForecastLine.property(withName: "ItemNo")
        }
        if !B1PreSalesForecastLine.warehouse.isRemoved {
            B1PreSalesForecastLine.warehouse = B1ClassMetadata.ComplexTypes.salesForecastLine.property(withName: "Warehouse")
        }
        if !B1PreSalesForecastParams.numerator.isRemoved {
            B1PreSalesForecastParams.numerator = B1ClassMetadata.ComplexTypes.salesForecastParams.property(withName: "Numerator")
        }
        if !B1PreSalesOpportunitiesCompetitionItem.rowNo.isRemoved {
            B1PreSalesOpportunitiesCompetitionItem.rowNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesCompetitionItem.property(withName: "RowNo")
        }
        if !B1PreSalesOpportunitiesCompetitionItem.competition.isRemoved {
            B1PreSalesOpportunitiesCompetitionItem.competition = B1ClassMetadata.ComplexTypes.salesOpportunitiesCompetitionItem.property(withName: "Competition")
        }
        if !B1PreSalesOpportunitiesCompetitionItem.details.isRemoved {
            B1PreSalesOpportunitiesCompetitionItem.details = B1ClassMetadata.ComplexTypes.salesOpportunitiesCompetitionItem.property(withName: "Details")
        }
        if !B1PreSalesOpportunitiesCompetitionItem.sequenceNo.isRemoved {
            B1PreSalesOpportunitiesCompetitionItem.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesCompetitionItem.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunitiesCompetitionItem.wonOrLost.isRemoved {
            B1PreSalesOpportunitiesCompetitionItem.wonOrLost = B1ClassMetadata.ComplexTypes.salesOpportunitiesCompetitionItem.property(withName: "WonOrLost")
        }
        if !B1PreSalesOpportunitiesInterest.rowNo.isRemoved {
            B1PreSalesOpportunitiesInterest.rowNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesInterest.property(withName: "RowNo")
        }
        if !B1PreSalesOpportunitiesInterest.sequenceNo.isRemoved {
            B1PreSalesOpportunitiesInterest.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesInterest.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunitiesInterest.primaryInterest.isRemoved {
            B1PreSalesOpportunitiesInterest.primaryInterest = B1ClassMetadata.ComplexTypes.salesOpportunitiesInterest.property(withName: "PrimaryInterest")
        }
        if !B1PreSalesOpportunitiesInterest.interestID.isRemoved {
            B1PreSalesOpportunitiesInterest.interestID = B1ClassMetadata.ComplexTypes.salesOpportunitiesInterest.property(withName: "InterestId")
        }
        if !B1PreSalesOpportunitiesLine.lineNum.isRemoved {
            B1PreSalesOpportunitiesLine.lineNum = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "LineNum")
        }
        if !B1PreSalesOpportunitiesLine.salesPerson.isRemoved {
            B1PreSalesOpportunitiesLine.salesPerson = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "SalesPerson")
        }
        if !B1PreSalesOpportunitiesLine.startDate.isRemoved {
            B1PreSalesOpportunitiesLine.startDate = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "StartDate")
        }
        if !B1PreSalesOpportunitiesLine.closingDate.isRemoved {
            B1PreSalesOpportunitiesLine.closingDate = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "ClosingDate")
        }
        if !B1PreSalesOpportunitiesLine.stageKey.isRemoved {
            B1PreSalesOpportunitiesLine.stageKey = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "StageKey")
        }
        if !B1PreSalesOpportunitiesLine.percentageRate.isRemoved {
            B1PreSalesOpportunitiesLine.percentageRate = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "PercentageRate")
        }
        if !B1PreSalesOpportunitiesLine.maxLocalTotal.isRemoved {
            B1PreSalesOpportunitiesLine.maxLocalTotal = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "MaxLocalTotal")
        }
        if !B1PreSalesOpportunitiesLine.maxSystemTotal.isRemoved {
            B1PreSalesOpportunitiesLine.maxSystemTotal = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "MaxSystemTotal")
        }
        if !B1PreSalesOpportunitiesLine.remarks.isRemoved {
            B1PreSalesOpportunitiesLine.remarks = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "Remarks")
        }
        if !B1PreSalesOpportunitiesLine.contact.isRemoved {
            B1PreSalesOpportunitiesLine.contact = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "Contact")
        }
        if !B1PreSalesOpportunitiesLine.status.isRemoved {
            B1PreSalesOpportunitiesLine.status = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "Status")
        }
        if !B1PreSalesOpportunitiesLine.weightedAmountLocal.isRemoved {
            B1PreSalesOpportunitiesLine.weightedAmountLocal = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "WeightedAmountLocal")
        }
        if !B1PreSalesOpportunitiesLine.weightedAmountSystem.isRemoved {
            B1PreSalesOpportunitiesLine.weightedAmountSystem = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "WeightedAmountSystem")
        }
        if !B1PreSalesOpportunitiesLine.documentNumber.isRemoved {
            B1PreSalesOpportunitiesLine.documentNumber = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "DocumentNumber")
        }
        if !B1PreSalesOpportunitiesLine.documentType.isRemoved {
            B1PreSalesOpportunitiesLine.documentType = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "DocumentType")
        }
        if !B1PreSalesOpportunitiesLine.documentCheckbox.isRemoved {
            B1PreSalesOpportunitiesLine.documentCheckbox = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "DocumentCheckbox")
        }
        if !B1PreSalesOpportunitiesLine.contactPerson.isRemoved {
            B1PreSalesOpportunitiesLine.contactPerson = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "ContactPerson")
        }
        if !B1PreSalesOpportunitiesLine.bpChanelName.isRemoved {
            B1PreSalesOpportunitiesLine.bpChanelName = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "BPChanelName")
        }
        if !B1PreSalesOpportunitiesLine.bpChanelCode.isRemoved {
            B1PreSalesOpportunitiesLine.bpChanelCode = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "BPChanelCode")
        }
        if !B1PreSalesOpportunitiesLine.sequenceNo.isRemoved {
            B1PreSalesOpportunitiesLine.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunitiesLine.dataOwnershipfield.isRemoved {
            B1PreSalesOpportunitiesLine.dataOwnershipfield = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "DataOwnershipfield")
        }
        if !B1PreSalesOpportunitiesLine.bpChannelContact.isRemoved {
            B1PreSalesOpportunitiesLine.bpChannelContact = B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.property(withName: "BPChannelContact")
        }
        if !B1PreSalesOpportunitiesParams.sequentialNo.isRemoved {
            B1PreSalesOpportunitiesParams.sequentialNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesParams.property(withName: "SequentialNo")
        }
        if !B1PreSalesOpportunitiesPartner.rowNo.isRemoved {
            B1PreSalesOpportunitiesPartner.rowNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesPartner.property(withName: "RowNo")
        }
        if !B1PreSalesOpportunitiesPartner.partners.isRemoved {
            B1PreSalesOpportunitiesPartner.partners = B1ClassMetadata.ComplexTypes.salesOpportunitiesPartner.property(withName: "Partners")
        }
        if !B1PreSalesOpportunitiesPartner.details.isRemoved {
            B1PreSalesOpportunitiesPartner.details = B1ClassMetadata.ComplexTypes.salesOpportunitiesPartner.property(withName: "Details")
        }
        if !B1PreSalesOpportunitiesPartner.relationshipCode.isRemoved {
            B1PreSalesOpportunitiesPartner.relationshipCode = B1ClassMetadata.ComplexTypes.salesOpportunitiesPartner.property(withName: "RelationshipCode")
        }
        if !B1PreSalesOpportunitiesPartner.sequenceNo.isRemoved {
            B1PreSalesOpportunitiesPartner.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesPartner.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunitiesReason.rowNo.isRemoved {
            B1PreSalesOpportunitiesReason.rowNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesReason.property(withName: "RowNo")
        }
        if !B1PreSalesOpportunitiesReason.sequenceNo.isRemoved {
            B1PreSalesOpportunitiesReason.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunitiesReason.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunitiesReason.reason.isRemoved {
            B1PreSalesOpportunitiesReason.reason = B1ClassMetadata.ComplexTypes.salesOpportunitiesReason.property(withName: "Reason")
        }
        if !B1PreSalesOpportunityCompetitorSetupParams.sequenceNo.isRemoved {
            B1PreSalesOpportunityCompetitorSetupParams.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunityCompetitorSetupParams.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunityCompetitorSetupParams.name.isRemoved {
            B1PreSalesOpportunityCompetitorSetupParams.name = B1ClassMetadata.ComplexTypes.salesOpportunityCompetitorSetupParams.property(withName: "Name")
        }
        if !B1PreSalesOpportunityCompetitorSetupParams.threatLevel.isRemoved {
            B1PreSalesOpportunityCompetitorSetupParams.threatLevel = B1ClassMetadata.ComplexTypes.salesOpportunityCompetitorSetupParams.property(withName: "ThreatLevel")
        }
        if !B1PreSalesOpportunityInterestSetupParams.sequenceNo.isRemoved {
            B1PreSalesOpportunityInterestSetupParams.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunityInterestSetupParams.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunityInterestSetupParams.description.isRemoved {
            B1PreSalesOpportunityInterestSetupParams.description = B1ClassMetadata.ComplexTypes.salesOpportunityInterestSetupParams.property(withName: "Description")
        }
        if !B1PreSalesOpportunityReasonSetupParams.sequenceNo.isRemoved {
            B1PreSalesOpportunityReasonSetupParams.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunityReasonSetupParams.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunityReasonSetupParams.description.isRemoved {
            B1PreSalesOpportunityReasonSetupParams.description = B1ClassMetadata.ComplexTypes.salesOpportunityReasonSetupParams.property(withName: "Description")
        }
        if !B1PreSalesOpportunitySourceSetupParams.sequenceNo.isRemoved {
            B1PreSalesOpportunitySourceSetupParams.sequenceNo = B1ClassMetadata.ComplexTypes.salesOpportunitySourceSetupParams.property(withName: "SequenceNo")
        }
        if !B1PreSalesOpportunitySourceSetupParams.description.isRemoved {
            B1PreSalesOpportunitySourceSetupParams.description = B1ClassMetadata.ComplexTypes.salesOpportunitySourceSetupParams.property(withName: "Description")
        }
        if !B1PreSalesPersonParams.salesEmployeeCode.isRemoved {
            B1PreSalesPersonParams.salesEmployeeCode = B1ClassMetadata.ComplexTypes.salesPersonParams.property(withName: "SalesEmployeeCode")
        }
        if !B1PreSalesStageParams.sequenceNo.isRemoved {
            B1PreSalesStageParams.sequenceNo = B1ClassMetadata.ComplexTypes.salesStageParams.property(withName: "SequenceNo")
        }
        if !B1PreSalesTaxAuthoritiesTypeParams.numerator.isRemoved {
            B1PreSalesTaxAuthoritiesTypeParams.numerator = B1ClassMetadata.ComplexTypes.salesTaxAuthoritiesTypeParams.property(withName: "Numerator")
        }
        if !B1PreSalesTaxAuthorityParams.code.isRemoved {
            B1PreSalesTaxAuthorityParams.code = B1ClassMetadata.ComplexTypes.salesTaxAuthorityParams.property(withName: "Code")
        }
        if !B1PreSalesTaxAuthorityParams.type_.isRemoved {
            B1PreSalesTaxAuthorityParams.type_ = B1ClassMetadata.ComplexTypes.salesTaxAuthorityParams.property(withName: "Type")
        }
        if !B1PreSalesTaxCodeParams.code.isRemoved {
            B1PreSalesTaxCodeParams.code = B1ClassMetadata.ComplexTypes.salesTaxCodeParams.property(withName: "Code")
        }
        if !B1PreSalesTaxCodesLine.staTaxOnTaxType.isRemoved {
            B1PreSalesTaxCodesLine.staTaxOnTaxType = B1ClassMetadata.ComplexTypes.salesTaxCodesLine.property(withName: "STATaxOnTaxType")
        }
        if !B1PreSalesTaxCodesLine.staTaxonTaxCode.isRemoved {
            B1PreSalesTaxCodesLine.staTaxonTaxCode = B1ClassMetadata.ComplexTypes.salesTaxCodesLine.property(withName: "STATaxonTaxCode")
        }
        if !B1PreSalesTaxCodesLine.stcCode.isRemoved {
            B1PreSalesTaxCodesLine.stcCode = B1ClassMetadata.ComplexTypes.salesTaxCodesLine.property(withName: "STCCode")
        }
        if !B1PreSalesTaxCodesLine.staType.isRemoved {
            B1PreSalesTaxCodesLine.staType = B1ClassMetadata.ComplexTypes.salesTaxCodesLine.property(withName: "STAType")
        }
        if !B1PreSalesTaxCodesLine.staCode.isRemoved {
            B1PreSalesTaxCodesLine.staCode = B1ClassMetadata.ComplexTypes.salesTaxCodesLine.property(withName: "STACode")
        }
        if !B1PreSalesTaxCodesLine.rowNumber.isRemoved {
            B1PreSalesTaxCodesLine.rowNumber = B1ClassMetadata.ComplexTypes.salesTaxCodesLine.property(withName: "RowNumber")
        }
        if !B1PreSalesTaxCodesLine.effectiveRate.isRemoved {
            B1PreSalesTaxCodesLine.effectiveRate = B1ClassMetadata.ComplexTypes.salesTaxCodesLine.property(withName: "EffectiveRate")
        }
        if !B1PreSalesTaxInvoiceLine.refEntry1.isRemoved {
            B1PreSalesTaxInvoiceLine.refEntry1 = B1ClassMetadata.ComplexTypes.salesTaxInvoiceLine.property(withName: "RefEntry1")
        }
        if !B1PreSalesTaxInvoiceLine.refEntry2.isRemoved {
            B1PreSalesTaxInvoiceLine.refEntry2 = B1ClassMetadata.ComplexTypes.salesTaxInvoiceLine.property(withName: "RefEntry2")
        }
        if !B1PreSalesTaxInvoiceOperationCode.opCode.isRemoved {
            B1PreSalesTaxInvoiceOperationCode.opCode = B1ClassMetadata.ComplexTypes.salesTaxInvoiceOperationCode.property(withName: "OpCode")
        }
        if !B1PreSectionParams.absEntry.isRemoved {
            B1PreSectionParams.absEntry = B1ClassMetadata.ComplexTypes.sectionParams.property(withName: "AbsEntry")
        }
        if !B1PreSectionParams.code.isRemoved {
            B1PreSectionParams.code = B1ClassMetadata.ComplexTypes.sectionParams.property(withName: "Code")
        }
        if !B1PreSectionParams.description.isRemoved {
            B1PreSectionParams.description = B1ClassMetadata.ComplexTypes.sectionParams.property(withName: "Description")
        }
        if !B1PreSensitiveDataAccess.table.isRemoved {
            B1PreSensitiveDataAccess.table = B1ClassMetadata.ComplexTypes.sensitiveDataAccess.property(withName: "Table")
        }
        if !B1PreSensitiveDataAccess.key1.isRemoved {
            B1PreSensitiveDataAccess.key1 = B1ClassMetadata.ComplexTypes.sensitiveDataAccess.property(withName: "Key1")
        }
        if !B1PreSensitiveDataAccess.key2.isRemoved {
            B1PreSensitiveDataAccess.key2 = B1ClassMetadata.ComplexTypes.sensitiveDataAccess.property(withName: "Key2")
        }
        if !B1PreSensitiveDataAccess.key3.isRemoved {
            B1PreSensitiveDataAccess.key3 = B1ClassMetadata.ComplexTypes.sensitiveDataAccess.property(withName: "Key3")
        }
        if !B1PreSensitiveDataAccess.key4.isRemoved {
            B1PreSensitiveDataAccess.key4 = B1ClassMetadata.ComplexTypes.sensitiveDataAccess.property(withName: "Key4")
        }
        if !B1PreSensitiveDataAccess.propertyName.isRemoved {
            B1PreSensitiveDataAccess.propertyName = B1ClassMetadata.ComplexTypes.sensitiveDataAccess.property(withName: "PropertyName")
        }
        if !B1PreSensitiveDataAccess.propertyID.isRemoved {
            B1PreSensitiveDataAccess.propertyID = B1ClassMetadata.ComplexTypes.sensitiveDataAccess.property(withName: "PropertyID")
        }
        if !B1PreSensitiveDataAccess.propertyValue.isRemoved {
            B1PreSensitiveDataAccess.propertyValue = B1ClassMetadata.ComplexTypes.sensitiveDataAccess.property(withName: "PropertyValue")
        }
        if !B1PreSerialNumber.manufacturerSerialNumber.isRemoved {
            B1PreSerialNumber.manufacturerSerialNumber = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "ManufacturerSerialNumber")
        }
        if !B1PreSerialNumber.internalSerialNumber.isRemoved {
            B1PreSerialNumber.internalSerialNumber = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "InternalSerialNumber")
        }
        if !B1PreSerialNumber.expiryDate.isRemoved {
            B1PreSerialNumber.expiryDate = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "ExpiryDate")
        }
        if !B1PreSerialNumber.manufactureDate.isRemoved {
            B1PreSerialNumber.manufactureDate = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "ManufactureDate")
        }
        if !B1PreSerialNumber.receptionDate.isRemoved {
            B1PreSerialNumber.receptionDate = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "ReceptionDate")
        }
        if !B1PreSerialNumber.warrantyStart.isRemoved {
            B1PreSerialNumber.warrantyStart = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "WarrantyStart")
        }
        if !B1PreSerialNumber.warrantyEnd.isRemoved {
            B1PreSerialNumber.warrantyEnd = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "WarrantyEnd")
        }
        if !B1PreSerialNumber.location.isRemoved {
            B1PreSerialNumber.location = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "Location")
        }
        if !B1PreSerialNumber.notes.isRemoved {
            B1PreSerialNumber.notes = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "Notes")
        }
        if !B1PreSerialNumber.batchID.isRemoved {
            B1PreSerialNumber.batchID = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "BatchID")
        }
        if !B1PreSerialNumber.systemSerialNumber.isRemoved {
            B1PreSerialNumber.systemSerialNumber = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "SystemSerialNumber")
        }
        if !B1PreSerialNumber.baseLineNumber.isRemoved {
            B1PreSerialNumber.baseLineNumber = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "BaseLineNumber")
        }
        if !B1PreSerialNumber.quantity.isRemoved {
            B1PreSerialNumber.quantity = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "Quantity")
        }
        if !B1PreSerialNumber.trackingNote.isRemoved {
            B1PreSerialNumber.trackingNote = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "TrackingNote")
        }
        if !B1PreSerialNumber.trackingNoteLine.isRemoved {
            B1PreSerialNumber.trackingNoteLine = B1ClassMetadata.ComplexTypes.serialNumber.property(withName: "TrackingNoteLine")
        }
        if !B1PreSerialNumberDetailParams.docEntry.isRemoved {
            B1PreSerialNumberDetailParams.docEntry = B1ClassMetadata.ComplexTypes.serialNumberDetailParams.property(withName: "DocEntry")
        }
        if !B1PreSeries.document.isRemoved {
            B1PreSeries.document = B1ClassMetadata.ComplexTypes.series.property(withName: "Document")
        }
        if !B1PreSeries.documentSubType.isRemoved {
            B1PreSeries.documentSubType = B1ClassMetadata.ComplexTypes.series.property(withName: "DocumentSubType")
        }
        if !B1PreSeries.initialNumber.isRemoved {
            B1PreSeries.initialNumber = B1ClassMetadata.ComplexTypes.series.property(withName: "InitialNumber")
        }
        if !B1PreSeries.lastNumber.isRemoved {
            B1PreSeries.lastNumber = B1ClassMetadata.ComplexTypes.series.property(withName: "LastNumber")
        }
        if !B1PreSeries.nextNumber.isRemoved {
            B1PreSeries.nextNumber = B1ClassMetadata.ComplexTypes.series.property(withName: "NextNumber")
        }
        if !B1PreSeries.prefix.isRemoved {
            B1PreSeries.prefix = B1ClassMetadata.ComplexTypes.series.property(withName: "Prefix")
        }
        if !B1PreSeries.suffix.isRemoved {
            B1PreSeries.suffix = B1ClassMetadata.ComplexTypes.series.property(withName: "Suffix")
        }
        if !B1PreSeries.remarks.isRemoved {
            B1PreSeries.remarks = B1ClassMetadata.ComplexTypes.series.property(withName: "Remarks")
        }
        if !B1PreSeries.groupCode.isRemoved {
            B1PreSeries.groupCode = B1ClassMetadata.ComplexTypes.series.property(withName: "GroupCode")
        }
        if !B1PreSeries.locked.isRemoved {
            B1PreSeries.locked = B1ClassMetadata.ComplexTypes.series.property(withName: "Locked")
        }
        if !B1PreSeries.periodIndicator.isRemoved {
            B1PreSeries.periodIndicator = B1ClassMetadata.ComplexTypes.series.property(withName: "PeriodIndicator")
        }
        if !B1PreSeries.name.isRemoved {
            B1PreSeries.name = B1ClassMetadata.ComplexTypes.series.property(withName: "Name")
        }
        if !B1PreSeries.series.isRemoved {
            B1PreSeries.series = B1ClassMetadata.ComplexTypes.series.property(withName: "Series")
        }
        if !B1PreSeries.isDigitalSeries.isRemoved {
            B1PreSeries.isDigitalSeries = B1ClassMetadata.ComplexTypes.series.property(withName: "IsDigitalSeries")
        }
        if !B1PreSeries.digitNumber.isRemoved {
            B1PreSeries.digitNumber = B1ClassMetadata.ComplexTypes.series.property(withName: "DigitNumber")
        }
        if !B1PreSeries.seriesType.isRemoved {
            B1PreSeries.seriesType = B1ClassMetadata.ComplexTypes.series.property(withName: "SeriesType")
        }
        if !B1PreSeries.isManual.isRemoved {
            B1PreSeries.isManual = B1ClassMetadata.ComplexTypes.series.property(withName: "IsManual")
        }
        if !B1PreSeries.bplid.isRemoved {
            B1PreSeries.bplid = B1ClassMetadata.ComplexTypes.series.property(withName: "BPLID")
        }
        if !B1PreSeries.atDocumentType.isRemoved {
            B1PreSeries.atDocumentType = B1ClassMetadata.ComplexTypes.series.property(withName: "ATDocumentType")
        }
        if !B1PreSeries.isElectronicCommEnabled.isRemoved {
            B1PreSeries.isElectronicCommEnabled = B1ClassMetadata.ComplexTypes.series.property(withName: "IsElectronicCommEnabled")
        }
        if !B1PreSeries.costAccountOnly.isRemoved {
            B1PreSeries.costAccountOnly = B1ClassMetadata.ComplexTypes.series.property(withName: "CostAccountOnly")
        }
        if !B1PreSeriesLine.series.isRemoved {
            B1PreSeriesLine.series = B1ClassMetadata.ComplexTypes.seriesLine.property(withName: "Series")
        }
        if !B1PreSeriesLine.prefix.isRemoved {
            B1PreSeriesLine.prefix = B1ClassMetadata.ComplexTypes.seriesLine.property(withName: "Prefix")
        }
        if !B1PreSeriesLine.firstNum.isRemoved {
            B1PreSeriesLine.firstNum = B1ClassMetadata.ComplexTypes.seriesLine.property(withName: "FirstNum")
        }
        if !B1PreSeriesLine.nextNum.isRemoved {
            B1PreSeriesLine.nextNum = B1ClassMetadata.ComplexTypes.seriesLine.property(withName: "NextNum")
        }
        if !B1PreSeriesLine.lastNum.isRemoved {
            B1PreSeriesLine.lastNum = B1ClassMetadata.ComplexTypes.seriesLine.property(withName: "LastNum")
        }
        if !B1PreSeriesParams.series.isRemoved {
            B1PreSeriesParams.series = B1ClassMetadata.ComplexTypes.seriesParams.property(withName: "Series")
        }
        if !B1PreServiceAppReport.code.isRemoved {
            B1PreServiceAppReport.code = B1ClassMetadata.ComplexTypes.serviceAppReport.property(withName: "Code")
        }
        if !B1PreServiceAppReport.systemReportName.isRemoved {
            B1PreServiceAppReport.systemReportName = B1ClassMetadata.ComplexTypes.serviceAppReport.property(withName: "SystemReportName")
        }
        if !B1PreServiceAppReport.customizedReportName.isRemoved {
            B1PreServiceAppReport.customizedReportName = B1ClassMetadata.ComplexTypes.serviceAppReport.property(withName: "CustomizedReportName")
        }
        if !B1PreServiceAppReport.reportChoice.isRemoved {
            B1PreServiceAppReport.reportChoice = B1ClassMetadata.ComplexTypes.serviceAppReport.property(withName: "ReportChoice")
        }
        if !B1PreServiceAppReportContent.reportContent.isRemoved {
            B1PreServiceAppReportContent.reportContent = B1ClassMetadata.ComplexTypes.serviceAppReportContent.property(withName: "ReportContent")
        }
        if !B1PreServiceAppReportParams.code.isRemoved {
            B1PreServiceAppReportParams.code = B1ClassMetadata.ComplexTypes.serviceAppReportParams.property(withName: "Code")
        }
        if !B1PreServiceAppReportParams.reportChoice.isRemoved {
            B1PreServiceAppReportParams.reportChoice = B1ClassMetadata.ComplexTypes.serviceAppReportParams.property(withName: "ReportChoice")
        }
        if !B1PreServiceCallActivity.lineNum.isRemoved {
            B1PreServiceCallActivity.lineNum = B1ClassMetadata.ComplexTypes.serviceCallActivity.property(withName: "LineNum")
        }
        if !B1PreServiceCallActivity.activityCode.isRemoved {
            B1PreServiceCallActivity.activityCode = B1ClassMetadata.ComplexTypes.serviceCallActivity.property(withName: "ActivityCode")
        }
        if !B1PreServiceCallBPAddressComponent.shipToStreet.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToStreet = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToStreet")
        }
        if !B1PreServiceCallBPAddressComponent.shipToStreetNo.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToStreetNo = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToStreetNo")
        }
        if !B1PreServiceCallBPAddressComponent.shipToBlock.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToBlock = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToBlock")
        }
        if !B1PreServiceCallBPAddressComponent.shipToBuilding.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToBuilding = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToBuilding")
        }
        if !B1PreServiceCallBPAddressComponent.shipToCity.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToCity = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToCity")
        }
        if !B1PreServiceCallBPAddressComponent.shipToZipCode.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToZipCode = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToZipCode")
        }
        if !B1PreServiceCallBPAddressComponent.shipToState.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToState = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToState")
        }
        if !B1PreServiceCallBPAddressComponent.shipToCounty.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToCounty = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToCounty")
        }
        if !B1PreServiceCallBPAddressComponent.shipToCountry.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToCountry = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToCountry")
        }
        if !B1PreServiceCallBPAddressComponent.shipToAddressType.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToAddressType = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToAddressType")
        }
        if !B1PreServiceCallBPAddressComponent.shipToAddress2.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToAddress2 = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToAddress2")
        }
        if !B1PreServiceCallBPAddressComponent.shipToAddress3.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToAddress3 = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToAddress3")
        }
        if !B1PreServiceCallBPAddressComponent.shipToGlobalLocationNumber.isRemoved {
            B1PreServiceCallBPAddressComponent.shipToGlobalLocationNumber = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "ShipToGlobalLocationNumber")
        }
        if !B1PreServiceCallBPAddressComponent.billToStreet.isRemoved {
            B1PreServiceCallBPAddressComponent.billToStreet = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToStreet")
        }
        if !B1PreServiceCallBPAddressComponent.billToStreetNo.isRemoved {
            B1PreServiceCallBPAddressComponent.billToStreetNo = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToStreetNo")
        }
        if !B1PreServiceCallBPAddressComponent.billToBlock.isRemoved {
            B1PreServiceCallBPAddressComponent.billToBlock = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToBlock")
        }
        if !B1PreServiceCallBPAddressComponent.billToBuilding.isRemoved {
            B1PreServiceCallBPAddressComponent.billToBuilding = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToBuilding")
        }
        if !B1PreServiceCallBPAddressComponent.billToCity.isRemoved {
            B1PreServiceCallBPAddressComponent.billToCity = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToCity")
        }
        if !B1PreServiceCallBPAddressComponent.billToZipCode.isRemoved {
            B1PreServiceCallBPAddressComponent.billToZipCode = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToZipCode")
        }
        if !B1PreServiceCallBPAddressComponent.billToState.isRemoved {
            B1PreServiceCallBPAddressComponent.billToState = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToState")
        }
        if !B1PreServiceCallBPAddressComponent.billToCounty.isRemoved {
            B1PreServiceCallBPAddressComponent.billToCounty = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToCounty")
        }
        if !B1PreServiceCallBPAddressComponent.billToCountry.isRemoved {
            B1PreServiceCallBPAddressComponent.billToCountry = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToCountry")
        }
        if !B1PreServiceCallBPAddressComponent.billToAddressType.isRemoved {
            B1PreServiceCallBPAddressComponent.billToAddressType = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToAddressType")
        }
        if !B1PreServiceCallBPAddressComponent.billToAddress2.isRemoved {
            B1PreServiceCallBPAddressComponent.billToAddress2 = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToAddress2")
        }
        if !B1PreServiceCallBPAddressComponent.billToAddress3.isRemoved {
            B1PreServiceCallBPAddressComponent.billToAddress3 = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToAddress3")
        }
        if !B1PreServiceCallBPAddressComponent.billToGlobalLocationNumber.isRemoved {
            B1PreServiceCallBPAddressComponent.billToGlobalLocationNumber = B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.property(withName: "BillToGlobalLocationNumber")
        }
        if !B1PreServiceCallInventoryExpense.lineNum.isRemoved {
            B1PreServiceCallInventoryExpense.lineNum = B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense.property(withName: "LineNum")
        }
        if !B1PreServiceCallInventoryExpense.partType.isRemoved {
            B1PreServiceCallInventoryExpense.partType = B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense.property(withName: "PartType")
        }
        if !B1PreServiceCallInventoryExpense.documentType.isRemoved {
            B1PreServiceCallInventoryExpense.documentType = B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense.property(withName: "DocumentType")
        }
        if !B1PreServiceCallInventoryExpense.documentPostingDate.isRemoved {
            B1PreServiceCallInventoryExpense.documentPostingDate = B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense.property(withName: "DocumentPostingDate")
        }
        if !B1PreServiceCallInventoryExpense.documentNumber.isRemoved {
            B1PreServiceCallInventoryExpense.documentNumber = B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense.property(withName: "DocumentNumber")
        }
        if !B1PreServiceCallInventoryExpense.stockTransferDirection.isRemoved {
            B1PreServiceCallInventoryExpense.stockTransferDirection = B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense.property(withName: "StockTransferDirection")
        }
        if !B1PreServiceCallInventoryExpense.docEntry.isRemoved {
            B1PreServiceCallInventoryExpense.docEntry = B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense.property(withName: "DocEntry")
        }
        if !B1PreServiceCallOriginParams.originID.isRemoved {
            B1PreServiceCallOriginParams.originID = B1ClassMetadata.ComplexTypes.serviceCallOriginParams.property(withName: "OriginID")
        }
        if !B1PreServiceCallOriginParams.name.isRemoved {
            B1PreServiceCallOriginParams.name = B1ClassMetadata.ComplexTypes.serviceCallOriginParams.property(withName: "Name")
        }
        if !B1PreServiceCallParams.serviceCallID.isRemoved {
            B1PreServiceCallParams.serviceCallID = B1ClassMetadata.ComplexTypes.serviceCallParams.property(withName: "ServiceCallID")
        }
        if !B1PreServiceCallProblemSubTypeParams.problemSubTypeID.isRemoved {
            B1PreServiceCallProblemSubTypeParams.problemSubTypeID = B1ClassMetadata.ComplexTypes.serviceCallProblemSubTypeParams.property(withName: "ProblemSubTypeID")
        }
        if !B1PreServiceCallProblemSubTypeParams.name.isRemoved {
            B1PreServiceCallProblemSubTypeParams.name = B1ClassMetadata.ComplexTypes.serviceCallProblemSubTypeParams.property(withName: "Name")
        }
        if !B1PreServiceCallProblemTypeParams.problemTypeID.isRemoved {
            B1PreServiceCallProblemTypeParams.problemTypeID = B1ClassMetadata.ComplexTypes.serviceCallProblemTypeParams.property(withName: "ProblemTypeID")
        }
        if !B1PreServiceCallProblemTypeParams.name.isRemoved {
            B1PreServiceCallProblemTypeParams.name = B1ClassMetadata.ComplexTypes.serviceCallProblemTypeParams.property(withName: "Name")
        }
        if !B1PreServiceCallScheduling.lineNum.isRemoved {
            B1PreServiceCallScheduling.lineNum = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "LineNum")
        }
        if !B1PreServiceCallScheduling.technician.isRemoved {
            B1PreServiceCallScheduling.technician = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Technician")
        }
        if !B1PreServiceCallScheduling.handledBy.isRemoved {
            B1PreServiceCallScheduling.handledBy = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "HandledBy")
        }
        if !B1PreServiceCallScheduling.startDate.isRemoved {
            B1PreServiceCallScheduling.startDate = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "StartDate")
        }
        if !B1PreServiceCallScheduling.startTime.isRemoved {
            B1PreServiceCallScheduling.startTime = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "StartTime")
        }
        if !B1PreServiceCallScheduling.endDate.isRemoved {
            B1PreServiceCallScheduling.endDate = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "EndDate")
        }
        if !B1PreServiceCallScheduling.endTime.isRemoved {
            B1PreServiceCallScheduling.endTime = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "EndTime")
        }
        if !B1PreServiceCallScheduling.duration.isRemoved {
            B1PreServiceCallScheduling.duration = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Duration")
        }
        if !B1PreServiceCallScheduling.actualDuration.isRemoved {
            B1PreServiceCallScheduling.actualDuration = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "ActualDuration")
        }
        if !B1PreServiceCallScheduling.durationType.isRemoved {
            B1PreServiceCallScheduling.durationType = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "DurationType")
        }
        if !B1PreServiceCallScheduling.actualDurationType.isRemoved {
            B1PreServiceCallScheduling.actualDurationType = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "ActualDurationType")
        }
        if !B1PreServiceCallScheduling.reminder.isRemoved {
            B1PreServiceCallScheduling.reminder = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Reminder")
        }
        if !B1PreServiceCallScheduling.reminderPeriod.isRemoved {
            B1PreServiceCallScheduling.reminderPeriod = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "ReminderPeriod")
        }
        if !B1PreServiceCallScheduling.reminderType.isRemoved {
            B1PreServiceCallScheduling.reminderType = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "ReminderType")
        }
        if !B1PreServiceCallScheduling.reminderSent.isRemoved {
            B1PreServiceCallScheduling.reminderSent = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "ReminderSent")
        }
        if !B1PreServiceCallScheduling.reminderDate.isRemoved {
            B1PreServiceCallScheduling.reminderDate = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "ReminderDate")
        }
        if !B1PreServiceCallScheduling.reminderTime.isRemoved {
            B1PreServiceCallScheduling.reminderTime = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "ReminderTime")
        }
        if !B1PreServiceCallScheduling.displayInCalendar.isRemoved {
            B1PreServiceCallScheduling.displayInCalendar = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "DisplayInCalendar")
        }
        if !B1PreServiceCallScheduling.isUnscheduled.isRemoved {
            B1PreServiceCallScheduling.isUnscheduled = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "IsUnscheduled")
        }
        if !B1PreServiceCallScheduling.location.isRemoved {
            B1PreServiceCallScheduling.location = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Location")
        }
        if !B1PreServiceCallScheduling.addressName.isRemoved {
            B1PreServiceCallScheduling.addressName = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "AddressName")
        }
        if !B1PreServiceCallScheduling.addressText.isRemoved {
            B1PreServiceCallScheduling.addressText = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "AddressText")
        }
        if !B1PreServiceCallScheduling.street.isRemoved {
            B1PreServiceCallScheduling.street = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Street")
        }
        if !B1PreServiceCallScheduling.city.isRemoved {
            B1PreServiceCallScheduling.city = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "City")
        }
        if !B1PreServiceCallScheduling.room.isRemoved {
            B1PreServiceCallScheduling.room = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Room")
        }
        if !B1PreServiceCallScheduling.state.isRemoved {
            B1PreServiceCallScheduling.state = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "State")
        }
        if !B1PreServiceCallScheduling.country.isRemoved {
            B1PreServiceCallScheduling.country = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Country")
        }
        if !B1PreServiceCallScheduling.address2.isRemoved {
            B1PreServiceCallScheduling.address2 = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Address2")
        }
        if !B1PreServiceCallScheduling.address3.isRemoved {
            B1PreServiceCallScheduling.address3 = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Address3")
        }
        if !B1PreServiceCallScheduling.addressType.isRemoved {
            B1PreServiceCallScheduling.addressType = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "AddressType")
        }
        if !B1PreServiceCallScheduling.streetNo.isRemoved {
            B1PreServiceCallScheduling.streetNo = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "StreetNo")
        }
    }

    private static func merge15(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PreServiceCallScheduling.zipCode.isRemoved {
            B1PreServiceCallScheduling.zipCode = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "ZipCode")
        }
        if !B1PreServiceCallScheduling.block.isRemoved {
            B1PreServiceCallScheduling.block = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Block")
        }
        if !B1PreServiceCallScheduling.county.isRemoved {
            B1PreServiceCallScheduling.county = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "County")
        }
        if !B1PreServiceCallScheduling.taxOffice.isRemoved {
            B1PreServiceCallScheduling.taxOffice = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "TaxOffice")
        }
        if !B1PreServiceCallScheduling.globalLocNum.isRemoved {
            B1PreServiceCallScheduling.globalLocNum = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "GlobalLocNum")
        }
        if !B1PreServiceCallScheduling.isClosed.isRemoved {
            B1PreServiceCallScheduling.isClosed = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "IsClosed")
        }
        if !B1PreServiceCallScheduling.remark.isRemoved {
            B1PreServiceCallScheduling.remark = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "Remark")
        }
        if !B1PreServiceCallScheduling.addressTypeBS.isRemoved {
            B1PreServiceCallScheduling.addressTypeBS = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "AddressTypeBS")
        }
        if !B1PreServiceCallScheduling.signatureName.isRemoved {
            B1PreServiceCallScheduling.signatureName = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "SignatureName")
        }
        if !B1PreServiceCallScheduling.salesOrders.isRemoved {
            B1PreServiceCallScheduling.salesOrders = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "SalesOrders")
        }
        if !B1PreServiceCallScheduling.checkInDate.isRemoved {
            B1PreServiceCallScheduling.checkInDate = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "CheckInDate")
        }
        if !B1PreServiceCallScheduling.checkInTime.isRemoved {
            B1PreServiceCallScheduling.checkInTime = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "CheckInTime")
        }
        if !B1PreServiceCallScheduling.checkInLocation.isRemoved {
            B1PreServiceCallScheduling.checkInLocation = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "CheckInLocation")
        }
        if !B1PreServiceCallScheduling.checkInLatitude.isRemoved {
            B1PreServiceCallScheduling.checkInLatitude = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "CheckInLatitude")
        }
        if !B1PreServiceCallScheduling.checkInLongitude.isRemoved {
            B1PreServiceCallScheduling.checkInLongitude = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "CheckInLongitude")
        }
        if !B1PreServiceCallScheduling.checkOutDate.isRemoved {
            B1PreServiceCallScheduling.checkOutDate = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "CheckOutDate")
        }
        if !B1PreServiceCallScheduling.checkOutTime.isRemoved {
            B1PreServiceCallScheduling.checkOutTime = B1ClassMetadata.ComplexTypes.serviceCallScheduling.property(withName: "CheckOutTime")
        }
        if !B1PreServiceCallSolution.lineNum.isRemoved {
            B1PreServiceCallSolution.lineNum = B1ClassMetadata.ComplexTypes.serviceCallSolution.property(withName: "LineNum")
        }
        if !B1PreServiceCallSolution.solutionID.isRemoved {
            B1PreServiceCallSolution.solutionID = B1ClassMetadata.ComplexTypes.serviceCallSolution.property(withName: "SolutionID")
        }
        if !B1PreServiceCallSolutionStatusParams.statusID.isRemoved {
            B1PreServiceCallSolutionStatusParams.statusID = B1ClassMetadata.ComplexTypes.serviceCallSolutionStatusParams.property(withName: "StatusId")
        }
        if !B1PreServiceCallSolutionStatusParams.name.isRemoved {
            B1PreServiceCallSolutionStatusParams.name = B1ClassMetadata.ComplexTypes.serviceCallSolutionStatusParams.property(withName: "Name")
        }
        if !B1PreServiceCallStatusParams.statusID.isRemoved {
            B1PreServiceCallStatusParams.statusID = B1ClassMetadata.ComplexTypes.serviceCallStatusParams.property(withName: "StatusId")
        }
        if !B1PreServiceCallStatusParams.name.isRemoved {
            B1PreServiceCallStatusParams.name = B1ClassMetadata.ComplexTypes.serviceCallStatusParams.property(withName: "Name")
        }
        if !B1PreServiceCallTypeParams.callTypeID.isRemoved {
            B1PreServiceCallTypeParams.callTypeID = B1ClassMetadata.ComplexTypes.serviceCallTypeParams.property(withName: "CallTypeID")
        }
        if !B1PreServiceCallTypeParams.name.isRemoved {
            B1PreServiceCallTypeParams.name = B1ClassMetadata.ComplexTypes.serviceCallTypeParams.property(withName: "Name")
        }
        if !B1PreServiceContractParams.contractID.isRemoved {
            B1PreServiceContractParams.contractID = B1ClassMetadata.ComplexTypes.serviceContractParams.property(withName: "ContractID")
        }
        if !B1PreServiceContractLine.lineNum.isRemoved {
            B1PreServiceContractLine.lineNum = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "LineNum")
        }
        if !B1PreServiceContractLine.manufacturerSerialNum.isRemoved {
            B1PreServiceContractLine.manufacturerSerialNum = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "ManufacturerSerialNum")
        }
        if !B1PreServiceContractLine.internalSerialNum.isRemoved {
            B1PreServiceContractLine.internalSerialNum = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "InternalSerialNum")
        }
        if !B1PreServiceContractLine.itemCode.isRemoved {
            B1PreServiceContractLine.itemCode = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "ItemCode")
        }
        if !B1PreServiceContractLine.itemName.isRemoved {
            B1PreServiceContractLine.itemName = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "ItemName")
        }
        if !B1PreServiceContractLine.itemGroup.isRemoved {
            B1PreServiceContractLine.itemGroup = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "ItemGroup")
        }
        if !B1PreServiceContractLine.startDate.isRemoved {
            B1PreServiceContractLine.startDate = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "StartDate")
        }
        if !B1PreServiceContractLine.endDate.isRemoved {
            B1PreServiceContractLine.endDate = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "EndDate")
        }
        if !B1PreServiceContractLine.itemGroupName.isRemoved {
            B1PreServiceContractLine.itemGroupName = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "ItemGroupName")
        }
        if !B1PreServiceContractLine.terminationDate.isRemoved {
            B1PreServiceContractLine.terminationDate = B1ClassMetadata.ComplexTypes.serviceContractLine.property(withName: "TerminationDate")
        }
        if !B1PreServiceGroupParams.absEntry.isRemoved {
            B1PreServiceGroupParams.absEntry = B1ClassMetadata.ComplexTypes.serviceGroupParams.property(withName: "AbsEntry")
        }
        if !B1PreServiceGroupParams.serviceGroupCode.isRemoved {
            B1PreServiceGroupParams.serviceGroupCode = B1ClassMetadata.ComplexTypes.serviceGroupParams.property(withName: "ServiceGroupCode")
        }
        if !B1PreServiceTaxPostingParams.docEntry.isRemoved {
            B1PreServiceTaxPostingParams.docEntry = B1ClassMetadata.ComplexTypes.serviceTaxPostingParams.property(withName: "DocEntry")
        }
        if !B1PreShippingTypeParams.code.isRemoved {
            B1PreShippingTypeParams.code = B1ClassMetadata.ComplexTypes.shippingTypeParams.property(withName: "Code")
        }
        if !B1PreShowDifferenceParams.primaryKey.isRemoved {
            B1PreShowDifferenceParams.primaryKey = B1ClassMetadata.ComplexTypes.showDifferenceParams.property(withName: "PrimaryKey")
        }
        if !B1PreShowDifferenceParams.udoObjectCode.isRemoved {
            B1PreShowDifferenceParams.udoObjectCode = B1ClassMetadata.ComplexTypes.showDifferenceParams.property(withName: "UDOObjectCode")
        }
        if !B1PreShowDifferenceParams.object.isRemoved {
            B1PreShowDifferenceParams.object = B1ClassMetadata.ComplexTypes.showDifferenceParams.property(withName: "Object")
        }
        if !B1PreShowDifferenceParams.logInstance2.isRemoved {
            B1PreShowDifferenceParams.logInstance2 = B1ClassMetadata.ComplexTypes.showDifferenceParams.property(withName: "LogInstance2")
        }
        if !B1PreShowDifferenceParams.logInstance.isRemoved {
            B1PreShowDifferenceParams.logInstance = B1ClassMetadata.ComplexTypes.showDifferenceParams.property(withName: "LogInstance")
        }
        if !B1PreSpecialPriceDataArea.priceCurrency.isRemoved {
            B1PreSpecialPriceDataArea.priceCurrency = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "PriceCurrency")
        }
        if !B1PreSpecialPriceDataArea.autoUpdate.isRemoved {
            B1PreSpecialPriceDataArea.autoUpdate = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "AutoUpdate")
        }
        if !B1PreSpecialPriceDataArea.dateto.isRemoved {
            B1PreSpecialPriceDataArea.dateto = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "Dateto")
        }
        if !B1PreSpecialPriceDataArea.discount.isRemoved {
            B1PreSpecialPriceDataArea.discount = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "Discount")
        }
        if !B1PreSpecialPriceDataArea.specialPrice.isRemoved {
            B1PreSpecialPriceDataArea.specialPrice = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "SpecialPrice")
        }
        if !B1PreSpecialPriceDataArea.dateFrom.isRemoved {
            B1PreSpecialPriceDataArea.dateFrom = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "DateFrom")
        }
        if !B1PreSpecialPriceDataArea.bpCode.isRemoved {
            B1PreSpecialPriceDataArea.bpCode = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "BPCode")
        }
        if !B1PreSpecialPriceDataArea.priceListNo.isRemoved {
            B1PreSpecialPriceDataArea.priceListNo = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "PriceListNo")
        }
        if !B1PreSpecialPriceDataArea.itemNo.isRemoved {
            B1PreSpecialPriceDataArea.itemNo = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "ItemNo")
        }
        if !B1PreSpecialPriceDataArea.rowNumber.isRemoved {
            B1PreSpecialPriceDataArea.rowNumber = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "RowNumber")
        }
        if !B1PreSpecialPriceDataArea.specialPriceQuantityAreas.isRemoved {
            B1PreSpecialPriceDataArea.specialPriceQuantityAreas = B1ClassMetadata.ComplexTypes.specialPriceDataArea.property(withName: "SpecialPriceQuantityAreas")
        }
        if !B1PreSpecialPriceParams.itemCode.isRemoved {
            B1PreSpecialPriceParams.itemCode = B1ClassMetadata.ComplexTypes.specialPriceParams.property(withName: "ItemCode")
        }
        if !B1PreSpecialPriceParams.cardCode.isRemoved {
            B1PreSpecialPriceParams.cardCode = B1ClassMetadata.ComplexTypes.specialPriceParams.property(withName: "CardCode")
        }
        if !B1PreSpecialPriceParams.priceListNum.isRemoved {
            B1PreSpecialPriceParams.priceListNum = B1ClassMetadata.ComplexTypes.specialPriceParams.property(withName: "PriceListNum")
        }
        if !B1PreSpecialPriceQuantityArea.quantity.isRemoved {
            B1PreSpecialPriceQuantityArea.quantity = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "Quantity")
        }
        if !B1PreSpecialPriceQuantityArea.spdaRowNumber.isRemoved {
            B1PreSpecialPriceQuantityArea.spdaRowNumber = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "SPDARowNumber")
        }
        if !B1PreSpecialPriceQuantityArea.specialPrice.isRemoved {
            B1PreSpecialPriceQuantityArea.specialPrice = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "SpecialPrice")
        }
        if !B1PreSpecialPriceQuantityArea.itemNo.isRemoved {
            B1PreSpecialPriceQuantityArea.itemNo = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "ItemNo")
        }
        if !B1PreSpecialPriceQuantityArea.bpCode.isRemoved {
            B1PreSpecialPriceQuantityArea.bpCode = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "BPCode")
        }
        if !B1PreSpecialPriceQuantityArea.rowNumber.isRemoved {
            B1PreSpecialPriceQuantityArea.rowNumber = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "RowNumber")
        }
        if !B1PreSpecialPriceQuantityArea.priceCurrency.isRemoved {
            B1PreSpecialPriceQuantityArea.priceCurrency = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "PriceCurrency")
        }
        if !B1PreSpecialPriceQuantityArea.discountin.isRemoved {
            B1PreSpecialPriceQuantityArea.discountin = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "Discountin")
        }
        if !B1PreSpecialPriceQuantityArea.uoMEntry.isRemoved {
            B1PreSpecialPriceQuantityArea.uoMEntry = B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.property(withName: "UoMEntry")
        }
        if !B1PreStateParams.code.isRemoved {
            B1PreStateParams.code = B1ClassMetadata.ComplexTypes.stateParams.property(withName: "Code")
        }
        if !B1PreStateParams.country.isRemoved {
            B1PreStateParams.country = B1ClassMetadata.ComplexTypes.stateParams.property(withName: "Country")
        }
        if !B1PreStateParams.name.isRemoved {
            B1PreStateParams.name = B1ClassMetadata.ComplexTypes.stateParams.property(withName: "Name")
        }
        if !B1PreStockTakingParams.itemCode.isRemoved {
            B1PreStockTakingParams.itemCode = B1ClassMetadata.ComplexTypes.stockTakingParams.property(withName: "ItemCode")
        }
        if !B1PreStockTakingParams.warehouseCode.isRemoved {
            B1PreStockTakingParams.warehouseCode = B1ClassMetadata.ComplexTypes.stockTakingParams.property(withName: "WarehouseCode")
        }
        if !B1PreStockTransferLine.lineNum.isRemoved {
            B1PreStockTransferLine.lineNum = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "LineNum")
        }
        if !B1PreStockTransferLine.docEntry.isRemoved {
            B1PreStockTransferLine.docEntry = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "DocEntry")
        }
        if !B1PreStockTransferLine.itemCode.isRemoved {
            B1PreStockTransferLine.itemCode = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "ItemCode")
        }
        if !B1PreStockTransferLine.itemDescription.isRemoved {
            B1PreStockTransferLine.itemDescription = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "ItemDescription")
        }
        if !B1PreStockTransferLine.quantity.isRemoved {
            B1PreStockTransferLine.quantity = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "Quantity")
        }
        if !B1PreStockTransferLine.price.isRemoved {
            B1PreStockTransferLine.price = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "Price")
        }
        if !B1PreStockTransferLine.currency.isRemoved {
            B1PreStockTransferLine.currency = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "Currency")
        }
        if !B1PreStockTransferLine.rate.isRemoved {
            B1PreStockTransferLine.rate = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "Rate")
        }
        if !B1PreStockTransferLine.discountPercent.isRemoved {
            B1PreStockTransferLine.discountPercent = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "DiscountPercent")
        }
        if !B1PreStockTransferLine.vendorNum.isRemoved {
            B1PreStockTransferLine.vendorNum = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "VendorNum")
        }
        if !B1PreStockTransferLine.serialNumber.isRemoved {
            B1PreStockTransferLine.serialNumber = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "SerialNumber")
        }
        if !B1PreStockTransferLine.warehouseCode.isRemoved {
            B1PreStockTransferLine.warehouseCode = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "WarehouseCode")
        }
        if !B1PreStockTransferLine.fromWarehouseCode.isRemoved {
            B1PreStockTransferLine.fromWarehouseCode = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "FromWarehouseCode")
        }
        if !B1PreStockTransferLine.projectCode.isRemoved {
            B1PreStockTransferLine.projectCode = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "ProjectCode")
        }
        if !B1PreStockTransferLine.factor.isRemoved {
            B1PreStockTransferLine.factor = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "Factor")
        }
        if !B1PreStockTransferLine.factor2.isRemoved {
            B1PreStockTransferLine.factor2 = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "Factor2")
        }
        if !B1PreStockTransferLine.factor3.isRemoved {
            B1PreStockTransferLine.factor3 = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "Factor3")
        }
        if !B1PreStockTransferLine.factor4.isRemoved {
            B1PreStockTransferLine.factor4 = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "Factor4")
        }
        if !B1PreStockTransferLine.distributionRule.isRemoved {
            B1PreStockTransferLine.distributionRule = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "DistributionRule")
        }
        if !B1PreStockTransferLine.distributionRule2.isRemoved {
            B1PreStockTransferLine.distributionRule2 = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "DistributionRule2")
        }
        if !B1PreStockTransferLine.distributionRule3.isRemoved {
            B1PreStockTransferLine.distributionRule3 = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "DistributionRule3")
        }
        if !B1PreStockTransferLine.distributionRule4.isRemoved {
            B1PreStockTransferLine.distributionRule4 = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "DistributionRule4")
        }
        if !B1PreStockTransferLine.distributionRule5.isRemoved {
            B1PreStockTransferLine.distributionRule5 = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "DistributionRule5")
        }
        if !B1PreStockTransferLine.useBaseUnits.isRemoved {
            B1PreStockTransferLine.useBaseUnits = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "UseBaseUnits")
        }
        if !B1PreStockTransferLine.measureUnit.isRemoved {
            B1PreStockTransferLine.measureUnit = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "MeasureUnit")
        }
        if !B1PreStockTransferLine.unitsOfMeasurment.isRemoved {
            B1PreStockTransferLine.unitsOfMeasurment = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "UnitsOfMeasurment")
        }
        if !B1PreStockTransferLine.baseType.isRemoved {
            B1PreStockTransferLine.baseType = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "BaseType")
        }
        if !B1PreStockTransferLine.baseLine.isRemoved {
            B1PreStockTransferLine.baseLine = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "BaseLine")
        }
        if !B1PreStockTransferLine.baseEntry.isRemoved {
            B1PreStockTransferLine.baseEntry = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "BaseEntry")
        }
        if !B1PreStockTransferLine.unitPrice.isRemoved {
            B1PreStockTransferLine.unitPrice = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "UnitPrice")
        }
        if !B1PreStockTransferLine.uoMEntry.isRemoved {
            B1PreStockTransferLine.uoMEntry = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "UoMEntry")
        }
        if !B1PreStockTransferLine.uoMCode.isRemoved {
            B1PreStockTransferLine.uoMCode = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "UoMCode")
        }
        if !B1PreStockTransferLine.inventoryQuantity.isRemoved {
            B1PreStockTransferLine.inventoryQuantity = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "InventoryQuantity")
        }
        if !B1PreStockTransferLine.remainingOpenQuantity.isRemoved {
            B1PreStockTransferLine.remainingOpenQuantity = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "RemainingOpenQuantity")
        }
        if !B1PreStockTransferLine.remainingOpenInventoryQuantity.isRemoved {
            B1PreStockTransferLine.remainingOpenInventoryQuantity = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "RemainingOpenInventoryQuantity")
        }
        if !B1PreStockTransferLine.lineStatus.isRemoved {
            B1PreStockTransferLine.lineStatus = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "LineStatus")
        }
        if !B1PreStockTransferLine.serialNumbers.isRemoved {
            B1PreStockTransferLine.serialNumbers = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "SerialNumbers")
        }
        if !B1PreStockTransferLine.batchNumbers.isRemoved {
            B1PreStockTransferLine.batchNumbers = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "BatchNumbers")
        }
        if !B1PreStockTransferLine.stockTransferLinesBinAllocations.isRemoved {
            B1PreStockTransferLine.stockTransferLinesBinAllocations = B1ClassMetadata.ComplexTypes.stockTransferLine.property(withName: "StockTransferLinesBinAllocations")
        }
        if !B1PreStockTransferLinesBinAllocation.binAbsEntry.isRemoved {
            B1PreStockTransferLinesBinAllocation.binAbsEntry = B1ClassMetadata.ComplexTypes.stockTransferLinesBinAllocation.property(withName: "BinAbsEntry")
        }
        if !B1PreStockTransferLinesBinAllocation.quantity.isRemoved {
            B1PreStockTransferLinesBinAllocation.quantity = B1ClassMetadata.ComplexTypes.stockTransferLinesBinAllocation.property(withName: "Quantity")
        }
        if !B1PreStockTransferLinesBinAllocation.allowNegativeQuantity.isRemoved {
            B1PreStockTransferLinesBinAllocation.allowNegativeQuantity = B1ClassMetadata.ComplexTypes.stockTransferLinesBinAllocation.property(withName: "AllowNegativeQuantity")
        }
        if !B1PreStockTransferLinesBinAllocation.serialAndBatchNumbersBaseLine.isRemoved {
            B1PreStockTransferLinesBinAllocation.serialAndBatchNumbersBaseLine = B1ClassMetadata.ComplexTypes.stockTransferLinesBinAllocation.property(withName: "SerialAndBatchNumbersBaseLine")
        }
        if !B1PreStockTransferLinesBinAllocation.binActionType.isRemoved {
            B1PreStockTransferLinesBinAllocation.binActionType = B1ClassMetadata.ComplexTypes.stockTransferLinesBinAllocation.property(withName: "BinActionType")
        }
        if !B1PreStockTransferLinesBinAllocation.baseLineNumber.isRemoved {
            B1PreStockTransferLinesBinAllocation.baseLineNumber = B1ClassMetadata.ComplexTypes.stockTransferLinesBinAllocation.property(withName: "BaseLineNumber")
        }
        if !B1PreStockTransferParams.docEntry.isRemoved {
            B1PreStockTransferParams.docEntry = B1ClassMetadata.ComplexTypes.stockTransferParams.property(withName: "DocEntry")
        }
        if !B1PreStockTransferTaxExtension.supportVAT.isRemoved {
            B1PreStockTransferTaxExtension.supportVAT = B1ClassMetadata.ComplexTypes.stockTransferTaxExtension.property(withName: "SupportVAT")
        }
        if !B1PreStockTransferTaxExtension.formNumber.isRemoved {
            B1PreStockTransferTaxExtension.formNumber = B1ClassMetadata.ComplexTypes.stockTransferTaxExtension.property(withName: "FormNumber")
        }
        if !B1PreStockTransferTaxExtension.transactionCategory.isRemoved {
            B1PreStockTransferTaxExtension.transactionCategory = B1ClassMetadata.ComplexTypes.stockTransferTaxExtension.property(withName: "TransactionCategory")
        }
        if !B1PreStockTransferApprovalRequest.approvalTemplatesID.isRemoved {
            B1PreStockTransferApprovalRequest.approvalTemplatesID = B1ClassMetadata.ComplexTypes.stockTransferApprovalRequest.property(withName: "ApprovalTemplatesID")
        }
        if !B1PreStockTransferApprovalRequest.remarks.isRemoved {
            B1PreStockTransferApprovalRequest.remarks = B1ClassMetadata.ComplexTypes.stockTransferApprovalRequest.property(withName: "Remarks")
        }
        if !B1PreTableInfo.name.isRemoved {
            B1PreTableInfo.name = B1ClassMetadata.ComplexTypes.tableInfo.property(withName: "Name")
        }
        if !B1PreTargetGroupParams.targetGroupCode.isRemoved {
            B1PreTargetGroupParams.targetGroupCode = B1ClassMetadata.ComplexTypes.targetGroupParams.property(withName: "TargetGroupCode")
        }
        if !B1PreTargetGroupParams.targetGroupName.isRemoved {
            B1PreTargetGroupParams.targetGroupName = B1ClassMetadata.ComplexTypes.targetGroupParams.property(withName: "TargetGroupName")
        }
        if !B1PreTargetGroupsDetail.targetGroupCode.isRemoved {
            B1PreTargetGroupsDetail.targetGroupCode = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "TargetGroupCode")
        }
        if !B1PreTargetGroupsDetail.businessPartnerCode.isRemoved {
            B1PreTargetGroupsDetail.businessPartnerCode = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "BusinessPartnerCode")
        }
        if !B1PreTargetGroupsDetail.businessPartnerName.isRemoved {
            B1PreTargetGroupsDetail.businessPartnerName = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "BusinessPartnerName")
        }
        if !B1PreTargetGroupsDetail.groupCode.isRemoved {
            B1PreTargetGroupsDetail.groupCode = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "GroupCode")
        }
        if !B1PreTargetGroupsDetail.industry.isRemoved {
            B1PreTargetGroupsDetail.industry = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Industry")
        }
        if !B1PreTargetGroupsDetail.activeStatus.isRemoved {
            B1PreTargetGroupsDetail.activeStatus = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "ActiveStatus")
        }
        if !B1PreTargetGroupsDetail.contactPerson.isRemoved {
            B1PreTargetGroupsDetail.contactPerson = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "ContactPerson")
        }
        if !B1PreTargetGroupsDetail.title.isRemoved {
            B1PreTargetGroupsDetail.title = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Title")
        }
        if !B1PreTargetGroupsDetail.position.isRemoved {
            B1PreTargetGroupsDetail.position = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Position")
        }
        if !B1PreTargetGroupsDetail.eMail.isRemoved {
            B1PreTargetGroupsDetail.eMail = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "E_Mail")
        }
        if !B1PreTargetGroupsDetail.telephone.isRemoved {
            B1PreTargetGroupsDetail.telephone = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Telephone")
        }
        if !B1PreTargetGroupsDetail.mobilePhone.isRemoved {
            B1PreTargetGroupsDetail.mobilePhone = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "MobilePhone")
        }
        if !B1PreTargetGroupsDetail.fax.isRemoved {
            B1PreTargetGroupsDetail.fax = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Fax")
        }
        if !B1PreTargetGroupsDetail.address.isRemoved {
            B1PreTargetGroupsDetail.address = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Address")
        }
        if !B1PreTargetGroupsDetail.street.isRemoved {
            B1PreTargetGroupsDetail.street = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Street")
        }
        if !B1PreTargetGroupsDetail.block.isRemoved {
            B1PreTargetGroupsDetail.block = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Block")
        }
        if !B1PreTargetGroupsDetail.city.isRemoved {
            B1PreTargetGroupsDetail.city = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "City")
        }
        if !B1PreTargetGroupsDetail.zipCode.isRemoved {
            B1PreTargetGroupsDetail.zipCode = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "ZipCode")
        }
        if !B1PreTargetGroupsDetail.county.isRemoved {
            B1PreTargetGroupsDetail.county = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "County")
        }
        if !B1PreTargetGroupsDetail.state.isRemoved {
            B1PreTargetGroupsDetail.state = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "State")
        }
        if !B1PreTargetGroupsDetail.country.isRemoved {
            B1PreTargetGroupsDetail.country = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Country")
        }
        if !B1PreTargetGroupsDetail.building.isRemoved {
            B1PreTargetGroupsDetail.building = B1ClassMetadata.ComplexTypes.targetGroupsDetail.property(withName: "Building")
        }
        if !B1PreTaxCodeDeterminationParams.docEntry.isRemoved {
            B1PreTaxCodeDeterminationParams.docEntry = B1ClassMetadata.ComplexTypes.taxCodeDeterminationParams.property(withName: "DocEntry")
        }
        if !B1PreTaxCodeDeterminationTCDByUsage.absID.isRemoved {
            B1PreTaxCodeDeterminationTCDByUsage.absID = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDByUsage.property(withName: "AbsId")
        }
        if !B1PreTaxCodeDeterminationTCDByUsage.usageCode.isRemoved {
            B1PreTaxCodeDeterminationTCDByUsage.usageCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDByUsage.property(withName: "UsageCode")
        }
        if !B1PreTaxCodeDeterminationTCDByUsage.taxCode.isRemoved {
            B1PreTaxCodeDeterminationTCDByUsage.taxCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDByUsage.property(withName: "TaxCode")
        }
        if !B1PreTaxCodeDeterminationTCDByUsage.expTaxCode.isRemoved {
            B1PreTaxCodeDeterminationTCDByUsage.expTaxCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDByUsage.property(withName: "ExpTaxCode")
        }
        if !B1PreTaxCodeDeterminationTCDByUsage.type_.isRemoved {
            B1PreTaxCodeDeterminationTCDByUsage.type_ = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDByUsage.property(withName: "Type")
        }
        if !B1PreTaxCodeDeterminationTCDDefaultWT.absID.isRemoved {
            B1PreTaxCodeDeterminationTCDDefaultWT.absID = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDDefaultWT.property(withName: "AbsId")
        }
        if !B1PreTaxCodeDeterminationTCDDefaultWT.wtCode.isRemoved {
            B1PreTaxCodeDeterminationTCDDefaultWT.wtCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDDefaultWT.property(withName: "WTCode")
        }
        if !B1PreTaxCodeDeterminationTCDDefaultWT.type_.isRemoved {
            B1PreTaxCodeDeterminationTCDDefaultWT.type_ = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDDefaultWT.property(withName: "Type")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.absID.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.absID = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "AbsId")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.descr.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.descr = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "Descr")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.priority.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.priority = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "Priority")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.keyFld1.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.keyFld1 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "KeyFld_1")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.udfTable1.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.udfTable1 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "UDFTable_1")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.udfAlias1.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.udfAlias1 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "UDFAlias_1")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.keyFld2.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.keyFld2 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "KeyFld_2")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.udfTable2.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.udfTable2 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "UDFTable_2")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.udfAlias2.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.udfAlias2 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "UDFAlias_2")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.keyFld3.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.keyFld3 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "KeyFld_3")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.udfTable3.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.udfTable3 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "UDFTable_3")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.udfAlias3.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.udfAlias3 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "UDFAlias_3")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.keyFld4.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.keyFld4 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "KeyFld_4")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.udfTable4.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.udfTable4 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "UDFTable_4")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.udfAlias4.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.udfAlias4 = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "UDFAlias_4")
        }
        if !B1PreTaxCodeDeterminationTCDKeyField.taxCodeDeterminationTCDKeyFieldValues.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyField.taxCodeDeterminationTCDKeyFieldValues = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.property(withName: "TaxCodeDeterminationTCDKeyFieldValues")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValue.absID.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValue.absID = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.property(withName: "AbsId")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValue.dispOrder.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValue.dispOrder = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.property(withName: "DispOrder")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValue.keyFld1V.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValue.keyFld1V = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.property(withName: "KeyFld_1_V")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValue.keyFld2V.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValue.keyFld2V = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.property(withName: "KeyFld_2_V")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValue.keyFld3V.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValue.keyFld3V = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.property(withName: "KeyFld_3_V")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValue.keyFld4V.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValue.keyFld4V = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.property(withName: "KeyFld_4_V")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValue.taxCodeDeterminationTCDKeyFieldValuePeriods.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValue.taxCodeDeterminationTCDKeyFieldValuePeriods = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.property(withName: "TaxCodeDeterminationTCDKeyFieldValuePeriods")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValue.taxCodeDeterminationTCDKeyFieldValueDefaultWTs.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValue.taxCodeDeterminationTCDKeyFieldValueDefaultWTs = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.property(withName: "TaxCodeDeterminationTCDKeyFieldValueDefaultWTs")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValueDefaultWT.absID.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValueDefaultWT.absID = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValueDefaultWT.property(withName: "AbsId")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValueDefaultWT.wtCode.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValueDefaultWT.wtCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValueDefaultWT.property(withName: "WTCode")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.absID.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.absID = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriod.property(withName: "AbsId")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.efctFrom.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.efctFrom = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriod.property(withName: "EfctFrom")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.efctTo.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.efctTo = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriod.property(withName: "EfctTo")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.taxCode.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.taxCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriod.property(withName: "TaxCode")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.taxCodeDeterminationTCDKeyFieldValuePeriodByUsages.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriod.taxCodeDeterminationTCDKeyFieldValuePeriodByUsages = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriod.property(withName: "TaxCodeDeterminationTCDKeyFieldValuePeriodByUsages")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriodByUsage.absID.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriodByUsage.absID = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriodByUsage.property(withName: "AbsId")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriodByUsage.usageCode.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriodByUsage.usageCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriodByUsage.property(withName: "UsageCode")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriodByUsage.taxCode.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriodByUsage.taxCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriodByUsage.property(withName: "TaxCode")
        }
        if !B1PreTaxCodeDeterminationTCDKeyFieldValuePeriodByUsage.expTaxCode.isRemoved {
            B1PreTaxCodeDeterminationTCDKeyFieldValuePeriodByUsage.expTaxCode = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriodByUsage.property(withName: "ExpTaxCode")
        }
        if !B1PreTaxCodeDeterminationTCDParams.absID.isRemoved {
            B1PreTaxCodeDeterminationTCDParams.absID = B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDParams.property(withName: "AbsId")
        }
        if !B1PreTaxDefinition.effectivefrom.isRemoved {
            B1PreTaxDefinition.effectivefrom = B1ClassMetadata.ComplexTypes.taxDefinition.property(withName: "Effectivefrom")
        }
        if !B1PreTaxDefinition.rate.isRemoved {
            B1PreTaxDefinition.rate = B1ClassMetadata.ComplexTypes.taxDefinition.property(withName: "Rate")
        }
        if !B1PreTaxExtension.taxId0.isRemoved {
            B1PreTaxExtension.taxId0 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId0")
        }
        if !B1PreTaxExtension.taxId1.isRemoved {
            B1PreTaxExtension.taxId1 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId1")
        }
        if !B1PreTaxExtension.taxId2.isRemoved {
            B1PreTaxExtension.taxId2 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId2")
        }
        if !B1PreTaxExtension.taxId3.isRemoved {
            B1PreTaxExtension.taxId3 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId3")
        }
        if !B1PreTaxExtension.taxId4.isRemoved {
            B1PreTaxExtension.taxId4 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId4")
        }
        if !B1PreTaxExtension.taxId5.isRemoved {
            B1PreTaxExtension.taxId5 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId5")
        }
        if !B1PreTaxExtension.taxId6.isRemoved {
            B1PreTaxExtension.taxId6 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId6")
        }
        if !B1PreTaxExtension.taxId7.isRemoved {
            B1PreTaxExtension.taxId7 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId7")
        }
        if !B1PreTaxExtension.taxId8.isRemoved {
            B1PreTaxExtension.taxId8 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId8")
        }
        if !B1PreTaxExtension.taxId9.isRemoved {
            B1PreTaxExtension.taxId9 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId9")
        }
        if !B1PreTaxExtension.state.isRemoved {
            B1PreTaxExtension.state = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "State")
        }
        if !B1PreTaxExtension.county.isRemoved {
            B1PreTaxExtension.county = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "County")
        }
        if !B1PreTaxExtension.incoterms.isRemoved {
            B1PreTaxExtension.incoterms = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "Incoterms")
        }
        if !B1PreTaxExtension.vehicle.isRemoved {
            B1PreTaxExtension.vehicle = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "Vehicle")
        }
        if !B1PreTaxExtension.vehicleState.isRemoved {
            B1PreTaxExtension.vehicleState = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "VehicleState")
        }
        if !B1PreTaxExtension.nfRef.isRemoved {
            B1PreTaxExtension.nfRef = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "NFRef")
        }
        if !B1PreTaxExtension.carrier.isRemoved {
            B1PreTaxExtension.carrier = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "Carrier")
        }
        if !B1PreTaxExtension.packQuantity.isRemoved {
            B1PreTaxExtension.packQuantity = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "PackQuantity")
        }
        if !B1PreTaxExtension.packDescription.isRemoved {
            B1PreTaxExtension.packDescription = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "PackDescription")
        }
        if !B1PreTaxExtension.brand.isRemoved {
            B1PreTaxExtension.brand = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "Brand")
        }
        if !B1PreTaxExtension.shipUnitNo.isRemoved {
            B1PreTaxExtension.shipUnitNo = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "ShipUnitNo")
        }
        if !B1PreTaxExtension.netWeight.isRemoved {
            B1PreTaxExtension.netWeight = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "NetWeight")
        }
        if !B1PreTaxExtension.grossWeight.isRemoved {
            B1PreTaxExtension.grossWeight = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "GrossWeight")
        }
        if !B1PreTaxExtension.streetS.isRemoved {
            B1PreTaxExtension.streetS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "StreetS")
        }
        if !B1PreTaxExtension.blockS.isRemoved {
            B1PreTaxExtension.blockS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "BlockS")
        }
        if !B1PreTaxExtension.buildingS.isRemoved {
            B1PreTaxExtension.buildingS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "BuildingS")
        }
        if !B1PreTaxExtension.cityS.isRemoved {
            B1PreTaxExtension.cityS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "CityS")
        }
        if !B1PreTaxExtension.zipCodeS.isRemoved {
            B1PreTaxExtension.zipCodeS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "ZipCodeS")
        }
        if !B1PreTaxExtension.countyS.isRemoved {
            B1PreTaxExtension.countyS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "CountyS")
        }
        if !B1PreTaxExtension.stateS.isRemoved {
            B1PreTaxExtension.stateS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "StateS")
        }
        if !B1PreTaxExtension.countryS.isRemoved {
            B1PreTaxExtension.countryS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "CountryS")
        }
        if !B1PreTaxExtension.streetB.isRemoved {
            B1PreTaxExtension.streetB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "StreetB")
        }
        if !B1PreTaxExtension.blockB.isRemoved {
            B1PreTaxExtension.blockB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "BlockB")
        }
        if !B1PreTaxExtension.buildingB.isRemoved {
            B1PreTaxExtension.buildingB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "BuildingB")
        }
        if !B1PreTaxExtension.cityB.isRemoved {
            B1PreTaxExtension.cityB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "CityB")
        }
        if !B1PreTaxExtension.zipCodeB.isRemoved {
            B1PreTaxExtension.zipCodeB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "ZipCodeB")
        }
        if !B1PreTaxExtension.countyB.isRemoved {
            B1PreTaxExtension.countyB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "CountyB")
        }
        if !B1PreTaxExtension.stateB.isRemoved {
            B1PreTaxExtension.stateB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "StateB")
        }
        if !B1PreTaxExtension.countryB.isRemoved {
            B1PreTaxExtension.countryB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "CountryB")
        }
        if !B1PreTaxExtension.importOrExport.isRemoved {
            B1PreTaxExtension.importOrExport = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "ImportOrExport")
        }
        if !B1PreTaxExtension.mainUsage.isRemoved {
            B1PreTaxExtension.mainUsage = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "MainUsage")
        }
        if !B1PreTaxExtension.globalLocationNumberS.isRemoved {
            B1PreTaxExtension.globalLocationNumberS = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "GlobalLocationNumberS")
        }
        if !B1PreTaxExtension.globalLocationNumberB.isRemoved {
            B1PreTaxExtension.globalLocationNumberB = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "GlobalLocationNumberB")
        }
        if !B1PreTaxExtension.taxId12.isRemoved {
            B1PreTaxExtension.taxId12 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId12")
        }
        if !B1PreTaxExtension.taxId13.isRemoved {
            B1PreTaxExtension.taxId13 = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "TaxId13")
        }
        if !B1PreTaxExtension.billOfEntryNo.isRemoved {
            B1PreTaxExtension.billOfEntryNo = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "BillOfEntryNo")
        }
        if !B1PreTaxExtension.billOfEntryDate.isRemoved {
            B1PreTaxExtension.billOfEntryDate = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "BillOfEntryDate")
        }
        if !B1PreTaxExtension.originalBillOfEntryNo.isRemoved {
            B1PreTaxExtension.originalBillOfEntryNo = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "OriginalBillOfEntryNo")
        }
        if !B1PreTaxExtension.originalBillOfEntryDate.isRemoved {
            B1PreTaxExtension.originalBillOfEntryDate = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "OriginalBillOfEntryDate")
        }
        if !B1PreTaxExtension.importOrExportType.isRemoved {
            B1PreTaxExtension.importOrExportType = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "ImportOrExportType")
        }
        if !B1PreTaxExtension.portCode.isRemoved {
            B1PreTaxExtension.portCode = B1ClassMetadata.ComplexTypes.taxExtension.property(withName: "PortCode")
        }
        if !B1PreTaxInvoiceParams.docEntry.isRemoved {
            B1PreTaxInvoiceParams.docEntry = B1ClassMetadata.ComplexTypes.taxInvoiceParams.property(withName: "DocEntry")
        }
        if !B1PreTaxInvoiceReportLine.documentType.isRemoved {
            B1PreTaxInvoiceReportLine.documentType = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "DocumentType")
        }
        if !B1PreTaxInvoiceReportLine.documentEntry.isRemoved {
            B1PreTaxInvoiceReportLine.documentEntry = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "DocumentEntry")
        }
        if !B1PreTaxInvoiceReportLine.lineType.isRemoved {
            B1PreTaxInvoiceReportLine.lineType = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "LineType")
        }
        if !B1PreTaxInvoiceReportLine.baseAmount.isRemoved {
            B1PreTaxInvoiceReportLine.baseAmount = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "BaseAmount")
        }
        if !B1PreTaxInvoiceReportLine.taxAmount.isRemoved {
            B1PreTaxInvoiceReportLine.taxAmount = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "TaxAmount")
        }
        if !B1PreTaxInvoiceReportLine.itemQuantity.isRemoved {
            B1PreTaxInvoiceReportLine.itemQuantity = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "ItemQuantity")
        }
        if !B1PreTaxInvoiceReportLine.itemNo.isRemoved {
            B1PreTaxInvoiceReportLine.itemNo = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "ItemNo")
        }
        if !B1PreTaxInvoiceReportLine.itemDescription.isRemoved {
            B1PreTaxInvoiceReportLine.itemDescription = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "ItemDescription")
        }
        if !B1PreTaxInvoiceReportLine.taxCode.isRemoved {
            B1PreTaxInvoiceReportLine.taxCode = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "TaxCode")
        }
        if !B1PreTaxInvoiceReportLine.documentDate.isRemoved {
            B1PreTaxInvoiceReportLine.documentDate = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "DocumentDate")
        }
        if !B1PreTaxInvoiceReportLine.itemPrice.isRemoved {
            B1PreTaxInvoiceReportLine.itemPrice = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "ItemPrice")
        }
        if !B1PreTaxInvoiceReportLine.lineNumber.isRemoved {
            B1PreTaxInvoiceReportLine.lineNumber = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "LineNumber")
        }
        if !B1PreTaxInvoiceReportLine.currency.isRemoved {
            B1PreTaxInvoiceReportLine.currency = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "Currency")
        }
        if !B1PreTaxInvoiceReportLine.businessPlace.isRemoved {
            B1PreTaxInvoiceReportLine.businessPlace = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "BusinessPlace")
        }
        if !B1PreTaxInvoiceReportLine.taxInvoiceReportNumber.isRemoved {
            B1PreTaxInvoiceReportLine.taxInvoiceReportNumber = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "TaxInvoiceReportNumber")
        }
        if !B1PreTaxInvoiceReportLine.bpCode.isRemoved {
            B1PreTaxInvoiceReportLine.bpCode = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "BPCode")
        }
        if !B1PreTaxInvoiceReportLine.bpName.isRemoved {
            B1PreTaxInvoiceReportLine.bpName = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "BPName")
        }
        if !B1PreTaxInvoiceReportLine.legacy.isRemoved {
            B1PreTaxInvoiceReportLine.legacy = B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.property(withName: "Legacy")
        }
        if !B1PreTaxInvoiceReportParams.taxInvoiceReportNumber.isRemoved {
            B1PreTaxInvoiceReportParams.taxInvoiceReportNumber = B1ClassMetadata.ComplexTypes.taxInvoiceReportParams.property(withName: "TaxInvoiceReportNumber")
        }
        if !B1PreTaxReportAccount.code.isRemoved {
            B1PreTaxReportAccount.code = B1ClassMetadata.ComplexTypes.taxReportAccount.property(withName: "Code")
        }
        if !B1PreTaxReportBusinessPartner.code.isRemoved {
            B1PreTaxReportBusinessPartner.code = B1ClassMetadata.ComplexTypes.taxReportBusinessPartner.property(withName: "Code")
        }
        if !B1PreTaxReportDocument.documentType.isRemoved {
            B1PreTaxReportDocument.documentType = B1ClassMetadata.ComplexTypes.taxReportDocument.property(withName: "DocumentType")
        }
        if !B1PreTaxReportDocument.fromNumber.isRemoved {
            B1PreTaxReportDocument.fromNumber = B1ClassMetadata.ComplexTypes.taxReportDocument.property(withName: "FromNumber")
        }
        if !B1PreTaxReportDocument.toNumber.isRemoved {
            B1PreTaxReportDocument.toNumber = B1ClassMetadata.ComplexTypes.taxReportDocument.property(withName: "ToNumber")
        }
        if !B1PreTaxReportFilterParams.code.isRemoved {
            B1PreTaxReportFilterParams.code = B1ClassMetadata.ComplexTypes.taxReportFilterParams.property(withName: "Code")
        }
        if !B1PreTaxReportFilterParams.name.isRemoved {
            B1PreTaxReportFilterParams.name = B1ClassMetadata.ComplexTypes.taxReportFilterParams.property(withName: "Name")
        }
        if !B1PreTaxReportFilterParams.filterType.isRemoved {
            B1PreTaxReportFilterParams.filterType = B1ClassMetadata.ComplexTypes.taxReportFilterParams.property(withName: "FilterType")
        }
        if !B1PreTaxReportGroup.code.isRemoved {
            B1PreTaxReportGroup.code = B1ClassMetadata.ComplexTypes.taxReportGroup.property(withName: "Code")
        }
        if !B1PreTaxReportGroup.sum.isRemoved {
            B1PreTaxReportGroup.sum = B1ClassMetadata.ComplexTypes.taxReportGroup.property(withName: "Sum")
        }
        if !B1PreTaxReportSeries.documentType.isRemoved {
            B1PreTaxReportSeries.documentType = B1ClassMetadata.ComplexTypes.taxReportSeries.property(withName: "DocumentType")
        }
        if !B1PreTaxReportSeries.seriesCode.isRemoved {
            B1PreTaxReportSeries.seriesCode = B1ClassMetadata.ComplexTypes.taxReportSeries.property(withName: "SeriesCode")
        }
        if !B1PreTaxWebSiteParams.absEntry.isRemoved {
            B1PreTaxWebSiteParams.absEntry = B1ClassMetadata.ComplexTypes.taxWebSiteParams.property(withName: "AbsEntry")
        }
        if !B1PreTaxWebSiteParams.webSiteName.isRemoved {
            B1PreTaxWebSiteParams.webSiteName = B1ClassMetadata.ComplexTypes.taxWebSiteParams.property(withName: "WebSiteName")
        }
        if !B1PreTeamCounter.documentEntry.isRemoved {
            B1PreTeamCounter.documentEntry = B1ClassMetadata.ComplexTypes.teamCounter.property(withName: "DocumentEntry")
        }
        if !B1PreTeamCounter.counterID.isRemoved {
            B1PreTeamCounter.counterID = B1ClassMetadata.ComplexTypes.teamCounter.property(withName: "CounterID")
        }
        if !B1PreTeamCounter.counterType.isRemoved {
            B1PreTeamCounter.counterType = B1ClassMetadata.ComplexTypes.teamCounter.property(withName: "CounterType")
        }
        if !B1PreTeamCounter.counterName.isRemoved {
            B1PreTeamCounter.counterName = B1ClassMetadata.ComplexTypes.teamCounter.property(withName: "CounterName")
        }
        if !B1PreTeamCounter.counterNumber.isRemoved {
            B1PreTeamCounter.counterNumber = B1ClassMetadata.ComplexTypes.teamCounter.property(withName: "CounterNumber")
        }
        if !B1PreTeamCounter.counterVisualOrder.isRemoved {
            B1PreTeamCounter.counterVisualOrder = B1ClassMetadata.ComplexTypes.teamCounter.property(withName: "CounterVisualOrder")
        }
        if !B1PreTeamMember.teamID.isRemoved {
            B1PreTeamMember.teamID = B1ClassMetadata.ComplexTypes.teamMember.property(withName: "TeamID")
        }
        if !B1PreTeamMember.employeeID.isRemoved {
            B1PreTeamMember.employeeID = B1ClassMetadata.ComplexTypes.teamMember.property(withName: "EmployeeID")
        }
        if !B1PreTeamMember.roleInTeam.isRemoved {
            B1PreTeamMember.roleInTeam = B1ClassMetadata.ComplexTypes.teamMember.property(withName: "RoleInTeam")
        }
        if !B1PreTeamParams.teamID.isRemoved {
            B1PreTeamParams.teamID = B1ClassMetadata.ComplexTypes.teamParams.property(withName: "TeamID")
        }
        if !B1PreTechnicianSchedulings.serviceCallID.isRemoved {
            B1PreTechnicianSchedulings.serviceCallID = B1ClassMetadata.ComplexTypes.technicianSchedulings.property(withName: "ServiceCallID")
        }
        if !B1PreTechnicianSchedulings.schedulingLineNum.isRemoved {
            B1PreTechnicianSchedulings.schedulingLineNum = B1ClassMetadata.ComplexTypes.technicianSchedulings.property(withName: "SchedulingLineNum")
        }
        if !B1PreTechnicianSchedulings.startDate.isRemoved {
            B1PreTechnicianSchedulings.startDate = B1ClassMetadata.ComplexTypes.technicianSchedulings.property(withName: "StartDate")
        }
        if !B1PreTechnicianSchedulings.endDate.isRemoved {
            B1PreTechnicianSchedulings.endDate = B1ClassMetadata.ComplexTypes.technicianSchedulings.property(withName: "EndDate")
        }
        if !B1PreTechnicianSchedulings.isClosed.isRemoved {
            B1PreTechnicianSchedulings.isClosed = B1ClassMetadata.ComplexTypes.technicianSchedulings.property(withName: "IsClosed")
        }
        if !B1PreTechnicianSchedulingsParams.technician.isRemoved {
            B1PreTechnicianSchedulingsParams.technician = B1ClassMetadata.ComplexTypes.technicianSchedulingsParams.property(withName: "Technician")
        }
        if !B1PreTechnicianSchedulingsParams.startDate.isRemoved {
            B1PreTechnicianSchedulingsParams.startDate = B1ClassMetadata.ComplexTypes.technicianSchedulingsParams.property(withName: "StartDate")
        }
        if !B1PreTechnicianSchedulingsParams.endDate.isRemoved {
            B1PreTechnicianSchedulingsParams.endDate = B1ClassMetadata.ComplexTypes.technicianSchedulingsParams.property(withName: "EndDate")
        }
        if !B1PreTechnicianSettings.technician.isRemoved {
            B1PreTechnicianSettings.technician = B1ClassMetadata.ComplexTypes.technicianSettings.property(withName: "Technician")
        }
        if !B1PreTechnicianSettings.groupCode.isRemoved {
            B1PreTechnicianSettings.groupCode = B1ClassMetadata.ComplexTypes.technicianSettings.property(withName: "GroupCode")
        }
        if !B1PreTechnicianSettingsGroup.code.isRemoved {
            B1PreTechnicianSettingsGroup.code = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "Code")
        }
        if !B1PreTechnicianSettingsGroup.name.isRemoved {
            B1PreTechnicianSettingsGroup.name = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "Name")
        }
        if !B1PreTechnicianSettingsGroup.customizedGroup.isRemoved {
            B1PreTechnicianSettingsGroup.customizedGroup = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "CustomizedGroup")
        }
        if !B1PreTechnicianSettingsGroup.enableEditTime.isRemoved {
            B1PreTechnicianSettingsGroup.enableEditTime = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "EnableEditTime")
        }
        if !B1PreTechnicianSettingsGroup.enableReject.isRemoved {
            B1PreTechnicianSettingsGroup.enableReject = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "EnableReject")
        }
        if !B1PreTechnicianSettingsGroup.enableResign.isRemoved {
            B1PreTechnicianSettingsGroup.enableResign = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "EnableResign")
        }
        if !B1PreTechnicianSettingsGroup.enableFollowup.isRemoved {
            B1PreTechnicianSettingsGroup.enableFollowup = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "EnableFollowup")
        }
        if !B1PreTechnicianSettingsGroup.enableSignature.isRemoved {
            B1PreTechnicianSettingsGroup.enableSignature = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "EnableSignature")
        }
        if !B1PreTechnicianSettingsGroup.enableStarRating.isRemoved {
            B1PreTechnicianSettingsGroup.enableStarRating = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "EnableStarRating")
        }
        if !B1PreTechnicianSettingsGroup.enableActualDuration.isRemoved {
            B1PreTechnicianSettingsGroup.enableActualDuration = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "EnableActualDuration")
        }
        if !B1PreTechnicianSettingsGroup.advancedDashBoard.isRemoved {
            B1PreTechnicianSettingsGroup.advancedDashBoard = B1ClassMetadata.ComplexTypes.technicianSettingsGroup.property(withName: "AdvancedDashBoard")
        }
        if !B1PreTechnicianSettingsGroupParams.code.isRemoved {
            B1PreTechnicianSettingsGroupParams.code = B1ClassMetadata.ComplexTypes.technicianSettingsGroupParams.property(withName: "Code")
        }
        if !B1PreTechnicianSettingsGroupParams.name.isRemoved {
            B1PreTechnicianSettingsGroupParams.name = B1ClassMetadata.ComplexTypes.technicianSettingsGroupParams.property(withName: "Name")
        }
        if !B1PreTechnicianSettingsParams.technician.isRemoved {
            B1PreTechnicianSettingsParams.technician = B1ClassMetadata.ComplexTypes.technicianSettingsParams.property(withName: "Technician")
        }
        if !B1PreTerminationReasonParams.reasonID.isRemoved {
            B1PreTerminationReasonParams.reasonID = B1ClassMetadata.ComplexTypes.terminationReasonParams.property(withName: "ReasonID")
        }
        if !B1PreTerminationReasonParams.name.isRemoved {
            B1PreTerminationReasonParams.name = B1ClassMetadata.ComplexTypes.terminationReasonParams.property(withName: "Name")
        }
        if !B1PreTerminationReasonParams.description.isRemoved {
            B1PreTerminationReasonParams.description = B1ClassMetadata.ComplexTypes.terminationReasonParams.property(withName: "Description")
        }
        if !B1PreTerritoryParams.territoryID.isRemoved {
            B1PreTerritoryParams.territoryID = B1ClassMetadata.ComplexTypes.territoryParams.property(withName: "TerritoryID")
        }
        if !B1PreTrackingNoteBroker.trackingNoteNumber.isRemoved {
            B1PreTrackingNoteBroker.trackingNoteNumber = B1ClassMetadata.ComplexTypes.trackingNoteBroker.property(withName: "TrackingNoteNumber")
        }
        if !B1PreTrackingNoteBroker.trackingNoteLineNumber.isRemoved {
            B1PreTrackingNoteBroker.trackingNoteLineNumber = B1ClassMetadata.ComplexTypes.trackingNoteBroker.property(withName: "TrackingNoteLineNumber")
        }
        if !B1PreTrackingNoteBroker.bpCode.isRemoved {
            B1PreTrackingNoteBroker.bpCode = B1ClassMetadata.ComplexTypes.trackingNoteBroker.property(withName: "BPCode")
        }
        if !B1PreTrackingNoteBroker.agreementNumber.isRemoved {
            B1PreTrackingNoteBroker.agreementNumber = B1ClassMetadata.ComplexTypes.trackingNoteBroker.property(withName: "AgreementNumber")
        }
        if !B1PreTrackingNoteItem.trackingNoteNumber.isRemoved {
            B1PreTrackingNoteItem.trackingNoteNumber = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "TrackingNoteNumber")
        }
        if !B1PreTrackingNoteItem.trackingNoteLineNumber.isRemoved {
            B1PreTrackingNoteItem.trackingNoteLineNumber = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "TrackingNoteLineNumber")
        }
        if !B1PreTrackingNoteItem.itemCCDNumber.isRemoved {
            B1PreTrackingNoteItem.itemCCDNumber = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "ItemCCDNumber")
        }
        if !B1PreTrackingNoteItem.itemCode.isRemoved {
            B1PreTrackingNoteItem.itemCode = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "ItemCode")
        }
        if !B1PreTrackingNoteItem.quantity.isRemoved {
            B1PreTrackingNoteItem.quantity = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "Quantity")
        }
        if !B1PreTrackingNoteItem.countryOfOrigin.isRemoved {
            B1PreTrackingNoteItem.countryOfOrigin = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "CountryOfOrigin")
        }
        if !B1PreTrackingNoteItem.customsGroupCode.isRemoved {
            B1PreTrackingNoteItem.customsGroupCode = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "CustomsGroupCode")
        }
        if !B1PreTrackingNoteItem.accumulatedAPQuantity.isRemoved {
            B1PreTrackingNoteItem.accumulatedAPQuantity = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "AccumulatedAPQuantity")
        }
        if !B1PreTrackingNoteItem.accumulatedARQuantity.isRemoved {
            B1PreTrackingNoteItem.accumulatedARQuantity = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "AccumulatedARQuantity")
        }
        if !B1PreTrackingNoteItem.accumulatedRelocatedQuantity.isRemoved {
            B1PreTrackingNoteItem.accumulatedRelocatedQuantity = B1ClassMetadata.ComplexTypes.trackingNoteItem.property(withName: "AccumulatedRelocatedQuantity")
        }
        if !B1PreTrackingNoteParams.trackingNoteNumber.isRemoved {
            B1PreTrackingNoteParams.trackingNoteNumber = B1ClassMetadata.ComplexTypes.trackingNoteParams.property(withName: "TrackingNoteNumber")
        }
        if !B1PreTrackingNoteParams.ccdNumber.isRemoved {
            B1PreTrackingNoteParams.ccdNumber = B1ClassMetadata.ComplexTypes.trackingNoteParams.property(withName: "CCDNumber")
        }
        if !B1PreTransactionCodeParams.code.isRemoved {
            B1PreTransactionCodeParams.code = B1ClassMetadata.ComplexTypes.transactionCodeParams.property(withName: "Code")
        }
        if !B1PreTransactionCodeParams.description.isRemoved {
            B1PreTransactionCodeParams.description = B1ClassMetadata.ComplexTypes.transactionCodeParams.property(withName: "Description")
        }
        if !B1PreTranslationsInUserLanguage.keyFromHeaderTable.isRemoved {
            B1PreTranslationsInUserLanguage.keyFromHeaderTable = B1ClassMetadata.ComplexTypes.translationsInUserLanguage.property(withName: "KeyFromHeaderTable")
        }
        if !B1PreTranslationsInUserLanguage.languageCodeOfUserLanguage.isRemoved {
            B1PreTranslationsInUserLanguage.languageCodeOfUserLanguage = B1ClassMetadata.ComplexTypes.translationsInUserLanguage.property(withName: "LanguageCodeOfUserLanguage")
        }
        if !B1PreTranslationsInUserLanguage.translationscontent.isRemoved {
            B1PreTranslationsInUserLanguage.translationscontent = B1ClassMetadata.ComplexTypes.translationsInUserLanguage.property(withName: "Translationscontent")
        }
        if !B1PreTransportationDocumentLineData.transpDocNumber.isRemoved {
            B1PreTransportationDocumentLineData.transpDocNumber = B1ClassMetadata.ComplexTypes.transportationDocumentLineData.property(withName: "TranspDocNumber")
        }
        if !B1PreTransportationDocumentLineData.lineID.isRemoved {
            B1PreTransportationDocumentLineData.lineID = B1ClassMetadata.ComplexTypes.transportationDocumentLineData.property(withName: "LineID")
        }
        if !B1PreTransportationDocumentLineData.docType.isRemoved {
            B1PreTransportationDocumentLineData.docType = B1ClassMetadata.ComplexTypes.transportationDocumentLineData.property(withName: "DocType")
        }
        if !B1PreTransportationDocumentLineData.docNumber.isRemoved {
            B1PreTransportationDocumentLineData.docNumber = B1ClassMetadata.ComplexTypes.transportationDocumentLineData.property(withName: "DocNumber")
        }
        if !B1PreTransportationDocumentLineData.docLineNumber.isRemoved {
            B1PreTransportationDocumentLineData.docLineNumber = B1ClassMetadata.ComplexTypes.transportationDocumentLineData.property(withName: "DocLineNumber")
        }
        if !B1PreTransportationDocumentLineData.itemCode.isRemoved {
            B1PreTransportationDocumentLineData.itemCode = B1ClassMetadata.ComplexTypes.transportationDocumentLineData.property(withName: "ItemCode")
        }
        if !B1PreTransportationDocumentLineData.transportedQuantity.isRemoved {
            B1PreTransportationDocumentLineData.transportedQuantity = B1ClassMetadata.ComplexTypes.transportationDocumentLineData.property(withName: "TransportedQuantity")
        }
        if !B1PreTransportationDocumentLineData.docOrderNum.isRemoved {
            B1PreTransportationDocumentLineData.docOrderNum = B1ClassMetadata.ComplexTypes.transportationDocumentLineData.property(withName: "DocOrderNum")
        }
        if !B1PreTransportationDocumentParams.transpDocNumber.isRemoved {
            B1PreTransportationDocumentParams.transpDocNumber = B1ClassMetadata.ComplexTypes.transportationDocumentParams.property(withName: "TranspDocNumber")
        }
        if !B1PreUnitOfMeasurementGroupParams.absEntry.isRemoved {
            B1PreUnitOfMeasurementGroupParams.absEntry = B1ClassMetadata.ComplexTypes.unitOfMeasurementGroupParams.property(withName: "AbsEntry")
        }
        if !B1PreUnitOfMeasurementGroupParams.code.isRemoved {
            B1PreUnitOfMeasurementGroupParams.code = B1ClassMetadata.ComplexTypes.unitOfMeasurementGroupParams.property(withName: "Code")
        }
        if !B1PreUnitOfMeasurementParams.absEntry.isRemoved {
            B1PreUnitOfMeasurementParams.absEntry = B1ClassMetadata.ComplexTypes.unitOfMeasurementParams.property(withName: "AbsEntry")
        }
        if !B1PreUnitOfMeasurementParams.code.isRemoved {
            B1PreUnitOfMeasurementParams.code = B1ClassMetadata.ComplexTypes.unitOfMeasurementParams.property(withName: "Code")
        }
        if !B1PreUoMGroupDefinition.alternateUoM.isRemoved {
            B1PreUoMGroupDefinition.alternateUoM = B1ClassMetadata.ComplexTypes.uoMGroupDefinition.property(withName: "AlternateUoM")
        }
        if !B1PreUoMGroupDefinition.alternateQuantity.isRemoved {
            B1PreUoMGroupDefinition.alternateQuantity = B1ClassMetadata.ComplexTypes.uoMGroupDefinition.property(withName: "AlternateQuantity")
        }
        if !B1PreUoMGroupDefinition.baseQuantity.isRemoved {
            B1PreUoMGroupDefinition.baseQuantity = B1ClassMetadata.ComplexTypes.uoMGroupDefinition.property(withName: "BaseQuantity")
        }
        if !B1PreUoMGroupDefinition.weightFactor.isRemoved {
            B1PreUoMGroupDefinition.weightFactor = B1ClassMetadata.ComplexTypes.uoMGroupDefinition.property(withName: "WeightFactor")
        }
        if !B1PreUoMGroupDefinition.udfFactor.isRemoved {
            B1PreUoMGroupDefinition.udfFactor = B1ClassMetadata.ComplexTypes.uoMGroupDefinition.property(withName: "UdfFactor")
        }
        if !B1PreUoMPrice.priceList.isRemoved {
            B1PreUoMPrice.priceList = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "PriceList")
        }
        if !B1PreUoMPrice.uoMEntry.isRemoved {
            B1PreUoMPrice.uoMEntry = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "UoMEntry")
        }
        if !B1PreUoMPrice.reduceBy.isRemoved {
            B1PreUoMPrice.reduceBy = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "ReduceBy")
        }
        if !B1PreUoMPrice.price.isRemoved {
            B1PreUoMPrice.price = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "Price")
        }
        if !B1PreUoMPrice.currency.isRemoved {
            B1PreUoMPrice.currency = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "Currency")
        }
        if !B1PreUoMPrice.additionalReduceBy1.isRemoved {
            B1PreUoMPrice.additionalReduceBy1 = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "AdditionalReduceBy1")
        }
        if !B1PreUoMPrice.additionalPrice1.isRemoved {
            B1PreUoMPrice.additionalPrice1 = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "AdditionalPrice1")
        }
        if !B1PreUoMPrice.additionalCurrency1.isRemoved {
            B1PreUoMPrice.additionalCurrency1 = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "AdditionalCurrency1")
        }
        if !B1PreUoMPrice.additionalReduceBy2.isRemoved {
            B1PreUoMPrice.additionalReduceBy2 = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "AdditionalReduceBy2")
        }
        if !B1PreUoMPrice.additionalPrice2.isRemoved {
            B1PreUoMPrice.additionalPrice2 = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "AdditionalPrice2")
        }
        if !B1PreUoMPrice.additionalCurrency2.isRemoved {
            B1PreUoMPrice.additionalCurrency2 = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "AdditionalCurrency2")
        }
        if !B1PreUoMPrice.auto.isRemoved {
            B1PreUoMPrice.auto = B1ClassMetadata.ComplexTypes.uoMPrice.property(withName: "Auto")
        }
        if !B1PreUpdateUserLicenseParams.userName.isRemoved {
            B1PreUpdateUserLicenseParams.userName = B1ClassMetadata.ComplexTypes.updateUserLicenseParams.property(withName: "UserName")
        }
        if !B1PreUpdateUserLicenseParams.licenseType.isRemoved {
            B1PreUpdateUserLicenseParams.licenseType = B1ClassMetadata.ComplexTypes.updateUserLicenseParams.property(withName: "LicenseType")
        }
        if !B1PreUpdateUserLicenseParams.licenseUpdateType.isRemoved {
            B1PreUpdateUserLicenseParams.licenseUpdateType = B1ClassMetadata.ComplexTypes.updateUserLicenseParams.property(withName: "LicenseUpdateType")
        }
        if !B1PreUserActionRecordItem.userCode.isRemoved {
            B1PreUserActionRecordItem.userCode = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "UserCode")
        }
        if !B1PreUserActionRecordItem.action.isRemoved {
            B1PreUserActionRecordItem.action = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "Action")
        }
        if !B1PreUserActionRecordItem.actionBy.isRemoved {
            B1PreUserActionRecordItem.actionBy = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "ActionBy")
        }
        if !B1PreUserActionRecordItem.clientIP.isRemoved {
            B1PreUserActionRecordItem.clientIP = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "ClientIP")
        }
        if !B1PreUserActionRecordItem.clientName.isRemoved {
            B1PreUserActionRecordItem.clientName = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "ClientName")
        }
        if !B1PreUserActionRecordItem.actionDate.isRemoved {
            B1PreUserActionRecordItem.actionDate = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "ActionDate")
        }
        if !B1PreUserActionRecordItem.actionTime.isRemoved {
            B1PreUserActionRecordItem.actionTime = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "ActionTime")
        }
        if !B1PreUserActionRecordItem.windowsSession.isRemoved {
            B1PreUserActionRecordItem.windowsSession = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "WindowsSession")
        }
        if !B1PreUserActionRecordItem.windowsUser.isRemoved {
            B1PreUserActionRecordItem.windowsUser = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "WindowsUser")
        }
        if !B1PreUserActionRecordItem.processName.isRemoved {
            B1PreUserActionRecordItem.processName = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "ProcessName")
        }
        if !B1PreUserActionRecordItem.processID.isRemoved {
            B1PreUserActionRecordItem.processID = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "ProcessID")
        }
        if !B1PreUserActionRecordItem.aliveDuration.isRemoved {
            B1PreUserActionRecordItem.aliveDuration = B1ClassMetadata.ComplexTypes.userActionRecordItem.property(withName: "AliveDuration")
        }
        if !B1PreUserBranchAssignmentItem.userCode.isRemoved {
            B1PreUserBranchAssignmentItem.userCode = B1ClassMetadata.ComplexTypes.userBranchAssignmentItem.property(withName: "UserCode")
        }
        if !B1PreUserBranchAssignmentItem.bplid.isRemoved {
            B1PreUserBranchAssignmentItem.bplid = B1ClassMetadata.ComplexTypes.userBranchAssignmentItem.property(withName: "BPLID")
        }
        if !B1PreUserDefaultGroupParams.code.isRemoved {
            B1PreUserDefaultGroupParams.code = B1ClassMetadata.ComplexTypes.userDefaultGroupParams.property(withName: "Code")
        }
        if !B1PreUserFieldMDParams.tableName.isRemoved {
            B1PreUserFieldMDParams.tableName = B1ClassMetadata.ComplexTypes.userFieldMDParams.property(withName: "TableName")
        }
        if !B1PreUserFieldMDParams.fieldID.isRemoved {
            B1PreUserFieldMDParams.fieldID = B1ClassMetadata.ComplexTypes.userFieldMDParams.property(withName: "FieldID")
        }
        if !B1PreUserGroupByUserItem.userid.isRemoved {
            B1PreUserGroupByUserItem.userid = B1ClassMetadata.ComplexTypes.userGroupByUserItem.property(withName: "USERId")
        }
        if !B1PreUserGroupByUserItem.groupID.isRemoved {
            B1PreUserGroupByUserItem.groupID = B1ClassMetadata.ComplexTypes.userGroupByUserItem.property(withName: "GroupId")
        }
        if !B1PreUserGroupByUserItem.startDate.isRemoved {
            B1PreUserGroupByUserItem.startDate = B1ClassMetadata.ComplexTypes.userGroupByUserItem.property(withName: "StartDate")
        }
        if !B1PreUserGroupByUserItem.dueDate.isRemoved {
            B1PreUserGroupByUserItem.dueDate = B1ClassMetadata.ComplexTypes.userGroupByUserItem.property(withName: "DueDate")
        }
        if !B1PreUserGroupParams.userGroupID.isRemoved {
            B1PreUserGroupParams.userGroupID = B1ClassMetadata.ComplexTypes.userGroupParams.property(withName: "UserGroupId")
        }
        if !B1PreUserGroupParams.userGroupName.isRemoved {
            B1PreUserGroupParams.userGroupName = B1ClassMetadata.ComplexTypes.userGroupParams.property(withName: "UserGroupName")
        }
        if !B1PreUserKeyParams.tableName.isRemoved {
            B1PreUserKeyParams.tableName = B1ClassMetadata.ComplexTypes.userKeyParams.property(withName: "TableName")
        }
        if !B1PreUserKeyParams.keyIndex.isRemoved {
            B1PreUserKeyParams.keyIndex = B1ClassMetadata.ComplexTypes.userKeyParams.property(withName: "KeyIndex")
        }
        if !B1PreUserKeysMDElement.subKeyIndex.isRemoved {
            B1PreUserKeysMDElement.subKeyIndex = B1ClassMetadata.ComplexTypes.userKeysMDElement.property(withName: "SubKeyIndex")
        }
        if !B1PreUserKeysMDElement.columnAlias.isRemoved {
            B1PreUserKeysMDElement.columnAlias = B1ClassMetadata.ComplexTypes.userKeysMDElement.property(withName: "ColumnAlias")
        }
        if !B1PreUserLanguageParams.code.isRemoved {
            B1PreUserLanguageParams.code = B1ClassMetadata.ComplexTypes.userLanguageParams.property(withName: "Code")
        }
        if !B1PreUserMenuItem.name.isRemoved {
            B1PreUserMenuItem.name = B1ClassMetadata.ComplexTypes.userMenuItem.property(withName: "Name")
        }
        if !B1PreUserMenuItem.position.isRemoved {
            B1PreUserMenuItem.position = B1ClassMetadata.ComplexTypes.userMenuItem.property(withName: "Position")
        }
        if !B1PreUserMenuItem.type_.isRemoved {
            B1PreUserMenuItem.type_ = B1ClassMetadata.ComplexTypes.userMenuItem.property(withName: "Type")
        }
        if !B1PreUserMenuItem.linkedObjType.isRemoved {
            B1PreUserMenuItem.linkedObjType = B1ClassMetadata.ComplexTypes.userMenuItem.property(withName: "LinkedObjType")
        }
        if !B1PreUserMenuItem.linkedObjKey.isRemoved {
            B1PreUserMenuItem.linkedObjKey = B1ClassMetadata.ComplexTypes.userMenuItem.property(withName: "LinkedObjKey")
        }
        if !B1PreUserMenuItem.linkedFormMenuID.isRemoved {
            B1PreUserMenuItem.linkedFormMenuID = B1ClassMetadata.ComplexTypes.userMenuItem.property(withName: "LinkedFormMenuID")
        }
        if !B1PreUserMenuItem.linkedFormNum.isRemoved {
            B1PreUserMenuItem.linkedFormNum = B1ClassMetadata.ComplexTypes.userMenuItem.property(withName: "LinkedFormNum")
        }
        if !B1PreUserMenuItem.reportPath.isRemoved {
            B1PreUserMenuItem.reportPath = B1ClassMetadata.ComplexTypes.userMenuItem.property(withName: "ReportPath")
        }
        if !B1PreUserMenuParams.userID.isRemoved {
            B1PreUserMenuParams.userID = B1ClassMetadata.ComplexTypes.userMenuParams.property(withName: "UserID")
        }
        if !B1PreUserObjectMDChildTable.sonNumber.isRemoved {
            B1PreUserObjectMDChildTable.sonNumber = B1ClassMetadata.ComplexTypes.userObjectMDChildTable.property(withName: "SonNumber")
        }
        if !B1PreUserObjectMDChildTable.tableName.isRemoved {
            B1PreUserObjectMDChildTable.tableName = B1ClassMetadata.ComplexTypes.userObjectMDChildTable.property(withName: "TableName")
        }
        if !B1PreUserObjectMDChildTable.logTableName.isRemoved {
            B1PreUserObjectMDChildTable.logTableName = B1ClassMetadata.ComplexTypes.userObjectMDChildTable.property(withName: "LogTableName")
        }
        if !B1PreUserObjectMDChildTable.code.isRemoved {
            B1PreUserObjectMDChildTable.code = B1ClassMetadata.ComplexTypes.userObjectMDChildTable.property(withName: "Code")
        }
        if !B1PreUserObjectMDChildTable.objectName.isRemoved {
            B1PreUserObjectMDChildTable.objectName = B1ClassMetadata.ComplexTypes.userObjectMDChildTable.property(withName: "ObjectName")
        }
        if !B1PreUserObjectMDEnhancedFormColumn.code.isRemoved {
            B1PreUserObjectMDEnhancedFormColumn.code = B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn.property(withName: "Code")
        }
        if !B1PreUserObjectMDEnhancedFormColumn.columnNumber.isRemoved {
            B1PreUserObjectMDEnhancedFormColumn.columnNumber = B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn.property(withName: "ColumnNumber")
        }
        if !B1PreUserObjectMDEnhancedFormColumn.childNumber.isRemoved {
            B1PreUserObjectMDEnhancedFormColumn.childNumber = B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn.property(withName: "ChildNumber")
        }
        if !B1PreUserObjectMDEnhancedFormColumn.columnAlias.isRemoved {
            B1PreUserObjectMDEnhancedFormColumn.columnAlias = B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn.property(withName: "ColumnAlias")
        }
        if !B1PreUserObjectMDEnhancedFormColumn.columnDescription.isRemoved {
            B1PreUserObjectMDEnhancedFormColumn.columnDescription = B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn.property(withName: "ColumnDescription")
        }
        if !B1PreUserObjectMDEnhancedFormColumn.columnIsUsed.isRemoved {
            B1PreUserObjectMDEnhancedFormColumn.columnIsUsed = B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn.property(withName: "ColumnIsUsed")
        }
        if !B1PreUserObjectMDEnhancedFormColumn.editable.isRemoved {
            B1PreUserObjectMDEnhancedFormColumn.editable = B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn.property(withName: "Editable")
        }
        if !B1PreUserObjectMDFindColumn.columnNumber.isRemoved {
            B1PreUserObjectMDFindColumn.columnNumber = B1ClassMetadata.ComplexTypes.userObjectMDFindColumn.property(withName: "ColumnNumber")
        }
        if !B1PreUserObjectMDFindColumn.columnAlias.isRemoved {
            B1PreUserObjectMDFindColumn.columnAlias = B1ClassMetadata.ComplexTypes.userObjectMDFindColumn.property(withName: "ColumnAlias")
        }
        if !B1PreUserObjectMDFindColumn.columnDescription.isRemoved {
            B1PreUserObjectMDFindColumn.columnDescription = B1ClassMetadata.ComplexTypes.userObjectMDFindColumn.property(withName: "ColumnDescription")
        }
        if !B1PreUserObjectMDFindColumn.code.isRemoved {
            B1PreUserObjectMDFindColumn.code = B1ClassMetadata.ComplexTypes.userObjectMDFindColumn.property(withName: "Code")
        }
        if !B1PreUserObjectMDFormColumn.formColumnAlias.isRemoved {
            B1PreUserObjectMDFormColumn.formColumnAlias = B1ClassMetadata.ComplexTypes.userObjectMDFormColumn.property(withName: "FormColumnAlias")
        }
        if !B1PreUserObjectMDFormColumn.formColumnDescription.isRemoved {
            B1PreUserObjectMDFormColumn.formColumnDescription = B1ClassMetadata.ComplexTypes.userObjectMDFormColumn.property(withName: "FormColumnDescription")
        }
        if !B1PreUserObjectMDFormColumn.formColumnNumber.isRemoved {
            B1PreUserObjectMDFormColumn.formColumnNumber = B1ClassMetadata.ComplexTypes.userObjectMDFormColumn.property(withName: "FormColumnNumber")
        }
        if !B1PreUserObjectMDFormColumn.sonNumber.isRemoved {
            B1PreUserObjectMDFormColumn.sonNumber = B1ClassMetadata.ComplexTypes.userObjectMDFormColumn.property(withName: "SonNumber")
        }
        if !B1PreUserObjectMDFormColumn.code.isRemoved {
            B1PreUserObjectMDFormColumn.code = B1ClassMetadata.ComplexTypes.userObjectMDFormColumn.property(withName: "Code")
        }
        if !B1PreUserObjectMDFormColumn.editable.isRemoved {
            B1PreUserObjectMDFormColumn.editable = B1ClassMetadata.ComplexTypes.userObjectMDFormColumn.property(withName: "Editable")
        }
        if !B1PreUserObjectsMDParams.code.isRemoved {
            B1PreUserObjectsMDParams.code = B1ClassMetadata.ComplexTypes.userObjectsMDParams.property(withName: "Code")
        }
        if !B1PreUserParams.internalKey.isRemoved {
            B1PreUserParams.internalKey = B1ClassMetadata.ComplexTypes.userParams.property(withName: "InternalKey")
        }
        if !B1PreUserPermissionForm.formType.isRemoved {
            B1PreUserPermissionForm.formType = B1ClassMetadata.ComplexTypes.userPermissionForm.property(withName: "FormType")
        }
        if !B1PreUserPermissionForm.displayOrder.isRemoved {
            B1PreUserPermissionForm.displayOrder = B1ClassMetadata.ComplexTypes.userPermissionForm.property(withName: "DisplayOrder")
        }
        if !B1PreUserPermissionForm.permissionID.isRemoved {
            B1PreUserPermissionForm.permissionID = B1ClassMetadata.ComplexTypes.userPermissionForm.property(withName: "PermissionID")
        }
        if !B1PreUserPermissionItem.userCode.isRemoved {
            B1PreUserPermissionItem.userCode = B1ClassMetadata.ComplexTypes.userPermissionItem.property(withName: "UserCode")
        }
        if !B1PreUserPermissionItem.permissionID.isRemoved {
            B1PreUserPermissionItem.permissionID = B1ClassMetadata.ComplexTypes.userPermissionItem.property(withName: "PermissionID")
        }
        if !B1PreUserPermissionItem.permission.isRemoved {
            B1PreUserPermissionItem.permission = B1ClassMetadata.ComplexTypes.userPermissionItem.property(withName: "Permission")
        }
        if !B1PreUserPermissionTreeParams.permissionID.isRemoved {
            B1PreUserPermissionTreeParams.permissionID = B1ClassMetadata.ComplexTypes.userPermissionTreeParams.property(withName: "PermissionID")
        }
        if !B1PreUserQueryParams.internalKey.isRemoved {
            B1PreUserQueryParams.internalKey = B1ClassMetadata.ComplexTypes.userQueryParams.property(withName: "InternalKey")
        }
        if !B1PreUserQueryParams.queryCategory.isRemoved {
            B1PreUserQueryParams.queryCategory = B1ClassMetadata.ComplexTypes.userQueryParams.property(withName: "QueryCategory")
        }
        if !B1PreUserTableParams.tableType.isRemoved {
            B1PreUserTableParams.tableType = B1ClassMetadata.ComplexTypes.userTableParams.property(withName: "TableType")
        }
        if !B1PreUserTableParams.tableName.isRemoved {
            B1PreUserTableParams.tableName = B1ClassMetadata.ComplexTypes.userTableParams.property(withName: "TableName")
        }
        if !B1PreUserTableParams.tableDescription.isRemoved {
            B1PreUserTableParams.tableDescription = B1ClassMetadata.ComplexTypes.userTableParams.property(withName: "TableDescription")
        }
        if !B1PreUserTableParams.archiveDateField.isRemoved {
            B1PreUserTableParams.archiveDateField = B1ClassMetadata.ComplexTypes.userTableParams.property(withName: "ArchiveDateField")
        }
        if !B1PreUserTableParams.archivable.isRemoved {
            B1PreUserTableParams.archivable = B1ClassMetadata.ComplexTypes.userTableParams.property(withName: "Archivable")
        }
        if !B1PreVMThirdPartyValuesData.absEntry.isRemoved {
            B1PreVMThirdPartyValuesData.absEntry = B1ClassMetadata.ComplexTypes.vmThirdPartyValuesData.property(withName: "AbsEntry")
        }
        if !B1PreVMThirdPartyValuesData.lineID.isRemoved {
            B1PreVMThirdPartyValuesData.lineID = B1ClassMetadata.ComplexTypes.vmThirdPartyValuesData.property(withName: "LineId")
        }
        if !B1PreVMThirdPartyValuesData.thirdPartySystemID.isRemoved {
            B1PreVMThirdPartyValuesData.thirdPartySystemID = B1ClassMetadata.ComplexTypes.vmThirdPartyValuesData.property(withName: "ThirdPartySystemId")
        }
        if !B1PreVMThirdPartyValuesData.thirdPartyValue.isRemoved {
            B1PreVMThirdPartyValuesData.thirdPartyValue = B1ClassMetadata.ComplexTypes.vmThirdPartyValuesData.property(withName: "ThirdPartyValue")
        }
        if !B1PreValidValueMD.value.isRemoved {
            B1PreValidValueMD.value = B1ClassMetadata.ComplexTypes.validValueMD.property(withName: "Value")
        }
        if !B1PreValidValueMD.description.isRemoved {
            B1PreValidValueMD.description = B1ClassMetadata.ComplexTypes.validValueMD.property(withName: "Description")
        }
        if !B1PreValueMappingCommunicationParams.absEntry.isRemoved {
            B1PreValueMappingCommunicationParams.absEntry = B1ClassMetadata.ComplexTypes.valueMappingCommunicationParams.property(withName: "AbsEntry")
        }
        if !B1PreValueMappingParams.absEntry.isRemoved {
            B1PreValueMappingParams.absEntry = B1ClassMetadata.ComplexTypes.valueMappingParams.property(withName: "AbsEntry")
        }
        if !B1PreVatGroupParams.code.isRemoved {
            B1PreVatGroupParams.code = B1ClassMetadata.ComplexTypes.vatGroupParams.property(withName: "Code")
        }
        if !B1PreVatGroupsLine.effectivefrom.isRemoved {
            B1PreVatGroupsLine.effectivefrom = B1ClassMetadata.ComplexTypes.vatGroupsLine.property(withName: "Effectivefrom")
        }
        if !B1PreVatGroupsLine.rate.isRemoved {
            B1PreVatGroupsLine.rate = B1ClassMetadata.ComplexTypes.vatGroupsLine.property(withName: "Rate")
        }
        if !B1PreVatGroupsLine.equalizationTax.isRemoved {
            B1PreVatGroupsLine.equalizationTax = B1ClassMetadata.ComplexTypes.vatGroupsLine.property(withName: "EqualizationTax")
        }
        if !B1PreVatGroupsLine.datevCode.isRemoved {
            B1PreVatGroupsLine.datevCode = B1ClassMetadata.ComplexTypes.vatGroupsLine.property(withName: "DatevCode")
        }
        if !B1PreWIPMapping.absoluteEntry.isRemoved {
            B1PreWIPMapping.absoluteEntry = B1ClassMetadata.ComplexTypes.wipMapping.property(withName: "AbsoluteEntry")
        }
        if !B1PreWIPMapping.lineNumber.isRemoved {
            B1PreWIPMapping.lineNumber = B1ClassMetadata.ComplexTypes.wipMapping.property(withName: "LineNumber")
        }
        if !B1PreWIPMapping.accountFrom.isRemoved {
            B1PreWIPMapping.accountFrom = B1ClassMetadata.ComplexTypes.wipMapping.property(withName: "AccountFrom")
        }
        if !B1PreWIPMapping.accountTo.isRemoved {
            B1PreWIPMapping.accountTo = B1ClassMetadata.ComplexTypes.wipMapping.property(withName: "AccountTo")
        }
        if !B1PreWtdbp.bpKeyPart1.isRemoved {
            B1PreWtdbp.bpKeyPart1 = B1ClassMetadata.ComplexTypes.wtdbp.property(withName: "BPKeyPart1")
        }
        if !B1PreWtdbp.bpKeyPart2.isRemoved {
            B1PreWtdbp.bpKeyPart2 = B1ClassMetadata.ComplexTypes.wtdbp.property(withName: "BPKeyPart2")
        }
        if !B1PreWtdbp.wTaxCode.isRemoved {
            B1PreWtdbp.wTaxCode = B1ClassMetadata.ComplexTypes.wtdbp.property(withName: "WTaxCode")
        }
        if !B1PreWtdbp.effectiveDateFrom.isRemoved {
            B1PreWtdbp.effectiveDateFrom = B1ClassMetadata.ComplexTypes.wtdbp.property(withName: "EffectiveDateFrom")
        }
        if !B1PreWtdbp.effectiveDateTo.isRemoved {
            B1PreWtdbp.effectiveDateTo = B1ClassMetadata.ComplexTypes.wtdbp.property(withName: "EffectiveDateTo")
        }
        if !B1PreWtdbp.rate.isRemoved {
            B1PreWtdbp.rate = B1ClassMetadata.ComplexTypes.wtdbp.property(withName: "Rate")
        }
        if !B1PreWtdbp.detailType.isRemoved {
            B1PreWtdbp.detailType = B1ClassMetadata.ComplexTypes.wtdbp.property(withName: "DetailType")
        }
        if !B1PreWTDCodeParams.absEntry.isRemoved {
            B1PreWTDCodeParams.absEntry = B1ClassMetadata.ComplexTypes.wtdCodeParams.property(withName: "AbsEntry")
        }
        if !B1PreWTDCodeParams.wTaxCode.isRemoved {
            B1PreWTDCodeParams.wTaxCode = B1ClassMetadata.ComplexTypes.wtdCodeParams.property(withName: "WTaxCode")
        }
        if !B1PreWTDCodeParams.wTaxName.isRemoved {
            B1PreWTDCodeParams.wTaxName = B1ClassMetadata.ComplexTypes.wtdCodeParams.property(withName: "WTaxName")
        }
        if !B1PreWTDEffectiveDate.lineNumber.isRemoved {
            B1PreWTDEffectiveDate.lineNumber = B1ClassMetadata.ComplexTypes.wtdEffectiveDate.property(withName: "LineNumber")
        }
        if !B1PreWTDEffectiveDate.effectiveFrom.isRemoved {
            B1PreWTDEffectiveDate.effectiveFrom = B1ClassMetadata.ComplexTypes.wtdEffectiveDate.property(withName: "EffectiveFrom")
        }
        if !B1PreWTDEffectiveDate.rate.isRemoved {
            B1PreWTDEffectiveDate.rate = B1ClassMetadata.ComplexTypes.wtdEffectiveDate.property(withName: "Rate")
        }
        if !B1PreWTDEffectiveDate.wtdValueRangeCollection.isRemoved {
            B1PreWTDEffectiveDate.wtdValueRangeCollection = B1ClassMetadata.ComplexTypes.wtdEffectiveDate.property(withName: "WTDValueRangeCollection")
        }
        if !B1PreWTDFreight.freightCode.isRemoved {
            B1PreWTDFreight.freightCode = B1ClassMetadata.ComplexTypes.wtdFreight.property(withName: "FreightCode")
        }
        if !B1PreWTDFreight.wTaxCode.isRemoved {
            B1PreWTDFreight.wTaxCode = B1ClassMetadata.ComplexTypes.wtdFreight.property(withName: "WTaxCode")
        }
        if !B1PreWTDFreight.effectiveDateFrom.isRemoved {
            B1PreWTDFreight.effectiveDateFrom = B1ClassMetadata.ComplexTypes.wtdFreight.property(withName: "EffectiveDateFrom")
        }
        if !B1PreWTDFreight.effectiveDateTo.isRemoved {
            B1PreWTDFreight.effectiveDateTo = B1ClassMetadata.ComplexTypes.wtdFreight.property(withName: "EffectiveDateTo")
        }
        if !B1PreWTDItem.itemCode.isRemoved {
            B1PreWTDItem.itemCode = B1ClassMetadata.ComplexTypes.wtdItem.property(withName: "ItemCode")
        }
        if !B1PreWTDItem.wTaxCode.isRemoved {
            B1PreWTDItem.wTaxCode = B1ClassMetadata.ComplexTypes.wtdItem.property(withName: "WTaxCode")
        }
        if !B1PreWTDItem.effectiveDateFrom.isRemoved {
            B1PreWTDItem.effectiveDateFrom = B1ClassMetadata.ComplexTypes.wtdItem.property(withName: "EffectiveDateFrom")
        }
        if !B1PreWTDItem.effectiveDateTo.isRemoved {
            B1PreWTDItem.effectiveDateTo = B1ClassMetadata.ComplexTypes.wtdItem.property(withName: "EffectiveDateTo")
        }
        if !B1PreWTDValueRange.lineNumber.isRemoved {
            B1PreWTDValueRange.lineNumber = B1ClassMetadata.ComplexTypes.wtdValueRange.property(withName: "LineNumber")
        }
        if !B1PreWTDValueRange.seqNum.isRemoved {
            B1PreWTDValueRange.seqNum = B1ClassMetadata.ComplexTypes.wtdValueRange.property(withName: "SeqNum")
        }
        if !B1PreWTDValueRange.effectiveFrom.isRemoved {
            B1PreWTDValueRange.effectiveFrom = B1ClassMetadata.ComplexTypes.wtdValueRange.property(withName: "EffectiveFrom")
        }
        if !B1PreWTDValueRange.valueFrom.isRemoved {
            B1PreWTDValueRange.valueFrom = B1ClassMetadata.ComplexTypes.wtdValueRange.property(withName: "ValueFrom")
        }
        if !B1PreWTDValueRange.rate.isRemoved {
            B1PreWTDValueRange.rate = B1ClassMetadata.ComplexTypes.wtdValueRange.property(withName: "Rate")
        }
        if !B1PreWTGroups.wtAbsEntry.isRemoved {
            B1PreWTGroups.wtAbsEntry = B1ClassMetadata.ComplexTypes.wtGroups.property(withName: "WTAbsEntry")
        }
        if !B1PreWTGroups.percent.isRemoved {
            B1PreWTGroups.percent = B1ClassMetadata.ComplexTypes.wtGroups.property(withName: "Percent")
        }
        if !B1PreWTGroups.sumVATAmount.isRemoved {
            B1PreWTGroups.sumVATAmount = B1ClassMetadata.ComplexTypes.wtGroups.property(withName: "SumVATAmount")
        }
        if !B1PreWTGroups.sumDocTotal.isRemoved {
            B1PreWTGroups.sumDocTotal = B1ClassMetadata.ComplexTypes.wtGroups.property(withName: "SumDocTotal")
        }
        if !B1PreWTGroups.sumBaseAmount.isRemoved {
            B1PreWTGroups.sumBaseAmount = B1ClassMetadata.ComplexTypes.wtGroups.property(withName: "SumBaseAmount")
        }
        if !B1PreWTGroups.sumAccumAmount.isRemoved {
            B1PreWTGroups.sumAccumAmount = B1ClassMetadata.ComplexTypes.wtGroups.property(withName: "SumAccumAmount")
        }
        if !B1PreWTGroups.sumPerceptAmount.isRemoved {
            B1PreWTGroups.sumPerceptAmount = B1ClassMetadata.ComplexTypes.wtGroups.property(withName: "SumPerceptAmount")
        }
        if !B1PreWTGroups.docsInWTGroupsCollection.isRemoved {
            B1PreWTGroups.docsInWTGroupsCollection = B1ClassMetadata.ComplexTypes.wtGroups.property(withName: "DocsInWTGroupsCollection")
        }
    }

    private static func merge16(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PreWarehouseLocationParams.code.isRemoved {
            B1PreWarehouseLocationParams.code = B1ClassMetadata.ComplexTypes.warehouseLocationParams.property(withName: "Code")
        }
        if !B1PreWarehouseParams.warehouseCode.isRemoved {
            B1PreWarehouseParams.warehouseCode = B1ClassMetadata.ComplexTypes.warehouseParams.property(withName: "WarehouseCode")
        }
        if !B1PreWarehouseSublevelCodeParams.absEntry.isRemoved {
            B1PreWarehouseSublevelCodeParams.absEntry = B1ClassMetadata.ComplexTypes.warehouseSublevelCodeParams.property(withName: "AbsEntry")
        }
        if !B1PreWarehouseSublevelCodeParams.warehouseSublevel.isRemoved {
            B1PreWarehouseSublevelCodeParams.warehouseSublevel = B1ClassMetadata.ComplexTypes.warehouseSublevelCodeParams.property(withName: "WarehouseSublevel")
        }
        if !B1PreWarehouseSublevelCodeParams.code.isRemoved {
            B1PreWarehouseSublevelCodeParams.code = B1ClassMetadata.ComplexTypes.warehouseSublevelCodeParams.property(withName: "Code")
        }
        if !B1PreWeightMeasureParams.unitCode.isRemoved {
            B1PreWeightMeasureParams.unitCode = B1ClassMetadata.ComplexTypes.weightMeasureParams.property(withName: "UnitCode")
        }
        if !B1PreWithholdingTaxCertificatesData.poiCodeRef.isRemoved {
            B1PreWithholdingTaxCertificatesData.poiCodeRef = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "POICodeRef")
        }
        if !B1PreWithholdingTaxCertificatesData.poiCode.isRemoved {
            B1PreWithholdingTaxCertificatesData.poiCode = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "POICode")
        }
        if !B1PreWithholdingTaxCertificatesData.certificate.isRemoved {
            B1PreWithholdingTaxCertificatesData.certificate = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "Certificate")
        }
        if !B1PreWithholdingTaxCertificatesData.wTaxType.isRemoved {
            B1PreWithholdingTaxCertificatesData.wTaxType = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "WTaxType")
        }
        if !B1PreWithholdingTaxCertificatesData.periodIndicator.isRemoved {
            B1PreWithholdingTaxCertificatesData.periodIndicator = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "PeriodIndicator")
        }
        if !B1PreWithholdingTaxCertificatesData.whtAbsID.isRemoved {
            B1PreWithholdingTaxCertificatesData.whtAbsID = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "WhtAbsId")
        }
        if !B1PreWithholdingTaxCertificatesData.series.isRemoved {
            B1PreWithholdingTaxCertificatesData.series = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "Series")
        }
        if !B1PreWithholdingTaxCertificatesData.number.isRemoved {
            B1PreWithholdingTaxCertificatesData.number = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "Number")
        }
        if !B1PreWithholdingTaxCertificatesData.issueDate.isRemoved {
            B1PreWithholdingTaxCertificatesData.issueDate = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "IssueDate")
        }
        if !B1PreWithholdingTaxCertificatesData.sumVATAmount.isRemoved {
            B1PreWithholdingTaxCertificatesData.sumVATAmount = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "SumVATAmount")
        }
        if !B1PreWithholdingTaxCertificatesData.sumDocTotal.isRemoved {
            B1PreWithholdingTaxCertificatesData.sumDocTotal = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "SumDocTotal")
        }
        if !B1PreWithholdingTaxCertificatesData.sumBaseAmount.isRemoved {
            B1PreWithholdingTaxCertificatesData.sumBaseAmount = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "SumBaseAmount")
        }
        if !B1PreWithholdingTaxCertificatesData.sumAccumAmount.isRemoved {
            B1PreWithholdingTaxCertificatesData.sumAccumAmount = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "SumAccumAmount")
        }
        if !B1PreWithholdingTaxCertificatesData.sumPercAmount.isRemoved {
            B1PreWithholdingTaxCertificatesData.sumPercAmount = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "SumPercAmount")
        }
        if !B1PreWithholdingTaxCertificatesData.wtGroupsCollection.isRemoved {
            B1PreWithholdingTaxCertificatesData.wtGroupsCollection = B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.property(withName: "WTGroupsCollection")
        }
        if !B1PreWithholdingTaxCodeParams.wtCode.isRemoved {
            B1PreWithholdingTaxCodeParams.wtCode = B1ClassMetadata.ComplexTypes.withholdingTaxCodeParams.property(withName: "WTCode")
        }
        if !B1PreWithholdingTaxCodesLine.effectivefrom.isRemoved {
            B1PreWithholdingTaxCodesLine.effectivefrom = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "Effectivefrom")
        }
        if !B1PreWithholdingTaxCodesLine.rate.isRemoved {
            B1PreWithholdingTaxCodesLine.rate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "Rate")
        }
        if !B1PreWithholdingTaxCodesLine.tdsRate.isRemoved {
            B1PreWithholdingTaxCodesLine.tdsRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "TDSRate")
        }
        if !B1PreWithholdingTaxCodesLine.surchargeRate.isRemoved {
            B1PreWithholdingTaxCodesLine.surchargeRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "SurchargeRate")
        }
        if !B1PreWithholdingTaxCodesLine.cessRate.isRemoved {
            B1PreWithholdingTaxCodesLine.cessRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "CessRate")
        }
        if !B1PreWithholdingTaxCodesLine.hscRate.isRemoved {
            B1PreWithholdingTaxCodesLine.hscRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "HSCRate")
        }
        if !B1PreWithholdingTaxCodesLine.igstRate.isRemoved {
            B1PreWithholdingTaxCodesLine.igstRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "IGSTRate")
        }
        if !B1PreWithholdingTaxCodesLine.cgstRate.isRemoved {
            B1PreWithholdingTaxCodesLine.cgstRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "CGSTRate")
        }
        if !B1PreWithholdingTaxCodesLine.sgstRate.isRemoved {
            B1PreWithholdingTaxCodesLine.sgstRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "SGSTRate")
        }
        if !B1PreWithholdingTaxCodesLine.utgstRate.isRemoved {
            B1PreWithholdingTaxCodesLine.utgstRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "UTGSTRate")
        }
        if !B1PreWithholdingTaxCodesLine.cessGSTRate.isRemoved {
            B1PreWithholdingTaxCodesLine.cessGSTRate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "CessGSTRate")
        }
        if !B1PreWithholdingTaxCodesLine.lineNum.isRemoved {
            B1PreWithholdingTaxCodesLine.lineNum = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "LineNum")
        }
        if !B1PreWithholdingTaxCodesLine.progressiveTaxLines.isRemoved {
            B1PreWithholdingTaxCodesLine.progressiveTaxLines = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "ProgressiveTax_Lines")
        }
        if !B1PreWithholdingTaxCodesLine.withholdingTaxCodesValueRangeLines.isRemoved {
            B1PreWithholdingTaxCodesLine.withholdingTaxCodesValueRangeLines = B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.property(withName: "WithholdingTaxCodes_ValueRange_Lines")
        }
        if !B1PreWithholdingTaxCodesValueRangeLine.valueFrom.isRemoved {
            B1PreWithholdingTaxCodesValueRangeLine.valueFrom = B1ClassMetadata.ComplexTypes.withholdingTaxCodesValueRangeLine.property(withName: "ValueFrom")
        }
        if !B1PreWithholdingTaxCodesValueRangeLine.wTaxToBeDeductible.isRemoved {
            B1PreWithholdingTaxCodesValueRangeLine.wTaxToBeDeductible = B1ClassMetadata.ComplexTypes.withholdingTaxCodesValueRangeLine.property(withName: "WTaxToBeDeductible")
        }
        if !B1PreWithholdingTaxCodesValueRangeLine.rate.isRemoved {
            B1PreWithholdingTaxCodesValueRangeLine.rate = B1ClassMetadata.ComplexTypes.withholdingTaxCodesValueRangeLine.property(withName: "Rate")
        }
        if !B1PreWithholdingTaxData.wtCode.isRemoved {
            B1PreWithholdingTaxData.wtCode = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "WTCode")
        }
        if !B1PreWithholdingTaxData.wtAmountSys.isRemoved {
            B1PreWithholdingTaxData.wtAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "WTAmountSys")
        }
        if !B1PreWithholdingTaxData.wtAmountFC.isRemoved {
            B1PreWithholdingTaxData.wtAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "WTAmountFC")
        }
        if !B1PreWithholdingTaxData.wtAmount.isRemoved {
            B1PreWithholdingTaxData.wtAmount = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "WTAmount")
        }
        if !B1PreWithholdingTaxData.withholdingType.isRemoved {
            B1PreWithholdingTaxData.withholdingType = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "WithholdingType")
        }
        if !B1PreWithholdingTaxData.taxableAmountinSys.isRemoved {
            B1PreWithholdingTaxData.taxableAmountinSys = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "TaxableAmountinSys")
        }
        if !B1PreWithholdingTaxData.taxableAmountFC.isRemoved {
            B1PreWithholdingTaxData.taxableAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "TaxableAmountFC")
        }
        if !B1PreWithholdingTaxData.taxableAmount.isRemoved {
            B1PreWithholdingTaxData.taxableAmount = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "TaxableAmount")
        }
        if !B1PreWithholdingTaxData.roundingType.isRemoved {
            B1PreWithholdingTaxData.roundingType = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "RoundingType")
        }
        if !B1PreWithholdingTaxData.rate.isRemoved {
            B1PreWithholdingTaxData.rate = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "Rate")
        }
        if !B1PreWithholdingTaxData.criteria.isRemoved {
            B1PreWithholdingTaxData.criteria = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "Criteria")
        }
        if !B1PreWithholdingTaxData.category.isRemoved {
            B1PreWithholdingTaxData.category = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "Category")
        }
        if !B1PreWithholdingTaxData.baseType.isRemoved {
            B1PreWithholdingTaxData.baseType = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "BaseType")
        }
        if !B1PreWithholdingTaxData.appliedWTAmountSys.isRemoved {
            B1PreWithholdingTaxData.appliedWTAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "AppliedWTAmountSys")
        }
        if !B1PreWithholdingTaxData.appliedWTAmountFC.isRemoved {
            B1PreWithholdingTaxData.appliedWTAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "AppliedWTAmountFC")
        }
        if !B1PreWithholdingTaxData.appliedWTAmount.isRemoved {
            B1PreWithholdingTaxData.appliedWTAmount = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "AppliedWTAmount")
        }
        if !B1PreWithholdingTaxData.glAccount.isRemoved {
            B1PreWithholdingTaxData.glAccount = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "GLAccount")
        }
        if !B1PreWithholdingTaxData.lineNum.isRemoved {
            B1PreWithholdingTaxData.lineNum = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "LineNum")
        }
        if !B1PreWithholdingTaxData.baseDocEntry.isRemoved {
            B1PreWithholdingTaxData.baseDocEntry = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "BaseDocEntry")
        }
        if !B1PreWithholdingTaxData.baseDocLine.isRemoved {
            B1PreWithholdingTaxData.baseDocLine = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "BaseDocLine")
        }
        if !B1PreWithholdingTaxData.baseDocType.isRemoved {
            B1PreWithholdingTaxData.baseDocType = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "BaseDocType")
        }
        if !B1PreWithholdingTaxData.baseDocumentReference.isRemoved {
            B1PreWithholdingTaxData.baseDocumentReference = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "BaseDocumentReference")
        }
        if !B1PreWithholdingTaxData.status.isRemoved {
            B1PreWithholdingTaxData.status = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "Status")
        }
        if !B1PreWithholdingTaxData.targetAbsEntry.isRemoved {
            B1PreWithholdingTaxData.targetAbsEntry = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "TargetAbsEntry")
        }
        if !B1PreWithholdingTaxData.targetDocumentType.isRemoved {
            B1PreWithholdingTaxData.targetDocumentType = B1ClassMetadata.ComplexTypes.withholdingTaxData.property(withName: "TargetDocumentType")
        }
        if !B1PreWithholdingTaxDataWTX.wtAmountSys.isRemoved {
            B1PreWithholdingTaxDataWTX.wtAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "WTAmountSys")
        }
        if !B1PreWithholdingTaxDataWTX.wtAmountFC.isRemoved {
            B1PreWithholdingTaxDataWTX.wtAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "WTAmountFC")
        }
        if !B1PreWithholdingTaxDataWTX.wtAmount.isRemoved {
            B1PreWithholdingTaxDataWTX.wtAmount = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "WTAmount")
        }
        if !B1PreWithholdingTaxDataWTX.withholdingType.isRemoved {
            B1PreWithholdingTaxDataWTX.withholdingType = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "WithholdingType")
        }
        if !B1PreWithholdingTaxDataWTX.taxableAmountinSys.isRemoved {
            B1PreWithholdingTaxDataWTX.taxableAmountinSys = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "TaxableAmountinSys")
        }
        if !B1PreWithholdingTaxDataWTX.taxableAmountFC.isRemoved {
            B1PreWithholdingTaxDataWTX.taxableAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "TaxableAmountFC")
        }
        if !B1PreWithholdingTaxDataWTX.taxableAmount.isRemoved {
            B1PreWithholdingTaxDataWTX.taxableAmount = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "TaxableAmount")
        }
        if !B1PreWithholdingTaxDataWTX.rate.isRemoved {
            B1PreWithholdingTaxDataWTX.rate = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "Rate")
        }
        if !B1PreWithholdingTaxDataWTX.category.isRemoved {
            B1PreWithholdingTaxDataWTX.category = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "Category")
        }
        if !B1PreWithholdingTaxDataWTX.baseType.isRemoved {
            B1PreWithholdingTaxDataWTX.baseType = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseType")
        }
        if !B1PreWithholdingTaxDataWTX.appliedWTAmountSys.isRemoved {
            B1PreWithholdingTaxDataWTX.appliedWTAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AppliedWTAmountSys")
        }
        if !B1PreWithholdingTaxDataWTX.appliedWTAmountFC.isRemoved {
            B1PreWithholdingTaxDataWTX.appliedWTAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AppliedWTAmountFC")
        }
        if !B1PreWithholdingTaxDataWTX.appliedWTAmount.isRemoved {
            B1PreWithholdingTaxDataWTX.appliedWTAmount = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AppliedWTAmount")
        }
        if !B1PreWithholdingTaxDataWTX.glAccount.isRemoved {
            B1PreWithholdingTaxDataWTX.glAccount = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "GLAccount")
        }
        if !B1PreWithholdingTaxDataWTX.lineNum.isRemoved {
            B1PreWithholdingTaxDataWTX.lineNum = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "LineNum")
        }
        if !B1PreWithholdingTaxDataWTX.baseDocEntry.isRemoved {
            B1PreWithholdingTaxDataWTX.baseDocEntry = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseDocEntry")
        }
        if !B1PreWithholdingTaxDataWTX.baseDocLine.isRemoved {
            B1PreWithholdingTaxDataWTX.baseDocLine = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseDocLine")
        }
        if !B1PreWithholdingTaxDataWTX.baseDocType.isRemoved {
            B1PreWithholdingTaxDataWTX.baseDocType = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseDocType")
        }
        if !B1PreWithholdingTaxDataWTX.wtAbsID.isRemoved {
            B1PreWithholdingTaxDataWTX.wtAbsID = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "WTAbsId")
        }
        if !B1PreWithholdingTaxDataWTX.exemptRate.isRemoved {
            B1PreWithholdingTaxDataWTX.exemptRate = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "ExemptRate")
        }
        if !B1PreWithholdingTaxDataWTX.baseNetAmountSys.isRemoved {
            B1PreWithholdingTaxDataWTX.baseNetAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseNetAmountSys")
        }
        if !B1PreWithholdingTaxDataWTX.baseNetAmountFC.isRemoved {
            B1PreWithholdingTaxDataWTX.baseNetAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseNetAmountFC")
        }
        if !B1PreWithholdingTaxDataWTX.baseNetAmount.isRemoved {
            B1PreWithholdingTaxDataWTX.baseNetAmount = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseNetAmount")
        }
        if !B1PreWithholdingTaxDataWTX.baseVatmountSys.isRemoved {
            B1PreWithholdingTaxDataWTX.baseVatmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseVatmountSys")
        }
        if !B1PreWithholdingTaxDataWTX.baseVatmountFC.isRemoved {
            B1PreWithholdingTaxDataWTX.baseVatmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseVatmountFC")
        }
        if !B1PreWithholdingTaxDataWTX.baseVatmount.isRemoved {
            B1PreWithholdingTaxDataWTX.baseVatmount = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "BaseVatmount")
        }
        if !B1PreWithholdingTaxDataWTX.accumBaseAmountSys.isRemoved {
            B1PreWithholdingTaxDataWTX.accumBaseAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AccumBaseAmountSys")
        }
        if !B1PreWithholdingTaxDataWTX.accumBaseAmountFC.isRemoved {
            B1PreWithholdingTaxDataWTX.accumBaseAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AccumBaseAmountFC")
        }
        if !B1PreWithholdingTaxDataWTX.accumBaseAmount.isRemoved {
            B1PreWithholdingTaxDataWTX.accumBaseAmount = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AccumBaseAmount")
        }
        if !B1PreWithholdingTaxDataWTX.accumWTaxAmountSys.isRemoved {
            B1PreWithholdingTaxDataWTX.accumWTaxAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AccumWTaxAmountSys")
        }
        if !B1PreWithholdingTaxDataWTX.accumWTaxAmountFC.isRemoved {
            B1PreWithholdingTaxDataWTX.accumWTaxAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AccumWTaxAmountFC")
        }
        if !B1PreWithholdingTaxDataWTX.accumWTaxAmount.isRemoved {
            B1PreWithholdingTaxDataWTX.accumWTaxAmount = B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.property(withName: "AccumWTaxAmount")
        }
        if !B1PreWithholdingTaxLine.wtCode.isRemoved {
            B1PreWithholdingTaxLine.wtCode = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "WTCode")
        }
        if !B1PreWithholdingTaxLine.wtAmountSys.isRemoved {
            B1PreWithholdingTaxLine.wtAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "WTAmountSys")
        }
        if !B1PreWithholdingTaxLine.wtAmountFC.isRemoved {
            B1PreWithholdingTaxLine.wtAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "WTAmountFC")
        }
        if !B1PreWithholdingTaxLine.wtAmount.isRemoved {
            B1PreWithholdingTaxLine.wtAmount = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "WTAmount")
        }
        if !B1PreWithholdingTaxLine.withholdingType.isRemoved {
            B1PreWithholdingTaxLine.withholdingType = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "WithholdingType")
        }
        if !B1PreWithholdingTaxLine.taxableAmountinSys.isRemoved {
            B1PreWithholdingTaxLine.taxableAmountinSys = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "TaxableAmountinSys")
        }
        if !B1PreWithholdingTaxLine.taxableAmountFC.isRemoved {
            B1PreWithholdingTaxLine.taxableAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "TaxableAmountFC")
        }
        if !B1PreWithholdingTaxLine.taxableAmount.isRemoved {
            B1PreWithholdingTaxLine.taxableAmount = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "TaxableAmount")
        }
        if !B1PreWithholdingTaxLine.roundingType.isRemoved {
            B1PreWithholdingTaxLine.roundingType = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "RoundingType")
        }
        if !B1PreWithholdingTaxLine.rate.isRemoved {
            B1PreWithholdingTaxLine.rate = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "Rate")
        }
        if !B1PreWithholdingTaxLine.criteria.isRemoved {
            B1PreWithholdingTaxLine.criteria = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "Criteria")
        }
        if !B1PreWithholdingTaxLine.category.isRemoved {
            B1PreWithholdingTaxLine.category = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "Category")
        }
        if !B1PreWithholdingTaxLine.baseType.isRemoved {
            B1PreWithholdingTaxLine.baseType = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "BaseType")
        }
        if !B1PreWithholdingTaxLine.appliedWTAmountSys.isRemoved {
            B1PreWithholdingTaxLine.appliedWTAmountSys = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "AppliedWTAmountSys")
        }
        if !B1PreWithholdingTaxLine.appliedWTAmountFC.isRemoved {
            B1PreWithholdingTaxLine.appliedWTAmountFC = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "AppliedWTAmountFC")
        }
        if !B1PreWithholdingTaxLine.appliedWTAmount.isRemoved {
            B1PreWithholdingTaxLine.appliedWTAmount = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "AppliedWTAmount")
        }
        if !B1PreWithholdingTaxLine.glAccount.isRemoved {
            B1PreWithholdingTaxLine.glAccount = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "GLAccount")
        }
        if !B1PreWithholdingTaxLine.lineNum.isRemoved {
            B1PreWithholdingTaxLine.lineNum = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "LineNum")
        }
        if !B1PreWithholdingTaxLine.baseDocEntry.isRemoved {
            B1PreWithholdingTaxLine.baseDocEntry = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "BaseDocEntry")
        }
        if !B1PreWithholdingTaxLine.baseDocLine.isRemoved {
            B1PreWithholdingTaxLine.baseDocLine = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "BaseDocLine")
        }
        if !B1PreWithholdingTaxLine.baseDocType.isRemoved {
            B1PreWithholdingTaxLine.baseDocType = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "BaseDocType")
        }
        if !B1PreWithholdingTaxLine.baseDocumentReference.isRemoved {
            B1PreWithholdingTaxLine.baseDocumentReference = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "BaseDocumentReference")
        }
        if !B1PreWithholdingTaxLine.status.isRemoved {
            B1PreWithholdingTaxLine.status = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "Status")
        }
        if !B1PreWithholdingTaxLine.targetAbsEntry.isRemoved {
            B1PreWithholdingTaxLine.targetAbsEntry = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "TargetAbsEntry")
        }
        if !B1PreWithholdingTaxLine.targetDocumentType.isRemoved {
            B1PreWithholdingTaxLine.targetDocumentType = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "TargetDocumentType")
        }
        if !B1PreWithholdingTaxLine.cstCodeIncoming.isRemoved {
            B1PreWithholdingTaxLine.cstCodeIncoming = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "CSTCodeIncoming")
        }
        if !B1PreWithholdingTaxLine.cstCodeOutgoing.isRemoved {
            B1PreWithholdingTaxLine.cstCodeOutgoing = B1ClassMetadata.ComplexTypes.withholdingTaxLine.property(withName: "CSTCodeOutgoing")
        }
        if !B1PreWizardPaymentMethodParams.paymentMethodCode.isRemoved {
            B1PreWizardPaymentMethodParams.paymentMethodCode = B1ClassMetadata.ComplexTypes.wizardPaymentMethodParams.property(withName: "PaymentMethodCode")
        }
        if !B1PreWorkflowApprovalTaskListParams.status.isRemoved {
            B1PreWorkflowApprovalTaskListParams.status = B1ClassMetadata.ComplexTypes.workflowApprovalTaskListParams.property(withName: "Status")
        }
        if !B1PreWorkflowTask.instanceID.isRemoved {
            B1PreWorkflowTask.instanceID = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "InstanceID")
        }
        if !B1PreWorkflowTask.taskID.isRemoved {
            B1PreWorkflowTask.taskID = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "TaskID")
        }
        if !B1PreWorkflowTask.templateID.isRemoved {
            B1PreWorkflowTask.templateID = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "TemplateID")
        }
        if !B1PreWorkflowTask.templateName.isRemoved {
            B1PreWorkflowTask.templateName = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "TemplateName")
        }
        if !B1PreWorkflowTask.description.isRemoved {
            B1PreWorkflowTask.description = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "Description")
        }
        if !B1PreWorkflowTask.operation.isRemoved {
            B1PreWorkflowTask.operation = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "Operation")
        }
        if !B1PreWorkflowTask.type_.isRemoved {
            B1PreWorkflowTask.type_ = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "Type")
        }
        if !B1PreWorkflowTask.owner.isRemoved {
            B1PreWorkflowTask.owner = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "Owner")
        }
        if !B1PreWorkflowTask.priority.isRemoved {
            B1PreWorkflowTask.priority = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "Priority")
        }
        if !B1PreWorkflowTask.status.isRemoved {
            B1PreWorkflowTask.status = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "Status")
        }
        if !B1PreWorkflowTask.name.isRemoved {
            B1PreWorkflowTask.name = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "Name")
        }
        if !B1PreWorkflowTask.workflowTaskInputObjectCollection.isRemoved {
            B1PreWorkflowTask.workflowTaskInputObjectCollection = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "WorkflowTaskInputObjectCollection")
        }
        if !B1PreWorkflowTask.workflowTaskNoteCollection.isRemoved {
            B1PreWorkflowTask.workflowTaskNoteCollection = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "WorkflowTaskNoteCollection")
        }
        if !B1PreWorkflowTask.workflowTaskOutputObjectCollection.isRemoved {
            B1PreWorkflowTask.workflowTaskOutputObjectCollection = B1ClassMetadata.ComplexTypes.workflowTask.property(withName: "WorkflowTaskOutputObjectCollection")
        }
        if !B1PreWorkflowTaskCompleteParams.taskID.isRemoved {
            B1PreWorkflowTaskCompleteParams.taskID = B1ClassMetadata.ComplexTypes.workflowTaskCompleteParams.property(withName: "TaskID")
        }
        if !B1PreWorkflowTaskCompleteParams.note.isRemoved {
            B1PreWorkflowTaskCompleteParams.note = B1ClassMetadata.ComplexTypes.workflowTaskCompleteParams.property(withName: "Note")
        }
        if !B1PreWorkflowTaskCompleteParams.triggerParams.isRemoved {
            B1PreWorkflowTaskCompleteParams.triggerParams = B1ClassMetadata.ComplexTypes.workflowTaskCompleteParams.property(withName: "TriggerParams")
        }
        if !B1PreWorkflowTaskInputObject.taskID.isRemoved {
            B1PreWorkflowTaskInputObject.taskID = B1ClassMetadata.ComplexTypes.workflowTaskInputObject.property(withName: "TaskID")
        }
        if !B1PreWorkflowTaskInputObject.lineID.isRemoved {
            B1PreWorkflowTaskInputObject.lineID = B1ClassMetadata.ComplexTypes.workflowTaskInputObject.property(withName: "LineId")
        }
        if !B1PreWorkflowTaskInputObject.type_.isRemoved {
            B1PreWorkflowTaskInputObject.type_ = B1ClassMetadata.ComplexTypes.workflowTaskInputObject.property(withName: "Type")
        }
        if !B1PreWorkflowTaskInputObject.key.isRemoved {
            B1PreWorkflowTaskInputObject.key = B1ClassMetadata.ComplexTypes.workflowTaskInputObject.property(withName: "Key")
        }
        if !B1PreWorkflowTaskInputObject.subType.isRemoved {
            B1PreWorkflowTaskInputObject.subType = B1ClassMetadata.ComplexTypes.workflowTaskInputObject.property(withName: "SubType")
        }
        if !B1PreWorkflowTaskInputObject.detail.isRemoved {
            B1PreWorkflowTaskInputObject.detail = B1ClassMetadata.ComplexTypes.workflowTaskInputObject.property(withName: "Detail")
        }
        if !B1PreWorkflowTaskNote.taskID.isRemoved {
            B1PreWorkflowTaskNote.taskID = B1ClassMetadata.ComplexTypes.workflowTaskNote.property(withName: "TaskID")
        }
        if !B1PreWorkflowTaskNote.lineID.isRemoved {
            B1PreWorkflowTaskNote.lineID = B1ClassMetadata.ComplexTypes.workflowTaskNote.property(withName: "LineId")
        }
        if !B1PreWorkflowTaskNote.note.isRemoved {
            B1PreWorkflowTaskNote.note = B1ClassMetadata.ComplexTypes.workflowTaskNote.property(withName: "Note")
        }
        if !B1PreWorkflowTaskNote.creator.isRemoved {
            B1PreWorkflowTaskNote.creator = B1ClassMetadata.ComplexTypes.workflowTaskNote.property(withName: "Creator")
        }
        if !B1PreWorkflowTaskNote.noteDate.isRemoved {
            B1PreWorkflowTaskNote.noteDate = B1ClassMetadata.ComplexTypes.workflowTaskNote.property(withName: "NoteDate")
        }
        if !B1PreWorkflowTaskOutputObject.taskID.isRemoved {
            B1PreWorkflowTaskOutputObject.taskID = B1ClassMetadata.ComplexTypes.workflowTaskOutputObject.property(withName: "TaskID")
        }
        if !B1PreWorkflowTaskOutputObject.lineID.isRemoved {
            B1PreWorkflowTaskOutputObject.lineID = B1ClassMetadata.ComplexTypes.workflowTaskOutputObject.property(withName: "LineId")
        }
        if !B1PreWorkflowTaskOutputObject.type_.isRemoved {
            B1PreWorkflowTaskOutputObject.type_ = B1ClassMetadata.ComplexTypes.workflowTaskOutputObject.property(withName: "Type")
        }
        if !B1PreWorkflowTaskOutputObject.key.isRemoved {
            B1PreWorkflowTaskOutputObject.key = B1ClassMetadata.ComplexTypes.workflowTaskOutputObject.property(withName: "Key")
        }
        if !B1PreWorkflowTaskOutputObject.subType.isRemoved {
            B1PreWorkflowTaskOutputObject.subType = B1ClassMetadata.ComplexTypes.workflowTaskOutputObject.property(withName: "SubType")
        }
        if !B1PreB1Session.version.isRemoved {
            B1PreB1Session.version = B1ClassMetadata.EntityTypes.b1Session.property(withName: "Version")
        }
        if !B1PreB1Session.sessionTimeout.isRemoved {
            B1PreB1Session.sessionTimeout = B1ClassMetadata.EntityTypes.b1Session.property(withName: "SessionTimeout")
        }
        if !B1PreB1Session.sessionID.isRemoved {
            B1PreB1Session.sessionID = B1ClassMetadata.EntityTypes.b1Session.property(withName: "SessionId")
        }
        if !B1PreDocument.docEntry.isRemoved {
            B1PreDocument.docEntry = B1ClassMetadata.EntityTypes.document.property(withName: "DocEntry")
        }
        if !B1PreDocument.docNum.isRemoved {
            B1PreDocument.docNum = B1ClassMetadata.EntityTypes.document.property(withName: "DocNum")
        }
        if !B1PreDocument.docType.isRemoved {
            B1PreDocument.docType = B1ClassMetadata.EntityTypes.document.property(withName: "DocType")
        }
        if !B1PreDocument.handWritten.isRemoved {
            B1PreDocument.handWritten = B1ClassMetadata.EntityTypes.document.property(withName: "HandWritten")
        }
        if !B1PreDocument.printed.isRemoved {
            B1PreDocument.printed = B1ClassMetadata.EntityTypes.document.property(withName: "Printed")
        }
        if !B1PreDocument.docDate.isRemoved {
            B1PreDocument.docDate = B1ClassMetadata.EntityTypes.document.property(withName: "DocDate")
        }
        if !B1PreDocument.docDueDate.isRemoved {
            B1PreDocument.docDueDate = B1ClassMetadata.EntityTypes.document.property(withName: "DocDueDate")
        }
        if !B1PreDocument.cardCode.isRemoved {
            B1PreDocument.cardCode = B1ClassMetadata.EntityTypes.document.property(withName: "CardCode")
        }
        if !B1PreDocument.cardName.isRemoved {
            B1PreDocument.cardName = B1ClassMetadata.EntityTypes.document.property(withName: "CardName")
        }
        if !B1PreDocument.address.isRemoved {
            B1PreDocument.address = B1ClassMetadata.EntityTypes.document.property(withName: "Address")
        }
        if !B1PreDocument.numAtCard.isRemoved {
            B1PreDocument.numAtCard = B1ClassMetadata.EntityTypes.document.property(withName: "NumAtCard")
        }
        if !B1PreDocument.docTotal.isRemoved {
            B1PreDocument.docTotal = B1ClassMetadata.EntityTypes.document.property(withName: "DocTotal")
        }
        if !B1PreDocument.attachmentEntry.isRemoved {
            B1PreDocument.attachmentEntry = B1ClassMetadata.EntityTypes.document.property(withName: "AttachmentEntry")
        }
        if !B1PreDocument.docCurrency.isRemoved {
            B1PreDocument.docCurrency = B1ClassMetadata.EntityTypes.document.property(withName: "DocCurrency")
        }
        if !B1PreDocument.docRate.isRemoved {
            B1PreDocument.docRate = B1ClassMetadata.EntityTypes.document.property(withName: "DocRate")
        }
        if !B1PreDocument.reference1.isRemoved {
            B1PreDocument.reference1 = B1ClassMetadata.EntityTypes.document.property(withName: "Reference1")
        }
        if !B1PreDocument.reference2.isRemoved {
            B1PreDocument.reference2 = B1ClassMetadata.EntityTypes.document.property(withName: "Reference2")
        }
        if !B1PreDocument.comments.isRemoved {
            B1PreDocument.comments = B1ClassMetadata.EntityTypes.document.property(withName: "Comments")
        }
        if !B1PreDocument.journalMemo.isRemoved {
            B1PreDocument.journalMemo = B1ClassMetadata.EntityTypes.document.property(withName: "JournalMemo")
        }
        if !B1PreDocument.paymentGroupCode.isRemoved {
            B1PreDocument.paymentGroupCode = B1ClassMetadata.EntityTypes.document.property(withName: "PaymentGroupCode")
        }
        if !B1PreDocument.docTime.isRemoved {
            B1PreDocument.docTime = B1ClassMetadata.EntityTypes.document.property(withName: "DocTime")
        }
        if !B1PreDocument.salesPersonCode.isRemoved {
            B1PreDocument.salesPersonCode = B1ClassMetadata.EntityTypes.document.property(withName: "SalesPersonCode")
        }
        if !B1PreDocument.transportationCode.isRemoved {
            B1PreDocument.transportationCode = B1ClassMetadata.EntityTypes.document.property(withName: "TransportationCode")
        }
        if !B1PreDocument.confirmed.isRemoved {
            B1PreDocument.confirmed = B1ClassMetadata.EntityTypes.document.property(withName: "Confirmed")
        }
        if !B1PreDocument.importFileNum.isRemoved {
            B1PreDocument.importFileNum = B1ClassMetadata.EntityTypes.document.property(withName: "ImportFileNum")
        }
        if !B1PreDocument.summeryType.isRemoved {
            B1PreDocument.summeryType = B1ClassMetadata.EntityTypes.document.property(withName: "SummeryType")
        }
        if !B1PreDocument.contactPersonCode.isRemoved {
            B1PreDocument.contactPersonCode = B1ClassMetadata.EntityTypes.document.property(withName: "ContactPersonCode")
        }
        if !B1PreDocument.showSCN.isRemoved {
            B1PreDocument.showSCN = B1ClassMetadata.EntityTypes.document.property(withName: "ShowSCN")
        }
        if !B1PreDocument.series.isRemoved {
            B1PreDocument.series = B1ClassMetadata.EntityTypes.document.property(withName: "Series")
        }
        if !B1PreDocument.taxDate.isRemoved {
            B1PreDocument.taxDate = B1ClassMetadata.EntityTypes.document.property(withName: "TaxDate")
        }
        if !B1PreDocument.partialSupply.isRemoved {
            B1PreDocument.partialSupply = B1ClassMetadata.EntityTypes.document.property(withName: "PartialSupply")
        }
        if !B1PreDocument.docObjectCode.isRemoved {
            B1PreDocument.docObjectCode = B1ClassMetadata.EntityTypes.document.property(withName: "DocObjectCode")
        }
        if !B1PreDocument.shipToCode.isRemoved {
            B1PreDocument.shipToCode = B1ClassMetadata.EntityTypes.document.property(withName: "ShipToCode")
        }
        if !B1PreDocument.indicator.isRemoved {
            B1PreDocument.indicator = B1ClassMetadata.EntityTypes.document.property(withName: "Indicator")
        }
        if !B1PreDocument.federalTaxID.isRemoved {
            B1PreDocument.federalTaxID = B1ClassMetadata.EntityTypes.document.property(withName: "FederalTaxID")
        }
        if !B1PreDocument.discountPercent.isRemoved {
            B1PreDocument.discountPercent = B1ClassMetadata.EntityTypes.document.property(withName: "DiscountPercent")
        }
        if !B1PreDocument.paymentReference.isRemoved {
            B1PreDocument.paymentReference = B1ClassMetadata.EntityTypes.document.property(withName: "PaymentReference")
        }
        if !B1PreDocument.creationDate.isRemoved {
            B1PreDocument.creationDate = B1ClassMetadata.EntityTypes.document.property(withName: "CreationDate")
        }
        if !B1PreDocument.updateDate.isRemoved {
            B1PreDocument.updateDate = B1ClassMetadata.EntityTypes.document.property(withName: "UpdateDate")
        }
        if !B1PreDocument.financialPeriod.isRemoved {
            B1PreDocument.financialPeriod = B1ClassMetadata.EntityTypes.document.property(withName: "FinancialPeriod")
        }
        if !B1PreDocument.transNum.isRemoved {
            B1PreDocument.transNum = B1ClassMetadata.EntityTypes.document.property(withName: "TransNum")
        }
        if !B1PreDocument.vatSum.isRemoved {
            B1PreDocument.vatSum = B1ClassMetadata.EntityTypes.document.property(withName: "VatSum")
        }
        if !B1PreDocument.vatSumSys.isRemoved {
            B1PreDocument.vatSumSys = B1ClassMetadata.EntityTypes.document.property(withName: "VatSumSys")
        }
        if !B1PreDocument.vatSumFc.isRemoved {
            B1PreDocument.vatSumFc = B1ClassMetadata.EntityTypes.document.property(withName: "VatSumFc")
        }
        if !B1PreDocument.netProcedure.isRemoved {
            B1PreDocument.netProcedure = B1ClassMetadata.EntityTypes.document.property(withName: "NetProcedure")
        }
        if !B1PreDocument.docTotalFc.isRemoved {
            B1PreDocument.docTotalFc = B1ClassMetadata.EntityTypes.document.property(withName: "DocTotalFc")
        }
        if !B1PreDocument.docTotalSys.isRemoved {
            B1PreDocument.docTotalSys = B1ClassMetadata.EntityTypes.document.property(withName: "DocTotalSys")
        }
        if !B1PreDocument.form1099.isRemoved {
            B1PreDocument.form1099 = B1ClassMetadata.EntityTypes.document.property(withName: "Form1099")
        }
        if !B1PreDocument.box1099.isRemoved {
            B1PreDocument.box1099 = B1ClassMetadata.EntityTypes.document.property(withName: "Box1099")
        }
        if !B1PreDocument.revisionPo.isRemoved {
            B1PreDocument.revisionPo = B1ClassMetadata.EntityTypes.document.property(withName: "RevisionPo")
        }
        if !B1PreDocument.requriedDate.isRemoved {
            B1PreDocument.requriedDate = B1ClassMetadata.EntityTypes.document.property(withName: "RequriedDate")
        }
        if !B1PreDocument.cancelDate.isRemoved {
            B1PreDocument.cancelDate = B1ClassMetadata.EntityTypes.document.property(withName: "CancelDate")
        }
        if !B1PreDocument.blockDunning.isRemoved {
            B1PreDocument.blockDunning = B1ClassMetadata.EntityTypes.document.property(withName: "BlockDunning")
        }
        if !B1PreDocument.submitted.isRemoved {
            B1PreDocument.submitted = B1ClassMetadata.EntityTypes.document.property(withName: "Submitted")
        }
        if !B1PreDocument.segment.isRemoved {
            B1PreDocument.segment = B1ClassMetadata.EntityTypes.document.property(withName: "Segment")
        }
        if !B1PreDocument.pickStatus.isRemoved {
            B1PreDocument.pickStatus = B1ClassMetadata.EntityTypes.document.property(withName: "PickStatus")
        }
        if !B1PreDocument.pick.isRemoved {
            B1PreDocument.pick = B1ClassMetadata.EntityTypes.document.property(withName: "Pick")
        }
        if !B1PreDocument.paymentMethod.isRemoved {
            B1PreDocument.paymentMethod = B1ClassMetadata.EntityTypes.document.property(withName: "PaymentMethod")
        }
        if !B1PreDocument.paymentBlock.isRemoved {
            B1PreDocument.paymentBlock = B1ClassMetadata.EntityTypes.document.property(withName: "PaymentBlock")
        }
        if !B1PreDocument.paymentBlockEntry.isRemoved {
            B1PreDocument.paymentBlockEntry = B1ClassMetadata.EntityTypes.document.property(withName: "PaymentBlockEntry")
        }
        if !B1PreDocument.centralBankIndicator.isRemoved {
            B1PreDocument.centralBankIndicator = B1ClassMetadata.EntityTypes.document.property(withName: "CentralBankIndicator")
        }
        if !B1PreDocument.maximumCashDiscount.isRemoved {
            B1PreDocument.maximumCashDiscount = B1ClassMetadata.EntityTypes.document.property(withName: "MaximumCashDiscount")
        }
        if !B1PreDocument.reserve.isRemoved {
            B1PreDocument.reserve = B1ClassMetadata.EntityTypes.document.property(withName: "Reserve")
        }
        if !B1PreDocument.project.isRemoved {
            B1PreDocument.project = B1ClassMetadata.EntityTypes.document.property(withName: "Project")
        }
        if !B1PreDocument.exemptionValidityDateFrom.isRemoved {
            B1PreDocument.exemptionValidityDateFrom = B1ClassMetadata.EntityTypes.document.property(withName: "ExemptionValidityDateFrom")
        }
        if !B1PreDocument.exemptionValidityDateTo.isRemoved {
            B1PreDocument.exemptionValidityDateTo = B1ClassMetadata.EntityTypes.document.property(withName: "ExemptionValidityDateTo")
        }
        if !B1PreDocument.wareHouseUpdateType.isRemoved {
            B1PreDocument.wareHouseUpdateType = B1ClassMetadata.EntityTypes.document.property(withName: "WareHouseUpdateType")
        }
        if !B1PreDocument.rounding.isRemoved {
            B1PreDocument.rounding = B1ClassMetadata.EntityTypes.document.property(withName: "Rounding")
        }
        if !B1PreDocument.externalCorrectedDocNum.isRemoved {
            B1PreDocument.externalCorrectedDocNum = B1ClassMetadata.EntityTypes.document.property(withName: "ExternalCorrectedDocNum")
        }
        if !B1PreDocument.internalCorrectedDocNum.isRemoved {
            B1PreDocument.internalCorrectedDocNum = B1ClassMetadata.EntityTypes.document.property(withName: "InternalCorrectedDocNum")
        }
        if !B1PreDocument.nextCorrectingDocument.isRemoved {
            B1PreDocument.nextCorrectingDocument = B1ClassMetadata.EntityTypes.document.property(withName: "NextCorrectingDocument")
        }
        if !B1PreDocument.deferredTax.isRemoved {
            B1PreDocument.deferredTax = B1ClassMetadata.EntityTypes.document.property(withName: "DeferredTax")
        }
        if !B1PreDocument.taxExemptionLetterNum.isRemoved {
            B1PreDocument.taxExemptionLetterNum = B1ClassMetadata.EntityTypes.document.property(withName: "TaxExemptionLetterNum")
        }
        if !B1PreDocument.wtApplied.isRemoved {
            B1PreDocument.wtApplied = B1ClassMetadata.EntityTypes.document.property(withName: "WTApplied")
        }
        if !B1PreDocument.wtAppliedFC.isRemoved {
            B1PreDocument.wtAppliedFC = B1ClassMetadata.EntityTypes.document.property(withName: "WTAppliedFC")
        }
        if !B1PreDocument.billOfExchangeReserved.isRemoved {
            B1PreDocument.billOfExchangeReserved = B1ClassMetadata.EntityTypes.document.property(withName: "BillOfExchangeReserved")
        }
        if !B1PreDocument.agentCode.isRemoved {
            B1PreDocument.agentCode = B1ClassMetadata.EntityTypes.document.property(withName: "AgentCode")
        }
        if !B1PreDocument.wtAppliedSC.isRemoved {
            B1PreDocument.wtAppliedSC = B1ClassMetadata.EntityTypes.document.property(withName: "WTAppliedSC")
        }
        if !B1PreDocument.totalEqualizationTax.isRemoved {
            B1PreDocument.totalEqualizationTax = B1ClassMetadata.EntityTypes.document.property(withName: "TotalEqualizationTax")
        }
        if !B1PreDocument.totalEqualizationTaxFC.isRemoved {
            B1PreDocument.totalEqualizationTaxFC = B1ClassMetadata.EntityTypes.document.property(withName: "TotalEqualizationTaxFC")
        }
        if !B1PreDocument.totalEqualizationTaxSC.isRemoved {
            B1PreDocument.totalEqualizationTaxSC = B1ClassMetadata.EntityTypes.document.property(withName: "TotalEqualizationTaxSC")
        }
        if !B1PreDocument.numberOfInstallments.isRemoved {
            B1PreDocument.numberOfInstallments = B1ClassMetadata.EntityTypes.document.property(withName: "NumberOfInstallments")
        }
        if !B1PreDocument.applyTaxOnFirstInstallment.isRemoved {
            B1PreDocument.applyTaxOnFirstInstallment = B1ClassMetadata.EntityTypes.document.property(withName: "ApplyTaxOnFirstInstallment")
        }
        if !B1PreDocument.wtNonSubjectAmount.isRemoved {
            B1PreDocument.wtNonSubjectAmount = B1ClassMetadata.EntityTypes.document.property(withName: "WTNonSubjectAmount")
        }
        if !B1PreDocument.wtNonSubjectAmountSC.isRemoved {
            B1PreDocument.wtNonSubjectAmountSC = B1ClassMetadata.EntityTypes.document.property(withName: "WTNonSubjectAmountSC")
        }
        if !B1PreDocument.wtNonSubjectAmountFC.isRemoved {
            B1PreDocument.wtNonSubjectAmountFC = B1ClassMetadata.EntityTypes.document.property(withName: "WTNonSubjectAmountFC")
        }
        if !B1PreDocument.wtExemptedAmount.isRemoved {
            B1PreDocument.wtExemptedAmount = B1ClassMetadata.EntityTypes.document.property(withName: "WTExemptedAmount")
        }
        if !B1PreDocument.wtExemptedAmountSC.isRemoved {
            B1PreDocument.wtExemptedAmountSC = B1ClassMetadata.EntityTypes.document.property(withName: "WTExemptedAmountSC")
        }
        if !B1PreDocument.wtExemptedAmountFC.isRemoved {
            B1PreDocument.wtExemptedAmountFC = B1ClassMetadata.EntityTypes.document.property(withName: "WTExemptedAmountFC")
        }
        if !B1PreDocument.baseAmount.isRemoved {
            B1PreDocument.baseAmount = B1ClassMetadata.EntityTypes.document.property(withName: "BaseAmount")
        }
        if !B1PreDocument.baseAmountSC.isRemoved {
            B1PreDocument.baseAmountSC = B1ClassMetadata.EntityTypes.document.property(withName: "BaseAmountSC")
        }
        if !B1PreDocument.baseAmountFC.isRemoved {
            B1PreDocument.baseAmountFC = B1ClassMetadata.EntityTypes.document.property(withName: "BaseAmountFC")
        }
        if !B1PreDocument.wtAmount.isRemoved {
            B1PreDocument.wtAmount = B1ClassMetadata.EntityTypes.document.property(withName: "WTAmount")
        }
        if !B1PreDocument.wtAmountSC.isRemoved {
            B1PreDocument.wtAmountSC = B1ClassMetadata.EntityTypes.document.property(withName: "WTAmountSC")
        }
        if !B1PreDocument.wtAmountFC.isRemoved {
            B1PreDocument.wtAmountFC = B1ClassMetadata.EntityTypes.document.property(withName: "WTAmountFC")
        }
        if !B1PreDocument.vatDate.isRemoved {
            B1PreDocument.vatDate = B1ClassMetadata.EntityTypes.document.property(withName: "VatDate")
        }
        if !B1PreDocument.documentsOwner.isRemoved {
            B1PreDocument.documentsOwner = B1ClassMetadata.EntityTypes.document.property(withName: "DocumentsOwner")
        }
        if !B1PreDocument.folioPrefixString.isRemoved {
            B1PreDocument.folioPrefixString = B1ClassMetadata.EntityTypes.document.property(withName: "FolioPrefixString")
        }
        if !B1PreDocument.folioNumber.isRemoved {
            B1PreDocument.folioNumber = B1ClassMetadata.EntityTypes.document.property(withName: "FolioNumber")
        }
        if !B1PreDocument.documentSubType.isRemoved {
            B1PreDocument.documentSubType = B1ClassMetadata.EntityTypes.document.property(withName: "DocumentSubType")
        }
        if !B1PreDocument.bpChannelCode.isRemoved {
            B1PreDocument.bpChannelCode = B1ClassMetadata.EntityTypes.document.property(withName: "BPChannelCode")
        }
        if !B1PreDocument.bpChannelContact.isRemoved {
            B1PreDocument.bpChannelContact = B1ClassMetadata.EntityTypes.document.property(withName: "BPChannelContact")
        }
        if !B1PreDocument.address2.isRemoved {
            B1PreDocument.address2 = B1ClassMetadata.EntityTypes.document.property(withName: "Address2")
        }
        if !B1PreDocument.documentStatus.isRemoved {
            B1PreDocument.documentStatus = B1ClassMetadata.EntityTypes.document.property(withName: "DocumentStatus")
        }
        if !B1PreDocument.periodIndicator.isRemoved {
            B1PreDocument.periodIndicator = B1ClassMetadata.EntityTypes.document.property(withName: "PeriodIndicator")
        }
        if !B1PreDocument.payToCode.isRemoved {
            B1PreDocument.payToCode = B1ClassMetadata.EntityTypes.document.property(withName: "PayToCode")
        }
        if !B1PreDocument.manualNumber.isRemoved {
            B1PreDocument.manualNumber = B1ClassMetadata.EntityTypes.document.property(withName: "ManualNumber")
        }
        if !B1PreDocument.useShpdGoodsAct.isRemoved {
            B1PreDocument.useShpdGoodsAct = B1ClassMetadata.EntityTypes.document.property(withName: "UseShpdGoodsAct")
        }
        if !B1PreDocument.isPayToBank.isRemoved {
            B1PreDocument.isPayToBank = B1ClassMetadata.EntityTypes.document.property(withName: "IsPayToBank")
        }
        if !B1PreDocument.payToBankCountry.isRemoved {
            B1PreDocument.payToBankCountry = B1ClassMetadata.EntityTypes.document.property(withName: "PayToBankCountry")
        }
        if !B1PreDocument.payToBankCode.isRemoved {
            B1PreDocument.payToBankCode = B1ClassMetadata.EntityTypes.document.property(withName: "PayToBankCode")
        }
        if !B1PreDocument.payToBankAccountNo.isRemoved {
            B1PreDocument.payToBankAccountNo = B1ClassMetadata.EntityTypes.document.property(withName: "PayToBankAccountNo")
        }
        if !B1PreDocument.payToBankBranch.isRemoved {
            B1PreDocument.payToBankBranch = B1ClassMetadata.EntityTypes.document.property(withName: "PayToBankBranch")
        }
        if !B1PreDocument.bplIDAssignedToInvoice.isRemoved {
            B1PreDocument.bplIDAssignedToInvoice = B1ClassMetadata.EntityTypes.document.property(withName: "BPL_IDAssignedToInvoice")
        }
        if !B1PreDocument.downPayment.isRemoved {
            B1PreDocument.downPayment = B1ClassMetadata.EntityTypes.document.property(withName: "DownPayment")
        }
        if !B1PreDocument.reserveInvoice.isRemoved {
            B1PreDocument.reserveInvoice = B1ClassMetadata.EntityTypes.document.property(withName: "ReserveInvoice")
        }
        if !B1PreDocument.languageCode.isRemoved {
            B1PreDocument.languageCode = B1ClassMetadata.EntityTypes.document.property(withName: "LanguageCode")
        }
        if !B1PreDocument.trackingNumber.isRemoved {
            B1PreDocument.trackingNumber = B1ClassMetadata.EntityTypes.document.property(withName: "TrackingNumber")
        }
        if !B1PreDocument.pickRemark.isRemoved {
            B1PreDocument.pickRemark = B1ClassMetadata.EntityTypes.document.property(withName: "PickRemark")
        }
        if !B1PreDocument.closingDate.isRemoved {
            B1PreDocument.closingDate = B1ClassMetadata.EntityTypes.document.property(withName: "ClosingDate")
        }
        if !B1PreDocument.sequenceCode.isRemoved {
            B1PreDocument.sequenceCode = B1ClassMetadata.EntityTypes.document.property(withName: "SequenceCode")
        }
        if !B1PreDocument.sequenceSerial.isRemoved {
            B1PreDocument.sequenceSerial = B1ClassMetadata.EntityTypes.document.property(withName: "SequenceSerial")
        }
        if !B1PreDocument.seriesString.isRemoved {
            B1PreDocument.seriesString = B1ClassMetadata.EntityTypes.document.property(withName: "SeriesString")
        }
        if !B1PreDocument.subSeriesString.isRemoved {
            B1PreDocument.subSeriesString = B1ClassMetadata.EntityTypes.document.property(withName: "SubSeriesString")
        }
        if !B1PreDocument.sequenceModel.isRemoved {
            B1PreDocument.sequenceModel = B1ClassMetadata.EntityTypes.document.property(withName: "SequenceModel")
        }
        if !B1PreDocument.useCorrectionVATGroup.isRemoved {
            B1PreDocument.useCorrectionVATGroup = B1ClassMetadata.EntityTypes.document.property(withName: "UseCorrectionVATGroup")
        }
        if !B1PreDocument.totalDiscount.isRemoved {
            B1PreDocument.totalDiscount = B1ClassMetadata.EntityTypes.document.property(withName: "TotalDiscount")
        }
        if !B1PreDocument.downPaymentAmount.isRemoved {
            B1PreDocument.downPaymentAmount = B1ClassMetadata.EntityTypes.document.property(withName: "DownPaymentAmount")
        }
        if !B1PreDocument.downPaymentPercentage.isRemoved {
            B1PreDocument.downPaymentPercentage = B1ClassMetadata.EntityTypes.document.property(withName: "DownPaymentPercentage")
        }
        if !B1PreDocument.downPaymentType.isRemoved {
            B1PreDocument.downPaymentType = B1ClassMetadata.EntityTypes.document.property(withName: "DownPaymentType")
        }
        if !B1PreDocument.downPaymentAmountSC.isRemoved {
            B1PreDocument.downPaymentAmountSC = B1ClassMetadata.EntityTypes.document.property(withName: "DownPaymentAmountSC")
        }
        if !B1PreDocument.downPaymentAmountFC.isRemoved {
            B1PreDocument.downPaymentAmountFC = B1ClassMetadata.EntityTypes.document.property(withName: "DownPaymentAmountFC")
        }
        if !B1PreDocument.vatPercent.isRemoved {
            B1PreDocument.vatPercent = B1ClassMetadata.EntityTypes.document.property(withName: "VatPercent")
        }
        if !B1PreDocument.serviceGrossProfitPercent.isRemoved {
            B1PreDocument.serviceGrossProfitPercent = B1ClassMetadata.EntityTypes.document.property(withName: "ServiceGrossProfitPercent")
        }
        if !B1PreDocument.openingRemarks.isRemoved {
            B1PreDocument.openingRemarks = B1ClassMetadata.EntityTypes.document.property(withName: "OpeningRemarks")
        }
        if !B1PreDocument.closingRemarks.isRemoved {
            B1PreDocument.closingRemarks = B1ClassMetadata.EntityTypes.document.property(withName: "ClosingRemarks")
        }
        if !B1PreDocument.roundingDiffAmount.isRemoved {
            B1PreDocument.roundingDiffAmount = B1ClassMetadata.EntityTypes.document.property(withName: "RoundingDiffAmount")
        }
        if !B1PreDocument.roundingDiffAmountFC.isRemoved {
            B1PreDocument.roundingDiffAmountFC = B1ClassMetadata.EntityTypes.document.property(withName: "RoundingDiffAmountFC")
        }
        if !B1PreDocument.roundingDiffAmountSC.isRemoved {
            B1PreDocument.roundingDiffAmountSC = B1ClassMetadata.EntityTypes.document.property(withName: "RoundingDiffAmountSC")
        }
        if !B1PreDocument.cancelled.isRemoved {
            B1PreDocument.cancelled = B1ClassMetadata.EntityTypes.document.property(withName: "Cancelled")
        }
        if !B1PreDocument.signatureInputMessage.isRemoved {
            B1PreDocument.signatureInputMessage = B1ClassMetadata.EntityTypes.document.property(withName: "SignatureInputMessage")
        }
        if !B1PreDocument.signatureDigest.isRemoved {
            B1PreDocument.signatureDigest = B1ClassMetadata.EntityTypes.document.property(withName: "SignatureDigest")
        }
        if !B1PreDocument.certificationNumber.isRemoved {
            B1PreDocument.certificationNumber = B1ClassMetadata.EntityTypes.document.property(withName: "CertificationNumber")
        }
        if !B1PreDocument.privateKeyVersion.isRemoved {
            B1PreDocument.privateKeyVersion = B1ClassMetadata.EntityTypes.document.property(withName: "PrivateKeyVersion")
        }
        if !B1PreDocument.controlAccount.isRemoved {
            B1PreDocument.controlAccount = B1ClassMetadata.EntityTypes.document.property(withName: "ControlAccount")
        }
        if !B1PreDocument.insuranceOperation347.isRemoved {
            B1PreDocument.insuranceOperation347 = B1ClassMetadata.EntityTypes.document.property(withName: "InsuranceOperation347")
        }
        if !B1PreDocument.archiveNonremovableSalesQuotation.isRemoved {
            B1PreDocument.archiveNonremovableSalesQuotation = B1ClassMetadata.EntityTypes.document.property(withName: "ArchiveNonremovableSalesQuotation")
        }
        if !B1PreDocument.gtsChecker.isRemoved {
            B1PreDocument.gtsChecker = B1ClassMetadata.EntityTypes.document.property(withName: "GTSChecker")
        }
        if !B1PreDocument.gtsPayee.isRemoved {
            B1PreDocument.gtsPayee = B1ClassMetadata.EntityTypes.document.property(withName: "GTSPayee")
        }
        if !B1PreDocument.extraMonth.isRemoved {
            B1PreDocument.extraMonth = B1ClassMetadata.EntityTypes.document.property(withName: "ExtraMonth")
        }
        if !B1PreDocument.extraDays.isRemoved {
            B1PreDocument.extraDays = B1ClassMetadata.EntityTypes.document.property(withName: "ExtraDays")
        }
        if !B1PreDocument.cashDiscountDateOffset.isRemoved {
            B1PreDocument.cashDiscountDateOffset = B1ClassMetadata.EntityTypes.document.property(withName: "CashDiscountDateOffset")
        }
        if !B1PreDocument.startFrom.isRemoved {
            B1PreDocument.startFrom = B1ClassMetadata.EntityTypes.document.property(withName: "StartFrom")
        }
        if !B1PreDocument.ntsApproved.isRemoved {
            B1PreDocument.ntsApproved = B1ClassMetadata.EntityTypes.document.property(withName: "NTSApproved")
        }
        if !B1PreDocument.eTaxWebSite.isRemoved {
            B1PreDocument.eTaxWebSite = B1ClassMetadata.EntityTypes.document.property(withName: "ETaxWebSite")
        }
        if !B1PreDocument.eTaxNumber.isRemoved {
            B1PreDocument.eTaxNumber = B1ClassMetadata.EntityTypes.document.property(withName: "ETaxNumber")
        }
        if !B1PreDocument.ntsApprovedNumber.isRemoved {
            B1PreDocument.ntsApprovedNumber = B1ClassMetadata.EntityTypes.document.property(withName: "NTSApprovedNumber")
        }
        if !B1PreDocument.eDocGenerationType.isRemoved {
            B1PreDocument.eDocGenerationType = B1ClassMetadata.EntityTypes.document.property(withName: "EDocGenerationType")
        }
        if !B1PreDocument.eDocSeries.isRemoved {
            B1PreDocument.eDocSeries = B1ClassMetadata.EntityTypes.document.property(withName: "EDocSeries")
        }
        if !B1PreDocument.eDocNum.isRemoved {
            B1PreDocument.eDocNum = B1ClassMetadata.EntityTypes.document.property(withName: "EDocNum")
        }
        if !B1PreDocument.eDocExportFormat.isRemoved {
            B1PreDocument.eDocExportFormat = B1ClassMetadata.EntityTypes.document.property(withName: "EDocExportFormat")
        }
        if !B1PreDocument.eDocStatus.isRemoved {
            B1PreDocument.eDocStatus = B1ClassMetadata.EntityTypes.document.property(withName: "EDocStatus")
        }
        if !B1PreDocument.eDocErrorCode.isRemoved {
            B1PreDocument.eDocErrorCode = B1ClassMetadata.EntityTypes.document.property(withName: "EDocErrorCode")
        }
        if !B1PreDocument.eDocErrorMessage.isRemoved {
            B1PreDocument.eDocErrorMessage = B1ClassMetadata.EntityTypes.document.property(withName: "EDocErrorMessage")
        }
        if !B1PreDocument.downPaymentStatus.isRemoved {
            B1PreDocument.downPaymentStatus = B1ClassMetadata.EntityTypes.document.property(withName: "DownPaymentStatus")
        }
        if !B1PreDocument.groupSeries.isRemoved {
            B1PreDocument.groupSeries = B1ClassMetadata.EntityTypes.document.property(withName: "GroupSeries")
        }
        if !B1PreDocument.groupNumber.isRemoved {
            B1PreDocument.groupNumber = B1ClassMetadata.EntityTypes.document.property(withName: "GroupNumber")
        }
        if !B1PreDocument.groupHandWritten.isRemoved {
            B1PreDocument.groupHandWritten = B1ClassMetadata.EntityTypes.document.property(withName: "GroupHandWritten")
        }
        if !B1PreDocument.reopenOriginalDocument.isRemoved {
            B1PreDocument.reopenOriginalDocument = B1ClassMetadata.EntityTypes.document.property(withName: "ReopenOriginalDocument")
        }
        if !B1PreDocument.reopenManuallyClosedOrCanceledDocument.isRemoved {
            B1PreDocument.reopenManuallyClosedOrCanceledDocument = B1ClassMetadata.EntityTypes.document.property(withName: "ReopenManuallyClosedOrCanceledDocument")
        }
        if !B1PreDocument.createOnlineQuotation.isRemoved {
            B1PreDocument.createOnlineQuotation = B1ClassMetadata.EntityTypes.document.property(withName: "CreateOnlineQuotation")
        }
        if !B1PreDocument.posEquipmentNumber.isRemoved {
            B1PreDocument.posEquipmentNumber = B1ClassMetadata.EntityTypes.document.property(withName: "POSEquipmentNumber")
        }
        if !B1PreDocument.posManufacturerSerialNumber.isRemoved {
            B1PreDocument.posManufacturerSerialNumber = B1ClassMetadata.EntityTypes.document.property(withName: "POSManufacturerSerialNumber")
        }
        if !B1PreDocument.posCashierNumber.isRemoved {
            B1PreDocument.posCashierNumber = B1ClassMetadata.EntityTypes.document.property(withName: "POSCashierNumber")
        }
        if !B1PreDocument.applyCurrentVATRatesForDownPaymentsToDraw.isRemoved {
            B1PreDocument.applyCurrentVATRatesForDownPaymentsToDraw = B1ClassMetadata.EntityTypes.document.property(withName: "ApplyCurrentVATRatesForDownPaymentsToDraw")
        }
        if !B1PreDocument.closingOption.isRemoved {
            B1PreDocument.closingOption = B1ClassMetadata.EntityTypes.document.property(withName: "ClosingOption")
        }
        if !B1PreDocument.specifiedClosingDate.isRemoved {
            B1PreDocument.specifiedClosingDate = B1ClassMetadata.EntityTypes.document.property(withName: "SpecifiedClosingDate")
        }
        if !B1PreDocument.openForLandedCosts.isRemoved {
            B1PreDocument.openForLandedCosts = B1ClassMetadata.EntityTypes.document.property(withName: "OpenForLandedCosts")
        }
        if !B1PreDocument.authorizationStatus.isRemoved {
            B1PreDocument.authorizationStatus = B1ClassMetadata.EntityTypes.document.property(withName: "AuthorizationStatus")
        }
        if !B1PreDocument.totalDiscountFC.isRemoved {
            B1PreDocument.totalDiscountFC = B1ClassMetadata.EntityTypes.document.property(withName: "TotalDiscountFC")
        }
        if !B1PreDocument.totalDiscountSC.isRemoved {
            B1PreDocument.totalDiscountSC = B1ClassMetadata.EntityTypes.document.property(withName: "TotalDiscountSC")
        }
        if !B1PreDocument.relevantToGTS.isRemoved {
            B1PreDocument.relevantToGTS = B1ClassMetadata.EntityTypes.document.property(withName: "RelevantToGTS")
        }
        if !B1PreDocument.bplName.isRemoved {
            B1PreDocument.bplName = B1ClassMetadata.EntityTypes.document.property(withName: "BPLName")
        }
        if !B1PreDocument.vatRegNum.isRemoved {
            B1PreDocument.vatRegNum = B1ClassMetadata.EntityTypes.document.property(withName: "VATRegNum")
        }
        if !B1PreDocument.annualInvoiceDeclarationReference.isRemoved {
            B1PreDocument.annualInvoiceDeclarationReference = B1ClassMetadata.EntityTypes.document.property(withName: "AnnualInvoiceDeclarationReference")
        }
        if !B1PreDocument.supplier.isRemoved {
            B1PreDocument.supplier = B1ClassMetadata.EntityTypes.document.property(withName: "Supplier")
        }
        if !B1PreDocument.releaser.isRemoved {
            B1PreDocument.releaser = B1ClassMetadata.EntityTypes.document.property(withName: "Releaser")
        }
        if !B1PreDocument.receiver.isRemoved {
            B1PreDocument.receiver = B1ClassMetadata.EntityTypes.document.property(withName: "Receiver")
        }
        if !B1PreDocument.blanketAgreementNumber.isRemoved {
            B1PreDocument.blanketAgreementNumber = B1ClassMetadata.EntityTypes.document.property(withName: "BlanketAgreementNumber")
        }
        if !B1PreDocument.isAlteration.isRemoved {
            B1PreDocument.isAlteration = B1ClassMetadata.EntityTypes.document.property(withName: "IsAlteration")
        }
        if !B1PreDocument.cancelStatus.isRemoved {
            B1PreDocument.cancelStatus = B1ClassMetadata.EntityTypes.document.property(withName: "CancelStatus")
        }
        if !B1PreDocument.assetValueDate.isRemoved {
            B1PreDocument.assetValueDate = B1ClassMetadata.EntityTypes.document.property(withName: "AssetValueDate")
        }
    }

    private static func merge2(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentStatusEnum.adsPosted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentStatusEnum.adsPosted = B1ClassMetadata.EnumTypes.assetDocumentStatusEnum.member(name: "adsPosted")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentStatusEnum.adsDraft.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentStatusEnum.adsDraft = B1ClassMetadata.EnumTypes.assetDocumentStatusEnum.member(name: "adsDraft")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentStatusEnum.adsCancelled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentStatusEnum.adsCancelled = B1ClassMetadata.EnumTypes.assetDocumentStatusEnum.member(name: "adsCancelled")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtOrdinaryDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtOrdinaryDepreciation = B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.member(name: "adtOrdinaryDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtUnplannedDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtUnplannedDepreciation = B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.member(name: "adtUnplannedDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtSpecialDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtSpecialDepreciation = B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.member(name: "adtSpecialDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtAppreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtAppreciation = B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.member(name: "adtAppreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtAssetTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtAssetTransfer = B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.member(name: "adtAssetTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtSales = B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.member(name: "adtSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtScrapping.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtScrapping = B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.member(name: "adtScrapping")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtAssetClassTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetDocumentTypeEnum.adtAssetClassTransfer = B1ClassMetadata.EnumTypes.assetDocumentTypeEnum.member(name: "adtAssetClassTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotARInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotARInvoice = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotARInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotAPCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotAPCreditMemo = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotAPCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotAPInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotAPInvoice = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotAPInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotOutgoingPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotOutgoingPayment = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotOutgoingPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotAPCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotAPCorrectionInvoice = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotAPCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotCapitalization.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotCapitalization = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotCapitalization")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotFixedAssetsCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotFixedAssetsCreditMemo = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotFixedAssetsCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotAllTransactions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotAllTransactions = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotAllTransactions")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotManualDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotManualDepreciation = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotManualDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotFixedAssetsTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotFixedAssetsTransfer = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotFixedAssetsTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotRetirement.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetOriginalTypeEnum.aotRetirement = B1ClassMetadata.EnumTypes.assetOriginalTypeEnum.member(name: "aotRetirement")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetStatusEnum.new.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetStatusEnum.new = B1ClassMetadata.EnumTypes.assetStatusEnum.member(name: "New")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetStatusEnum.active.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetStatusEnum.active = B1ClassMetadata.EnumTypes.assetStatusEnum.member(name: "Active")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetStatusEnum.inactive.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetStatusEnum.inactive = B1ClassMetadata.EnumTypes.assetStatusEnum.member(name: "Inactive")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attBeginningOfYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attBeginningOfYear = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_BeginningOfYear")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attAcquistion.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attAcquistion = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_Acquistion")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attRetirement.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attRetirement = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_Retirement")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attTransfer = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_Transfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attWriteUp.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attWriteUp = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_WriteUp")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attOrdinaryDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attOrdinaryDepreciation = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_OrdinaryDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attUplannedDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attUplannedDepreciation = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_UplannedDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attSpecialDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attSpecialDepreciation = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_SpecialDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attEndOfYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTransactionTypeEnum.attEndOfYear = B1ClassMetadata.EnumTypes.assetTransactionTypeEnum.member(name: "att_EndOfYear")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTypeEnum.atAssetTypeGeneral.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTypeEnum.atAssetTypeGeneral = B1ClassMetadata.EnumTypes.assetTypeEnum.member(name: "atAssetTypeGeneral")
        }
        if !B1ClassMetadata.EnumValues.B1PreAssetTypeEnum.atAssetTypeLowValueAsset.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAssetTypeEnum.atAssetTypeLowValueAsset = B1ClassMetadata.EnumTypes.assetTypeEnum.member(name: "atAssetTypeLowValueAsset")
        }
        if !B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftText.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftText = B1ClassMetadata.EnumTypes.attributeGroupFieldTypeEnum.member(name: "agftText")
        }
        if !B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftNumeric.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftNumeric = B1ClassMetadata.EnumTypes.attributeGroupFieldTypeEnum.member(name: "agftNumeric")
        }
        if !B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftDate = B1ClassMetadata.EnumTypes.attributeGroupFieldTypeEnum.member(name: "agftDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftAmount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftAmount = B1ClassMetadata.EnumTypes.attributeGroupFieldTypeEnum.member(name: "agftAmount")
        }
        if !B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftPrice = B1ClassMetadata.EnumTypes.attributeGroupFieldTypeEnum.member(name: "agftPrice")
        }
        if !B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAttributeGroupFieldTypeEnum.agftQuantity = B1ClassMetadata.EnumTypes.attributeGroupFieldTypeEnum.member(name: "agftQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturNoUserConnectedToCompany.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturNoUserConnectedToCompany = B1ClassMetadata.EnumTypes.authenticateUserResultsEnum.member(name: "aturNoUserConnectedToCompany")
        }
        if !B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturUsernamePasswordMatched.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturUsernamePasswordMatched = B1ClassMetadata.EnumTypes.authenticateUserResultsEnum.member(name: "aturUsernamePasswordMatched")
        }
        if !B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturLogOnUserNotAdmin.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturLogOnUserNotAdmin = B1ClassMetadata.EnumTypes.authenticateUserResultsEnum.member(name: "aturLogOnUserNotAdmin")
        }
        if !B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturBadUserOrPassword.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturBadUserOrPassword = B1ClassMetadata.EnumTypes.authenticateUserResultsEnum.member(name: "aturBadUserOrPassword")
        }
        if !B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturUserHasBeenLocked.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturUserHasBeenLocked = B1ClassMetadata.EnumTypes.authenticateUserResultsEnum.member(name: "aturUserHasBeenLocked")
        }
        if !B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturPasswordExpired.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturPasswordExpired = B1ClassMetadata.EnumTypes.authenticateUserResultsEnum.member(name: "aturPasswordExpired")
        }
        if !B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturDBErrors.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAuthenticateUserResultsEnum.aturDBErrors = B1ClassMetadata.EnumTypes.authenticateUserResultsEnum.member(name: "aturDBErrors")
        }
        if !B1ClassMetadata.EnumValues.B1PreAutoAllocOnReceiptMethodEnum.aaormDefaultBin.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAutoAllocOnReceiptMethodEnum.aaormDefaultBin = B1ClassMetadata.EnumTypes.autoAllocOnReceiptMethodEnum.member(name: "aaormDefaultBin")
        }
        if !B1ClassMetadata.EnumValues.B1PreAutoAllocOnReceiptMethodEnum.aaormItemCurrentAndHistoricalBins.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAutoAllocOnReceiptMethodEnum.aaormItemCurrentAndHistoricalBins = B1ClassMetadata.EnumTypes.autoAllocOnReceiptMethodEnum.member(name: "aaormItemCurrentAndHistoricalBins")
        }
        if !B1ClassMetadata.EnumValues.B1PreAutoAllocOnReceiptMethodEnum.aaormItemCurrentBins.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAutoAllocOnReceiptMethodEnum.aaormItemCurrentBins = B1ClassMetadata.EnumTypes.autoAllocOnReceiptMethodEnum.member(name: "aaormItemCurrentBins")
        }
        if !B1ClassMetadata.EnumValues.B1PreAutoAllocOnReceiptMethodEnum.aaormLastBinReceivedItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAutoAllocOnReceiptMethodEnum.aaormLastBinReceivedItem = B1ClassMetadata.EnumTypes.autoAllocOnReceiptMethodEnum.member(name: "aaormLastBinReceivedItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreAutomaticPostingEnum.apNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAutomaticPostingEnum.apNo = B1ClassMetadata.EnumTypes.automaticPostingEnum.member(name: "apNo")
        }
        if !B1ClassMetadata.EnumValues.B1PreAutomaticPostingEnum.apInterestAndFee.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAutomaticPostingEnum.apInterestAndFee = B1ClassMetadata.EnumTypes.automaticPostingEnum.member(name: "apInterestAndFee")
        }
        if !B1ClassMetadata.EnumValues.B1PreAutomaticPostingEnum.apInterestOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAutomaticPostingEnum.apInterestOnly = B1ClassMetadata.EnumTypes.automaticPostingEnum.member(name: "apInterestOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreAutomaticPostingEnum.apFeeOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreAutomaticPostingEnum.apFeeOnly = B1ClassMetadata.EnumTypes.automaticPostingEnum.member(name: "apFeeOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBADivationAlertLevelEnum.badalNoWarning.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBADivationAlertLevelEnum.badalNoWarning = B1ClassMetadata.EnumTypes.baDivationAlertLevelEnum.member(name: "badal_NoWarning")
        }
        if !B1ClassMetadata.EnumValues.B1PreBADivationAlertLevelEnum.badalWarning.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBADivationAlertLevelEnum.badalWarning = B1ClassMetadata.EnumTypes.baDivationAlertLevelEnum.member(name: "badal_Warning")
        }
        if !B1ClassMetadata.EnumValues.B1PreBADivationAlertLevelEnum.badalBlock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBADivationAlertLevelEnum.badalBlock = B1ClassMetadata.EnumTypes.baDivationAlertLevelEnum.member(name: "badal_Block")
        }
        if !B1ClassMetadata.EnumValues.B1PreBADocumentStatus.badsOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBADocumentStatus.badsOpen = B1ClassMetadata.EnumTypes.baDocumentStatus.member(name: "bads_Open")
        }
        if !B1ClassMetadata.EnumValues.B1PreBADocumentStatus.badsClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBADocumentStatus.badsClosed = B1ClassMetadata.EnumTypes.baDocumentStatus.member(name: "bads_Closed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBADocumentStatus.badsCancelled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBADocumentStatus.badsCancelled = B1ClassMetadata.EnumTypes.baDocumentStatus.member(name: "bads_Cancelled")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtReceipts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtReceipts = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtReceipts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtPaymentToVendor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtPaymentToVendor = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtPaymentToVendor")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtInvoices = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtPurchases.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtPurchases = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtPurchases")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtDownPaymentIncoming.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtDownPaymentIncoming = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtDownPaymentIncoming")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtDownPaymentOutgoing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtDownPaymentOutgoing = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtDownPaymentOutgoing")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtRevertInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtRevertInvoices = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtRevertInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtRevertPurchases.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtRevertPurchases = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtRevertPurchases")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtJournalEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementDocTypeEnum.bsdtJournalEntry = B1ClassMetadata.EnumTypes.bankStatementDocTypeEnum.member(name: "bsdtJournalEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementRowSourceEnum.bsImported.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementRowSourceEnum.bsImported = B1ClassMetadata.EnumTypes.bankStatementRowSourceEnum.member(name: "bsImported")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementRowSourceEnum.bsImportedAndAmended.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementRowSourceEnum.bsImportedAndAmended = B1ClassMetadata.EnumTypes.bankStatementRowSourceEnum.member(name: "bsImportedAndAmended")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementRowSourceEnum.bsManuallyEntered.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementRowSourceEnum.bsManuallyEntered = B1ClassMetadata.EnumTypes.bankStatementRowSourceEnum.member(name: "bsManuallyEntered")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementStatusEnum.bssExecuted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementStatusEnum.bssExecuted = B1ClassMetadata.EnumTypes.bankStatementStatusEnum.member(name: "bssExecuted")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementStatusEnum.bssDraft.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementStatusEnum.bssDraft = B1ClassMetadata.EnumTypes.bankStatementStatusEnum.member(name: "bssDraft")
        }
        if !B1ClassMetadata.EnumValues.B1PreBankStatementStatusEnum.bssOld.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBankStatementStatusEnum.bssOld = B1ClassMetadata.EnumTypes.bankStatementStatusEnum.member(name: "bssOld")
        }
        if !B1ClassMetadata.EnumValues.B1PreBaseDateSelectEnum.bdsFromDueDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBaseDateSelectEnum.bdsFromDueDate = B1ClassMetadata.EnumTypes.baseDateSelectEnum.member(name: "bdsFromDueDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBaseDateSelectEnum.bdsFromLastDunningRun.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBaseDateSelectEnum.bdsFromLastDunningRun = B1ClassMetadata.EnumTypes.baseDateSelectEnum.member(name: "bdsFromLastDunningRun")
        }
        if !B1ClassMetadata.EnumValues.B1PreBatchDetailServiceStatusEnum.bdsStatusReleased.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBatchDetailServiceStatusEnum.bdsStatusReleased = B1ClassMetadata.EnumTypes.batchDetailServiceStatusEnum.member(name: "bdsStatus_Released")
        }
        if !B1ClassMetadata.EnumValues.B1PreBatchDetailServiceStatusEnum.bdsStatusNotAccessible.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBatchDetailServiceStatusEnum.bdsStatusNotAccessible = B1ClassMetadata.EnumTypes.batchDetailServiceStatusEnum.member(name: "bdsStatus_NotAccessible")
        }
        if !B1ClassMetadata.EnumValues.B1PreBatchDetailServiceStatusEnum.bdsStatusLocked.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBatchDetailServiceStatusEnum.bdsStatusLocked = B1ClassMetadata.EnumTypes.batchDetailServiceStatusEnum.member(name: "bdsStatus_Locked")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinActionTypeEnum.batToWarehouse.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinActionTypeEnum.batToWarehouse = B1ClassMetadata.EnumTypes.binActionTypeEnum.member(name: "batToWarehouse")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinActionTypeEnum.batFromWarehouse.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinActionTypeEnum.batFromWarehouse = B1ClassMetadata.EnumTypes.binActionTypeEnum.member(name: "batFromWarehouse")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinLocationFieldTypeEnum.blftWarehouseSublevel.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinLocationFieldTypeEnum.blftWarehouseSublevel = B1ClassMetadata.EnumTypes.binLocationFieldTypeEnum.member(name: "blftWarehouseSublevel")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinLocationFieldTypeEnum.blftBinLocationAttribute.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinLocationFieldTypeEnum.blftBinLocationAttribute = B1ClassMetadata.EnumTypes.binLocationFieldTypeEnum.member(name: "blftBinLocationAttribute")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briNone = B1ClassMetadata.EnumTypes.binRestrictItemEnum.member(name: "briNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briSpecificItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briSpecificItem = B1ClassMetadata.EnumTypes.binRestrictItemEnum.member(name: "briSpecificItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briSingleItemOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briSingleItemOnly = B1ClassMetadata.EnumTypes.binRestrictItemEnum.member(name: "briSingleItemOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briSpecificItemGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briSpecificItemGroup = B1ClassMetadata.EnumTypes.binRestrictItemEnum.member(name: "briSpecificItemGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briSpecificItemGroupOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictItemEnum.briSpecificItemGroupOnly = B1ClassMetadata.EnumTypes.binRestrictItemEnum.member(name: "briSpecificItemGroupOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtNoRestrictions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtNoRestrictions = B1ClassMetadata.EnumTypes.binRestrictTransactionEnum.member(name: "brtNoRestrictions")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtAllTrans.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtAllTrans = B1ClassMetadata.EnumTypes.binRestrictTransactionEnum.member(name: "brtAllTrans")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtInboundTrans.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtInboundTrans = B1ClassMetadata.EnumTypes.binRestrictTransactionEnum.member(name: "brtInboundTrans")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtOutboundTrans.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtOutboundTrans = B1ClassMetadata.EnumTypes.binRestrictTransactionEnum.member(name: "brtOutboundTrans")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtAllExceptInventoryTrans.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictTransactionEnum.brtAllExceptInventoryTrans = B1ClassMetadata.EnumTypes.binRestrictTransactionEnum.member(name: "brtAllExceptInventoryTrans")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruNone = B1ClassMetadata.EnumTypes.binRestrictUoMEnum.member(name: "bruNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruSpecificUoM.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruSpecificUoM = B1ClassMetadata.EnumTypes.binRestrictUoMEnum.member(name: "bruSpecificUoM")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruSingleUoMOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruSingleUoMOnly = B1ClassMetadata.EnumTypes.binRestrictUoMEnum.member(name: "bruSingleUoMOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruSpecificUoMGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruSpecificUoMGroup = B1ClassMetadata.EnumTypes.binRestrictUoMEnum.member(name: "bruSpecificUoMGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruSpecificUoMGroupOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictUoMEnum.bruSpecificUoMGroupOnly = B1ClassMetadata.EnumTypes.binRestrictUoMEnum.member(name: "bruSpecificUoMGroupOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictionBatchEnum.brbNoRestrictions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictionBatchEnum.brbNoRestrictions = B1ClassMetadata.EnumTypes.binRestrictionBatchEnum.member(name: "brbNoRestrictions")
        }
        if !B1ClassMetadata.EnumValues.B1PreBinRestrictionBatchEnum.brbSingleBatch.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBinRestrictionBatchEnum.brbSingleBatch = B1ClassMetadata.EnumTypes.binRestrictionBatchEnum.member(name: "brbSingleBatch")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.daily.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.daily = B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum.member(name: "Daily")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.weekly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.weekly = B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum.member(name: "Weekly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.monthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.monthly = B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum.member(name: "Monthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.quarterly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.quarterly = B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum.member(name: "Quarterly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.semiannually.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.semiannually = B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum.member(name: "Semiannually")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.annually.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.annually = B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum.member(name: "Annually")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.oneTime.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDatePeriodsEnum.oneTime = B1ClassMetadata.EnumTypes.blanketAgreementDatePeriodsEnum.member(name: "OneTime")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arInvoice = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "ARInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arCreditMemo = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "ARCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.delivery.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.delivery = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "Delivery")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.return.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.return = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "Return")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.salesOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.salesOrder = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "SalesOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apInvoice = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "APInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apCreditMemo = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "APCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.goodsReceiptPO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.goodsReceiptPO = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "GoodsReceiptPO")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.goodsReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.goodsReturn = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "GoodsReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.purchaseOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.purchaseOrder = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "PurchaseOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.salesQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.salesQuotation = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "SalesQuotation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apCorrectionInvoice = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "APCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apCorrectionInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apCorrectionInvoiceReversal = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "APCorrectionInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arCorrectionInvoice = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "ARCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arCorrectionInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arCorrectionInvoiceReversal = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "ARCorrectionInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.arDownPayment = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "ARDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.apDownPayment = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "APDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.purchaseQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementDocTypeEnum.purchaseQuotation = B1ClassMetadata.EnumTypes.blanketAgreementDocTypeEnum.member(name: "PurchaseQuotation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementMethodEnum.amItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementMethodEnum.amItem = B1ClassMetadata.EnumTypes.blanketAgreementMethodEnum.member(name: "amItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementMethodEnum.amMonetary.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementMethodEnum.amMonetary = B1ClassMetadata.EnumTypes.blanketAgreementMethodEnum.member(name: "amMonetary")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementStatusEnum.asApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementStatusEnum.asApproved = B1ClassMetadata.EnumTypes.blanketAgreementStatusEnum.member(name: "asApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementStatusEnum.asOnHold.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementStatusEnum.asOnHold = B1ClassMetadata.EnumTypes.blanketAgreementStatusEnum.member(name: "asOnHold")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementStatusEnum.asDraft.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementStatusEnum.asDraft = B1ClassMetadata.EnumTypes.blanketAgreementStatusEnum.member(name: "asDraft")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementStatusEnum.asTerminated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementStatusEnum.asTerminated = B1ClassMetadata.EnumTypes.blanketAgreementStatusEnum.member(name: "asTerminated")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementTypeEnum.atGeneral.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementTypeEnum.atGeneral = B1ClassMetadata.EnumTypes.blanketAgreementTypeEnum.member(name: "atGeneral")
        }
        if !B1ClassMetadata.EnumValues.B1PreBlanketAgreementTypeEnum.atSpecific.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBlanketAgreementTypeEnum.atSpecific = B1ClassMetadata.EnumTypes.blanketAgreementTypeEnum.member(name: "atSpecific")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtInvoice = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_Invoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtCreditNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtCreditNote = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_CreditNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtDeliveryNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtDeliveryNote = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_DeliveryNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtReturn = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_Return")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtOrder = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_Order")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseInvoice = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_PurchaseInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseCreditNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseCreditNote = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_PurchaseCreditNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseDeliveryNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseDeliveryNote = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_PurchaseDeliveryNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseReturn = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_PurchaseReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseOrder = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_PurchaseOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtQuotation = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_Quotation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtCorrectionAPInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtCorrectionAPInvoice = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_CorrectionAPInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtCorrectionARInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtCorrectionARInvoice = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_CorrectionARInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtZero.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtZero = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_Zero")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtMinusOne.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtMinusOne = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_MinusOne")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseQutation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAPARDocumentTypes.bodtPurchaseQutation = B1ClassMetadata.EnumTypes.boAPARDocumentTypes.member(name: "bodt_PurchaseQutation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAccountTypes.atRevenues.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAccountTypes.atRevenues = B1ClassMetadata.EnumTypes.boAccountTypes.member(name: "at_Revenues")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAccountTypes.atExpenses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAccountTypes.atExpenses = B1ClassMetadata.EnumTypes.boAccountTypes.member(name: "at_Expenses")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAccountTypes.atOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAccountTypes.atOther = B1ClassMetadata.EnumTypes.boAccountTypes.member(name: "at_Other")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoActivities.cnConversation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoActivities.cnConversation = B1ClassMetadata.EnumTypes.boActivities.member(name: "cn_Conversation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoActivities.cnMeeting.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoActivities.cnMeeting = B1ClassMetadata.EnumTypes.boActivities.member(name: "cn_Meeting")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoActivities.cnTask.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoActivities.cnTask = B1ClassMetadata.EnumTypes.boActivities.member(name: "cn_Task")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoActivities.cnOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoActivities.cnOther = B1ClassMetadata.EnumTypes.boActivities.member(name: "cn_Other")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoActivities.cnNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoActivities.cnNote = B1ClassMetadata.EnumTypes.boActivities.member(name: "cn_Note")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoActivities.cnCampaign.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoActivities.cnCampaign = B1ClassMetadata.EnumTypes.boActivities.member(name: "cn_Campaign")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmNone = B1ClassMetadata.EnumTypes.boAdEpnsDistribMethods.member(name: "aedm_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmQuantity = B1ClassMetadata.EnumTypes.boAdEpnsDistribMethods.member(name: "aedm_Quantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmVolume.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmVolume = B1ClassMetadata.EnumTypes.boAdEpnsDistribMethods.member(name: "aedm_Volume")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmWeight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmWeight = B1ClassMetadata.EnumTypes.boAdEpnsDistribMethods.member(name: "aedm_Weight")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmEqually.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmEqually = B1ClassMetadata.EnumTypes.boAdEpnsDistribMethods.member(name: "aedm_Equally")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmRowTotal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsDistribMethods.aedmRowTotal = B1ClassMetadata.EnumTypes.boAdEpnsDistribMethods.member(name: "aedm_RowTotal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsTaxTypes.aextNormalTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsTaxTypes.aextNormalTax = B1ClassMetadata.EnumTypes.boAdEpnsTaxTypes.member(name: "aext_NormalTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsTaxTypes.aextNoTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsTaxTypes.aextNoTax = B1ClassMetadata.EnumTypes.boAdEpnsTaxTypes.member(name: "aext_NoTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAdEpnsTaxTypes.aextUseTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAdEpnsTaxTypes.aextUseTax = B1ClassMetadata.EnumTypes.boAdEpnsTaxTypes.member(name: "aext_UseTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAddressType.boShipTo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAddressType.boShipTo = B1ClassMetadata.EnumTypes.boAddressType.member(name: "bo_ShipTo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAddressType.boBillTo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAddressType.boBillTo = B1ClassMetadata.EnumTypes.boAddressType.member(name: "bo_BillTo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedEqually.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedEqually = B1ClassMetadata.EnumTypes.boAeDistMthd.member(name: "aed_Equally")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedLineTotal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedLineTotal = B1ClassMetadata.EnumTypes.boAeDistMthd.member(name: "aed_LineTotal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedNone = B1ClassMetadata.EnumTypes.boAeDistMthd.member(name: "aed_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedQuantity = B1ClassMetadata.EnumTypes.boAeDistMthd.member(name: "aed_Quantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedVolume.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedVolume = B1ClassMetadata.EnumTypes.boAeDistMthd.member(name: "aed_Volume")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedWeight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAeDistMthd.aedWeight = B1ClassMetadata.EnumTypes.boAeDistMthd.member(name: "aed_Weight")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAlertTypeforWHStockEnum.atfwhsWarningOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAlertTypeforWHStockEnum.atfwhsWarningOnly = B1ClassMetadata.EnumTypes.boAlertTypeforWHStockEnum.member(name: "atfwhs_WarningOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAlertTypeforWHStockEnum.atfwhsBlock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAlertTypeforWHStockEnum.atfwhsBlock = B1ClassMetadata.EnumTypes.boAlertTypeforWHStockEnum.member(name: "atfwhs_Block")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAlertTypeforWHStockEnum.atfwhsNoMessage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAlertTypeforWHStockEnum.atfwhsNoMessage = B1ClassMetadata.EnumTypes.boAlertTypeforWHStockEnum.member(name: "atfwhs_NoMessage")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abCashValueAfterCustoms.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abCashValueAfterCustoms = B1ClassMetadata.EnumTypes.boAllocationByEnum.member(name: "ab_CashValueAfterCustoms")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abCashValueBeforeCustoms.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abCashValueBeforeCustoms = B1ClassMetadata.EnumTypes.boAllocationByEnum.member(name: "ab_CashValueBeforeCustoms")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abEqual = B1ClassMetadata.EnumTypes.boAllocationByEnum.member(name: "ab_Equal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abQuantity = B1ClassMetadata.EnumTypes.boAllocationByEnum.member(name: "ab_Quantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abVolume.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abVolume = B1ClassMetadata.EnumTypes.boAllocationByEnum.member(name: "ab_Volume")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abWeight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoAllocationByEnum.abWeight = B1ClassMetadata.EnumTypes.boAllocationByEnum.member(name: "ab_Weight")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestDecisionEnum.ardPending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestDecisionEnum.ardPending = B1ClassMetadata.EnumTypes.boApprovalRequestDecisionEnum.member(name: "ardPending")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestDecisionEnum.ardApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestDecisionEnum.ardApproved = B1ClassMetadata.EnumTypes.boApprovalRequestDecisionEnum.member(name: "ardApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestDecisionEnum.ardNotApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestDecisionEnum.ardNotApproved = B1ClassMetadata.EnumTypes.boApprovalRequestDecisionEnum.member(name: "ardNotApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsPending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsPending = B1ClassMetadata.EnumTypes.boApprovalRequestStatusEnum.member(name: "arsPending")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsApproved = B1ClassMetadata.EnumTypes.boApprovalRequestStatusEnum.member(name: "arsApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsNotApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsNotApproved = B1ClassMetadata.EnumTypes.boApprovalRequestStatusEnum.member(name: "arsNotApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsGenerated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsGenerated = B1ClassMetadata.EnumTypes.boApprovalRequestStatusEnum.member(name: "arsGenerated")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsGeneratedByAuthorizer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsGeneratedByAuthorizer = B1ClassMetadata.EnumTypes.boApprovalRequestStatusEnum.member(name: "arsGeneratedByAuthorizer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsCancelled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoApprovalRequestStatusEnum.arsCancelled = B1ClassMetadata.EnumTypes.boApprovalRequestStatusEnum.member(name: "arsCancelled")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOETypes.bobtIncoming.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOETypes.bobtIncoming = B1ClassMetadata.EnumTypes.boBOETypes.member(name: "bobt_Incoming")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOETypes.bobtOutgoing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOETypes.bobtOutgoing = B1ClassMetadata.EnumTypes.boBOETypes.member(name: "bobt_Outgoing")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTFromStatus.btfsSent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTFromStatus.btfsSent = B1ClassMetadata.EnumTypes.boBOTFromStatus.member(name: "btfs_Sent")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTFromStatus.btfsGenerated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTFromStatus.btfsGenerated = B1ClassMetadata.EnumTypes.boBOTFromStatus.member(name: "btfs_Generated")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTFromStatus.btfsDeposited.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTFromStatus.btfsDeposited = B1ClassMetadata.EnumTypes.boBOTFromStatus.member(name: "btfs_Deposited")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTFromStatus.btfsPaid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTFromStatus.btfsPaid = B1ClassMetadata.EnumTypes.boBOTFromStatus.member(name: "btfs_Paid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsCanceled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsCanceled = B1ClassMetadata.EnumTypes.boBOTToStatus.member(name: "btts_Canceled")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsGenerated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsGenerated = B1ClassMetadata.EnumTypes.boBOTToStatus.member(name: "btts_Generated")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsDeposit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsDeposit = B1ClassMetadata.EnumTypes.boBOTToStatus.member(name: "btts_Deposit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsPaid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsPaid = B1ClassMetadata.EnumTypes.boBOTToStatus.member(name: "btts_Paid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsFailed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsFailed = B1ClassMetadata.EnumTypes.boBOTToStatus.member(name: "btts_Failed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBOTToStatus.bttsClosed = B1ClassMetadata.EnumTypes.boBOTToStatus.member(name: "btts_Closed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBarCodeStandardEnum.rlbsan13.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBarCodeStandardEnum.rlbsan13 = B1ClassMetadata.EnumTypes.boBarCodeStandardEnum.member(name: "rlbsan13")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBarCodeStandardEnum.rlbsCode39.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBarCodeStandardEnum.rlbsCode39 = B1ClassMetadata.EnumTypes.boBarCodeStandardEnum.member(name: "rlbsCode39")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBarCodeStandardEnum.rlbsCode128.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBarCodeStandardEnum.rlbsCode128 = B1ClassMetadata.EnumTypes.boBarCodeStandardEnum.member(name: "rlbsCode128")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBaseDateRateEnum.bdrPostingDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBaseDateRateEnum.bdrPostingDate = B1ClassMetadata.EnumTypes.boBaseDateRateEnum.member(name: "bdr_PostingDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBaseDateRateEnum.bdrTaxDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBaseDateRateEnum.bdrTaxDate = B1ClassMetadata.EnumTypes.boBaseDateRateEnum.member(name: "bdr_TaxDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBaselineDate.bldPostingDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBaselineDate.bldPostingDate = B1ClassMetadata.EnumTypes.boBaselineDate.member(name: "bld_PostingDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBaselineDate.bldSystemDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBaselineDate.bldSystemDate = B1ClassMetadata.EnumTypes.boBaselineDate.member(name: "bld_SystemDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBaselineDate.bldTaxDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBaselineDate.bldTaxDate = B1ClassMetadata.EnumTypes.boBaselineDate.member(name: "bld_TaxDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBaselineDate.bldClosingDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBaselineDate.bldClosingDate = B1ClassMetadata.EnumTypes.boBaselineDate.member(name: "bld_ClosingDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBlockBudget.bbOnlyAnnualAlert.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBlockBudget.bbOnlyAnnualAlert = B1ClassMetadata.EnumTypes.boBlockBudget.member(name: "bb_OnlyAnnualAlert")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBlockBudget.bbMonthlyAlertOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBlockBudget.bbMonthlyAlertOnly = B1ClassMetadata.EnumTypes.boBlockBudget.member(name: "bb_MonthlyAlertOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBlockBudget.bbBlock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBlockBudget.bbBlock = B1ClassMetadata.EnumTypes.boBlockBudget.member(name: "bb_Block")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesCreated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesCreated = B1ClassMetadata.EnumTypes.boBoeStatus.member(name: "boes_Created")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesSent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesSent = B1ClassMetadata.EnumTypes.boBoeStatus.member(name: "boes_Sent")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesDeposited.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesDeposited = B1ClassMetadata.EnumTypes.boBoeStatus.member(name: "boes_Deposited")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesPaid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesPaid = B1ClassMetadata.EnumTypes.boBoeStatus.member(name: "boes_Paid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesCancelled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesCancelled = B1ClassMetadata.EnumTypes.boBoeStatus.member(name: "boes_Cancelled")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesClosed = B1ClassMetadata.EnumTypes.boBoeStatus.member(name: "boes_Closed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesFailed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBoeStatus.boesFailed = B1ClassMetadata.EnumTypes.boBoeStatus.member(name: "boes_Failed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatGeneral.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatGeneral = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_General")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatDownPayment = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_DownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatAssetsAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatAssetsAccount = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_AssetsAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatReceivable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatReceivable = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_Receivable")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatPayable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatPayable = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_Payable")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatOnCollection.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatOnCollection = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_OnCollection")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatPresentation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatPresentation = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_Presentation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatAssetsPayable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatAssetsPayable = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_AssetsPayable")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatDiscounted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatDiscounted = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_Discounted")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatUnpaid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatUnpaid = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_Unpaid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatOpenDebts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatOpenDebts = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_OpenDebts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatDomestic.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatDomestic = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_Domestic")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatForeign.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatForeign = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_Foreign")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatCashDiscountInterim.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatCashDiscountInterim = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_CashDiscountInterim")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatExchangeRateInterim.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpAccountTypes.bpatExchangeRateInterim = B1ClassMetadata.EnumTypes.boBpAccountTypes.member(name: "bpat_ExchangeRateInterim")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpsDocTypes.bpdtPaymentReference.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpsDocTypes.bpdtPaymentReference = B1ClassMetadata.EnumTypes.boBpsDocTypes.member(name: "bpdt_PaymentReference")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpsDocTypes.bpdtISR.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpsDocTypes.bpdtISR = B1ClassMetadata.EnumTypes.boBpsDocTypes.member(name: "bpdt_ISR")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBpsDocTypes.bpdtDocNum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBpsDocTypes.bpdtDocNum = B1ClassMetadata.EnumTypes.boBpsDocTypes.member(name: "bpdt_DocNum")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBudgetAlert.baAnnualAlert.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBudgetAlert.baAnnualAlert = B1ClassMetadata.EnumTypes.boBudgetAlert.member(name: "ba_AnnualAlert")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBudgetAlert.baMonthlyAlert.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBudgetAlert.baMonthlyAlert = B1ClassMetadata.EnumTypes.boBudgetAlert.member(name: "ba_MonthlyAlert")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessAreaEnum.baSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessAreaEnum.baSales = B1ClassMetadata.EnumTypes.boBusinessAreaEnum.member(name: "baSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessAreaEnum.baPurchase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessAreaEnum.baPurchase = B1ClassMetadata.EnumTypes.boBusinessAreaEnum.member(name: "baPurchase")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessAreaEnum.baSalesAndPurchase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessAreaEnum.baSalesAndPurchase = B1ClassMetadata.EnumTypes.boBusinessAreaEnum.member(name: "baSalesAndPurchase")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerGroupTypes.bbpgtCustomerGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerGroupTypes.bbpgtCustomerGroup = B1ClassMetadata.EnumTypes.boBusinessPartnerGroupTypes.member(name: "bbpgt_CustomerGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerGroupTypes.bbpgtVendorGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerGroupTypes.bbpgtVendorGroup = B1ClassMetadata.EnumTypes.boBusinessPartnerGroupTypes.member(name: "bbpgt_VendorGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerTypes.garAll.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerTypes.garAll = B1ClassMetadata.EnumTypes.boBusinessPartnerTypes.member(name: "garAll")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerTypes.garCompany.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerTypes.garCompany = B1ClassMetadata.EnumTypes.boBusinessPartnerTypes.member(name: "garCompany")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerTypes.garPrivate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerTypes.garPrivate = B1ClassMetadata.EnumTypes.boBusinessPartnerTypes.member(name: "garPrivate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerTypes.garGovernment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoBusinessPartnerTypes.garGovernment = B1ClassMetadata.EnumTypes.boBusinessPartnerTypes.member(name: "garGovernment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCardCompanyTypes.cCompany.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCardCompanyTypes.cCompany = B1ClassMetadata.EnumTypes.boCardCompanyTypes.member(name: "cCompany")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCardCompanyTypes.cPrivate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCardCompanyTypes.cPrivate = B1ClassMetadata.EnumTypes.boCardCompanyTypes.member(name: "cPrivate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCardCompanyTypes.cGovernment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCardCompanyTypes.cGovernment = B1ClassMetadata.EnumTypes.boCardCompanyTypes.member(name: "cGovernment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCardTypes.cCustomer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCardTypes.cCustomer = B1ClassMetadata.EnumTypes.boCardTypes.member(name: "cCustomer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCardTypes.cSupplier.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCardTypes.cSupplier = B1ClassMetadata.EnumTypes.boCardTypes.member(name: "cSupplier")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCardTypes.cLid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCardTypes.cLid = B1ClassMetadata.EnumTypes.boCardTypes.member(name: "cLid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clChartOfAccounts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clChartOfAccounts = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clChartOfAccounts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clBusinessPartners.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clBusinessPartners = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clBusinessPartners")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clItems.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clItems = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clItems")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clVatGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clVatGroups = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clVatGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clUsers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clUsers = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clUsers")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInvoices = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCreditNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCreditNotes = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clCreditNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clDeliveryNotes = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clDeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clReturns = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clReturns")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clOrders = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseInvoices = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPurchaseInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseCreditNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseCreditNotes = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPurchaseCreditNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseDeliveryNotes = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPurchaseDeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseReturns = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPurchaseReturns")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseOrders = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPurchaseOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clQuotations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clQuotations = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clQuotations")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clIncomingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clIncomingPayments = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clIncomingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clJournalEntries.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clJournalEntries = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clJournalEntries")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCreditCards.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCreditCards = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clCreditCards")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clAdminInfo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clAdminInfo = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clAdminInfo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clVendorPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clVendorPayments = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clVendorPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clItemGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clItemGroups = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clItemGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInventoryGeneralEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInventoryGeneralEntry = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clInventoryGeneralEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInventoryGeneralExit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInventoryGeneralExit = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clInventoryGeneralExit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clWarehouses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clWarehouses = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clWarehouses")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clProductTrees.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clProductTrees = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clProductTrees")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clStockTransfers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clStockTransfers = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clStockTransfers")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clFinancePeriods.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clFinancePeriods = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clFinancePeriods")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clAdditionalExpenses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clAdditionalExpenses = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clAdditionalExpenses")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPickLists.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPickLists = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPickLists")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clMaterialRevaluation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clMaterialRevaluation = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clMaterialRevaluation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCorrectionPurchaseInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCorrectionPurchaseInvoice = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clCorrectionPurchaseInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCorrectionPurchaseInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCorrectionPurchaseInvoiceReversal = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clCorrectionPurchaseInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCorrectionInvoice = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCorrectionInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCorrectionInvoiceReversal = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clCorrectionInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clEmployeesInfo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clEmployeesInfo = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clEmployeesInfo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCustomerEquipmentCards.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clCustomerEquipmentCards = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clCustomerEquipmentCards")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clWithholdingTaxCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clWithholdingTaxCodes = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clWithholdingTaxCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clBillOfExchange.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clBillOfExchange = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clBillOfExchange")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clServiceCalls.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clServiceCalls = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clServiceCalls")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clProductionOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clProductionOrders = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clProductionOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clDownPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clDownPayments = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clDownPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseDownPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseDownPayments = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPurchaseDownPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPeriodCategory.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPeriodCategory = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPeriodCategory")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clHouseBankAccounts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clHouseBankAccounts = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clHouseBankAccounts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clSalesTaxInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clSalesTaxInvoice = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clSalesTaxInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseTaxInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseTaxInvoice = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPurchaseTaxInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clExternalBankOperationCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clExternalBankOperationCodes = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clExternalBankOperationCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInternalBankOperationCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInternalBankOperationCodes = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clInternalBankOperationCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clOutgoingExciseInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clOutgoingExciseInvoice = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clOutgoingExciseInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clIncomingExciseInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clIncomingExciseInvoice = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clIncomingExciseInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInventoryTransferRequests.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clInventoryTransferRequests = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clInventoryTransferRequests")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clPurchaseQuotation = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clPurchaseQuotation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clActivities.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clActivities = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clActivities")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clChecksForPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clChecksForPayment = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clChecksForPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clServiceContract.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clServiceContract = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clServiceContract")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clUDO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoChangeLogEnum.clUDO = B1ClassMetadata.EnumTypes.boChangeLogEnum.member(name: "clUDO")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCheckDepositTypeEnum.cdtCashChecks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCheckDepositTypeEnum.cdtCashChecks = B1ClassMetadata.EnumTypes.boCheckDepositTypeEnum.member(name: "cdtCashChecks")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCheckDepositTypeEnum.cdtPostdatedChecks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCheckDepositTypeEnum.cdtPostdatedChecks = B1ClassMetadata.EnumTypes.boCheckDepositTypeEnum.member(name: "cdtPostdatedChecks")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureBaseDateEnum.bocpdbldBaseSystemDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureBaseDateEnum.bocpdbldBaseSystemDate = B1ClassMetadata.EnumTypes.boClosingDateProcedureBaseDateEnum.member(name: "bocpdbld_BaseSystemDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureBaseDateEnum.bocpdbldPostingDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureBaseDateEnum.bocpdbldPostingDate = B1ClassMetadata.EnumTypes.boClosingDateProcedureBaseDateEnum.member(name: "bocpdbld_PostingDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureDueMonthEnum.bocpddmHalfMonth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureDueMonthEnum.bocpddmHalfMonth = B1ClassMetadata.EnumTypes.boClosingDateProcedureDueMonthEnum.member(name: "bocpddm_HalfMonth")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureDueMonthEnum.bocpddmMonthEnd.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureDueMonthEnum.bocpddmMonthEnd = B1ClassMetadata.EnumTypes.boClosingDateProcedureDueMonthEnum.member(name: "bocpddm_MonthEnd")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureDueMonthEnum.bocpddmMonthStart.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureDueMonthEnum.bocpddmMonthStart = B1ClassMetadata.EnumTypes.boClosingDateProcedureDueMonthEnum.member(name: "bocpddm_MonthStart")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureDueMonthEnum.bocpddmNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoClosingDateProcedureDueMonthEnum.bocpddmNone = B1ClassMetadata.EnumTypes.boClosingDateProcedureDueMonthEnum.member(name: "bocpddm_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCockpitTypeEnum.cpttUserCockpit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCockpitTypeEnum.cpttUserCockpit = B1ClassMetadata.EnumTypes.boCockpitTypeEnum.member(name: "cptt_UserCockpit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCockpitTypeEnum.cpttTemplateCockpit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCockpitTypeEnum.cpttTemplateCockpit = B1ClassMetadata.EnumTypes.boCockpitTypeEnum.member(name: "cptt_TemplateCockpit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoConsumptionMethod.cmBackwardForward.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoConsumptionMethod.cmBackwardForward = B1ClassMetadata.EnumTypes.boConsumptionMethod.member(name: "cm_BackwardForward")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoConsumptionMethod.cmForwardBackward.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoConsumptionMethod.cmForwardBackward = B1ClassMetadata.EnumTypes.boConsumptionMethod.member(name: "cm_ForwardBackward")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoContractTypes.ctCustomer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoContractTypes.ctCustomer = B1ClassMetadata.EnumTypes.boContractTypes.member(name: "ct_Customer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoContractTypes.ctItemGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoContractTypes.ctItemGroup = B1ClassMetadata.EnumTypes.boContractTypes.member(name: "ct_ItemGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoContractTypes.ctSerialNumber.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoContractTypes.ctSerialNumber = B1ClassMetadata.EnumTypes.boContractTypes.member(name: "ct_SerialNumber")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCorInvItemStatus.ciisWas.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCorInvItemStatus.ciisWas = B1ClassMetadata.EnumTypes.boCorInvItemStatus.member(name: "ciis_Was")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCorInvItemStatus.ciisShouldBe.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCorInvItemStatus.ciisShouldBe = B1ClassMetadata.EnumTypes.boCorInvItemStatus.member(name: "ciis_ShouldBe")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCpCardAcct.cfpCard.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCpCardAcct.cfpCard = B1ClassMetadata.EnumTypes.boCpCardAcct.member(name: "cfp_Card")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCpCardAcct.cfpAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCpCardAcct.cfpAccount = B1ClassMetadata.EnumTypes.boCpCardAcct.member(name: "cfp_Account")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCurrencyCheck.ccBlock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCurrencyCheck.ccBlock = B1ClassMetadata.EnumTypes.boCurrencyCheck.member(name: "cc_Block")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCurrencyCheck.ccNoMessage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCurrencyCheck.ccNoMessage = B1ClassMetadata.EnumTypes.boCurrencyCheck.member(name: "cc_NoMessage")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCurrencySources.bocsLocalCurrency.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCurrencySources.bocsLocalCurrency = B1ClassMetadata.EnumTypes.boCurrencySources.member(name: "bocs_LocalCurrency")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCurrencySources.bocsSystemCurrency.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCurrencySources.bocsSystemCurrency = B1ClassMetadata.EnumTypes.boCurrencySources.member(name: "bocs_SystemCurrency")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoCurrencySources.bocsBPCurrency.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoCurrencySources.bocsBPCurrency = B1ClassMetadata.EnumTypes.boCurrencySources.member(name: "bocs_BPCurrency")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDataOwnershipManageMethodEnum.doManageByDocOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDataOwnershipManageMethodEnum.doManageByDocOnly = B1ClassMetadata.EnumTypes.boDataOwnershipManageMethodEnum.member(name: "doManageByDocOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDataOwnershipManageMethodEnum.doManageByBPOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDataOwnershipManageMethodEnum.doManageByBPOnly = B1ClassMetadata.EnumTypes.boDataOwnershipManageMethodEnum.member(name: "doManageByBPOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDataOwnershipManageMethodEnum.doManageByBPnDoc.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDataOwnershipManageMethodEnum.doManageByBPnDoc = B1ClassMetadata.EnumTypes.boDataOwnershipManageMethodEnum.member(name: "doManageByBPnDoc")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDataOwnershipManageMethodEnum.doManageByBranch.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDataOwnershipManageMethodEnum.doManageByBranch = B1ClassMetadata.EnumTypes.boDataOwnershipManageMethodEnum.member(name: "doManageByBranch")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDataSourceEnum.rldsFreeText.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDataSourceEnum.rldsFreeText = B1ClassMetadata.EnumTypes.boDataSourceEnum.member(name: "rldsFreeText")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDataSourceEnum.rldsSystemVariable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDataSourceEnum.rldsSystemVariable = B1ClassMetadata.EnumTypes.boDataSourceEnum.member(name: "rldsSystemVariable")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDataSourceEnum.rldsDatabase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDataSourceEnum.rldsDatabase = B1ClassMetadata.EnumTypes.boDataSourceEnum.member(name: "rldsDatabase")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDataSourceEnum.rldsFormula.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDataSourceEnum.rldsFormula = B1ClassMetadata.EnumTypes.boDataSourceEnum.member(name: "rldsFormula")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtDDMMYY.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtDDMMYY = B1ClassMetadata.EnumTypes.boDateTemplate.member(name: "dt_DDMMYY")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtDDMMCCYY.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtDDMMCCYY = B1ClassMetadata.EnumTypes.boDateTemplate.member(name: "dt_DDMMCCYY")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtMMDDYY.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtMMDDYY = B1ClassMetadata.EnumTypes.boDateTemplate.member(name: "dt_MMDDYY")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtMMDDCCYY.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtMMDDCCYY = B1ClassMetadata.EnumTypes.boDateTemplate.member(name: "dt_MMDDCCYY")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtCCYYMMDD.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtCCYYMMDD = B1ClassMetadata.EnumTypes.boDateTemplate.member(name: "dt_CCYYMMDD")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtDDMonthYYYY.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtDDMonthYYYY = B1ClassMetadata.EnumTypes.boDateTemplate.member(name: "dt_DDMonthYYYY")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtYYMMDD.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDateTemplate.dtYYMMDD = B1ClassMetadata.EnumTypes.boDateTemplate.member(name: "dt_YYMMDD")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcInterestReceivers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcInterestReceivers = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcInterestReceivers")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcEmployeeReceivingCommission.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcEmployeeReceivingCommission = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcEmployeeReceivingCommission")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcWritersPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcWritersPrice = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcWritersPrice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcPaidServices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcPaidServices = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcPaidServices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcPaymentsToForeignCitizens.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcPaymentsToForeignCitizens = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcPaymentsToForeignCitizens")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcPaymentsForCitizensInForeignCountries.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcPaymentsForCitizensInForeignCountries = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcPaymentsForCitizensInForeignCountries")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcInvalidPaymentFromCompensationFund.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcInvalidPaymentFromCompensationFund = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcInvalidPaymentFromCompensationFund")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcRepaymentToEmployerFromCompensationFund.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcRepaymentToEmployerFromCompensationFund = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcRepaymentToEmployerFromCompensationFund")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcRentalPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcRentalPayments = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcRentalPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcPaymentsFromStudyFund.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcPaymentsFromStudyFund = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcPaymentsFromStudyFund")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcDividendPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDeductionTaxGroupCodeEnum.dtgcDividendPayments = B1ClassMetadata.EnumTypes.boDeductionTaxGroupCodeEnum.member(name: "dtgcDividendPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDefaultBatchStatus.dbsReleased.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDefaultBatchStatus.dbsReleased = B1ClassMetadata.EnumTypes.boDefaultBatchStatus.member(name: "dbs_Released")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDefaultBatchStatus.dbsNotAccessible.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDefaultBatchStatus.dbsNotAccessible = B1ClassMetadata.EnumTypes.boDefaultBatchStatus.member(name: "dbs_NotAccessible")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDefaultBatchStatus.dbsLocked.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDefaultBatchStatus.dbsLocked = B1ClassMetadata.EnumTypes.boDefaultBatchStatus.member(name: "dbs_Locked")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositAccountTypeEnum.datBankAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositAccountTypeEnum.datBankAccount = B1ClassMetadata.EnumTypes.boDepositAccountTypeEnum.member(name: "datBankAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositAccountTypeEnum.datBusinessPartner.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositAccountTypeEnum.datBusinessPartner = B1ClassMetadata.EnumTypes.boDepositAccountTypeEnum.member(name: "datBusinessPartner")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositCheckEnum.dtNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositCheckEnum.dtNo = B1ClassMetadata.EnumTypes.boDepositCheckEnum.member(name: "dtNo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositCheckEnum.dcAsCash.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositCheckEnum.dcAsCash = B1ClassMetadata.EnumTypes.boDepositCheckEnum.member(name: "dcAsCash")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositCheckEnum.dtAsPostdated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositCheckEnum.dtAsPostdated = B1ClassMetadata.EnumTypes.boDepositCheckEnum.member(name: "dtAsPostdated")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositPostingTypes.dptCollection.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositPostingTypes.dptCollection = B1ClassMetadata.EnumTypes.boDepositPostingTypes.member(name: "dpt_Collection")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositPostingTypes.dptDiscounted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositPostingTypes.dptDiscounted = B1ClassMetadata.EnumTypes.boDepositPostingTypes.member(name: "dpt_Discounted")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositTypeEnum.dtChecks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositTypeEnum.dtChecks = B1ClassMetadata.EnumTypes.boDepositTypeEnum.member(name: "dtChecks")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositTypeEnum.dtCredit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositTypeEnum.dtCredit = B1ClassMetadata.EnumTypes.boDepositTypeEnum.member(name: "dtCredit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositTypeEnum.dtCash.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositTypeEnum.dtCash = B1ClassMetadata.EnumTypes.boDepositTypeEnum.member(name: "dtCash")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDepositTypeEnum.dtBOE.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDepositTypeEnum.dtBOE = B1ClassMetadata.EnumTypes.boDepositTypeEnum.member(name: "dtBOE")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocItemType.ditItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocItemType.ditItem = B1ClassMetadata.EnumTypes.boDocItemType.member(name: "dit_Item")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocItemType.ditResource.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocItemType.ditResource = B1ClassMetadata.EnumTypes.boDocItemType.member(name: "dit_Resource")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocLineType.dltRegular.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocLineType.dltRegular = B1ClassMetadata.EnumTypes.boDocLineType.member(name: "dlt_Regular")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocLineType.dltAlternative.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocLineType.dltAlternative = B1ClassMetadata.EnumTypes.boDocLineType.member(name: "dlt_Alternative")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocSpecialLineType.dsltText.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocSpecialLineType.dsltText = B1ClassMetadata.EnumTypes.boDocSpecialLineType.member(name: "dslt_Text")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocSpecialLineType.dsltSubtotal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocSpecialLineType.dsltSubtotal = B1ClassMetadata.EnumTypes.boDocSpecialLineType.member(name: "dslt_Subtotal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocSummaryTypes.dNoSummary.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocSummaryTypes.dNoSummary = B1ClassMetadata.EnumTypes.boDocSummaryTypes.member(name: "dNoSummary")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocSummaryTypes.dByItems.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocSummaryTypes.dByItems = B1ClassMetadata.EnumTypes.boDocSummaryTypes.member(name: "dByItems")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocSummaryTypes.dByDocuments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocSummaryTypes.dByDocuments = B1ClassMetadata.EnumTypes.boDocSummaryTypes.member(name: "dByDocuments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinSingleChoiceOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinSingleChoiceOnly = B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.member(name: "whsBinSingleChoiceOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinBinCodeOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinBinCodeOrder = B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.member(name: "whsBinBinCodeOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinAltSortCodeOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinAltSortCodeOrder = B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.member(name: "whsBinAltSortCodeOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinQtyDescendingOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinQtyDescendingOrder = B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.member(name: "whsBinQtyDescendingOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinQtyAscendingOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinQtyAscendingOrder = B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.member(name: "whsBinQtyAscendingOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinFIFO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinFIFO = B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.member(name: "whsBinFIFO")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinLIFO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinLIFO = B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.member(name: "whsBinLIFO")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinSingleBinPreferred.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsAutoIssueMethod.whsBinSingleBinPreferred = B1ClassMetadata.EnumTypes.boDocWhsAutoIssueMethod.member(name: "whsBinSingleBinPreferred")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhNo = B1ClassMetadata.EnumTypes.boDocWhsUpdateTypes.member(name: "dwh_No")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhOrdersFromVendors.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhOrdersFromVendors = B1ClassMetadata.EnumTypes.boDocWhsUpdateTypes.member(name: "dwh_OrdersFromVendors")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhCustomerOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhCustomerOrders = B1ClassMetadata.EnumTypes.boDocWhsUpdateTypes.member(name: "dwh_CustomerOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhConsignment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhConsignment = B1ClassMetadata.EnumTypes.boDocWhsUpdateTypes.member(name: "dwh_Consignment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhStock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocWhsUpdateTypes.dwhStock = B1ClassMetadata.EnumTypes.boDocWhsUpdateTypes.member(name: "dwh_Stock")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentLinePickStatus.dlpsPicked.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentLinePickStatus.dlpsPicked = B1ClassMetadata.EnumTypes.boDocumentLinePickStatus.member(name: "dlps_Picked")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentLinePickStatus.dlpsNotPicked.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentLinePickStatus.dlpsNotPicked = B1ClassMetadata.EnumTypes.boDocumentLinePickStatus.member(name: "dlps_NotPicked")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentLinePickStatus.dlpsReleasedForPicking.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentLinePickStatus.dlpsReleasedForPicking = B1ClassMetadata.EnumTypes.boDocumentLinePickStatus.member(name: "dlps_ReleasedForPicking")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentLinePickStatus.dlpsPartiallyPicked.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentLinePickStatus.dlpsPartiallyPicked = B1ClassMetadata.EnumTypes.boDocumentLinePickStatus.member(name: "dlps_PartiallyPicked")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodNone = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodInvoiceExempt.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodInvoiceExempt = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_InvoiceExempt")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodDebitMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodDebitMemo = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_DebitMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodBill.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodBill = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_Bill")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodExemptBill.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodExemptBill = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_ExemptBill")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodPurchaseDebitMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodPurchaseDebitMemo = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_PurchaseDebitMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodExportInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodExportInvoice = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_ExportInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodGSTTaxInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodGSTTaxInvoice = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_GSTTaxInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodGSTDebitMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentSubType.bodGSTDebitMemo = B1ClassMetadata.EnumTypes.boDocumentSubType.member(name: "bod_GSTDebitMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentTypes.dDocumentItems.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentTypes.dDocumentItems = B1ClassMetadata.EnumTypes.boDocumentTypes.member(name: "dDocument_Items")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDocumentTypes.dDocumentService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDocumentTypes.dDocumentService = B1ClassMetadata.EnumTypes.boDocumentTypes.member(name: "dDocument_Service")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDueDateEnum.boddDateOfPaymentRun.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDueDateEnum.boddDateOfPaymentRun = B1ClassMetadata.EnumTypes.boDueDateEnum.member(name: "boddDateOfPaymentRun")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDueDateEnum.boddDueDateOfInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDueDateEnum.boddDueDateOfInvoice = B1ClassMetadata.EnumTypes.boDueDateEnum.member(name: "boddDueDateOfInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDueDateEnum.boddPaymentTerms.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDueDateEnum.boddPaymentTerms = B1ClassMetadata.EnumTypes.boDueDateEnum.member(name: "boddPaymentTerms")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDurations.duMinuts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDurations.duMinuts = B1ClassMetadata.EnumTypes.boDurations.member(name: "du_Minuts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDurations.duHours.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDurations.duHours = B1ClassMetadata.EnumTypes.boDurations.member(name: "du_Hours")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoDurations.duDays.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoDurations.duDays = B1ClassMetadata.EnumTypes.boDurations.member(name: "du_Days")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoExpenseOperationTypeEnum.boExpOpTypeProfessionalServices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoExpenseOperationTypeEnum.boExpOpTypeProfessionalServices = B1ClassMetadata.EnumTypes.boExpenseOperationTypeEnum.member(name: "bo_ExpOpType_ProfessionalServices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoExpenseOperationTypeEnum.boExpOpTypeRentingAssets.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoExpenseOperationTypeEnum.boExpOpTypeRentingAssets = B1ClassMetadata.EnumTypes.boExpenseOperationTypeEnum.member(name: "bo_ExpOpType_RentingAssets")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoExpenseOperationTypeEnum.boExpOpTypeOthers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoExpenseOperationTypeEnum.boExpOpTypeOthers = B1ClassMetadata.EnumTypes.boExpenseOperationTypeEnum.member(name: "bo_ExpOpType_Others")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoExpenseOperationTypeEnum.boExpOpTypeNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoExpenseOperationTypeEnum.boExpOpTypeNone = B1ClassMetadata.EnumTypes.boExpenseOperationTypeEnum.member(name: "bo_ExpOpType_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoExtensionErrorActionEnum.eeaStop.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoExtensionErrorActionEnum.eeaStop = B1ClassMetadata.EnumTypes.boExtensionErrorActionEnum.member(name: "eeaStop")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoExtensionErrorActionEnum.eeaIgnore.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoExtensionErrorActionEnum.eeaIgnore = B1ClassMetadata.EnumTypes.boExtensionErrorActionEnum.member(name: "eeaIgnore")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoExtensionErrorActionEnum.eeaPrompt.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoExtensionErrorActionEnum.eeaPrompt = B1ClassMetadata.EnumTypes.boExtensionErrorActionEnum.member(name: "eeaPrompt")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFatherCardTypes.cPaymentsSum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFatherCardTypes.cPaymentsSum = B1ClassMetadata.EnumTypes.boFatherCardTypes.member(name: "cPayments_sum")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFatherCardTypes.cDeliverySum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFatherCardTypes.cDeliverySum = B1ClassMetadata.EnumTypes.boFatherCardTypes.member(name: "cDelivery_sum")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbAlpha.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbAlpha = B1ClassMetadata.EnumTypes.boFieldTypes.member(name: "db_Alpha")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbMemo = B1ClassMetadata.EnumTypes.boFieldTypes.member(name: "db_Memo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbNumeric.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbNumeric = B1ClassMetadata.EnumTypes.boFieldTypes.member(name: "db_Numeric")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbDate = B1ClassMetadata.EnumTypes.boFieldTypes.member(name: "db_Date")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbFloat.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFieldTypes.dbFloat = B1ClassMetadata.EnumTypes.boFieldTypes.member(name: "db_Float")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stNone = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stAddress.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stAddress = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Address")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stPhone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stPhone = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Phone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stTime.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stTime = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Time")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stRate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stRate = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Rate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stSum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stSum = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Sum")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stPrice = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Price")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stQuantity = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Quantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stPercentage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stPercentage = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Percentage")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stMeasurement.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stMeasurement = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Measurement")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stLink.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stLink = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Link")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stImage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFldSubTypes.stImage = B1ClassMetadata.EnumTypes.boFldSubTypes.member(name: "st_Image")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoForecastViewType.fvtDaily.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoForecastViewType.fvtDaily = B1ClassMetadata.EnumTypes.boForecastViewType.member(name: "fvtDaily")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoForecastViewType.fvtWeekly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoForecastViewType.fvtWeekly = B1ClassMetadata.EnumTypes.boForecastViewType.member(name: "fvtWeekly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoForecastViewType.fvtMonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoForecastViewType.fvtMonthly = B1ClassMetadata.EnumTypes.boForecastViewType.member(name: "fvtMonthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFormattedSearchActionEnum.bofsaNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFormattedSearchActionEnum.bofsaNone = B1ClassMetadata.EnumTypes.boFormattedSearchActionEnum.member(name: "bofsaNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFormattedSearchActionEnum.bofsaQuery.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFormattedSearchActionEnum.bofsaQuery = B1ClassMetadata.EnumTypes.boFormattedSearchActionEnum.member(name: "bofsaQuery")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFormattedSearchActionEnum.bofsaValidValues.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFormattedSearchActionEnum.bofsaValidValues = B1ClassMetadata.EnumTypes.boFormattedSearchActionEnum.member(name: "bofsaValidValues")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofDaily.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofDaily = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_Daily")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofWeekly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofWeekly = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_Weekly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofEvery4Weeks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofEvery4Weeks = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_Every4Weeks")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofMonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofMonthly = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_Monthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofQuarterly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofQuarterly = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_Quarterly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofHalfYearly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofHalfYearly = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_HalfYearly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofAnnually.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofAnnually = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_Annually")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofOneTime.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofOneTime = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_OneTime")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoFrequency.bofEveryXDays.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoFrequency.bofEveryXDays = B1ClassMetadata.EnumTypes.boFrequency.member(name: "bof_EveryXDays")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGLMethods.glmWH.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGLMethods.glmWH = B1ClassMetadata.EnumTypes.boGLMethods.member(name: "glm_WH")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGLMethods.glmItemClass.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGLMethods.glmItemClass = B1ClassMetadata.EnumTypes.boGLMethods.member(name: "glm_ItemClass")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGLMethods.glmItemLevel.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGLMethods.glmItemLevel = B1ClassMetadata.EnumTypes.boGLMethods.member(name: "glm_ItemLevel")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstRegularTDSISD.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstRegularTDSISD = B1ClassMetadata.EnumTypes.boGSTRegnTypeEnum.member(name: "gstRegularTDSISD")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstCasualTaxablePerson.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstCasualTaxablePerson = B1ClassMetadata.EnumTypes.boGSTRegnTypeEnum.member(name: "gstCasualTaxablePerson")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstCompositionLevy.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstCompositionLevy = B1ClassMetadata.EnumTypes.boGSTRegnTypeEnum.member(name: "gstCompositionLevy")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstGoverDepartPSU.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstGoverDepartPSU = B1ClassMetadata.EnumTypes.boGSTRegnTypeEnum.member(name: "gstGoverDepartPSU")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstNonResidentTaxablePerson.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstNonResidentTaxablePerson = B1ClassMetadata.EnumTypes.boGSTRegnTypeEnum.member(name: "gstNonResidentTaxablePerson")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstUNAgencyEmbassy.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGSTRegnTypeEnum.gstUNAgencyEmbassy = B1ClassMetadata.EnumTypes.boGSTRegnTypeEnum.member(name: "gstUNAgencyEmbassy")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGenderTypes.gtFemale.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGenderTypes.gtFemale = B1ClassMetadata.EnumTypes.boGenderTypes.member(name: "gt_Female")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGenderTypes.gtMale.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGenderTypes.gtMale = B1ClassMetadata.EnumTypes.boGenderTypes.member(name: "gt_Male")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGenderTypes.gtUndefined.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGenderTypes.gtUndefined = B1ClassMetadata.EnumTypes.boGenderTypes.member(name: "gt_Undefined")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGridTypeEnum.gtCombination.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGridTypeEnum.gtCombination = B1ClassMetadata.EnumTypes.boGridTypeEnum.member(name: "gtCombination")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGridTypeEnum.gtContinuousLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGridTypeEnum.gtContinuousLine = B1ClassMetadata.EnumTypes.boGridTypeEnum.member(name: "gtContinuousLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGridTypeEnum.gtBrokenLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGridTypeEnum.gtBrokenLine = B1ClassMetadata.EnumTypes.boGridTypeEnum.member(name: "gtBrokenLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoGridTypeEnum.gtDots.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoGridTypeEnum.gtDots = B1ClassMetadata.EnumTypes.boGridTypeEnum.member(name: "gtDots")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoHorizontalAlignmentEnum.rlhjRight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoHorizontalAlignmentEnum.rlhjRight = B1ClassMetadata.EnumTypes.boHorizontalAlignmentEnum.member(name: "rlhjRight")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoHorizontalAlignmentEnum.rlhjLeft.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoHorizontalAlignmentEnum.rlhjLeft = B1ClassMetadata.EnumTypes.boHorizontalAlignmentEnum.member(name: "rlhjLeft")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoHorizontalAlignmentEnum.rlhjCentralized.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoHorizontalAlignmentEnum.rlhjCentralized = B1ClassMetadata.EnumTypes.boHorizontalAlignmentEnum.member(name: "rlhjCentralized")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoHorizontalAlignmentEnum.rlhjLanguageDependent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoHorizontalAlignmentEnum.rlhjLanguageDependent = B1ClassMetadata.EnumTypes.boHorizontalAlignmentEnum.member(name: "rlhjLanguageDependent")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoInterimDocTypes.boidtNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoInterimDocTypes.boidtNone = B1ClassMetadata.EnumTypes.boInterimDocTypes.member(name: "boidt_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoInterimDocTypes.boidtExchangeRate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoInterimDocTypes.boidtExchangeRate = B1ClassMetadata.EnumTypes.boInterimDocTypes.member(name: "boidt_ExchangeRate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoInterimDocTypes.boidtCashDiscount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoInterimDocTypes.boidtCashDiscount = B1ClassMetadata.EnumTypes.boInterimDocTypes.member(name: "boidt_CashDiscount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoInventorySystem.bisMovingAverage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoInventorySystem.bisMovingAverage = B1ClassMetadata.EnumTypes.boInventorySystem.member(name: "bis_MovingAverage")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoInventorySystem.bisStandard.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoInventorySystem.bisStandard = B1ClassMetadata.EnumTypes.boInventorySystem.member(name: "bis_Standard")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoInventorySystem.bisFIFO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoInventorySystem.bisFIFO = B1ClassMetadata.EnumTypes.boInventorySystem.member(name: "bis_FIFO")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoInventorySystem.bisSNB.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoInventorySystem.bisSNB = B1ClassMetadata.EnumTypes.boInventorySystem.member(name: "bis_SNB")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoIssueMethod.imBackflush.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoIssueMethod.imBackflush = B1ClassMetadata.EnumTypes.boIssueMethod.member(name: "im_Backflush")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoIssueMethod.imManual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoIssueMethod.imManual = B1ClassMetadata.EnumTypes.boIssueMethod.member(name: "im_Manual")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iNotATree.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iNotATree = B1ClassMetadata.EnumTypes.boItemTreeTypes.member(name: "iNotATree")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iAssemblyTree.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iAssemblyTree = B1ClassMetadata.EnumTypes.boItemTreeTypes.member(name: "iAssemblyTree")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iSalesTree.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iSalesTree = B1ClassMetadata.EnumTypes.boItemTreeTypes.member(name: "iSalesTree")
        }
    }

    private static func merge3(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iProductionTree.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iProductionTree = B1ClassMetadata.EnumTypes.boItemTreeTypes.member(name: "iProductionTree")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iTemplateTree.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iTemplateTree = B1ClassMetadata.EnumTypes.boItemTreeTypes.member(name: "iTemplateTree")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iIngredient.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoItemTreeTypes.iIngredient = B1ClassMetadata.EnumTypes.boItemTreeTypes.member(name: "iIngredient")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoLineBreakEnum.rlsAllowOverflow.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoLineBreakEnum.rlsAllowOverflow = B1ClassMetadata.EnumTypes.boLineBreakEnum.member(name: "rlsAllowOverflow")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoLineBreakEnum.rlsAdjustToCell.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoLineBreakEnum.rlsAdjustToCell = B1ClassMetadata.EnumTypes.boLineBreakEnum.member(name: "rlsAdjustToCell")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoLineBreakEnum.rlsDivideIntoRows.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoLineBreakEnum.rlsDivideIntoRows = B1ClassMetadata.EnumTypes.boLineBreakEnum.member(name: "rlsDivideIntoRows")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMRPComponentWarehouse.bomcwBOM.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMRPComponentWarehouse.bomcwBOM = B1ClassMetadata.EnumTypes.boMRPComponentWarehouse.member(name: "bomcw_BOM")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMRPComponentWarehouse.bomcwParent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMRPComponentWarehouse.bomcwParent = B1ClassMetadata.EnumTypes.boMRPComponentWarehouse.member(name: "bomcw_Parent")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoManageMethod.bommOnEveryTransaction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoManageMethod.bommOnEveryTransaction = B1ClassMetadata.EnumTypes.boManageMethod.member(name: "bomm_OnEveryTransaction")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoManageMethod.bommOnReleaseOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoManageMethod.bommOnReleaseOnly = B1ClassMetadata.EnumTypes.boManageMethod.member(name: "bomm_OnReleaseOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtGoodsForReseller.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtGoodsForReseller = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_GoodsForReseller")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtFinishedGoods.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtFinishedGoods = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_FinishedGoods")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtGoodsInProcess.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtGoodsInProcess = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_GoodsInProcess")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtRawMaterial.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtRawMaterial = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_RawMaterial")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtPackage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtPackage = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_Package")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtSubProduct.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtSubProduct = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_SubProduct")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtIntermediateMaterial.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtIntermediateMaterial = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_IntermediateMaterial")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtConsumerMaterial.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtConsumerMaterial = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_ConsumerMaterial")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtFixedAsset.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtFixedAsset = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_FixedAsset")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtService = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_Service")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtOtherInput.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtOtherInput = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_OtherInput")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMaterialTypes.mtOther = B1ClassMetadata.EnumTypes.boMaterialTypes.member(name: "mt_Other")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMeritalStatuses.mtsSingle.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMeritalStatuses.mtsSingle = B1ClassMetadata.EnumTypes.boMeritalStatuses.member(name: "mts_Single")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMeritalStatuses.mtsMarried.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMeritalStatuses.mtsMarried = B1ClassMetadata.EnumTypes.boMeritalStatuses.member(name: "mts_Married")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMeritalStatuses.mtsDivorced.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMeritalStatuses.mtsDivorced = B1ClassMetadata.EnumTypes.boMeritalStatuses.member(name: "mts_Divorced")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMeritalStatuses.mtsWidowed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMeritalStatuses.mtsWidowed = B1ClassMetadata.EnumTypes.boMeritalStatuses.member(name: "mts_Widowed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptSum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptSum = B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes.member(name: "mpt_Sum")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptPrice = B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes.member(name: "mpt_Price")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptRate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptRate = B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes.member(name: "mpt_Rate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptQuantity = B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes.member(name: "mpt_Quantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptPercent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptPercent = B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes.member(name: "mpt_Percent")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptMeasure.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptMeasure = B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes.member(name: "mpt_Measure")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMoneyPrecisionTypes.mptTax = B1ClassMetadata.EnumTypes.boMoneyPrecisionTypes.member(name: "mpt_Tax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMsgPriorities.prLow.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMsgPriorities.prLow = B1ClassMetadata.EnumTypes.boMsgPriorities.member(name: "pr_Low")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMsgPriorities.prNormal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMsgPriorities.prNormal = B1ClassMetadata.EnumTypes.boMsgPriorities.member(name: "pr_Normal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMsgPriorities.prHigh.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMsgPriorities.prHigh = B1ClassMetadata.EnumTypes.boMsgPriorities.member(name: "pr_High")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMsgRcpTypes.rtRandomUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMsgRcpTypes.rtRandomUser = B1ClassMetadata.EnumTypes.boMsgRcpTypes.member(name: "rt_RandomUser")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMsgRcpTypes.rtContactPerson.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMsgRcpTypes.rtContactPerson = B1ClassMetadata.EnumTypes.boMsgRcpTypes.member(name: "rt_ContactPerson")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoMsgRcpTypes.rtInternalUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoMsgRcpTypes.rtInternalUser = B1ClassMetadata.EnumTypes.boMsgRcpTypes.member(name: "rt_InternalUser")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptNone = B1ClassMetadata.EnumTypes.boORCTPaymentTypeEnum.member(name: "bopt_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptElectronic.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptElectronic = B1ClassMetadata.EnumTypes.boORCTPaymentTypeEnum.member(name: "bopt_Electronic")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptPost.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptPost = B1ClassMetadata.EnumTypes.boORCTPaymentTypeEnum.member(name: "bopt_Post")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptTelegraph.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptTelegraph = B1ClassMetadata.EnumTypes.boORCTPaymentTypeEnum.member(name: "bopt_Telegraph")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptExpress.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoORCTPaymentTypeEnum.boptExpress = B1ClassMetadata.EnumTypes.boORCTPaymentTypeEnum.member(name: "bopt_Express")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oChartOfAccounts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oChartOfAccounts = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oChartOfAccounts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBusinessPartners.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBusinessPartners = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBusinessPartners")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBanks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBanks = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBanks")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oItems.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oItems = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oItems")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oVatGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oVatGroups = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oVatGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPriceLists.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPriceLists = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPriceLists")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSpecialPrices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSpecialPrices = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSpecialPrices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oItemProperties.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oItemProperties = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oItemProperties")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBusinessPartnerGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBusinessPartnerGroups = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBusinessPartnerGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUsers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUsers = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUsers")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInvoices = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCreditNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCreditNotes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCreditNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDeliveryNotes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oDeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oReturns = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oReturns")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oOrders = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseInvoices = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseCreditNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseCreditNotes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseCreditNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseDeliveryNotes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseDeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseReturns = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseReturns")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseOrders = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oQuotations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oQuotations = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oQuotations")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oIncomingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oIncomingPayments = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oIncomingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oJournalVouchers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oJournalVouchers = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oJournalVouchers")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oJournalEntries.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oJournalEntries = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oJournalEntries")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oStockTakings.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oStockTakings = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oStockTakings")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oContacts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oContacts = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oContacts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCreditCards.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCreditCards = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCreditCards")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCurrencyCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCurrencyCodes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCurrencyCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPaymentTermsTypes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPaymentTermsTypes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPaymentTermsTypes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBankPages.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBankPages = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBankPages")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oManufacturers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oManufacturers = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oManufacturers")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oVendorPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oVendorPayments = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oVendorPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oLandedCostsCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oLandedCostsCodes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oLandedCostsCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oShippingTypes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oShippingTypes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oShippingTypes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oLengthMeasures.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oLengthMeasures = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oLengthMeasures")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWeightMeasures.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWeightMeasures = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oWeightMeasures")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oItemGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oItemGroups = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oItemGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesPersons.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesPersons = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSalesPersons")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCustomsGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCustomsGroups = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCustomsGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oChecksforPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oChecksforPayment = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oChecksforPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInventoryGenEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInventoryGenEntry = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oInventoryGenEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInventoryGenExit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInventoryGenExit = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oInventoryGenExit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWarehouses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWarehouses = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oWarehouses")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCommissionGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCommissionGroups = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCommissionGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oProductTrees.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oProductTrees = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oProductTrees")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oStockTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oStockTransfer = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oStockTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWorkOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWorkOrders = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oWorkOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCreditPaymentMethods.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCreditPaymentMethods = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCreditPaymentMethods")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCreditCardPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCreditCardPayments = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCreditCardPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAlternateCatNum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAlternateCatNum = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oAlternateCatNum")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBudget.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBudget = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBudget")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBudgetDistribution.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBudgetDistribution = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBudgetDistribution")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oMessages.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oMessages = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oMessages")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBudgetScenarios.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBudgetScenarios = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBudgetScenarios")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserDefaultGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserDefaultGroups = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUserDefaultGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesOpportunities.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesOpportunities = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSalesOpportunities")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesStages.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesStages = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSalesStages")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oActivityTypes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oActivityTypes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oActivityTypes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oActivityLocations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oActivityLocations = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oActivityLocations")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDrafts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDrafts = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oDrafts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDeductionTaxHierarchies.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDeductionTaxHierarchies = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oDeductionTaxHierarchies")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDeductionTaxGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDeductionTaxGroups = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oDeductionTaxGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAdditionalExpenses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAdditionalExpenses = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oAdditionalExpenses")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesTaxAuthorities.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesTaxAuthorities = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSalesTaxAuthorities")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesTaxAuthoritiesTypes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesTaxAuthoritiesTypes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSalesTaxAuthoritiesTypes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesTaxCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesTaxCodes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSalesTaxCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oQueryCategories.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oQueryCategories = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oQueryCategories")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oFactoringIndicators.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oFactoringIndicators = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oFactoringIndicators")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPaymentsDrafts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPaymentsDrafts = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPaymentsDrafts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAccountSegmentations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAccountSegmentations = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oAccountSegmentations")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAccountSegmentationCategories.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAccountSegmentationCategories = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oAccountSegmentationCategories")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWarehouseLocations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWarehouseLocations = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oWarehouseLocations")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oForms1099.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oForms1099 = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oForms1099")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInventoryCycles.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInventoryCycles = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oInventoryCycles")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWizardPaymentMethods.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWizardPaymentMethods = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oWizardPaymentMethods")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBPPriorities.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBPPriorities = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBPPriorities")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDunningLetters.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDunningLetters = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oDunningLetters")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserFields.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserFields = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUserFields")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserTables.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserTables = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUserTables")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPickLists.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPickLists = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPickLists")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPaymentRunExport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPaymentRunExport = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPaymentRunExport")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserQueries.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserQueries = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUserQueries")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oMaterialRevaluation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oMaterialRevaluation = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oMaterialRevaluation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCorrectionPurchaseInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCorrectionPurchaseInvoice = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCorrectionPurchaseInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCorrectionPurchaseInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCorrectionPurchaseInvoiceReversal = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCorrectionPurchaseInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCorrectionInvoice = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCorrectionInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCorrectionInvoiceReversal = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCorrectionInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oContractTemplates.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oContractTemplates = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oContractTemplates")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oEmployeesInfo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oEmployeesInfo = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oEmployeesInfo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCustomerEquipmentCards.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oCustomerEquipmentCards = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oCustomerEquipmentCards")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWithholdingTaxCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oWithholdingTaxCodes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oWithholdingTaxCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBillOfExchangeTransactions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBillOfExchangeTransactions = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBillOfExchangeTransactions")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oKnowledgeBaseSolutions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oKnowledgeBaseSolutions = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oKnowledgeBaseSolutions")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oServiceContracts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oServiceContracts = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oServiceContracts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oServiceCalls.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oServiceCalls = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oServiceCalls")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserKeys.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserKeys = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUserKeys")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oQueue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oQueue = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oQueue")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesForecast.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesForecast = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSalesForecast")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oTerritories.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oTerritories = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oTerritories")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oIndustries.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oIndustries = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oIndustries")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oProductionOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oProductionOrders = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oProductionOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDownPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDownPayments = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oDownPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseDownPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseDownPayments = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseDownPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPackagesTypes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPackagesTypes = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPackagesTypes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserObjectsMD.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserObjectsMD = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUserObjectsMD")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oTeams.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oTeams = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oTeams")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oRelationships.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oRelationships = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oRelationships")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserPermissionTree.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserPermissionTree = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUserPermissionTree")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oActivityStatus.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oActivityStatus = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oActivityStatus")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oChooseFromList.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oChooseFromList = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oChooseFromList")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oFormattedSearches.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oFormattedSearches = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oFormattedSearches")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAttachments2.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oAttachments2 = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oAttachments2")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserLanguages.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oUserLanguages = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oUserLanguages")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oMultiLanguageTranslations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oMultiLanguageTranslations = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oMultiLanguageTranslations")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDynamicSystemStrings.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oDynamicSystemStrings = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oDynamicSystemStrings")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oHouseBankAccounts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oHouseBankAccounts = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oHouseBankAccounts")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBusinessPlaces.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBusinessPlaces = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBusinessPlaces")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oLocalEra.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oLocalEra = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oLocalEra")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oNotaFiscalCFOP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oNotaFiscalCFOP = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oNotaFiscalCFOP")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oNotaFiscalCST.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oNotaFiscalCST = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oNotaFiscalCST")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oNotaFiscalUsage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oNotaFiscalUsage = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oNotaFiscalUsage")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oClosingDateProcedure.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oClosingDateProcedure = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oClosingDateProcedure")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBPFiscalRegistryID.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oBPFiscalRegistryID = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oBPFiscalRegistryID")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesTaxInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oSalesTaxInvoice = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oSalesTaxInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseTaxInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseTaxInvoice = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseTaxInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseQuotations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseQuotations = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseQuotations")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oStockTransferDraft.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oStockTransferDraft = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oStockTransferDraft")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInventoryTransferRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oInventoryTransferRequest = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oInventoryTransferRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oPurchaseRequest = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oPurchaseRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oReturnRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oReturnRequest = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oReturnRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oGoodsReturnRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoObjectTypes.oGoodsReturnRequest = B1ClassMetadata.EnumTypes.boObjectTypes.member(name: "oGoodsReturnRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipNo = B1ClassMetadata.EnumTypes.boOpenIncPayment.member(name: "oip_No")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipCash.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipCash = B1ClassMetadata.EnumTypes.boOpenIncPayment.member(name: "oip_Cash")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipChecks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipChecks = B1ClassMetadata.EnumTypes.boOpenIncPayment.member(name: "oip_Checks")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipCredit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipCredit = B1ClassMetadata.EnumTypes.boOpenIncPayment.member(name: "oip_Credit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipBankTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOpenIncPayment.oipBankTransfer = B1ClassMetadata.EnumTypes.boOpenIncPayment.member(name: "oip_BankTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloNone = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloAddition.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloAddition = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloAddition")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloSubtraction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloSubtraction = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloSubtraction")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloMultiplication.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloMultiplication = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloMultiplication")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloDivision.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloDivision = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloDivision")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloPercentage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloPercentage = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloPercentage")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLeftPartCharacters.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLeftPartCharacters = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloLeftPartCharacters")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloRightPartMantissa.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloRightPartMantissa = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloRightPartMantissa")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloRound.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloRound = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloRound")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloConcat.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloConcat = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloConcat")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloRight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloRight = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloRight")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLeft.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLeft = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloLeft")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloSentence.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloSentence = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloSentence")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLength.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLength = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloLength")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloCurrency.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloCurrency = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloCurrency")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloNumber.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloNumber = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloNumber")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLessThan.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLessThan = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloLessThan")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLessOrEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloLessOrEqual = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloLessOrEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloEqual = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloNotEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloNotEqual = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloNotEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloGreaterOrEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloGreaterOrEqual = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloGreaterOrEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloGreaterThan.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOperationEnum.rloGreaterThan = B1ClassMetadata.EnumTypes.boOperationEnum.member(name: "rloGreaterThan")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOpexStatus.bosOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOpexStatus.bosOpen = B1ClassMetadata.EnumTypes.boOpexStatus.member(name: "bos_Open")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOpexStatus.bosClose.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOpexStatus.bosClose = B1ClassMetadata.EnumTypes.boOpexStatus.member(name: "bos_Close")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOrientationEnum.ortVertical.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOrientationEnum.ortVertical = B1ClassMetadata.EnumTypes.boOrientationEnum.member(name: "ortVertical")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoOrientationEnum.ortHorizontal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoOrientationEnum.ortHorizontal = B1ClassMetadata.EnumTypes.boOrientationEnum.member(name: "ortHorizontal")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPayTermDueTypes.pdtMonthEnd.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPayTermDueTypes.pdtMonthEnd = B1ClassMetadata.EnumTypes.boPayTermDueTypes.member(name: "pdt_MonthEnd")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPayTermDueTypes.pdtHalfMonth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPayTermDueTypes.pdtHalfMonth = B1ClassMetadata.EnumTypes.boPayTermDueTypes.member(name: "pdt_HalfMonth")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPayTermDueTypes.pdtMonthStart.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPayTermDueTypes.pdtMonthStart = B1ClassMetadata.EnumTypes.boPayTermDueTypes.member(name: "pdt_MonthStart")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPayTermDueTypes.pdtNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPayTermDueTypes.pdtNone = B1ClassMetadata.EnumTypes.boPayTermDueTypes.member(name: "pdt_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentMeansEnum.bopmCheck.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentMeansEnum.bopmCheck = B1ClassMetadata.EnumTypes.boPaymentMeansEnum.member(name: "bopmCheck")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentMeansEnum.bopmBankTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentMeansEnum.bopmBankTransfer = B1ClassMetadata.EnumTypes.boPaymentMeansEnum.member(name: "bopmBankTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentMeansEnum.bopmBillOfExchange.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentMeansEnum.bopmBillOfExchange = B1ClassMetadata.EnumTypes.boPaymentMeansEnum.member(name: "bopmBillOfExchange")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority1.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority1 = B1ClassMetadata.EnumTypes.boPaymentPriorities.member(name: "bopp_Priority_1")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority2.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority2 = B1ClassMetadata.EnumTypes.boPaymentPriorities.member(name: "bopp_Priority_2")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority3.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority3 = B1ClassMetadata.EnumTypes.boPaymentPriorities.member(name: "bopp_Priority_3")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority4.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority4 = B1ClassMetadata.EnumTypes.boPaymentPriorities.member(name: "bopp_Priority_4")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority5.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority5 = B1ClassMetadata.EnumTypes.boPaymentPriorities.member(name: "bopp_Priority_5")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority6.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentPriorities.boppPriority6 = B1ClassMetadata.EnumTypes.boPaymentPriorities.member(name: "bopp_Priority_6")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentTypeEnum.boptIncoming.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentTypeEnum.boptIncoming = B1ClassMetadata.EnumTypes.boPaymentTypeEnum.member(name: "boptIncoming")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentTypeEnum.boptOutgoing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentTypeEnum.boptOutgoing = B1ClassMetadata.EnumTypes.boPaymentTypeEnum.member(name: "boptOutgoing")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentsObjectType.bopotIncomingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentsObjectType.bopotIncomingPayments = B1ClassMetadata.EnumTypes.boPaymentsObjectType.member(name: "bopot_IncomingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPaymentsObjectType.bopotOutgoingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPaymentsObjectType.bopotOutgoingPayments = B1ClassMetadata.EnumTypes.boPaymentsObjectType.member(name: "bopot_OutgoingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPermission.boperFull.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPermission.boperFull = B1ClassMetadata.EnumTypes.boPermission.member(name: "boper_Full")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPermission.boperReadOnly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPermission.boperReadOnly = B1ClassMetadata.EnumTypes.boPermission.member(name: "boper_ReadOnly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPermission.boperNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPermission.boperNone = B1ClassMetadata.EnumTypes.boPermission.member(name: "boper_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPermission.boperVarious.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPermission.boperVarious = B1ClassMetadata.EnumTypes.boPermission.member(name: "boper_Various")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPermission.boperUndefined.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPermission.boperUndefined = B1ClassMetadata.EnumTypes.boPermission.member(name: "boper_Undefined")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPickStatus.psReleased.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPickStatus.psReleased = B1ClassMetadata.EnumTypes.boPickStatus.member(name: "ps_Released")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPickStatus.psPicked.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPickStatus.psPicked = B1ClassMetadata.EnumTypes.boPickStatus.member(name: "ps_Picked")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPickStatus.psPartiallyPicked.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPickStatus.psPartiallyPicked = B1ClassMetadata.EnumTypes.boPickStatus.member(name: "ps_PartiallyPicked")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPickStatus.psPartiallyDelivered.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPickStatus.psPartiallyDelivered = B1ClassMetadata.EnumTypes.boPickStatus.member(name: "ps_PartiallyDelivered")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPickStatus.psClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPickStatus.psClosed = B1ClassMetadata.EnumTypes.boPickStatus.member(name: "ps_Closed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsOriginalSize.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsOriginalSize = B1ClassMetadata.EnumTypes.boPictureSizeEnum.member(name: "rlpsOriginalSize")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsFitFieldSizeNonProportionally.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsFitFieldSizeNonProportionally = B1ClassMetadata.EnumTypes.boPictureSizeEnum.member(name: "rlpsFitFieldSizeNonProportionally")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsFitFieldSizeProportionally.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsFitFieldSizeProportionally = B1ClassMetadata.EnumTypes.boPictureSizeEnum.member(name: "rlpsFitFieldSizeProportionally")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsFitFieldHeight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsFitFieldHeight = B1ClassMetadata.EnumTypes.boPictureSizeEnum.member(name: "rlpsFitFieldHeight")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsFitFieldWidth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPictureSizeEnum.rlpsFitFieldWidth = B1ClassMetadata.EnumTypes.boPictureSizeEnum.member(name: "rlpsFitFieldWidth")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPlanningSystem.bopMRP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPlanningSystem.bopMRP = B1ClassMetadata.EnumTypes.boPlanningSystem.member(name: "bop_MRP")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPlanningSystem.bopNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPlanningSystem.bopNone = B1ClassMetadata.EnumTypes.boPlanningSystem.member(name: "bop_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPriceListGroupNum.boplgnGroup1.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPriceListGroupNum.boplgnGroup1 = B1ClassMetadata.EnumTypes.boPriceListGroupNum.member(name: "boplgn_Group1")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPriceListGroupNum.boplgnGroup2.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPriceListGroupNum.boplgnGroup2 = B1ClassMetadata.EnumTypes.boPriceListGroupNum.member(name: "boplgn_Group2")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPriceListGroupNum.boplgnGroup3.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPriceListGroupNum.boplgnGroup3 = B1ClassMetadata.EnumTypes.boPriceListGroupNum.member(name: "boplgn_Group3")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPriceListGroupNum.boplgnGroup4.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPriceListGroupNum.boplgnGroup4 = B1ClassMetadata.EnumTypes.boPriceListGroupNum.member(name: "boplgn_Group4")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPrintReceiptEnum.boprcAlways.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPrintReceiptEnum.boprcAlways = B1ClassMetadata.EnumTypes.boPrintReceiptEnum.member(name: "boprcAlways")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPrintReceiptEnum.boprcNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPrintReceiptEnum.boprcNo = B1ClassMetadata.EnumTypes.boPrintReceiptEnum.member(name: "boprcNo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoPrintReceiptEnum.boprcOnlyWhenAdding.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoPrintReceiptEnum.boprcOnlyWhenAdding = B1ClassMetadata.EnumTypes.boPrintReceiptEnum.member(name: "boprcOnlyWhenAdding")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProcurementMethod.bomBuy.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProcurementMethod.bomBuy = B1ClassMetadata.EnumTypes.boProcurementMethod.member(name: "bom_Buy")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProcurementMethod.bomMake.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProcurementMethod.bomMake = B1ClassMetadata.EnumTypes.boProcurementMethod.member(name: "bom_Make")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductSources.bpsPurchasedFromDomVendor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductSources.bpsPurchasedFromDomVendor = B1ClassMetadata.EnumTypes.boProductSources.member(name: "bps_PurchasedFromDomVendor")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductSources.bpsImportedByCompany.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductSources.bpsImportedByCompany = B1ClassMetadata.EnumTypes.boProductSources.member(name: "bps_ImportedByCompany")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductSources.bpsImportedGoodsPurchasedFromDomVendor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductSources.bpsImportedGoodsPurchasedFromDomVendor = B1ClassMetadata.EnumTypes.boProductSources.member(name: "bps_ImportedGoodsPurchasedFromDomVendor")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductSources.bpsProducedByCompany.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductSources.bpsProducedByCompany = B1ClassMetadata.EnumTypes.boProductSources.member(name: "bps_ProducedByCompany")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderOriginEnum.bopooManual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderOriginEnum.bopooManual = B1ClassMetadata.EnumTypes.boProductionOrderOriginEnum.member(name: "bopooManual")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderOriginEnum.bopooMRP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderOriginEnum.bopooMRP = B1ClassMetadata.EnumTypes.boProductionOrderOriginEnum.member(name: "bopooMRP")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderOriginEnum.bopooSalesOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderOriginEnum.bopooSalesOrder = B1ClassMetadata.EnumTypes.boProductionOrderOriginEnum.member(name: "bopooSalesOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderStatusEnum.boposPlanned.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderStatusEnum.boposPlanned = B1ClassMetadata.EnumTypes.boProductionOrderStatusEnum.member(name: "boposPlanned")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderStatusEnum.boposReleased.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderStatusEnum.boposReleased = B1ClassMetadata.EnumTypes.boProductionOrderStatusEnum.member(name: "boposReleased")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderStatusEnum.boposClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderStatusEnum.boposClosed = B1ClassMetadata.EnumTypes.boProductionOrderStatusEnum.member(name: "boposClosed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderStatusEnum.boposCancelled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderStatusEnum.boposCancelled = B1ClassMetadata.EnumTypes.boProductionOrderStatusEnum.member(name: "boposCancelled")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderTypeEnum.bopotStandard.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderTypeEnum.bopotStandard = B1ClassMetadata.EnumTypes.boProductionOrderTypeEnum.member(name: "bopotStandard")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderTypeEnum.bopotSpecial.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderTypeEnum.bopotSpecial = B1ClassMetadata.EnumTypes.boProductionOrderTypeEnum.member(name: "bopotSpecial")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoProductionOrderTypeEnum.bopotDisassembly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoProductionOrderTypeEnum.bopotDisassembly = B1ClassMetadata.EnumTypes.boProductionOrderTypeEnum.member(name: "bopotDisassembly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoQueryTypeEnum.qtRegular.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoQueryTypeEnum.qtRegular = B1ClassMetadata.EnumTypes.boQueryTypeEnum.member(name: "qtRegular")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoQueryTypeEnum.qtWizard.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoQueryTypeEnum.qtWizard = B1ClassMetadata.EnumTypes.boQueryTypeEnum.member(name: "qtWizard")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptCredTypes.crRegular.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptCredTypes.crRegular = B1ClassMetadata.EnumTypes.boRcptCredTypes.member(name: "cr_Regular")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptCredTypes.crTelephone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptCredTypes.crTelephone = B1ClassMetadata.EnumTypes.boRcptCredTypes.member(name: "cr_Telephone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptCredTypes.crInternetTransaction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptCredTypes.crInternetTransaction = B1ClassMetadata.EnumTypes.boRcptCredTypes.member(name: "cr_InternetTransaction")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itAllTransactions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itAllTransactions = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_AllTransactions")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itOpeningBalance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itOpeningBalance = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_OpeningBalance")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itClosingBalance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itClosingBalance = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_ClosingBalance")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itInvoice = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_Invoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itCredItnote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itCredItnote = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_CredItnote")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itTaxInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itTaxInvoice = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_TaxInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itReturn = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_Return")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseInvoice = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_PurchaseInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseCreditNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseCreditNote = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_PurchaseCreditNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseDeliveryNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseDeliveryNote = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_PurchaseDeliveryNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseReturn = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_PurchaseReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itReceipt.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itReceipt = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_Receipt")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itDeposit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itDeposit = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_Deposit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itJournalEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itJournalEntry = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_JournalEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPaymentAdvice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPaymentAdvice = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_PaymentAdvice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itChequesForPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itChequesForPayment = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_ChequesForPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itStockReconciliations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itStockReconciliations = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_StockReconciliations")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itGeneralReceiptToStock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itGeneralReceiptToStock = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_GeneralReceiptToStock")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itGeneralReleaseFromStock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itGeneralReleaseFromStock = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_GeneralReleaseFromStock")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itTransferBetweenWarehouses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itTransferBetweenWarehouses = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_TransferBetweenWarehouses")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itWorkInstructions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itWorkInstructions = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_WorkInstructions")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itDeferredDeposit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itDeferredDeposit = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_DeferredDeposit")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itCorrectionInvoice = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_CorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itAPCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itAPCorrectionInvoice = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_APCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itARCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itARCorrectionInvoice = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_ARCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itDownPayment = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_DownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptInvTypes.itPurchaseDownPayment = B1ClassMetadata.EnumTypes.boRcptInvTypes.member(name: "it_PurchaseDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptTypes.rCustomer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptTypes.rCustomer = B1ClassMetadata.EnumTypes.boRcptTypes.member(name: "rCustomer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptTypes.rAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptTypes.rAccount = B1ClassMetadata.EnumTypes.boRcptTypes.member(name: "rAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRcptTypes.rSupplier.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRcptTypes.rSupplier = B1ClassMetadata.EnumTypes.boRcptTypes.member(name: "rSupplier")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRemindUnits.reuDays.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRemindUnits.reuDays = B1ClassMetadata.EnumTypes.boRemindUnits.member(name: "reu_Days")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRemindUnits.reuWeeks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRemindUnits.reuWeeks = B1ClassMetadata.EnumTypes.boRemindUnits.member(name: "reu_Weeks")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRemindUnits.reuMonth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRemindUnits.reuMonth = B1ClassMetadata.EnumTypes.boRemindUnits.member(name: "reu_Month")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitPageHeader.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitPageHeader = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitPageHeader")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitStartOfReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitStartOfReport = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitStartOfReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitRepetitiveAreaHeader.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitRepetitiveAreaHeader = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitRepetitiveAreaHeader")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitRepetitiveArea.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitRepetitiveArea = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitRepetitiveArea")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitRepetitiveAreaFooter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitRepetitiveAreaFooter = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitRepetitiveAreaFooter")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitEndOfReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitEndOfReport = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitEndOfReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitPageFooter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitPageFooter = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitPageFooter")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitTextField.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitTextField = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitTextField")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitPictureField.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitPictureField = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitPictureField")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitUserField.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoReportLayoutItemTypeEnum.rlitUserField = B1ClassMetadata.EnumTypes.boReportLayoutItemTypeEnum.member(name: "rlitUserField")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoResolutionUnits.rsuDays.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoResolutionUnits.rsuDays = B1ClassMetadata.EnumTypes.boResolutionUnits.member(name: "rsu_Days")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoResolutionUnits.rsuHours.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoResolutionUnits.rsuHours = B1ClassMetadata.EnumTypes.boResolutionUnits.member(name: "rsu_Hours")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoResponseUnit.boruDay.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoResponseUnit.boruDay = B1ClassMetadata.EnumTypes.boResponseUnit.member(name: "boru_Day")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoResponseUnit.boruHour.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoResponseUnit.boruHour = B1ClassMetadata.EnumTypes.boResponseUnit.member(name: "boru_Hour")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoleInTeam.boritLeader.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoleInTeam.boritLeader = B1ClassMetadata.EnumTypes.boRoleInTeam.member(name: "borit_Leader")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoleInTeam.boritMember.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoleInTeam.boritMember = B1ClassMetadata.EnumTypes.boRoleInTeam.member(name: "borit_Member")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormFixedEnding.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormFixedEnding = B1ClassMetadata.EnumTypes.boRoundingMethod.member(name: "borm_FixedEnding")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormFixedInterval.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormFixedInterval = B1ClassMetadata.EnumTypes.boRoundingMethod.member(name: "borm_FixedInterval")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormNoRounding.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormNoRounding = B1ClassMetadata.EnumTypes.boRoundingMethod.member(name: "borm_NoRounding")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormRoundToFullAmount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormRoundToFullAmount = B1ClassMetadata.EnumTypes.boRoundingMethod.member(name: "borm_RoundToFullAmount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormRoundToFullDecAmount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormRoundToFullDecAmount = B1ClassMetadata.EnumTypes.boRoundingMethod.member(name: "borm_RoundToFullDecAmount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormRoundToFullTensAmount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingMethod.bormRoundToFullTensAmount = B1ClassMetadata.EnumTypes.boRoundingMethod.member(name: "borm_RoundToFullTensAmount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingRule.borrRoundDown.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingRule.borrRoundDown = B1ClassMetadata.EnumTypes.boRoundingRule.member(name: "borrRoundDown")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingRule.borrRoundOff.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingRule.borrRoundOff = B1ClassMetadata.EnumTypes.boRoundingRule.member(name: "borrRoundOff")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoRoundingRule.borrRoundUp.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoRoundingRule.borrRoundUp = B1ClassMetadata.EnumTypes.boRoundingRule.member(name: "borrRoundUp")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuHour.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuHour = B1ClassMetadata.EnumTypes.boSalaryCostUnits.member(name: "scu_Hour")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuDay.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuDay = B1ClassMetadata.EnumTypes.boSalaryCostUnits.member(name: "scu_Day")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuWeek.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuWeek = B1ClassMetadata.EnumTypes.boSalaryCostUnits.member(name: "scu_Week")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuMonth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuMonth = B1ClassMetadata.EnumTypes.boSalaryCostUnits.member(name: "scu_Month")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuYear = B1ClassMetadata.EnumTypes.boSalaryCostUnits.member(name: "scu_Year")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuSemimonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuSemimonthly = B1ClassMetadata.EnumTypes.boSalaryCostUnits.member(name: "scu_Semimonthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuBiweekly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSalaryCostUnits.scuBiweekly = B1ClassMetadata.EnumTypes.boSalaryCostUnits.member(name: "scu_Biweekly")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsActive.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsActive = B1ClassMetadata.EnumTypes.boSerialNumberStatus.member(name: "sns_Active")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsReturned.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsReturned = B1ClassMetadata.EnumTypes.boSerialNumberStatus.member(name: "sns_Returned")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsTerminated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsTerminated = B1ClassMetadata.EnumTypes.boSerialNumberStatus.member(name: "sns_Terminated")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsLoaned.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsLoaned = B1ClassMetadata.EnumTypes.boSerialNumberStatus.member(name: "sns_Loaned")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsInLab.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSerialNumberStatus.snsInLab = B1ClassMetadata.EnumTypes.boSerialNumberStatus.member(name: "sns_InLab")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup1.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup1 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group1")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup2.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup2 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group2")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup3.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup3 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group3")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup4.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup4 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group4")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup5.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup5 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group5")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup6.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup6 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group6")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup7.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup7 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group7")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup8.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup8 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group8")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup9.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup9 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group9")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup10.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesGroupEnum.sgGroup10 = B1ClassMetadata.EnumTypes.boSeriesGroupEnum.member(name: "sg_Group10")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesTypeEnum.stDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesTypeEnum.stDocument = B1ClassMetadata.EnumTypes.boSeriesTypeEnum.member(name: "stDocument")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesTypeEnum.stBusinessPartner.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesTypeEnum.stBusinessPartner = B1ClassMetadata.EnumTypes.boSeriesTypeEnum.member(name: "stBusinessPartner")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesTypeEnum.stItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesTypeEnum.stItem = B1ClassMetadata.EnumTypes.boSeriesTypeEnum.member(name: "stItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSeriesTypeEnum.stResource.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSeriesTypeEnum.stResource = B1ClassMetadata.EnumTypes.boSeriesTypeEnum.member(name: "stResource")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoServicePaymentMethods.spmAccreditedToBankAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoServicePaymentMethods.spmAccreditedToBankAccount = B1ClassMetadata.EnumTypes.boServicePaymentMethods.member(name: "spmAccreditedToBankAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoServicePaymentMethods.spmBankTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoServicePaymentMethods.spmBankTransfer = B1ClassMetadata.EnumTypes.boServicePaymentMethods.member(name: "spmBankTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoServicePaymentMethods.spmOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoServicePaymentMethods.spmOther = B1ClassMetadata.EnumTypes.boServicePaymentMethods.member(name: "spmOther")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoServiceSupplyMethods.ssmImmediate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoServiceSupplyMethods.ssmImmediate = B1ClassMetadata.EnumTypes.boServiceSupplyMethods.member(name: "ssmImmediate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoServiceSupplyMethods.ssmToMoreResumptions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoServiceSupplyMethods.ssmToMoreResumptions = B1ClassMetadata.EnumTypes.boServiceSupplyMethods.member(name: "ssmToMoreResumptions")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoServiceTypes.bstRegular.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoServiceTypes.bstRegular = B1ClassMetadata.EnumTypes.boServiceTypes.member(name: "bst_Regular")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoServiceTypes.bstWarranty.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoServiceTypes.bstWarranty = B1ClassMetadata.EnumTypes.boServiceTypes.member(name: "bst_Warranty")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSoClosedInTypes.sosMonths.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSoClosedInTypes.sosMonths = B1ClassMetadata.EnumTypes.boSoClosedInTypes.member(name: "sos_Months")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSoClosedInTypes.sosWeeks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSoClosedInTypes.sosWeeks = B1ClassMetadata.EnumTypes.boSoClosedInTypes.member(name: "sos_Weeks")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSoClosedInTypes.sosDays.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSoClosedInTypes.sosDays = B1ClassMetadata.EnumTypes.boSoClosedInTypes.member(name: "sos_Days")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSoOsStatus.sosOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSoOsStatus.sosOpen = B1ClassMetadata.EnumTypes.boSoOsStatus.member(name: "sos_Open")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSoOsStatus.sosMissed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSoOsStatus.sosMissed = B1ClassMetadata.EnumTypes.boSoOsStatus.member(name: "sos_Missed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSoOsStatus.sosSold.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSoOsStatus.sosSold = B1ClassMetadata.EnumTypes.boSoOsStatus.member(name: "sos_Sold")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSoStatus.soOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSoStatus.soOpen = B1ClassMetadata.EnumTypes.boSoStatus.member(name: "so_Open")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSoStatus.soClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSoStatus.soClosed = B1ClassMetadata.EnumTypes.boSoStatus.member(name: "so_Closed")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSortTypeEnum.rlstAlpha.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSortTypeEnum.rlstAlpha = B1ClassMetadata.EnumTypes.boSortTypeEnum.member(name: "rlstAlpha")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSortTypeEnum.rlstNumeric.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSortTypeEnum.rlstNumeric = B1ClassMetadata.EnumTypes.boSortTypeEnum.member(name: "rlstNumeric")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSortTypeEnum.rlstMoney.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSortTypeEnum.rlstMoney = B1ClassMetadata.EnumTypes.boSortTypeEnum.member(name: "rlstMoney")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSortTypeEnum.rlstDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSortTypeEnum.rlstDate = B1ClassMetadata.EnumTypes.boSortTypeEnum.member(name: "rlstDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoStatus.bostOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoStatus.bostOpen = B1ClassMetadata.EnumTypes.boStatus.member(name: "bost_Open")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoStatus.bostClose.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoStatus.bostClose = B1ClassMetadata.EnumTypes.boStatus.member(name: "bost_Close")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoStatus.bostPaid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoStatus.bostPaid = B1ClassMetadata.EnumTypes.boStatus.member(name: "bost_Paid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoStatus.bostDelivered.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoStatus.bostDelivered = B1ClassMetadata.EnumTypes.boStatus.member(name: "bost_Delivered")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoStckTrnDir.bosTransferToTechnician.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoStckTrnDir.bosTransferToTechnician = B1ClassMetadata.EnumTypes.boStckTrnDir.member(name: "bos_TransferToTechnician")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoStckTrnDir.bosTransferFromTechnician.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoStckTrnDir.bosTransferFromTechnician = B1ClassMetadata.EnumTypes.boStckTrnDir.member(name: "bos_TransferFromTechnician")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSubPeriodTypeEnum.sptYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSubPeriodTypeEnum.sptYear = B1ClassMetadata.EnumTypes.boSubPeriodTypeEnum.member(name: "spt_Year")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSubPeriodTypeEnum.sptQuarters.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSubPeriodTypeEnum.sptQuarters = B1ClassMetadata.EnumTypes.boSubPeriodTypeEnum.member(name: "spt_Quarters")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSubPeriodTypeEnum.sptMonths.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSubPeriodTypeEnum.sptMonths = B1ClassMetadata.EnumTypes.boSubPeriodTypeEnum.member(name: "spt_Months")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSubPeriodTypeEnum.sptDays.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSubPeriodTypeEnum.sptDays = B1ClassMetadata.EnumTypes.boSubPeriodTypeEnum.member(name: "spt_Days")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnNull.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnNull = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Null")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnHebrew.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnHebrew = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Hebrew")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSpanishAr.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSpanishAr = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Spanish_Ar")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnEnglish.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnEnglish = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_English")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnPolish.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnPolish = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Polish")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnEnglishSg.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnEnglishSg = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_English_Sg")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSpanishPa.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSpanishPa = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Spanish_Pa")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnEnglishGb.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnEnglishGb = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_English_Gb")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnGerman.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnGerman = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_German")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSerbian.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSerbian = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Serbian")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnDanish.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnDanish = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Danish")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnNorwegian.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnNorwegian = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Norwegian")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnItalian.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnItalian = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Italian")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnHungarian.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnHungarian = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Hungarian")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnChinese.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnChinese = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Chinese")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnDutch.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnDutch = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Dutch")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnFinnish.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnFinnish = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Finnish")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnGreek.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnGreek = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Greek")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnPortuguese.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnPortuguese = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Portuguese")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSwedish.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSwedish = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Swedish")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnEnglishCy.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnEnglishCy = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_English_Cy")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnFrench.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnFrench = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_French")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSpanish.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSpanish = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Spanish")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnRussian.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnRussian = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Russian")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSpanishLa.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSpanishLa = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Spanish_La")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnCzechCz.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnCzechCz = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Czech_Cz")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSlovakSk.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnSlovakSk = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Slovak_Sk")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnKoreanKr.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnKoreanKr = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Korean_Kr")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnPortugueseBr.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnPortugueseBr = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Portuguese_Br")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnJapaneseJp.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnJapaneseJp = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Japanese_Jp")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnTurkishTr.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnTurkishTr = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Turkish_Tr")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnArabic.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnArabic = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Arabic")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnUkrainian.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnUkrainian = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_Ukrainian")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnTrdtnlChineseHk.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSuppLangs.lnTrdtnlChineseHk = B1ClassMetadata.EnumTypes.boSuppLangs.member(name: "ln_TrdtnlChinese_Hk")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcCallPriorities.scpLow.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcCallPriorities.scpLow = B1ClassMetadata.EnumTypes.boSvcCallPriorities.member(name: "scp_Low")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcCallPriorities.scpMedium.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcCallPriorities.scpMedium = B1ClassMetadata.EnumTypes.boSvcCallPriorities.member(name: "scp_Medium")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcCallPriorities.scpHigh.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcCallPriorities.scpHigh = B1ClassMetadata.EnumTypes.boSvcCallPriorities.member(name: "scp_High")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcContractStatus.scsApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcContractStatus.scsApproved = B1ClassMetadata.EnumTypes.boSvcContractStatus.member(name: "scs_Approved")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcContractStatus.scsFrozen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcContractStatus.scsFrozen = B1ClassMetadata.EnumTypes.boSvcContractStatus.member(name: "scs_Frozen")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcContractStatus.scsDraft.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcContractStatus.scsDraft = B1ClassMetadata.EnumTypes.boSvcContractStatus.member(name: "scs_Draft")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcContractStatus.scsTerminated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcContractStatus.scsTerminated = B1ClassMetadata.EnumTypes.boSvcContractStatus.member(name: "scs_Terminated")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtInvoice = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_Invoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtDelivery.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtDelivery = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_Delivery")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtReturn = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_Return")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtStockTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtStockTransfer = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_StockTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtCreditMemo = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_CreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtOrder = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_Order")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtQuotation = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_Quotation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtAPInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtAPInvoice = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_AP_Invoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtAPCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtAPCreditMemo = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_AP_CreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtGoodsReceipt.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtGoodsReceipt = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_GoodsReceipt")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtGoodsReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtGoodsReturn = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_GoodsReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtPurchaseOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtPurchaseOrder = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_PurchaseOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtPurchaseQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtPurchaseQuotation = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_PurchaseQuotation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtARCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtARCorrectionInvoice = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_AR_CorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtAPCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcEpxDocTypes.edtAPCorrectionInvoice = B1ClassMetadata.EnumTypes.boSvcEpxDocTypes.member(name: "edt_AP_CorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcExpPartTypes.sepInventory.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcExpPartTypes.sepInventory = B1ClassMetadata.EnumTypes.boSvcExpPartTypes.member(name: "sep_Inventory")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoSvcExpPartTypes.sepNonInventory.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoSvcExpPartTypes.sepNonInventory = B1ClassMetadata.EnumTypes.boSvcExpPartTypes.member(name: "sep_NonInventory")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcNone = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcFederalTaxID.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcFederalTaxID = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcFederalTaxID")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToAddress.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToAddress = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcShipToAddress")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToStreePOBox.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToStreePOBox = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcShipToStreePOBox")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToCity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToCity = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcShipToCity")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToZipCode.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToZipCode = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcShipToZipCode")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToCounty.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToCounty = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcShipToCounty")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToState.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToState = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcShipToState")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToCountry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcShipToCountry = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcShipToCountry")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcItem = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcItemGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcItemGroup = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcItemGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcBusinessPartner.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcBusinessPartner = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcBusinessPartner")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcCustomerGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcCustomerGroup = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcCustomerGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcVendorGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcVendorGroup = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcVendorGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcWarehouse.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcWarehouse = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcWarehouse")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcGLAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcGLAccount = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcGLAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcCustomerEquTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcCustomerEquTax = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcCustomerEquTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcTaxStatus.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcTaxStatus = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcTaxStatus")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcFreight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcFreight = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcFreight")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcUDF.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcUDF = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcUDF")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcBranchNumber.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDConditionEnum.tcdcBranchNumber = B1ClassMetadata.EnumTypes.boTCDConditionEnum.member(name: "tcdcBranchNumber")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDDocumentTypeEnum.tcddtItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDDocumentTypeEnum.tcddtItem = B1ClassMetadata.EnumTypes.boTCDDocumentTypeEnum.member(name: "tcddtItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDDocumentTypeEnum.tcddtService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDDocumentTypeEnum.tcddtService = B1ClassMetadata.EnumTypes.boTCDDocumentTypeEnum.member(name: "tcddtService")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTCDDocumentTypeEnum.tcddtItemAndService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTCDDocumentTypeEnum.tcddtItemAndService = B1ClassMetadata.EnumTypes.boTCDDocumentTypeEnum.member(name: "tcddtItemAndService")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitAlterationCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitAlterationCorrectionInvoice = B1ClassMetadata.EnumTypes.boTaxInvoiceTypes.member(name: "botit_AlterationCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitAlterationInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitAlterationInvoice = B1ClassMetadata.EnumTypes.boTaxInvoiceTypes.member(name: "botit_AlterationInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitCorrectionInvoice = B1ClassMetadata.EnumTypes.boTaxInvoiceTypes.member(name: "botit_CorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitInvoice = B1ClassMetadata.EnumTypes.boTaxInvoiceTypes.member(name: "botit_Invoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitJournalEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitJournalEntry = B1ClassMetadata.EnumTypes.boTaxInvoiceTypes.member(name: "botit_JournalEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxInvoiceTypes.botitPayment = B1ClassMetadata.EnumTypes.boTaxInvoiceTypes.member(name: "botit_Payment")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxPostAccEnum.tpaDefault.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxPostAccEnum.tpaDefault = B1ClassMetadata.EnumTypes.boTaxPostAccEnum.member(name: "tpa_Default")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxPostAccEnum.tpaSalesTaxAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxPostAccEnum.tpaSalesTaxAccount = B1ClassMetadata.EnumTypes.boTaxPostAccEnum.member(name: "tpa_SalesTaxAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxPostAccEnum.tpaPurchaseTaxAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxPostAccEnum.tpaPurchaseTaxAccount = B1ClassMetadata.EnumTypes.boTaxPostAccEnum.member(name: "tpa_PurchaseTaxAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxRoundingRuleTypes.trrRoundDown.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxRoundingRuleTypes.trrRoundDown = B1ClassMetadata.EnumTypes.boTaxRoundingRuleTypes.member(name: "trr_RoundDown")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxRoundingRuleTypes.trrRoundUp.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxRoundingRuleTypes.trrRoundUp = B1ClassMetadata.EnumTypes.boTaxRoundingRuleTypes.member(name: "trr_RoundUp")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxRoundingRuleTypes.trrRoundOff.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxRoundingRuleTypes.trrRoundOff = B1ClassMetadata.EnumTypes.boTaxRoundingRuleTypes.member(name: "trr_RoundOff")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxRoundingRuleTypes.trrCompanyDefault.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxRoundingRuleTypes.trrCompanyDefault = B1ClassMetadata.EnumTypes.boTaxRoundingRuleTypes.member(name: "trr_CompanyDefault")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxTypes.ttYes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxTypes.ttYes = B1ClassMetadata.EnumTypes.boTaxTypes.member(name: "tt_Yes")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxTypes.ttNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxTypes.ttNo = B1ClassMetadata.EnumTypes.boTaxTypes.member(name: "tt_No")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxTypes.ttUseTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxTypes.ttUseTax = B1ClassMetadata.EnumTypes.boTaxTypes.member(name: "tt_UseTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTaxTypes.ttOffsetTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTaxTypes.ttOffsetTax = B1ClassMetadata.EnumTypes.boTaxTypes.member(name: "tt_OffsetTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTimeTemplate.tt24H.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTimeTemplate.tt24H = B1ClassMetadata.EnumTypes.boTimeTemplate.member(name: "tt_24H")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTimeTemplate.tt12H.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTimeTemplate.tt12H = B1ClassMetadata.EnumTypes.boTimeTemplate.member(name: "tt_12H")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTransactionTypeEnum.botrntComplete.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTransactionTypeEnum.botrntComplete = B1ClassMetadata.EnumTypes.boTransactionTypeEnum.member(name: "botrntComplete")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoTransactionTypeEnum.botrntReject.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoTransactionTypeEnum.botrntReject = B1ClassMetadata.EnumTypes.boTransactionTypeEnum.member(name: "botrntReject")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUDOObjType.boudDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUDOObjType.boudDocument = B1ClassMetadata.EnumTypes.boUDOObjType.member(name: "boud_Document")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUDOObjType.boudMasterData.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUDOObjType.boudMasterData = B1ClassMetadata.EnumTypes.boUDOObjType.member(name: "boud_MasterData")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUPTOptions.bouFullNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUPTOptions.bouFullNone = B1ClassMetadata.EnumTypes.boUPTOptions.member(name: "bou_FullNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUPTOptions.bouFullReadNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUPTOptions.bouFullReadNone = B1ClassMetadata.EnumTypes.boUPTOptions.member(name: "bou_FullReadNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottDocument = B1ClassMetadata.EnumTypes.boUTBTableType.member(name: "bott_Document")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottDocumentLines.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottDocumentLines = B1ClassMetadata.EnumTypes.boUTBTableType.member(name: "bott_DocumentLines")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottMasterData.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottMasterData = B1ClassMetadata.EnumTypes.boUTBTableType.member(name: "bott_MasterData")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottMasterDataLines.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottMasterDataLines = B1ClassMetadata.EnumTypes.boUTBTableType.member(name: "bott_MasterDataLines")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottNoObject.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottNoObject = B1ClassMetadata.EnumTypes.boUTBTableType.member(name: "bott_NoObject")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottNoObjectAutoIncrement.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUTBTableType.bottNoObjectAutoIncrement = B1ClassMetadata.EnumTypes.boUTBTableType.member(name: "bott_NoObjectAutoIncrement")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUniqueSerialNumber.usnNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUniqueSerialNumber.usnNone = B1ClassMetadata.EnumTypes.boUniqueSerialNumber.member(name: "usn_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUniqueSerialNumber.usnMfrSerialNumber.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUniqueSerialNumber.usnMfrSerialNumber = B1ClassMetadata.EnumTypes.boUniqueSerialNumber.member(name: "usn_MfrSerialNumber")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUniqueSerialNumber.usnSerialNumber.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUniqueSerialNumber.usnSerialNumber = B1ClassMetadata.EnumTypes.boUniqueSerialNumber.member(name: "usn_SerialNumber")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUniqueSerialNumber.usnLotNumber.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUniqueSerialNumber.usnLotNumber = B1ClassMetadata.EnumTypes.boUniqueSerialNumber.member(name: "usn_LotNumber")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUpdateAllocationEnum.bouaManual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUpdateAllocationEnum.bouaManual = B1ClassMetadata.EnumTypes.boUpdateAllocationEnum.member(name: "bouaManual")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUpdateAllocationEnum.bouaCalculated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUpdateAllocationEnum.bouaCalculated = B1ClassMetadata.EnumTypes.boUpdateAllocationEnum.member(name: "bouaCalculated")
        }
    }

    private static func merge4(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1ClassMetadata.EnumValues.B1PreBoUpdateAllocationEnum.bouaRunCalculation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUpdateAllocationEnum.bouaRunCalculation = B1ClassMetadata.EnumTypes.boUpdateAllocationEnum.member(name: "bouaRunCalculation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUserGroup.ugRegular.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUserGroup.ugRegular = B1ClassMetadata.EnumTypes.boUserGroup.member(name: "ug_Regular")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoUserGroup.ugDeleted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoUserGroup.ugDeleted = B1ClassMetadata.EnumTypes.boUserGroup.member(name: "ug_Deleted")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoVatCategoryEnum.bovcInputTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoVatCategoryEnum.bovcInputTax = B1ClassMetadata.EnumTypes.boVatCategoryEnum.member(name: "bovcInputTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoVatCategoryEnum.bovcOutputTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoVatCategoryEnum.bovcOutputTax = B1ClassMetadata.EnumTypes.boVatCategoryEnum.member(name: "bovcOutputTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoVatStatus.vExempted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoVatStatus.vExempted = B1ClassMetadata.EnumTypes.boVatStatus.member(name: "vExempted")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoVatStatus.vLiable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoVatStatus.vLiable = B1ClassMetadata.EnumTypes.boVatStatus.member(name: "vLiable")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoVatStatus.vEC.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoVatStatus.vEC = B1ClassMetadata.EnumTypes.boVatStatus.member(name: "vEC")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoVerticalAlignmentEnum.rlvaTop.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoVerticalAlignmentEnum.rlvaTop = B1ClassMetadata.EnumTypes.boVerticalAlignmentEnum.member(name: "rlvaTop")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoVerticalAlignmentEnum.rlvaBottom.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoVerticalAlignmentEnum.rlvaBottom = B1ClassMetadata.EnumTypes.boVerticalAlignmentEnum.member(name: "rlvaBottom")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoVerticalAlignmentEnum.rlvaCentralized.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoVerticalAlignmentEnum.rlvaCentralized = B1ClassMetadata.EnumTypes.boVerticalAlignmentEnum.member(name: "rlvaCentralized")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoWorkOrderStat.wkProductComplete.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoWorkOrderStat.wkProductComplete = B1ClassMetadata.EnumTypes.boWorkOrderStat.member(name: "wk_ProductComplete")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoWorkOrderStat.wkWorkInstruction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoWorkOrderStat.wkWorkInstruction = B1ClassMetadata.EnumTypes.boWorkOrderStat.member(name: "wk_WorkInstruction")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoWorkOrderStat.wkWorkOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoWorkOrderStat.wkWorkOrder = B1ClassMetadata.EnumTypes.boWorkOrderStat.member(name: "wk_WorkOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoYesNoEnum.tNO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoYesNoEnum.tNO = B1ClassMetadata.EnumTypes.boYesNoEnum.member(name: "tNO")
        }
        if !B1ClassMetadata.EnumValues.B1PreBoYesNoEnum.tYES.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBoYesNoEnum.tYES = B1ClassMetadata.EnumTypes.boYesNoEnum.member(name: "tYES")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilMultiIndexerTypes.bmitInvalid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilMultiIndexerTypes.bmitInvalid = B1ClassMetadata.EnumTypes.brazilMultiIndexerTypes.member(name: "bmitInvalid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilMultiIndexerTypes.bmitIncomeNature.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilMultiIndexerTypes.bmitIncomeNature = B1ClassMetadata.EnumTypes.brazilMultiIndexerTypes.member(name: "bmitIncomeNature")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitInvalid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitInvalid = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitInvalid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitBeverageCommercialBrand.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitBeverageCommercialBrand = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitBeverageCommercialBrand")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitFuelGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitFuelGroup = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitFuelGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitNatureOfCompany.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitNatureOfCompany = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitNatureOfCompany")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitEconomicActivityType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitEconomicActivityType = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitEconomicActivityType")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitCooperativeAssociationType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitCooperativeAssociationType = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitCooperativeAssociationType")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitProfitTaxation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitProfitTaxation = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitProfitTaxation")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitCompanyQualification.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitCompanyQualification = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitCompanyQualification")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitDeclarerType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitDeclarerType = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitDeclarerType")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitEnvironmentType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitEnvironmentType = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitEnvironmentType")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitTributaryType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitTributaryType = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitTributaryType")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitTributaryRegimeCode.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitTributaryRegimeCode = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitTributaryRegimeCode")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitIncomeNatureTable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitIncomeNatureTable = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitIncomeNatureTable")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitIncomeNatureCode.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitIncomeNatureCode = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitIncomeNatureCode")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitExportationDocumentType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitExportationDocumentType = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitExportationDocumentType")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitExportationNature.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitExportationNature = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitExportationNature")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitLadingBillType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilNumericIndexerTypes.bnitLadingBillType = B1ClassMetadata.EnumTypes.brazilNumericIndexerTypes.member(name: "bnitLadingBillType")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitInvalid.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitInvalid = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitInvalid")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitBeverageTable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitBeverageTable = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitBeverageTable")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitNatureOfCalculationBase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitNatureOfCalculationBase = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitNatureOfCalculationBase")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitCreditOrigin.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitCreditOrigin = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitCreditOrigin")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitBeverageGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitBeverageGroup = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitBeverageGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitCreditContributionOrigin.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitCreditContributionOrigin = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitCreditContributionOrigin")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitIPIPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitIPIPeriod = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitIPIPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitSPEDProfile.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitSPEDProfile = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitSPEDProfile")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitImportationDocumentType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitImportationDocumentType = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitImportationDocumentType")
        }
        if !B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitReferentialAccountCode.isRemoved {
            B1ClassMetadata.EnumValues.B1PreBrazilStringIndexerTypes.bsitReferentialAccountCode = B1ClassMetadata.EnumTypes.brazilStringIndexerTypes.member(name: "bsitReferentialAccountCode")
        }
        if !B1ClassMetadata.EnumValues.B1PreCalculateInterestMethodEnum.cimOnRemainingAmount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCalculateInterestMethodEnum.cimOnRemainingAmount = B1ClassMetadata.EnumTypes.calculateInterestMethodEnum.member(name: "cimOnRemainingAmount")
        }
        if !B1ClassMetadata.EnumValues.B1PreCalculateInterestMethodEnum.cimOnOriginalSum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCalculateInterestMethodEnum.cimOnOriginalSum = B1ClassMetadata.EnumTypes.calculateInterestMethodEnum.member(name: "cimOnOriginalSum")
        }
        if !B1ClassMetadata.EnumValues.B1PreCalculationBaseEnum.cbYearly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCalculationBaseEnum.cbYearly = B1ClassMetadata.EnumTypes.calculationBaseEnum.member(name: "cbYearly")
        }
        if !B1ClassMetadata.EnumValues.B1PreCalculationBaseEnum.cbMonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCalculationBaseEnum.cbMonthly = B1ClassMetadata.EnumTypes.calculationBaseEnum.member(name: "cbMonthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreCallMessageStatusEnum.cmsUnread.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCallMessageStatusEnum.cmsUnread = B1ClassMetadata.EnumTypes.callMessageStatusEnum.member(name: "cmsUnread")
        }
        if !B1ClassMetadata.EnumValues.B1PreCallMessageStatusEnum.cmsRead.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCallMessageStatusEnum.cmsRead = B1ClassMetadata.EnumTypes.callMessageStatusEnum.member(name: "cmsRead")
        }
        if !B1ClassMetadata.EnumValues.B1PreCallMessageTypeEnum.cmtInformation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCallMessageTypeEnum.cmtInformation = B1ClassMetadata.EnumTypes.callMessageTypeEnum.member(name: "cmtInformation")
        }
        if !B1ClassMetadata.EnumValues.B1PreCallMessageTypeEnum.cmtWarning.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCallMessageTypeEnum.cmtWarning = B1ClassMetadata.EnumTypes.callMessageTypeEnum.member(name: "cmtWarning")
        }
        if !B1ClassMetadata.EnumValues.B1PreCallMessageTypeEnum.cmtError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCallMessageTypeEnum.cmtError = B1ClassMetadata.EnumTypes.callMessageTypeEnum.member(name: "cmtError")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignAssignToEnum.catUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignAssignToEnum.catUser = B1ClassMetadata.EnumTypes.campaignAssignToEnum.member(name: "catUser")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignAssignToEnum.catEmployee.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignAssignToEnum.catEmployee = B1ClassMetadata.EnumTypes.campaignAssignToEnum.member(name: "catEmployee")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignBPStatusEnum.cbpsActive.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignBPStatusEnum.cbpsActive = B1ClassMetadata.EnumTypes.campaignBPStatusEnum.member(name: "cbpsActive")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignBPStatusEnum.cbpsInactive.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignBPStatusEnum.cbpsInactive = B1ClassMetadata.EnumTypes.campaignBPStatusEnum.member(name: "cbpsInactive")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignItemTypeEnum.citItems.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignItemTypeEnum.citItems = B1ClassMetadata.EnumTypes.campaignItemTypeEnum.member(name: "citItems")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignItemTypeEnum.citLabel.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignItemTypeEnum.citLabel = B1ClassMetadata.EnumTypes.campaignItemTypeEnum.member(name: "citLabel")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignItemTypeEnum.citTravel.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignItemTypeEnum.citTravel = B1ClassMetadata.EnumTypes.campaignItemTypeEnum.member(name: "citTravel")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignStatusEnum.csOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignStatusEnum.csOpen = B1ClassMetadata.EnumTypes.campaignStatusEnum.member(name: "csOpen")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignStatusEnum.csFinished.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignStatusEnum.csFinished = B1ClassMetadata.EnumTypes.campaignStatusEnum.member(name: "csFinished")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignStatusEnum.csCanceled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignStatusEnum.csCanceled = B1ClassMetadata.EnumTypes.campaignStatusEnum.member(name: "csCanceled")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctEmail.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctEmail = B1ClassMetadata.EnumTypes.campaignTypeEnum.member(name: "ctEmail")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctMail.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctMail = B1ClassMetadata.EnumTypes.campaignTypeEnum.member(name: "ctMail")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctFax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctFax = B1ClassMetadata.EnumTypes.campaignTypeEnum.member(name: "ctFax")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctPhoneCall.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctPhoneCall = B1ClassMetadata.EnumTypes.campaignTypeEnum.member(name: "ctPhoneCall")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctMeeting.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctMeeting = B1ClassMetadata.EnumTypes.campaignTypeEnum.member(name: "ctMeeting")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctSMS.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctSMS = B1ClassMetadata.EnumTypes.campaignTypeEnum.member(name: "ctSMS")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctWeb.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctWeb = B1ClassMetadata.EnumTypes.campaignTypeEnum.member(name: "ctWeb")
        }
        if !B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctOthers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCampaignTypeEnum.ctOthers = B1ClassMetadata.EnumTypes.campaignTypeEnum.member(name: "ctOthers")
        }
        if !B1ClassMetadata.EnumValues.B1PreCancelStatusEnum.csYes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCancelStatusEnum.csYes = B1ClassMetadata.EnumTypes.cancelStatusEnum.member(name: "csYes")
        }
        if !B1ClassMetadata.EnumValues.B1PreCancelStatusEnum.csNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCancelStatusEnum.csNo = B1ClassMetadata.EnumTypes.cancelStatusEnum.member(name: "csNo")
        }
        if !B1ClassMetadata.EnumValues.B1PreCancelStatusEnum.csCancellation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCancelStatusEnum.csCancellation = B1ClassMetadata.EnumTypes.cancelStatusEnum.member(name: "csCancellation")
        }
        if !B1ClassMetadata.EnumValues.B1PreCardOrAccountEnum.coaCard.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCardOrAccountEnum.coaCard = B1ClassMetadata.EnumTypes.cardOrAccountEnum.member(name: "coaCard")
        }
        if !B1ClassMetadata.EnumValues.B1PreCardOrAccountEnum.coaAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCardOrAccountEnum.coaAccount = B1ClassMetadata.EnumTypes.cardOrAccountEnum.member(name: "coaAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreClosingOptionEnum.coByCurrentSystemDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreClosingOptionEnum.coByCurrentSystemDate = B1ClassMetadata.EnumTypes.closingOptionEnum.member(name: "coByCurrentSystemDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreClosingOptionEnum.coByOriginalDocumentDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreClosingOptionEnum.coByOriginalDocumentDate = B1ClassMetadata.EnumTypes.closingOptionEnum.member(name: "coByOriginalDocumentDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreClosingOptionEnum.coBySpecifiedDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreClosingOptionEnum.coBySpecifiedDate = B1ClassMetadata.EnumTypes.closingOptionEnum.member(name: "coBySpecifiedDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreCommissionTradeTypeEnum.ctEmpty.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCommissionTradeTypeEnum.ctEmpty = B1ClassMetadata.EnumTypes.commissionTradeTypeEnum.member(name: "ct_Empty")
        }
        if !B1ClassMetadata.EnumValues.B1PreCommissionTradeTypeEnum.ctSalesAgent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCommissionTradeTypeEnum.ctSalesAgent = B1ClassMetadata.EnumTypes.commissionTradeTypeEnum.member(name: "ct_SalesAgent")
        }
        if !B1ClassMetadata.EnumValues.B1PreCommissionTradeTypeEnum.ctPurchaseAgent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCommissionTradeTypeEnum.ctPurchaseAgent = B1ClassMetadata.EnumTypes.commissionTradeTypeEnum.member(name: "ct_PurchaseAgent")
        }
        if !B1ClassMetadata.EnumValues.B1PreCommissionTradeTypeEnum.ctConsignor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCommissionTradeTypeEnum.ctConsignor = B1ClassMetadata.EnumTypes.commissionTradeTypeEnum.member(name: "ct_Consignor")
        }
        if !B1ClassMetadata.EnumValues.B1PreContractSequenceEnum.csMonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreContractSequenceEnum.csMonthly = B1ClassMetadata.EnumTypes.contractSequenceEnum.member(name: "cs_Monthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreContractSequenceEnum.csQuarterly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreContractSequenceEnum.csQuarterly = B1ClassMetadata.EnumTypes.contractSequenceEnum.member(name: "cs_Quarterly")
        }
        if !B1ClassMetadata.EnumValues.B1PreContractSequenceEnum.csSemiAnnually.isRemoved {
            B1ClassMetadata.EnumValues.B1PreContractSequenceEnum.csSemiAnnually = B1ClassMetadata.EnumTypes.contractSequenceEnum.member(name: "cs_SemiAnnually")
        }
        if !B1ClassMetadata.EnumValues.B1PreContractSequenceEnum.csYearly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreContractSequenceEnum.csYearly = B1ClassMetadata.EnumTypes.contractSequenceEnum.member(name: "cs_Yearly")
        }
        if !B1ClassMetadata.EnumValues.B1PreCounterTypeEnum.ctUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCounterTypeEnum.ctUser = B1ClassMetadata.EnumTypes.counterTypeEnum.member(name: "ctUser")
        }
        if !B1ClassMetadata.EnumValues.B1PreCounterTypeEnum.ctEmployee.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCounterTypeEnum.ctEmployee = B1ClassMetadata.EnumTypes.counterTypeEnum.member(name: "ctEmployee")
        }
        if !B1ClassMetadata.EnumValues.B1PreCountingDocumentStatusEnum.cdsOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCountingDocumentStatusEnum.cdsOpen = B1ClassMetadata.EnumTypes.countingDocumentStatusEnum.member(name: "cdsOpen")
        }
        if !B1ClassMetadata.EnumValues.B1PreCountingDocumentStatusEnum.cdsClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCountingDocumentStatusEnum.cdsClosed = B1ClassMetadata.EnumTypes.countingDocumentStatusEnum.member(name: "cdsClosed")
        }
        if !B1ClassMetadata.EnumValues.B1PreCountingLineStatusEnum.clsOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCountingLineStatusEnum.clsOpen = B1ClassMetadata.EnumTypes.countingLineStatusEnum.member(name: "clsOpen")
        }
        if !B1ClassMetadata.EnumValues.B1PreCountingLineStatusEnum.clsClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCountingLineStatusEnum.clsClosed = B1ClassMetadata.EnumTypes.countingLineStatusEnum.member(name: "clsClosed")
        }
        if !B1ClassMetadata.EnumValues.B1PreCountingTypeEnum.ctSingleCounter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCountingTypeEnum.ctSingleCounter = B1ClassMetadata.EnumTypes.countingTypeEnum.member(name: "ctSingleCounter")
        }
        if !B1ClassMetadata.EnumValues.B1PreCountingTypeEnum.ctMultipleCounters.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCountingTypeEnum.ctMultipleCounters = B1ClassMetadata.EnumTypes.countingTypeEnum.member(name: "ctMultipleCounters")
        }
        if !B1ClassMetadata.EnumValues.B1PreCreateMethodEnum.cmManual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCreateMethodEnum.cmManual = B1ClassMetadata.EnumTypes.createMethodEnum.member(name: "cmManual")
        }
        if !B1ClassMetadata.EnumValues.B1PreCreateMethodEnum.cmAutomatic.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCreateMethodEnum.cmAutomatic = B1ClassMetadata.EnumTypes.createMethodEnum.member(name: "cmAutomatic")
        }
        if !B1ClassMetadata.EnumValues.B1PreCreditOrDebitEnum.codCredit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCreditOrDebitEnum.codCredit = B1ClassMetadata.EnumTypes.creditOrDebitEnum.member(name: "codCredit")
        }
        if !B1ClassMetadata.EnumValues.B1PreCreditOrDebitEnum.codDebit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCreditOrDebitEnum.codDebit = B1ClassMetadata.EnumTypes.creditOrDebitEnum.member(name: "codDebit")
        }
        if !B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd1Digit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd1Digit = B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.member(name: "cd1Digit")
        }
        if !B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd2Digits.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd2Digits = B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.member(name: "cd2Digits")
        }
        if !B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd3Digits.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd3Digits = B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.member(name: "cd3Digits")
        }
        if !B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd4Digits.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd4Digits = B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.member(name: "cd4Digits")
        }
        if !B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd5Digits.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd5Digits = B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.member(name: "cd5Digits")
        }
        if !B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd6Digits.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cd6Digits = B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.member(name: "cd6Digits")
        }
        if !B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cdDefault.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cdDefault = B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.member(name: "cdDefault")
        }
        if !B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cdWithoutDecimals.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCurrenciesDecimalsEnum.cdWithoutDecimals = B1ClassMetadata.EnumTypes.currenciesDecimalsEnum.member(name: "cdWithoutDecimals")
        }
        if !B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbItemGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbItemGroup = B1ClassMetadata.EnumTypes.cycleCountDeterminationCycleByEnum.member(name: "ccdcbItemGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbWarehouseSublevel1.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbWarehouseSublevel1 = B1ClassMetadata.EnumTypes.cycleCountDeterminationCycleByEnum.member(name: "ccdcbWarehouseSublevel1")
        }
        if !B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbWarehouseSublevel2.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbWarehouseSublevel2 = B1ClassMetadata.EnumTypes.cycleCountDeterminationCycleByEnum.member(name: "ccdcbWarehouseSublevel2")
        }
        if !B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbWarehouseSublevel3.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbWarehouseSublevel3 = B1ClassMetadata.EnumTypes.cycleCountDeterminationCycleByEnum.member(name: "ccdcbWarehouseSublevel3")
        }
        if !B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbWarehouseSublevel4.isRemoved {
            B1ClassMetadata.EnumValues.B1PreCycleCountDeterminationCycleByEnum.ccdcbWarehouseSublevel4 = B1ClassMetadata.EnumTypes.cycleCountDeterminationCycleByEnum.member(name: "ccdcbWarehouseSublevel4")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationCalculationBaseEnum.dcbAcquisitionValue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationCalculationBaseEnum.dcbAcquisitionValue = B1ClassMetadata.EnumTypes.depreciationCalculationBaseEnum.member(name: "dcbAcquisitionValue")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationCalculationBaseEnum.dcbNetBookValue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationCalculationBaseEnum.dcbNetBookValue = B1ClassMetadata.EnumTypes.depreciationCalculationBaseEnum.member(name: "dcbNetBookValue")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmNoDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmNoDepreciation = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmNoDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmStraightLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmStraightLine = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmStraightLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmStraightLinePeriodControl.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmStraightLinePeriodControl = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmStraightLinePeriodControl")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmDecliningBalance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmDecliningBalance = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmDecliningBalance")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmMultilevel.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmMultilevel = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmMultilevel")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmImmediateWriteOff.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmImmediateWriteOff = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmImmediateWriteOff")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmSpecialDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmSpecialDepreciation = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmSpecialDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmManualDepreciation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmManualDepreciation = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmManualDepreciation")
        }
        if !B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmAccelerated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDepreciationMethodEnum.dmAccelerated = B1ClassMetadata.EnumTypes.depreciationMethodEnum.member(name: "dmAccelerated")
        }
        if !B1ClassMetadata.EnumValues.B1PreDirectDebitTypeEnum.ddtCORE.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDirectDebitTypeEnum.ddtCORE = B1ClassMetadata.EnumTypes.directDebitTypeEnum.member(name: "ddtCORE")
        }
        if !B1ClassMetadata.EnumValues.B1PreDirectDebitTypeEnum.ddtB2B.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDirectDebitTypeEnum.ddtB2B = B1ClassMetadata.EnumTypes.directDebitTypeEnum.member(name: "ddtB2B")
        }
        if !B1ClassMetadata.EnumValues.B1PreDirectDebitTypeEnum.ddtCOR1.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDirectDebitTypeEnum.ddtCOR1 = B1ClassMetadata.EnumTypes.directDebitTypeEnum.member(name: "ddtCOR1")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboNone = B1ClassMetadata.EnumTypes.discountGroupBaseObjectEnum.member(name: "dgboNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboItemGroups.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboItemGroups = B1ClassMetadata.EnumTypes.discountGroupBaseObjectEnum.member(name: "dgboItemGroups")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboItemProperties.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboItemProperties = B1ClassMetadata.EnumTypes.discountGroupBaseObjectEnum.member(name: "dgboItemProperties")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboManufacturer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboManufacturer = B1ClassMetadata.EnumTypes.discountGroupBaseObjectEnum.member(name: "dgboManufacturer")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboItems.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupBaseObjectEnum.dgboItems = B1ClassMetadata.EnumTypes.discountGroupBaseObjectEnum.member(name: "dgboItems")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupDiscountTypeEnum.dgdtFixed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupDiscountTypeEnum.dgdtFixed = B1ClassMetadata.EnumTypes.discountGroupDiscountTypeEnum.member(name: "dgdt_Fixed")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupDiscountTypeEnum.dgdtVariable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupDiscountTypeEnum.dgdtVariable = B1ClassMetadata.EnumTypes.discountGroupDiscountTypeEnum.member(name: "dgdt_Variable")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrLowestDiscount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrLowestDiscount = B1ClassMetadata.EnumTypes.discountGroupRelationsEnum.member(name: "dgrLowestDiscount")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrHighestDiscount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrHighestDiscount = B1ClassMetadata.EnumTypes.discountGroupRelationsEnum.member(name: "dgrHighestDiscount")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrAverageDiscount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrAverageDiscount = B1ClassMetadata.EnumTypes.discountGroupRelationsEnum.member(name: "dgrAverageDiscount")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrDiscountTotals.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrDiscountTotals = B1ClassMetadata.EnumTypes.discountGroupRelationsEnum.member(name: "dgrDiscountTotals")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrMultipliedDiscount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupRelationsEnum.dgrMultipliedDiscount = B1ClassMetadata.EnumTypes.discountGroupRelationsEnum.member(name: "dgrMultipliedDiscount")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupTypeEnum.dgtAllBPs.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupTypeEnum.dgtAllBPs = B1ClassMetadata.EnumTypes.discountGroupTypeEnum.member(name: "dgt_AllBPs")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupTypeEnum.dgtCustomerGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupTypeEnum.dgtCustomerGroup = B1ClassMetadata.EnumTypes.discountGroupTypeEnum.member(name: "dgt_CustomerGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupTypeEnum.dgtVendorGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupTypeEnum.dgtVendorGroup = B1ClassMetadata.EnumTypes.discountGroupTypeEnum.member(name: "dgt_VendorGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreDiscountGroupTypeEnum.dgtSpecificBP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDiscountGroupTypeEnum.dgtSpecificBP = B1ClassMetadata.EnumTypes.discountGroupTypeEnum.member(name: "dgt_SpecificBP")
        }
        if !B1ClassMetadata.EnumValues.B1PreDisplayBatchQtyUoMByEnum.dispBatchQtyByDocRowUoM.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDisplayBatchQtyUoMByEnum.dispBatchQtyByDocRowUoM = B1ClassMetadata.EnumTypes.displayBatchQtyUoMByEnum.member(name: "dispBatchQtyByDocRowUoM")
        }
        if !B1ClassMetadata.EnumValues.B1PreDisplayBatchQtyUoMByEnum.dispBatchQtyByInventoryUoM.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDisplayBatchQtyUoMByEnum.dispBatchQtyByInventoryUoM = B1ClassMetadata.EnumTypes.displayBatchQtyUoMByEnum.member(name: "dispBatchQtyByInventoryUoM")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasWithout.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasWithout = B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum.member(name: "dasWithout")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasPending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasPending = B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum.member(name: "dasPending")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasApproved = B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum.member(name: "dasApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasRejected.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasRejected = B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum.member(name: "dasRejected")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasGenerated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasGenerated = B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum.member(name: "dasGenerated")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasGeneratedbyAuthorizer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasGeneratedbyAuthorizer = B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum.member(name: "dasGeneratedbyAuthorizer")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasCancelled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentAuthorizationStatusEnum.dasCancelled = B1ClassMetadata.EnumTypes.documentAuthorizationStatusEnum.member(name: "dasCancelled")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentDeliveryTypeEnum.ddtNoneSeleted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentDeliveryTypeEnum.ddtNoneSeleted = B1ClassMetadata.EnumTypes.documentDeliveryTypeEnum.member(name: "ddtNoneSeleted")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentDeliveryTypeEnum.ddtCreateOnlineDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentDeliveryTypeEnum.ddtCreateOnlineDocument = B1ClassMetadata.EnumTypes.documentDeliveryTypeEnum.member(name: "ddtCreateOnlineDocument")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentDeliveryTypeEnum.ddtPostToAribaNetwork.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentDeliveryTypeEnum.ddtPostToAribaNetwork = B1ClassMetadata.EnumTypes.documentDeliveryTypeEnum.member(name: "ddtPostToAribaNetwork")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentObjectTypeEnum.dcArInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentObjectTypeEnum.dcArInvoice = B1ClassMetadata.EnumTypes.documentObjectTypeEnum.member(name: "dc_ArInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentObjectTypeEnum.dcDelivery.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentObjectTypeEnum.dcDelivery = B1ClassMetadata.EnumTypes.documentObjectTypeEnum.member(name: "dc_Delivery")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentObjectTypeEnum.dcGoodsReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentObjectTypeEnum.dcGoodsReturn = B1ClassMetadata.EnumTypes.documentObjectTypeEnum.member(name: "dc_GoodsReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PreDocumentObjectTypeEnum.dcInventoryTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDocumentObjectTypeEnum.dcInventoryTransfer = B1ClassMetadata.EnumTypes.documentObjectTypeEnum.member(name: "dc_InventoryTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavNone = B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum.member(name: "dbavNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavBelgium.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavBelgium = B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum.member(name: "dbavBelgium")
        }
        if !B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavSpain.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavSpain = B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum.member(name: "dbavSpain")
        }
        if !B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavFrance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavFrance = B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum.member(name: "dbavFrance")
        }
        if !B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavItaly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavItaly = B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum.member(name: "dbavItaly")
        }
        if !B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavNetherlands.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavNetherlands = B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum.member(name: "dbavNetherlands")
        }
        if !B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavPortugal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDomesticBankAccountValidationEnum.dbavPortugal = B1ClassMetadata.EnumTypes.domesticBankAccountValidationEnum.member(name: "dbavPortugal")
        }
        if !B1ClassMetadata.EnumValues.B1PreDownPaymentTypeEnum.dptRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDownPaymentTypeEnum.dptRequest = B1ClassMetadata.EnumTypes.downPaymentTypeEnum.member(name: "dptRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreDownPaymentTypeEnum.dptInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDownPaymentTypeEnum.dptInvoice = B1ClassMetadata.EnumTypes.downPaymentTypeEnum.member(name: "dptInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreDrawingMethodEnum.dmAll.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDrawingMethodEnum.dmAll = B1ClassMetadata.EnumTypes.drawingMethodEnum.member(name: "dmAll")
        }
        if !B1ClassMetadata.EnumValues.B1PreDrawingMethodEnum.dmNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDrawingMethodEnum.dmNone = B1ClassMetadata.EnumTypes.drawingMethodEnum.member(name: "dmNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreDrawingMethodEnum.dmQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDrawingMethodEnum.dmQuantity = B1ClassMetadata.EnumTypes.drawingMethodEnum.member(name: "dmQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreDrawingMethodEnum.dmTotal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDrawingMethodEnum.dmTotal = B1ClassMetadata.EnumTypes.drawingMethodEnum.member(name: "dmTotal")
        }
        if !B1ClassMetadata.EnumValues.B1PreDueDateTypesEnum.ddtAfterTimePeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDueDateTypesEnum.ddtAfterTimePeriod = B1ClassMetadata.EnumTypes.dueDateTypesEnum.member(name: "ddtAfterTimePeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreDueDateTypesEnum.ddtByDates.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDueDateTypesEnum.ddtByDates = B1ClassMetadata.EnumTypes.dueDateTypesEnum.member(name: "ddtByDates")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter1.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter1 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter1")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter2.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter2 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter2")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter3.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter3 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter3")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter4.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter4 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter4")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter5.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter5 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter5")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter6.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter6 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter6")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter7.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter7 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter7")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter8.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter8 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter8")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter9.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter9 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter9")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter10.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningLetter10 = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningLetter10")
        }
        if !B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningALL.isRemoved {
            B1ClassMetadata.EnumValues.B1PreDunningLetterTypeEnum.dltDunningALL = B1ClassMetadata.EnumTypes.dunningLetterTypeEnum.member(name: "dltDunningALL")
        }
        if !B1ClassMetadata.EnumValues.B1PreECDPostingTypeEnum.ecdNormal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreECDPostingTypeEnum.ecdNormal = B1ClassMetadata.EnumTypes.ecdPostingTypeEnum.member(name: "ecdNormal")
        }
        if !B1ClassMetadata.EnumValues.B1PreECDPostingTypeEnum.ecdStatement.isRemoved {
            B1ClassMetadata.EnumValues.B1PreECDPostingTypeEnum.ecdStatement = B1ClassMetadata.EnumTypes.ecdPostingTypeEnum.member(name: "ecdStatement")
        }
        if !B1ClassMetadata.EnumValues.B1PreEDocGenerationTypeEnum.edocGenerate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEDocGenerationTypeEnum.edocGenerate = B1ClassMetadata.EnumTypes.eDocGenerationTypeEnum.member(name: "edocGenerate")
        }
        if !B1ClassMetadata.EnumValues.B1PreEDocGenerationTypeEnum.edocGenerateLater.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEDocGenerationTypeEnum.edocGenerateLater = B1ClassMetadata.EnumTypes.eDocGenerationTypeEnum.member(name: "edocGenerateLater")
        }
        if !B1ClassMetadata.EnumValues.B1PreEDocGenerationTypeEnum.edocNotRelevant.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEDocGenerationTypeEnum.edocNotRelevant = B1ClassMetadata.EnumTypes.eDocGenerationTypeEnum.member(name: "edocNotRelevant")
        }
        if !B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocNew.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocNew = B1ClassMetadata.EnumTypes.eDocStatusEnum.member(name: "edoc_New")
        }
        if !B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocPending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocPending = B1ClassMetadata.EnumTypes.eDocStatusEnum.member(name: "edoc_Pending")
        }
        if !B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocSent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocSent = B1ClassMetadata.EnumTypes.eDocStatusEnum.member(name: "edoc_Sent")
        }
        if !B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocError = B1ClassMetadata.EnumTypes.eDocStatusEnum.member(name: "edoc_Error")
        }
        if !B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocOk.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEDocStatusEnum.edocOk = B1ClassMetadata.EnumTypes.eDocStatusEnum.member(name: "edoc_Ok")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionGenerationTypeEnum.lgtNotRelevant.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionGenerationTypeEnum.lgtNotRelevant = B1ClassMetadata.EnumTypes.ecmActionGenerationTypeEnum.member(name: "lgtNotRelevant")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionGenerationTypeEnum.lasGenerateLater.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionGenerationTypeEnum.lasGenerateLater = B1ClassMetadata.EnumTypes.ecmActionGenerationTypeEnum.member(name: "lasGenerateLater")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionGenerationTypeEnum.lasGenerate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionGenerationTypeEnum.lasGenerate = B1ClassMetadata.EnumTypes.ecmActionGenerationTypeEnum.member(name: "lasGenerate")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altSend.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altSend = B1ClassMetadata.EnumTypes.ecmActionLogTypeEnum.member(name: "altSend")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altReceive.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altReceive = B1ClassMetadata.EnumTypes.ecmActionLogTypeEnum.member(name: "altReceive")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altImport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altImport = B1ClassMetadata.EnumTypes.ecmActionLogTypeEnum.member(name: "altImport")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altNote = B1ClassMetadata.EnumTypes.ecmActionLogTypeEnum.member(name: "altNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altWarning.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altWarning = B1ClassMetadata.EnumTypes.ecmActionLogTypeEnum.member(name: "altWarning")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionLogTypeEnum.altError = B1ClassMetadata.EnumTypes.ecmActionLogTypeEnum.member(name: "altError")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionPeriodTypeEnum.aptYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionPeriodTypeEnum.aptYear = B1ClassMetadata.EnumTypes.ecmActionPeriodTypeEnum.member(name: "aptYear")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionPeriodTypeEnum.aptQuarter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionPeriodTypeEnum.aptQuarter = B1ClassMetadata.EnumTypes.ecmActionPeriodTypeEnum.member(name: "aptQuarter")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionPeriodTypeEnum.aptMonth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionPeriodTypeEnum.aptMonth = B1ClassMetadata.EnumTypes.ecmActionPeriodTypeEnum.member(name: "aptMonth")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionPeriodTypeEnum.aptDateRange.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionPeriodTypeEnum.aptDateRange = B1ClassMetadata.EnumTypes.ecmActionPeriodTypeEnum.member(name: "aptDateRange")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasNone = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasNew.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasNew = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasNew")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasPending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasPending = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasPending")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasError = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasError")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasOK.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasOK = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasOK")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasSent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasSent = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasSent")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasDocError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasDocError = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasDocError")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasWaiting.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasWaiting = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasWaiting")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasAuthorized.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasAuthorized = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasAuthorized")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasInProcess.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasInProcess = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasInProcess")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasRejected.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasRejected = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasRejected")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasDenied.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasDenied = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasDenied")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasCanceled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasCanceled = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasCanceled")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasAborted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasAborted = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasAborted")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasQueued.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasQueued = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasQueued")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasImported.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionStatusEnum.lasImported = B1ClassMetadata.EnumTypes.ecmActionStatusEnum.member(name: "lasImported")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latNone = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latSetup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latSetup = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latSetup")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latReport = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latDocumentAR.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latDocumentAR = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latDocumentAR")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latDocumentAP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latDocumentAP = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latDocumentAP")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latDraft.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latDraft = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latDraft")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latOther = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latOther")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latSkip.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latSkip = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latSkip")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latContingency.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latContingency = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latContingency")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latBpCheck.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latBpCheck = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latBpCheck")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latPaymentIncoming.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latPaymentIncoming = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latPaymentIncoming")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latPaymentOutgoing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latPaymentOutgoing = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latPaymentOutgoing")
        }
        if !B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latReconciliation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEcmActionTypeEnum.latReconciliation = B1ClassMetadata.EnumTypes.ecmActionTypeEnum.member(name: "latReconciliation")
        }
        if !B1ClassMetadata.EnumValues.B1PreEffectivePriceEnum.epDefaultPriority.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEffectivePriceEnum.epDefaultPriority = B1ClassMetadata.EnumTypes.effectivePriceEnum.member(name: "epDefaultPriority")
        }
        if !B1ClassMetadata.EnumValues.B1PreEffectivePriceEnum.epLowestPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEffectivePriceEnum.epLowestPrice = B1ClassMetadata.EnumTypes.effectivePriceEnum.member(name: "epLowestPrice")
        }
        if !B1ClassMetadata.EnumValues.B1PreEffectivePriceEnum.epHighestPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEffectivePriceEnum.epHighestPrice = B1ClassMetadata.EnumTypes.effectivePriceEnum.member(name: "epHighestPrice")
        }
        if !B1ClassMetadata.EnumValues.B1PreElecCommStatusEnum.ecsApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreElecCommStatusEnum.ecsApproved = B1ClassMetadata.EnumTypes.elecCommStatusEnum.member(name: "ecsApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreElecCommStatusEnum.ecsPendingApproval.isRemoved {
            B1ClassMetadata.EnumValues.B1PreElecCommStatusEnum.ecsPendingApproval = B1ClassMetadata.EnumTypes.elecCommStatusEnum.member(name: "ecsPendingApproval")
        }
        if !B1ClassMetadata.EnumValues.B1PreElecCommStatusEnum.ecsRejected.isRemoved {
            B1ClassMetadata.EnumValues.B1PreElecCommStatusEnum.ecsRejected = B1ClassMetadata.EnumTypes.elecCommStatusEnum.member(name: "ecsRejected")
        }
        if !B1ClassMetadata.EnumValues.B1PreElectronicDocGenTypeEnum.edgtNotRelevant.isRemoved {
            B1ClassMetadata.EnumValues.B1PreElectronicDocGenTypeEnum.edgtNotRelevant = B1ClassMetadata.EnumTypes.electronicDocGenTypeEnum.member(name: "edgt_NotRelevant")
        }
        if !B1ClassMetadata.EnumValues.B1PreElectronicDocGenTypeEnum.edgtGenerate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreElectronicDocGenTypeEnum.edgtGenerate = B1ClassMetadata.EnumTypes.electronicDocGenTypeEnum.member(name: "edgt_Generate")
        }
        if !B1ClassMetadata.EnumValues.B1PreElectronicDocGenTypeEnum.edgtGenerateLater.isRemoved {
            B1ClassMetadata.EnumValues.B1PreElectronicDocGenTypeEnum.edgtGenerateLater = B1ClassMetadata.EnumTypes.electronicDocGenTypeEnum.member(name: "edgt_GenerateLater")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuNone = B1ClassMetadata.EnumTypes.employeeExemptionUnitEnum.member(name: "eeu_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuYearly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuYearly = B1ClassMetadata.EnumTypes.employeeExemptionUnitEnum.member(name: "eeu_Yearly")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuMonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuMonthly = B1ClassMetadata.EnumTypes.employeeExemptionUnitEnum.member(name: "eeu_Monthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuWeekly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuWeekly = B1ClassMetadata.EnumTypes.employeeExemptionUnitEnum.member(name: "eeu_Weekly")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuDaily.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeExemptionUnitEnum.eeuDaily = B1ClassMetadata.EnumTypes.employeeExemptionUnitEnum.member(name: "eeu_Daily")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeePaymentMethodEnum.epmNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeePaymentMethodEnum.epmNone = B1ClassMetadata.EnumTypes.employeePaymentMethodEnum.member(name: "epm_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeePaymentMethodEnum.epmBankTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeePaymentMethodEnum.epmBankTransfer = B1ClassMetadata.EnumTypes.employeePaymentMethodEnum.member(name: "epm_BankTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferProcessingStatusEnum.etpsNew.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferProcessingStatusEnum.etpsNew = B1ClassMetadata.EnumTypes.employeeTransferProcessingStatusEnum.member(name: "etps_New")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferProcessingStatusEnum.etpsSent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferProcessingStatusEnum.etpsSent = B1ClassMetadata.EnumTypes.employeeTransferProcessingStatusEnum.member(name: "etps_Sent")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferProcessingStatusEnum.etpsAccepted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferProcessingStatusEnum.etpsAccepted = B1ClassMetadata.EnumTypes.employeeTransferProcessingStatusEnum.member(name: "etps_Accepted")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferProcessingStatusEnum.etpsError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferProcessingStatusEnum.etpsError = B1ClassMetadata.EnumTypes.employeeTransferProcessingStatusEnum.member(name: "etps_Error")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsNew.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsNew = B1ClassMetadata.EnumTypes.employeeTransferStatusEnum.member(name: "ets_New")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsProcessing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsProcessing = B1ClassMetadata.EnumTypes.employeeTransferStatusEnum.member(name: "ets_Processing")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsSent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsSent = B1ClassMetadata.EnumTypes.employeeTransferStatusEnum.member(name: "ets_Sent")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsReceived.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsReceived = B1ClassMetadata.EnumTypes.employeeTransferStatusEnum.member(name: "ets_Received")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsAccepted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsAccepted = B1ClassMetadata.EnumTypes.employeeTransferStatusEnum.member(name: "ets_Accepted")
        }
        if !B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEmployeeTransferStatusEnum.etsError = B1ClassMetadata.EnumTypes.employeeTransferStatusEnum.member(name: "ets_Error")
        }
        if !B1ClassMetadata.EnumValues.B1PreEndTypeEnum.etNoEndDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEndTypeEnum.etNoEndDate = B1ClassMetadata.EnumTypes.endTypeEnum.member(name: "etNoEndDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreEndTypeEnum.etByCounter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEndTypeEnum.etByCounter = B1ClassMetadata.EnumTypes.endTypeEnum.member(name: "etByCounter")
        }
        if !B1ClassMetadata.EnumValues.B1PreEndTypeEnum.etByDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreEndTypeEnum.etByDate = B1ClassMetadata.EnumTypes.endTypeEnum.member(name: "etByDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreExchangeRateSelectEnum.ierFromInovice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExchangeRateSelectEnum.ierFromInovice = B1ClassMetadata.EnumTypes.exchangeRateSelectEnum.member(name: "ierFromInovice")
        }
        if !B1ClassMetadata.EnumValues.B1PreExchangeRateSelectEnum.ierCurrentRate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExchangeRateSelectEnum.ierCurrentRate = B1ClassMetadata.EnumTypes.exchangeRateSelectEnum.member(name: "ierCurrentRate")
        }
        if !B1ClassMetadata.EnumValues.B1PreExemptionMaxAmountValidationTypeEnum.emaIndividual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExemptionMaxAmountValidationTypeEnum.emaIndividual = B1ClassMetadata.EnumTypes.exemptionMaxAmountValidationTypeEnum.member(name: "emaIndividual")
        }
        if !B1ClassMetadata.EnumValues.B1PreExemptionMaxAmountValidationTypeEnum.emaAccumulated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExemptionMaxAmountValidationTypeEnum.emaAccumulated = B1ClassMetadata.EnumTypes.exemptionMaxAmountValidationTypeEnum.member(name: "emaAccumulated")
        }
        if !B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsNew.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsNew = B1ClassMetadata.EnumTypes.externalCallStatusEnum.member(name: "ecsNew")
        }
        if !B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsInProcess.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsInProcess = B1ClassMetadata.EnumTypes.externalCallStatusEnum.member(name: "ecsInProcess")
        }
        if !B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsCompleted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsCompleted = B1ClassMetadata.EnumTypes.externalCallStatusEnum.member(name: "ecsCompleted")
        }
        if !B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsConfirmed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsConfirmed = B1ClassMetadata.EnumTypes.externalCallStatusEnum.member(name: "ecsConfirmed")
        }
        if !B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsFailed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreExternalCallStatusEnum.ecsFailed = B1ClassMetadata.EnumTypes.externalCallStatusEnum.member(name: "ecsFailed")
        }
        if !B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterA.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterA = B1ClassMetadata.EnumTypes.folioLetterEnum.member(name: "fLetterA")
        }
        if !B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterB.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterB = B1ClassMetadata.EnumTypes.folioLetterEnum.member(name: "fLetterB")
        }
        if !B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterC.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterC = B1ClassMetadata.EnumTypes.folioLetterEnum.member(name: "fLetterC")
        }
        if !B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterE.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterE = B1ClassMetadata.EnumTypes.folioLetterEnum.member(name: "fLetterE")
        }
        if !B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterM.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterM = B1ClassMetadata.EnumTypes.folioLetterEnum.member(name: "fLetterM")
        }
        if !B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterR.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFolioLetterEnum.fLetterR = B1ClassMetadata.EnumTypes.folioLetterEnum.member(name: "fLetterR")
        }
        if !B1ClassMetadata.EnumValues.B1PreFreightTypeEnum.ftShipping.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFreightTypeEnum.ftShipping = B1ClassMetadata.EnumTypes.freightTypeEnum.member(name: "ftShipping")
        }
        if !B1ClassMetadata.EnumValues.B1PreFreightTypeEnum.ftInsurance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFreightTypeEnum.ftInsurance = B1ClassMetadata.EnumTypes.freightTypeEnum.member(name: "ftInsurance")
        }
        if !B1ClassMetadata.EnumValues.B1PreFreightTypeEnum.ftOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFreightTypeEnum.ftOther = B1ClassMetadata.EnumTypes.freightTypeEnum.member(name: "ftOther")
        }
        if !B1ClassMetadata.EnumValues.B1PreFreightTypeEnum.ftSpecial.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFreightTypeEnum.ftSpecial = B1ClassMetadata.EnumTypes.freightTypeEnum.member(name: "ftSpecial")
        }
        if !B1ClassMetadata.EnumValues.B1PreFreightTypeForBolloEnum.ftStandard.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFreightTypeForBolloEnum.ftStandard = B1ClassMetadata.EnumTypes.freightTypeForBolloEnum.member(name: "ftStandard")
        }
        if !B1ClassMetadata.EnumValues.B1PreFreightTypeForBolloEnum.ftBollo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreFreightTypeForBolloEnum.ftBollo = B1ClassMetadata.EnumTypes.freightTypeForBolloEnum.member(name: "ftBollo")
        }
        if !B1ClassMetadata.EnumValues.B1PreGSTTaxCategoryEnum.gtcRegular.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGSTTaxCategoryEnum.gtcRegular = B1ClassMetadata.EnumTypes.gstTaxCategoryEnum.member(name: "gtc_Regular")
        }
        if !B1ClassMetadata.EnumValues.B1PreGSTTaxCategoryEnum.gtcNilRated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGSTTaxCategoryEnum.gtcNilRated = B1ClassMetadata.EnumTypes.gstTaxCategoryEnum.member(name: "gtc_NilRated")
        }
        if !B1ClassMetadata.EnumValues.B1PreGSTTaxCategoryEnum.gtcExempt.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGSTTaxCategoryEnum.gtcExempt = B1ClassMetadata.EnumTypes.gstTaxCategoryEnum.member(name: "gtc_Exempt")
        }
        if !B1ClassMetadata.EnumValues.B1PreGSTTransactionTypeEnum.gsttrantypBillOfSupply.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGSTTransactionTypeEnum.gsttrantypBillOfSupply = B1ClassMetadata.EnumTypes.gstTransactionTypeEnum.member(name: "gsttrantyp_BillOfSupply")
        }
        if !B1ClassMetadata.EnumValues.B1PreGSTTransactionTypeEnum.gsttrantypGSTTaxInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGSTTransactionTypeEnum.gsttrantypGSTTaxInvoice = B1ClassMetadata.EnumTypes.gstTransactionTypeEnum.member(name: "gsttrantyp_GSTTaxInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreGSTTransactionTypeEnum.gsttrantypGSTDebitMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGSTTransactionTypeEnum.gsttrantypGSTDebitMemo = B1ClassMetadata.EnumTypes.gstTransactionTypeEnum.member(name: "gsttrantyp_GSTDebitMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreGTSResponseToExceedingEnum.block.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGTSResponseToExceedingEnum.block = B1ClassMetadata.EnumTypes.gtsResponseToExceedingEnum.member(name: "Block")
        }
        if !B1ClassMetadata.EnumValues.B1PreGTSResponseToExceedingEnum.split.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGTSResponseToExceedingEnum.split = B1ClassMetadata.EnumTypes.gtsResponseToExceedingEnum.member(name: "Split")
        }
        if !B1ClassMetadata.EnumValues.B1PreGeneratedAssetStatusEnum.gasOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGeneratedAssetStatusEnum.gasOpen = B1ClassMetadata.EnumTypes.generatedAssetStatusEnum.member(name: "gasOpen")
        }
        if !B1ClassMetadata.EnumValues.B1PreGeneratedAssetStatusEnum.gasClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGeneratedAssetStatusEnum.gasClosed = B1ClassMetadata.EnumTypes.generatedAssetStatusEnum.member(name: "gasClosed")
        }
        if !B1ClassMetadata.EnumValues.B1PreGetGLAccountByEnum.gglabGeneral.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGetGLAccountByEnum.gglabGeneral = B1ClassMetadata.EnumTypes.getGLAccountByEnum.member(name: "gglab_General")
        }
        if !B1ClassMetadata.EnumValues.B1PreGetGLAccountByEnum.gglabWarehouse.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGetGLAccountByEnum.gglabWarehouse = B1ClassMetadata.EnumTypes.getGLAccountByEnum.member(name: "gglab_Warehouse")
        }
        if !B1ClassMetadata.EnumValues.B1PreGetGLAccountByEnum.gglabItemGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGetGLAccountByEnum.gglabItemGroup = B1ClassMetadata.EnumTypes.getGLAccountByEnum.member(name: "gglab_ItemGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodePeriodicityEnum.gpcpMonth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodePeriodicityEnum.gpcpMonth = B1ClassMetadata.EnumTypes.govPayCodePeriodicityEnum.member(name: "gpcpMonth")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodePeriodicityEnum.gpcpQuarter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodePeriodicityEnum.gpcpQuarter = B1ClassMetadata.EnumTypes.govPayCodePeriodicityEnum.member(name: "gpcpQuarter")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodePeriodicityEnum.gpcpHalfMonth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodePeriodicityEnum.gpcpHalfMonth = B1ClassMetadata.EnumTypes.govPayCodePeriodicityEnum.member(name: "gpcpHalfMonth")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodePeriodicityEnum.gpcpTenDays.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodePeriodicityEnum.gpcpTenDays = B1ClassMetadata.EnumTypes.govPayCodePeriodicityEnum.member(name: "gpcpTenDays")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscICMS.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscICMS = B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.member(name: "gpcscICMS")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscICMSST.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscICMSST = B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.member(name: "gpcscICMSST")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscIPI.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscIPI = B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.member(name: "gpcscIPI")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscISS.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscISS = B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.member(name: "gpcscISS")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscPIS.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscPIS = B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.member(name: "gpcscPIS")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscCOFINS.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcscCOFINS = B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.member(name: "gpcscCOFINS")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcsPISST.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcsPISST = B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.member(name: "gpcsPISST")
        }
        if !B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcsCONFINSST.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGovPayCodeSPEDCategoryEnum.gpcsCONFINSST = B1ClassMetadata.EnumTypes.govPayCodeSPEDCategoryEnum.member(name: "gpcsCONFINSST")
        }
        if !B1ClassMetadata.EnumValues.B1PreGroupingMethodEnum.gmPerInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGroupingMethodEnum.gmPerInvoice = B1ClassMetadata.EnumTypes.groupingMethodEnum.member(name: "gmPerInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreGroupingMethodEnum.gmPerDunningLevel.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGroupingMethodEnum.gmPerDunningLevel = B1ClassMetadata.EnumTypes.groupingMethodEnum.member(name: "gmPerDunningLevel")
        }
        if !B1ClassMetadata.EnumValues.B1PreGroupingMethodEnum.gmPerBP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreGroupingMethodEnum.gmPerBP = B1ClassMetadata.EnumTypes.groupingMethodEnum.member(name: "gmPerBP")
        }
        if !B1ClassMetadata.EnumValues.B1PreImportOrExportTypeEnum.etIpmortsOrExports.isRemoved {
            B1ClassMetadata.EnumValues.B1PreImportOrExportTypeEnum.etIpmortsOrExports = B1ClassMetadata.EnumTypes.importOrExportTypeEnum.member(name: "et_IpmortsOrExports")
        }
        if !B1ClassMetadata.EnumValues.B1PreImportOrExportTypeEnum.etSEZDeveloper.isRemoved {
            B1ClassMetadata.EnumValues.B1PreImportOrExportTypeEnum.etSEZDeveloper = B1ClassMetadata.EnumTypes.importOrExportTypeEnum.member(name: "et_SEZ_Developer")
        }
        if !B1ClassMetadata.EnumValues.B1PreImportOrExportTypeEnum.etSEZUnit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreImportOrExportTypeEnum.etSEZUnit = B1ClassMetadata.EnumTypes.importOrExportTypeEnum.member(name: "et_SEZ_Unit")
        }
        if !B1ClassMetadata.EnumValues.B1PreImportOrExportTypeEnum.etDeemedImportsOrExports.isRemoved {
            B1ClassMetadata.EnumValues.B1PreImportOrExportTypeEnum.etDeemedImportsOrExports = B1ClassMetadata.EnumTypes.importOrExportTypeEnum.member(name: "et_Deemed_ImportsOrExports")
        }
        if !B1ClassMetadata.EnumValues.B1PreInstallmentPaymentsPossiblityEnum.ippCr.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInstallmentPaymentsPossiblityEnum.ippCr = B1ClassMetadata.EnumTypes.installmentPaymentsPossiblityEnum.member(name: "ippCr")
        }
        if !B1ClassMetadata.EnumValues.B1PreInstallmentPaymentsPossiblityEnum.ippNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInstallmentPaymentsPossiblityEnum.ippNo = B1ClassMetadata.EnumTypes.installmentPaymentsPossiblityEnum.member(name: "ippNo")
        }
        if !B1ClassMetadata.EnumValues.B1PreInstallmentPaymentsPossiblityEnum.ippRd.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInstallmentPaymentsPossiblityEnum.ippRd = B1ClassMetadata.EnumTypes.installmentPaymentsPossiblityEnum.member(name: "ippRd")
        }
        if !B1ClassMetadata.EnumValues.B1PreInstallmentPaymentsPossiblityEnum.ippYes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInstallmentPaymentsPossiblityEnum.ippYes = B1ClassMetadata.EnumTypes.installmentPaymentsPossiblityEnum.member(name: "ippYes")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enAdditionalMeasureUnit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enAdditionalMeasureUnit = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enAdditionalMeasureUnit")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enCommodityCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enCommodityCodes = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enCommodityCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enCustomProcedures.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enCustomProcedures = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enCustomProcedures")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enIncoterms.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enIncoterms = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enIncoterms")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enNatureOfTransactions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enNatureOfTransactions = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enNatureOfTransactions")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enPortsOfEntryAndExit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enPortsOfEntryAndExit = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enPortsOfEntryAndExit")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enServiceCodes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enServiceCodes = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enServiceCodes")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enStatisticalProcedures.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enStatisticalProcedures = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enStatisticalProcedures")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enTransportModes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enTransportModes = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enTransportModes")
        }
        if !B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enRegions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIntrastatConfigurationEnum.enRegions = B1ClassMetadata.EnumTypes.intrastatConfigurationEnum.member(name: "enRegions")
        }
        if !B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.default.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.default = B1ClassMetadata.EnumTypes.invBaseDocTypeEnum.member(name: "Default")
        }
        if !B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.empty.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.empty = B1ClassMetadata.EnumTypes.invBaseDocTypeEnum.member(name: "Empty")
        }
        if !B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.purchaseDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.purchaseDeliveryNotes = B1ClassMetadata.EnumTypes.invBaseDocTypeEnum.member(name: "PurchaseDeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.inventoryGeneralEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.inventoryGeneralEntry = B1ClassMetadata.EnumTypes.invBaseDocTypeEnum.member(name: "InventoryGeneralEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.warehouseTransfers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.warehouseTransfers = B1ClassMetadata.EnumTypes.invBaseDocTypeEnum.member(name: "WarehouseTransfers")
        }
        if !B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.inventoryTransferRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInvBaseDocTypeEnum.inventoryTransferRequest = B1ClassMetadata.EnumTypes.invBaseDocTypeEnum.member(name: "InventoryTransferRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExpenses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExpenses = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatExpenses")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatRevenues.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatRevenues = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatRevenues")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExemptIncome.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExemptIncome = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatExemptIncome")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatInventory.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatInventory = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatInventory")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatCost.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatCost = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatCost")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatTransfer = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatVarience.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatVarience = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatVarience")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPriceDifference.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPriceDifference = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatPriceDifference")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatNegativeInventoryAdjustment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatNegativeInventoryAdjustment = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatNegativeInventoryAdjustment")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatDecreasing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatDecreasing = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatDecreasing")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatIncreasing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatIncreasing = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatIncreasing")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatReturning.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatReturning = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatReturning")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatEURevenues.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatEURevenues = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatEURevenues")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatEUExpenses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatEUExpenses = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatEUExpenses")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatForeignRevenue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatForeignRevenue = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatForeignRevenue")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatForeignExpens.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatForeignExpens = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatForeignExpens")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPurchase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPurchase = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatPurchase")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPAReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPAReturn = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatPAReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPurchaseOffset.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPurchaseOffset = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatPurchaseOffset")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExchangeRateDifferences.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExchangeRateDifferences = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatExchangeRateDifferences")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatGoodsClearing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatGoodsClearing = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatGoodsClearing")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatGLDecrease.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatGLDecrease = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatGLDecrease")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatGLIncrease.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatGLIncrease = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatGLIncrease")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWip.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWip = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatWip")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWipVariance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWipVariance = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatWipVariance")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWipOffsetProfitAndLoss.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWipOffsetProfitAndLoss = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatWipOffsetProfitAndLoss")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatInventoryOffsetProfitAndLoss.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatInventoryOffsetProfitAndLoss = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatInventoryOffsetProfitAndLoss")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatStockInflationAdjust.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatStockInflationAdjust = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatStockInflationAdjust")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatStockInflationOffset.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatStockInflationOffset = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatStockInflationOffset")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatCostInflation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatCostInflation = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatCostInflation")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatCostInflationOffset.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatCostInflationOffset = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatCostInflationOffset")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExpenseClearing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExpenseClearing = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatExpenseClearing")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExpenseOffsetting.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExpenseOffsetting = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatExpenseOffsetting")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatStockInTransit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatStockInTransit = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatStockInTransit")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatShippedGoods.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatShippedGoods = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatShippedGoods")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatVATInRevenue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatVATInRevenue = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatVATInRevenue")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatSalesCredit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatSalesCredit = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatSalesCredit")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPurchaseCredit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPurchaseCredit = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatPurchaseCredit")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExemptedCredits.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatExemptedCredits = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatExemptedCredits")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatSalesCreditForeign.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatSalesCreditForeign = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatSalesCreditForeign")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatForeignPurchaseCredit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatForeignPurchaseCredit = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatForeignPurchaseCredit")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatSalesCreditEU.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatSalesCreditEU = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatSalesCreditEU")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatEUPurchaseCredit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatEUPurchaseCredit = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatEUPurchaseCredit")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPurchaseBalance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatPurchaseBalance = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatPurchaseBalance")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWHIncomingCenvat.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWHIncomingCenvat = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatWHIncomingCenvat")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWHOutgoingCenvat.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatWHOutgoingCenvat = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatWHOutgoingCenvat")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatFreeOfChargeSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatFreeOfChargeSales = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatFreeOfChargeSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatFreeOfChargePurchase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryAccountTypeEnum.iatFreeOfChargePurchase = B1ClassMetadata.EnumTypes.inventoryAccountTypeEnum.member(name: "iatFreeOfChargePurchase")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryCycleTypeEnum.ictCylce.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryCycleTypeEnum.ictCylce = B1ClassMetadata.EnumTypes.inventoryCycleTypeEnum.member(name: "ictCylce")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryCycleTypeEnum.ictMRP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryCycleTypeEnum.ictMRP = B1ClassMetadata.EnumTypes.inventoryCycleTypeEnum.member(name: "ictMRP")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryOpeningBalancePriceSourceEnum.iobpsByPriceList.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryOpeningBalancePriceSourceEnum.iobpsByPriceList = B1ClassMetadata.EnumTypes.inventoryOpeningBalancePriceSourceEnum.member(name: "iobpsByPriceList")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryOpeningBalancePriceSourceEnum.iobpsLastEvaluatedPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryOpeningBalancePriceSourceEnum.iobpsLastEvaluatedPrice = B1ClassMetadata.EnumTypes.inventoryOpeningBalancePriceSourceEnum.member(name: "iobpsLastEvaluatedPrice")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryOpeningBalancePriceSourceEnum.iobpsItemCost.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryOpeningBalancePriceSourceEnum.iobpsItemCost = B1ClassMetadata.EnumTypes.inventoryOpeningBalancePriceSourceEnum.member(name: "iobpsItemCost")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoNoCountersDiff.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoNoCountersDiff = B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum.member(name: "ipcoNoCountersDiff")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual1CountedQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual1CountedQuantity = B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum.member(name: "ipcoIndividual1CountedQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual2CountedQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual2CountedQuantity = B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum.member(name: "ipcoIndividual2CountedQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual3CountedQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual3CountedQuantity = B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum.member(name: "ipcoIndividual3CountedQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual4CountedQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual4CountedQuantity = B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum.member(name: "ipcoIndividual4CountedQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual5CountedQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoIndividual5CountedQuantity = B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum.member(name: "ipcoIndividual5CountedQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoTeamCountedQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingCopyOptionEnum.ipcoTeamCountedQuantity = B1ClassMetadata.EnumTypes.inventoryPostingCopyOptionEnum.member(name: "ipcoTeamCountedQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingPriceSourceEnum.ippsByPriceList.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingPriceSourceEnum.ippsByPriceList = B1ClassMetadata.EnumTypes.inventoryPostingPriceSourceEnum.member(name: "ippsByPriceList")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingPriceSourceEnum.ippsLastEvaluatedPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingPriceSourceEnum.ippsLastEvaluatedPrice = B1ClassMetadata.EnumTypes.inventoryPostingPriceSourceEnum.member(name: "ippsLastEvaluatedPrice")
        }
        if !B1ClassMetadata.EnumValues.B1PreInventoryPostingPriceSourceEnum.ippsItemCost.isRemoved {
            B1ClassMetadata.EnumValues.B1PreInventoryPostingPriceSourceEnum.ippsItemCost = B1ClassMetadata.EnumTypes.inventoryPostingPriceSourceEnum.member(name: "ippsItemCost")
        }
        if !B1ClassMetadata.EnumValues.B1PreIssuePrimarilyByEnum.ipbSerialAndBatchNumbers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIssuePrimarilyByEnum.ipbSerialAndBatchNumbers = B1ClassMetadata.EnumTypes.issuePrimarilyByEnum.member(name: "ipbSerialAndBatchNumbers")
        }
        if !B1ClassMetadata.EnumValues.B1PreIssuePrimarilyByEnum.ipbBinLocations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreIssuePrimarilyByEnum.ipbBinLocations = B1ClassMetadata.EnumTypes.issuePrimarilyByEnum.member(name: "ipbBinLocations")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemClassEnum.itcService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemClassEnum.itcService = B1ClassMetadata.EnumTypes.itemClassEnum.member(name: "itcService")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemClassEnum.itcMaterial.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemClassEnum.itcMaterial = B1ClassMetadata.EnumTypes.itemClassEnum.member(name: "itcMaterial")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemTypeEnum.itItems.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemTypeEnum.itItems = B1ClassMetadata.EnumTypes.itemTypeEnum.member(name: "itItems")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemTypeEnum.itLabor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemTypeEnum.itLabor = B1ClassMetadata.EnumTypes.itemTypeEnum.member(name: "itLabor")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemTypeEnum.itTravel.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemTypeEnum.itTravel = B1ClassMetadata.EnumTypes.itemTypeEnum.member(name: "itTravel")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemTypeEnum.itFixedAssets.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemTypeEnum.itFixedAssets = B1ClassMetadata.EnumTypes.itemTypeEnum.member(name: "itFixedAssets")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemUoMTypeEnum.iutPurchasing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemUoMTypeEnum.iutPurchasing = B1ClassMetadata.EnumTypes.itemUoMTypeEnum.member(name: "iutPurchasing")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemUoMTypeEnum.iutSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemUoMTypeEnum.iutSales = B1ClassMetadata.EnumTypes.itemUoMTypeEnum.member(name: "iutSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreItemUoMTypeEnum.iutInventory.isRemoved {
            B1ClassMetadata.EnumValues.B1PreItemUoMTypeEnum.iutInventory = B1ClassMetadata.EnumTypes.itemUoMTypeEnum.member(name: "iutInventory")
        }
        if !B1ClassMetadata.EnumValues.B1PreKPITypeEnum.asSingle.isRemoved {
            B1ClassMetadata.EnumValues.B1PreKPITypeEnum.asSingle = B1ClassMetadata.EnumTypes.kpiTypeEnum.member(name: "asSingle")
        }
        if !B1ClassMetadata.EnumValues.B1PreKPITypeEnum.asQuarterly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreKPITypeEnum.asQuarterly = B1ClassMetadata.EnumTypes.kpiTypeEnum.member(name: "asQuarterly")
        }
        if !B1ClassMetadata.EnumValues.B1PreKPITypeEnum.asMonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreKPITypeEnum.asMonthly = B1ClassMetadata.EnumTypes.kpiTypeEnum.member(name: "asMonthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreKPITypeEnum.asMultiple.isRemoved {
            B1ClassMetadata.EnumValues.B1PreKPITypeEnum.asMultiple = B1ClassMetadata.EnumTypes.kpiTypeEnum.member(name: "asMultiple")
        }
        if !B1ClassMetadata.EnumValues.B1PreLCCostTypeEnum.asFixedCosts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLCCostTypeEnum.asFixedCosts = B1ClassMetadata.EnumTypes.lcCostTypeEnum.member(name: "asFixedCosts")
        }
        if !B1ClassMetadata.EnumValues.B1PreLCCostTypeEnum.asVariableCosts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLCCostTypeEnum.asVariableCosts = B1ClassMetadata.EnumTypes.lcCostTypeEnum.member(name: "asVariableCosts")
        }
        if !B1ClassMetadata.EnumValues.B1PreLCCostTypeEnum.asLegalCosts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLCCostTypeEnum.asLegalCosts = B1ClassMetadata.EnumTypes.lcCostTypeEnum.member(name: "asLegalCosts")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asCashValueBeforeCustoms.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asCashValueBeforeCustoms = B1ClassMetadata.EnumTypes.landedCostAllocationByEnum.member(name: "asCashValueBeforeCustoms")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asCashValueAfterCustoms.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asCashValueAfterCustoms = B1ClassMetadata.EnumTypes.landedCostAllocationByEnum.member(name: "asCashValueAfterCustoms")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asQuantity = B1ClassMetadata.EnumTypes.landedCostAllocationByEnum.member(name: "asQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asWeight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asWeight = B1ClassMetadata.EnumTypes.landedCostAllocationByEnum.member(name: "asWeight")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asVolume.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asVolume = B1ClassMetadata.EnumTypes.landedCostAllocationByEnum.member(name: "asVolume")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asEqual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asEqual = B1ClassMetadata.EnumTypes.landedCostAllocationByEnum.member(name: "asEqual")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asLegalCost.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostAllocationByEnum.asLegalCost = B1ClassMetadata.EnumTypes.landedCostAllocationByEnum.member(name: "asLegalCost")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asDefault.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asDefault = B1ClassMetadata.EnumTypes.landedCostBaseDocumentTypeEnum.member(name: "asDefault")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asEmpty.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asEmpty = B1ClassMetadata.EnumTypes.landedCostBaseDocumentTypeEnum.member(name: "asEmpty")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asGoodsReceiptPO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asGoodsReceiptPO = B1ClassMetadata.EnumTypes.landedCostBaseDocumentTypeEnum.member(name: "asGoodsReceiptPO")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asLandedCosts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asLandedCosts = B1ClassMetadata.EnumTypes.landedCostBaseDocumentTypeEnum.member(name: "asLandedCosts")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asPurchaseInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostBaseDocumentTypeEnum.asPurchaseInvoice = B1ClassMetadata.EnumTypes.landedCostBaseDocumentTypeEnum.member(name: "asPurchaseInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostCostCategoryEnum.lcccCustomsVAT.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostCostCategoryEnum.lcccCustomsVAT = B1ClassMetadata.EnumTypes.landedCostCostCategoryEnum.member(name: "lccc_CustomsVAT")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostCostCategoryEnum.lcccExciseCost.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostCostCategoryEnum.lcccExciseCost = B1ClassMetadata.EnumTypes.landedCostCostCategoryEnum.member(name: "lccc_ExciseCost")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostCostCategoryEnum.lcccCustomsDuty.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostCostCategoryEnum.lcccCustomsDuty = B1ClassMetadata.EnumTypes.landedCostCostCategoryEnum.member(name: "lccc_CustomsDuty")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostDocStatusEnum.lcOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostDocStatusEnum.lcOpen = B1ClassMetadata.EnumTypes.landedCostDocStatusEnum.member(name: "lcOpen")
        }
        if !B1ClassMetadata.EnumValues.B1PreLandedCostDocStatusEnum.lcClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLandedCostDocStatusEnum.lcClosed = B1ClassMetadata.EnumTypes.landedCostDocStatusEnum.member(name: "lcClosed")
        }
        if !B1ClassMetadata.EnumValues.B1PreLegalDataLineTypeEnum.ldltDocumentTotal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLegalDataLineTypeEnum.ldltDocumentTotal = B1ClassMetadata.EnumTypes.legalDataLineTypeEnum.member(name: "ldlt_DocumentTotal")
        }
        if !B1ClassMetadata.EnumValues.B1PreLegalDataLineTypeEnum.ldltTaxPerLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLegalDataLineTypeEnum.ldltTaxPerLine = B1ClassMetadata.EnumTypes.legalDataLineTypeEnum.member(name: "ldlt_TaxPerLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreLegalDataLineTypeEnum.ldltTotalTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLegalDataLineTypeEnum.ldltTotalTax = B1ClassMetadata.EnumTypes.legalDataLineTypeEnum.member(name: "ldlt_TotalTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkIdirect.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkIdirect = B1ClassMetadata.EnumTypes.licenseTypeEnum.member(name: "lkIdirect")
        }
        if !B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkSOAIndirect.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkSOAIndirect = B1ClassMetadata.EnumTypes.licenseTypeEnum.member(name: "lkSOAIndirect")
        }
        if !B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkSOA.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkSOA = B1ClassMetadata.EnumTypes.licenseTypeEnum.member(name: "lkSOA")
        }
        if !B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkB1iIndirect.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkB1iIndirect = B1ClassMetadata.EnumTypes.licenseTypeEnum.member(name: "lkB1iIndirect")
        }
        if !B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkB1i.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLicenseTypeEnum.lkB1i = B1ClassMetadata.EnumTypes.licenseTypeEnum.member(name: "lkB1i")
        }
        if !B1ClassMetadata.EnumValues.B1PreLicenseUpdateTypeEnum.ultAssign.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLicenseUpdateTypeEnum.ultAssign = B1ClassMetadata.EnumTypes.licenseUpdateTypeEnum.member(name: "ultAssign")
        }
        if !B1ClassMetadata.EnumValues.B1PreLicenseUpdateTypeEnum.ultRemove.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLicenseUpdateTypeEnum.ultRemove = B1ClassMetadata.EnumTypes.licenseUpdateTypeEnum.member(name: "ultRemove")
        }
        if !B1ClassMetadata.EnumValues.B1PreLineStatusTypeEnum.lstOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLineStatusTypeEnum.lstOpen = B1ClassMetadata.EnumTypes.lineStatusTypeEnum.member(name: "lst_Open")
        }
        if !B1ClassMetadata.EnumValues.B1PreLineStatusTypeEnum.lstClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLineStatusTypeEnum.lstClosed = B1ClassMetadata.EnumTypes.lineStatusTypeEnum.member(name: "lst_Closed")
        }
        if !B1ClassMetadata.EnumValues.B1PreLineTypeEnum.ltDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLineTypeEnum.ltDocument = B1ClassMetadata.EnumTypes.lineTypeEnum.member(name: "ltDocument ")
        }
        if !B1ClassMetadata.EnumValues.B1PreLineTypeEnum.ltRounding.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLineTypeEnum.ltRounding = B1ClassMetadata.EnumTypes.lineTypeEnum.member(name: "ltRounding")
        }
        if !B1ClassMetadata.EnumValues.B1PreLineTypeEnum.ltVat.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLineTypeEnum.ltVat = B1ClassMetadata.EnumTypes.lineTypeEnum.member(name: "ltVat")
        }
        if !B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtEmptyLink.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtEmptyLink = B1ClassMetadata.EnumTypes.linkedDocTypeEnum.member(name: "ldtEmptyLink")
        }
        if !B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtSalesOpportunitiesLink.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtSalesOpportunitiesLink = B1ClassMetadata.EnumTypes.linkedDocTypeEnum.member(name: "ldtSalesOpportunitiesLink")
        }
        if !B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtSalesQuotationsLink.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtSalesQuotationsLink = B1ClassMetadata.EnumTypes.linkedDocTypeEnum.member(name: "ldtSalesQuotationsLink")
        }
        if !B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtSalesOrdersLink.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtSalesOrdersLink = B1ClassMetadata.EnumTypes.linkedDocTypeEnum.member(name: "ldtSalesOrdersLink")
        }
        if !B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtDeliveriesLink.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtDeliveriesLink = B1ClassMetadata.EnumTypes.linkedDocTypeEnum.member(name: "ldtDeliveriesLink")
        }
        if !B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtARInvoicesLink.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLinkedDocTypeEnum.ldtARInvoicesLink = B1ClassMetadata.EnumTypes.linkedDocTypeEnum.member(name: "ldtARInvoicesLink")
        }
        if !B1ClassMetadata.EnumValues.B1PreLogonMethodEnum.lmBOneIntegrationFramework.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLogonMethodEnum.lmBOneIntegrationFramework = B1ClassMetadata.EnumTypes.logonMethodEnum.member(name: "lmBOneIntegrationFramework")
        }
        if !B1ClassMetadata.EnumValues.B1PreLogonMethodEnum.lmStandardLogon.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLogonMethodEnum.lmStandardLogon = B1ClassMetadata.EnumTypes.logonMethodEnum.member(name: "lmStandardLogon")
        }
        if !B1ClassMetadata.EnumValues.B1PreLogonMethodEnum.lmNoControl.isRemoved {
            B1ClassMetadata.EnumValues.B1PreLogonMethodEnum.lmNoControl = B1ClassMetadata.EnumTypes.logonMethodEnum.member(name: "lmNoControl")
        }
        if !B1ClassMetadata.EnumValues.B1PreMobileAddonSettingTypeEnum.mastModule.isRemoved {
            B1ClassMetadata.EnumValues.B1PreMobileAddonSettingTypeEnum.mastModule = B1ClassMetadata.EnumTypes.mobileAddonSettingTypeEnum.member(name: "mastModule")
        }
        if !B1ClassMetadata.EnumValues.B1PreMobileAddonSettingTypeEnum.mastHome.isRemoved {
            B1ClassMetadata.EnumValues.B1PreMobileAddonSettingTypeEnum.mastHome = B1ClassMetadata.EnumTypes.mobileAddonSettingTypeEnum.member(name: "mastHome")
        }
        if !B1ClassMetadata.EnumValues.B1PreMobileAppReportChoiceEnum.marSystemReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreMobileAppReportChoiceEnum.marSystemReport = B1ClassMetadata.EnumTypes.mobileAppReportChoiceEnum.member(name: "marSystemReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreMobileAppReportChoiceEnum.marCustomizedReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreMobileAppReportChoiceEnum.marCustomizedReport = B1ClassMetadata.EnumTypes.mobileAppReportChoiceEnum.member(name: "marCustomizedReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreMultipleCounterRoleEnum.mcrTeamCounter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreMultipleCounterRoleEnum.mcrTeamCounter = B1ClassMetadata.EnumTypes.multipleCounterRoleEnum.member(name: "mcrTeamCounter")
        }
        if !B1ClassMetadata.EnumValues.B1PreMultipleCounterRoleEnum.mcrIndividualCounter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreMultipleCounterRoleEnum.mcrIndividualCounter = B1ClassMetadata.EnumTypes.multipleCounterRoleEnum.member(name: "mcrIndividualCounter")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocGoodsOrServiciesAcquisitions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocGoodsOrServiciesAcquisitions = B1ClassMetadata.EnumTypes.operationCode347Enum.member(name: "ocGoodsOrServiciesAcquisitions")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocPublicEntitiesAcquisitions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocPublicEntitiesAcquisitions = B1ClassMetadata.EnumTypes.operationCode347Enum.member(name: "ocPublicEntitiesAcquisitions")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocTravelAgenciesPurchases.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocTravelAgenciesPurchases = B1ClassMetadata.EnumTypes.operationCode347Enum.member(name: "ocTravelAgenciesPurchases")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocSalesOrServicesRevenues.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocSalesOrServicesRevenues = B1ClassMetadata.EnumTypes.operationCode347Enum.member(name: "ocSalesOrServicesRevenues")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocPublicSubsidies.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocPublicSubsidies = B1ClassMetadata.EnumTypes.operationCode347Enum.member(name: "ocPublicSubsidies")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocTravelAgenciesSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCode347Enum.ocTravelAgenciesSales = B1ClassMetadata.EnumTypes.operationCode347Enum.member(name: "ocTravelAgenciesSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSummaryInvoicesEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSummaryInvoicesEntry = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octSummaryInvoicesEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSummaryReceiptsEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSummaryReceiptsEntry = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octSummaryReceiptsEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octInvoicewithSeveralVATRates.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octInvoicewithSeveralVATRates = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octInvoicewithSeveralVATRates")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octCorrectionInvoice = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octDueVATPendingInvoiceIssuance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octDueVATPendingInvoiceIssuance = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octDueVATPendingInvoiceIssuance")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octExpensesIncurredbyTravelAgentforCustomers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octExpensesIncurredbyTravelAgentforCustomers = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octExpensesIncurredbyTravelAgentforCustomers")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSpecialRegulationforVATGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSpecialRegulationforVATGroup = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octSpecialRegulationforVATGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSpecialRegulationforGoldInvestment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSpecialRegulationforGoldInvestment = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octSpecialRegulationforGoldInvestment")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octReverseChargeProcedure.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octReverseChargeProcedure = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octReverseChargeProcedure")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octUnsummarizedReceipts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octUnsummarizedReceipts = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octUnsummarizedReceipts")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octIdentificationofErrorTransactions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octIdentificationofErrorTransactions = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octIdentificationofErrorTransactions")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octTransactionswithEntrepreneursIssuingReceiptsforAgriculturalCompensation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octTransactionswithEntrepreneursIssuingReceiptsforAgriculturalCompensation = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octTransactionswithEntrepreneursIssuingReceiptsforAgriculturalCompensation")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octServiceInvoicingbyTravelAgenciesonBehalfofThirdParties.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octServiceInvoicingbyTravelAgenciesonBehalfofThirdParties = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octServiceInvoicingbyTravelAgenciesonBehalfofThirdParties")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octBusinessOfficeRental.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octBusinessOfficeRental = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octBusinessOfficeRental")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSubsidies.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octSubsidies = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octSubsidies")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octIncomingPaymentsforIndustrialandIntellectualPropertyRights.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octIncomingPaymentsforIndustrialandIntellectualPropertyRights = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octIncomingPaymentsforIndustrialandIntellectualPropertyRights")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octInsuranceTransactions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octInsuranceTransactions = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octInsuranceTransactions")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octPurchasesfromTravelAgencies.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octPurchasesfromTravelAgencies = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octPurchasesfromTravelAgencies")
        }
        if !B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octTransactionsSubjecttoProductionServiceandImportTaxesinCeutaandMelilla.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOperationCodeTypeEnum.octTransactionsSubjecttoProductionServiceandImportTaxesinCeutaandMelilla = B1ClassMetadata.EnumTypes.operationCodeTypeEnum.member(name: "octTransactionsSubjecttoProductionServiceandImportTaxesinCeutaandMelilla")
        }
        if !B1ClassMetadata.EnumValues.B1PreOpportunityTypeEnum.boOpSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOpportunityTypeEnum.boOpSales = B1ClassMetadata.EnumTypes.opportunityTypeEnum.member(name: "boOpSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreOpportunityTypeEnum.boOpPurchasing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreOpportunityTypeEnum.boOpPurchasing = B1ClassMetadata.EnumTypes.opportunityTypeEnum.member(name: "boOpPurchasing")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtManualJournalEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtManualJournalEntry = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ManualJournalEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtSalesQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtSalesQuotation = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_SalesQuotation")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtSalesOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtSalesOrder = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_SalesOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtDelivery.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtDelivery = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_Delivery")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtReturn = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_Return")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARDownPaymentRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARDownPaymentRequest = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ARDownPaymentRequest")
        }
    }

    private static func merge5(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARDownPaymentInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARDownPaymentInvoice = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ARDownPaymentInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARInvoice = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ARInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARCreditMemo = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ARCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARReserveInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARReserveInvoice = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ARReserveInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtPurchaseQuotation.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtPurchaseQuotation = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_PurchaseQuotation")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtPurchaseOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtPurchaseOrder = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_PurchaseOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtGoodsReceiptPO.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtGoodsReceiptPO = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_GoodsReceiptPO")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtGoodsReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtGoodsReturn = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_GoodsReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPDownPaymentRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPDownPaymentRequest = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_APDownPaymentRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPDownPaymentInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPDownPaymentInvoice = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_APDownPaymentInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPInvoice = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_APInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPCreditMemo = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_APCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPReserveInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPReserveInvoice = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_APReserveInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtServiceCall.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtServiceCall = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ServiceCall")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtGoodsReceipt.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtGoodsReceipt = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_GoodsReceipt")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtGoodsIssue.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtGoodsIssue = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_GoodsIssue")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARCorrectionInvoice = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ARCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARCorrectionInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtARCorrectionInvoiceReversal = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_ARCorrectionInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPCorrectionInvoice = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_APCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPCorrectionInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePMDocumentTypeEnum.pmdtAPCorrectionInvoiceReversal = B1ClassMetadata.EnumTypes.pmDocumentTypeEnum.member(name: "pmdt_APCorrectionInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentInvoiceTypeEnum.itARInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentInvoiceTypeEnum.itARInvoice = B1ClassMetadata.EnumTypes.paymentInvoiceTypeEnum.member(name: "itARInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentInvoiceTypeEnum.itARDownPaymentInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentInvoiceTypeEnum.itARDownPaymentInvoice = B1ClassMetadata.EnumTypes.paymentInvoiceTypeEnum.member(name: "itARDownPaymentInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtNotAssigned.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtNotAssigned = B1ClassMetadata.EnumTypes.paymentMeansTypeEnum.member(name: "pmtNotAssigned")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtChecks.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtChecks = B1ClassMetadata.EnumTypes.paymentMeansTypeEnum.member(name: "pmtChecks")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtBankTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtBankTransfer = B1ClassMetadata.EnumTypes.paymentMeansTypeEnum.member(name: "pmtBankTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtCash.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtCash = B1ClassMetadata.EnumTypes.paymentMeansTypeEnum.member(name: "pmtCash")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtCreditCard.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentMeansTypeEnum.pmtCreditCard = B1ClassMetadata.EnumTypes.paymentMeansTypeEnum.member(name: "pmtCreditCard")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentRunExportRowTypeEnum.prtGeneral.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentRunExportRowTypeEnum.prtGeneral = B1ClassMetadata.EnumTypes.paymentRunExportRowTypeEnum.member(name: "prtGeneral")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentRunExportRowTypeEnum.prtPayOnAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentRunExportRowTypeEnum.prtPayOnAccount = B1ClassMetadata.EnumTypes.paymentRunExportRowTypeEnum.member(name: "prtPayOnAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentRunExportRowTypeEnum.prtPayToAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentRunExportRowTypeEnum.prtPayToAccount = B1ClassMetadata.EnumTypes.paymentRunExportRowTypeEnum.member(name: "prtPayToAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasWithout.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasWithout = B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum.member(name: "pasWithout")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasPending.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasPending = B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum.member(name: "pasPending")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasApproved = B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum.member(name: "pasApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasRejected.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasRejected = B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum.member(name: "pasRejected")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasGenerated.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasGenerated = B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum.member(name: "pasGenerated")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasGeneratedbyAuthorizer.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasGeneratedbyAuthorizer = B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum.member(name: "pasGeneratedbyAuthorizer")
        }
        if !B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasCancelled.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePaymentsAuthorizationStatusEnum.pasCancelled = B1ClassMetadata.EnumTypes.paymentsAuthorizationStatusEnum.member(name: "pasCancelled")
        }
        if !B1ClassMetadata.EnumValues.B1PrePeriodStatusEnum.ltUnlocked.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePeriodStatusEnum.ltUnlocked = B1ClassMetadata.EnumTypes.periodStatusEnum.member(name: "ltUnlocked")
        }
        if !B1ClassMetadata.EnumValues.B1PrePeriodStatusEnum.ltUnlockedExceptSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePeriodStatusEnum.ltUnlockedExceptSales = B1ClassMetadata.EnumTypes.periodStatusEnum.member(name: "ltUnlockedExceptSales")
        }
        if !B1ClassMetadata.EnumValues.B1PrePeriodStatusEnum.ltPeriodClosing.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePeriodStatusEnum.ltPeriodClosing = B1ClassMetadata.EnumTypes.periodStatusEnum.member(name: "ltPeriodClosing")
        }
        if !B1ClassMetadata.EnumValues.B1PrePeriodStatusEnum.ltLocked.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePeriodStatusEnum.ltLocked = B1ClassMetadata.EnumTypes.periodStatusEnum.member(name: "ltLocked")
        }
        if !B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmGLAccountBankAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmGLAccountBankAccount = B1ClassMetadata.EnumTypes.postingMethodEnum.member(name: "pmGLAccountBankAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmBussinessPartnerBankAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmBussinessPartnerBankAccount = B1ClassMetadata.EnumTypes.postingMethodEnum.member(name: "pmBussinessPartnerBankAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmInterimAccountBankAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmInterimAccountBankAccount = B1ClassMetadata.EnumTypes.postingMethodEnum.member(name: "pmInterimAccountBankAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmExternalReconciliation.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmExternalReconciliation = B1ClassMetadata.EnumTypes.postingMethodEnum.member(name: "pmExternalReconciliation")
        }
        if !B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmIgnore.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePostingMethodEnum.pmIgnore = B1ClassMetadata.EnumTypes.postingMethodEnum.member(name: "pmIgnore")
        }
        if !B1ClassMetadata.EnumValues.B1PrePostingOfDepreciationEnum.podDirectPosting.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePostingOfDepreciationEnum.podDirectPosting = B1ClassMetadata.EnumTypes.postingOfDepreciationEnum.member(name: "podDirectPosting")
        }
        if !B1ClassMetadata.EnumValues.B1PrePostingOfDepreciationEnum.podIndirectPosting.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePostingOfDepreciationEnum.podIndirectPosting = B1ClassMetadata.EnumTypes.postingOfDepreciationEnum.member(name: "podIndirectPosting")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceModeDocumentEnum.pmdNet.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceModeDocumentEnum.pmdNet = B1ClassMetadata.EnumTypes.priceModeDocumentEnum.member(name: "pmdNet")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceModeDocumentEnum.pmdGross.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceModeDocumentEnum.pmdGross = B1ClassMetadata.EnumTypes.priceModeDocumentEnum.member(name: "pmdGross")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceModeDocumentEnum.pmdNetAndGross.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceModeDocumentEnum.pmdNetAndGross = B1ClassMetadata.EnumTypes.priceModeDocumentEnum.member(name: "pmdNetAndGross")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceModeEnum.pmNet.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceModeEnum.pmNet = B1ClassMetadata.EnumTypes.priceModeEnum.member(name: "pmNet")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceModeEnum.pmGross.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceModeEnum.pmGross = B1ClassMetadata.EnumTypes.priceModeEnum.member(name: "pmGross")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceProceedMethodEnum.ppmRemove.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceProceedMethodEnum.ppmRemove = B1ClassMetadata.EnumTypes.priceProceedMethodEnum.member(name: "ppmRemove")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceProceedMethodEnum.ppmUpdate.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceProceedMethodEnum.ppmUpdate = B1ClassMetadata.EnumTypes.priceProceedMethodEnum.member(name: "ppmUpdate")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceProceedMethodEnum.ppmKeepCorresponding.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceProceedMethodEnum.ppmKeepCorresponding = B1ClassMetadata.EnumTypes.priceProceedMethodEnum.member(name: "ppmKeepCorresponding")
        }
        if !B1ClassMetadata.EnumValues.B1PrePriceProceedMethodEnum.ppmKeepAll.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePriceProceedMethodEnum.ppmKeepAll = B1ClassMetadata.EnumTypes.priceProceedMethodEnum.member(name: "ppmKeepAll")
        }
        if !B1ClassMetadata.EnumValues.B1PrePrintOnEnum.poBlankPaper.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePrintOnEnum.poBlankPaper = B1ClassMetadata.EnumTypes.printOnEnum.member(name: "poBlankPaper")
        }
        if !B1ClassMetadata.EnumValues.B1PrePrintOnEnum.poDefault.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePrintOnEnum.poDefault = B1ClassMetadata.EnumTypes.printOnEnum.member(name: "poDefault")
        }
        if !B1ClassMetadata.EnumValues.B1PrePrintOnEnum.poOverflowBlankPaper.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePrintOnEnum.poOverflowBlankPaper = B1ClassMetadata.EnumTypes.printOnEnum.member(name: "poOverflowBlankPaper")
        }
        if !B1ClassMetadata.EnumValues.B1PrePrintOnEnum.poOverflowCheckStock.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePrintOnEnum.poOverflowCheckStock = B1ClassMetadata.EnumTypes.printOnEnum.member(name: "poOverflowCheckStock")
        }
        if !B1ClassMetadata.EnumValues.B1PrePrintStatusEnum.psNo.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePrintStatusEnum.psNo = B1ClassMetadata.EnumTypes.printStatusEnum.member(name: "psNo")
        }
        if !B1ClassMetadata.EnumValues.B1PrePrintStatusEnum.psYes.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePrintStatusEnum.psYes = B1ClassMetadata.EnumTypes.printStatusEnum.member(name: "psYes")
        }
        if !B1ClassMetadata.EnumValues.B1PrePrintStatusEnum.psAmended.isRemoved {
            B1ClassMetadata.EnumValues.B1PrePrintStatusEnum.psAmended = B1ClassMetadata.EnumTypes.printStatusEnum.member(name: "psAmended")
        }
        if !B1ClassMetadata.EnumValues.B1PreProductionItemType.pitItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProductionItemType.pitItem = B1ClassMetadata.EnumTypes.productionItemType.member(name: "pit_Item")
        }
        if !B1ClassMetadata.EnumValues.B1PreProductionItemType.pitResource.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProductionItemType.pitResource = B1ClassMetadata.EnumTypes.productionItemType.member(name: "pit_Resource")
        }
        if !B1ClassMetadata.EnumValues.B1PreProductionItemType.pitText.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProductionItemType.pitText = B1ClassMetadata.EnumTypes.productionItemType.member(name: "pit_Text")
        }
        if !B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstStarted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstStarted = B1ClassMetadata.EnumTypes.projectStatusTypeEnum.member(name: "pst_Started")
        }
        if !B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstPaused.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstPaused = B1ClassMetadata.EnumTypes.projectStatusTypeEnum.member(name: "pst_Paused")
        }
        if !B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstStopped.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstStopped = B1ClassMetadata.EnumTypes.projectStatusTypeEnum.member(name: "pst_Stopped")
        }
        if !B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstFinished.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstFinished = B1ClassMetadata.EnumTypes.projectStatusTypeEnum.member(name: "pst_Finished")
        }
        if !B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstCanceled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProjectStatusTypeEnum.pstCanceled = B1ClassMetadata.EnumTypes.projectStatusTypeEnum.member(name: "pst_Canceled")
        }
        if !B1ClassMetadata.EnumValues.B1PreProjectTypeEnum.ptExternal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProjectTypeEnum.ptExternal = B1ClassMetadata.EnumTypes.projectTypeEnum.member(name: "pt_External")
        }
        if !B1ClassMetadata.EnumValues.B1PreProjectTypeEnum.ptInternal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreProjectTypeEnum.ptInternal = B1ClassMetadata.EnumTypes.projectTypeEnum.member(name: "pt_Internal")
        }
        if !B1ClassMetadata.EnumValues.B1PreRclRecurringExecutionHandlingEnum.rehStopOnError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRclRecurringExecutionHandlingEnum.rehStopOnError = B1ClassMetadata.EnumTypes.rclRecurringExecutionHandlingEnum.member(name: "rehStopOnError")
        }
        if !B1ClassMetadata.EnumValues.B1PreRclRecurringExecutionHandlingEnum.rehSkipTransaction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRclRecurringExecutionHandlingEnum.rehSkipTransaction = B1ClassMetadata.EnumTypes.rclRecurringExecutionHandlingEnum.member(name: "rehSkipTransaction")
        }
        if !B1ClassMetadata.EnumValues.B1PreRclRecurringTransactionStatusEnum.rtsNotExecuted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRclRecurringTransactionStatusEnum.rtsNotExecuted = B1ClassMetadata.EnumTypes.rclRecurringTransactionStatusEnum.member(name: "rtsNotExecuted")
        }
        if !B1ClassMetadata.EnumValues.B1PreRclRecurringTransactionStatusEnum.rtsExecuted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRclRecurringTransactionStatusEnum.rtsExecuted = B1ClassMetadata.EnumTypes.rclRecurringTransactionStatusEnum.member(name: "rtsExecuted")
        }
        if !B1ClassMetadata.EnumValues.B1PreRclRecurringTransactionStatusEnum.rtsRemoved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRclRecurringTransactionStatusEnum.rtsRemoved = B1ClassMetadata.EnumTypes.rclRecurringTransactionStatusEnum.member(name: "rtsRemoved")
        }
        if !B1ClassMetadata.EnumValues.B1PreReceivingBinLocationsMethodEnum.rblmBinLocationCodeOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReceivingBinLocationsMethodEnum.rblmBinLocationCodeOrder = B1ClassMetadata.EnumTypes.receivingBinLocationsMethodEnum.member(name: "rblmBinLocationCodeOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreReceivingBinLocationsMethodEnum.rblmAlternativeSortCodeOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReceivingBinLocationsMethodEnum.rblmAlternativeSortCodeOrder = B1ClassMetadata.EnumTypes.receivingBinLocationsMethodEnum.member(name: "rblmAlternativeSortCodeOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreReceivingUpToMethodEnum.rutmBothMaxQtyAndWeight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReceivingUpToMethodEnum.rutmBothMaxQtyAndWeight = B1ClassMetadata.EnumTypes.receivingUpToMethodEnum.member(name: "rutmBothMaxQtyAndWeight")
        }
        if !B1ClassMetadata.EnumValues.B1PreReceivingUpToMethodEnum.rutmMaximumQty.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReceivingUpToMethodEnum.rutmMaximumQty = B1ClassMetadata.EnumTypes.receivingUpToMethodEnum.member(name: "rutmMaximumQty")
        }
        if !B1ClassMetadata.EnumValues.B1PreReceivingUpToMethodEnum.rutmMaximumWeight.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReceivingUpToMethodEnum.rutmMaximumWeight = B1ClassMetadata.EnumTypes.receivingUpToMethodEnum.member(name: "rutmMaximumWeight")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecipientTypeEnum.rtUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecipientTypeEnum.rtUser = B1ClassMetadata.EnumTypes.recipientTypeEnum.member(name: "rtUser")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecipientTypeEnum.rtEmployee.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecipientTypeEnum.rtEmployee = B1ClassMetadata.EnumTypes.recipientTypeEnum.member(name: "rtEmployee")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconSelectDateTypeEnum.rsdtPostDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconSelectDateTypeEnum.rsdtPostDate = B1ClassMetadata.EnumTypes.reconSelectDateTypeEnum.member(name: "rsdtPostDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconSelectDateTypeEnum.rsdtDueDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconSelectDateTypeEnum.rsdtDueDate = B1ClassMetadata.EnumTypes.reconSelectDateTypeEnum.member(name: "rsdtDueDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconSelectDateTypeEnum.rsdtDocDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconSelectDateTypeEnum.rsdtDocDate = B1ClassMetadata.EnumTypes.reconSelectDateTypeEnum.member(name: "rsdtDocDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtManual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtManual = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtManual")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtAutomatic.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtAutomatic = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtAutomatic")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtSemiAutomatic.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtSemiAutomatic = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtSemiAutomatic")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtPayment = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtCreditMemo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtCreditMemo = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtCreditMemo")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtReversal = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtZeroValue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtZeroValue = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtZeroValue")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtCancellation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtCancellation = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtCancellation")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtBoE.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtBoE = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtBoE")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtDeposit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtDeposit = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtDeposit")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtBankStatementProcess.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtBankStatementProcess = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtBankStatementProcess")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtPeriodClosing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtPeriodClosing = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtPeriodClosing")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtCorrectionInvoice = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtInventoryOrExpenseAllocation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtInventoryOrExpenseAllocation = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtInventoryOrExpenseAllocation")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtWIP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtWIP = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtWIP")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtDeferredTaxInterimAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtDeferredTaxInterimAccount = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtDeferredTaxInterimAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtDownPaymentAllocation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtDownPaymentAllocation = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtDownPaymentAllocation")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtAutoConversionDifference.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtAutoConversionDifference = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtAutoConversionDifference")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtInterimDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconTypeEnum.rtInterimDocument = B1ClassMetadata.EnumTypes.reconTypeEnum.member(name: "rtInterimDocument")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconciliationAccountTypeEnum.ratGLAccount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconciliationAccountTypeEnum.ratGLAccount = B1ClassMetadata.EnumTypes.reconciliationAccountTypeEnum.member(name: "rat_GLAccount")
        }
        if !B1ClassMetadata.EnumValues.B1PreReconciliationAccountTypeEnum.ratBusinessPartner.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReconciliationAccountTypeEnum.ratBusinessPartner = B1ClassMetadata.EnumTypes.reconciliationAccountTypeEnum.member(name: "rat_BusinessPartner")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowDay.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowDay = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowDay")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowWeekDay.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowWeekDay = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowWeekDay")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowWeekendDay.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowWeekendDay = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowWeekendDay")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowSun.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowSun = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowSun")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowMon.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowMon = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowMon")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowTue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowTue = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowTue")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowWed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowWed = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowWed")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowThu.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowThu = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowThu")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowFri.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowFri = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowFri")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowSat.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceDayOfWeekEnum.rdowSat = B1ClassMetadata.EnumTypes.recurrenceDayOfWeekEnum.member(name: "rdowSat")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpNone = B1ClassMetadata.EnumTypes.recurrencePatternEnum.member(name: "rpNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpDaily.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpDaily = B1ClassMetadata.EnumTypes.recurrencePatternEnum.member(name: "rpDaily")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpWeekly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpWeekly = B1ClassMetadata.EnumTypes.recurrencePatternEnum.member(name: "rpWeekly")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpMonthly.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpMonthly = B1ClassMetadata.EnumTypes.recurrencePatternEnum.member(name: "rpMonthly")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpAnnually.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrencePatternEnum.rpAnnually = B1ClassMetadata.EnumTypes.recurrencePatternEnum.member(name: "rpAnnually")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsFirst.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsFirst = B1ClassMetadata.EnumTypes.recurrenceSequenceEnum.member(name: "rsFirst")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsSecond.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsSecond = B1ClassMetadata.EnumTypes.recurrenceSequenceEnum.member(name: "rsSecond")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsThird.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsThird = B1ClassMetadata.EnumTypes.recurrenceSequenceEnum.member(name: "rsThird")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsFourth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsFourth = B1ClassMetadata.EnumTypes.recurrenceSequenceEnum.member(name: "rsFourth")
        }
        if !B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsLast.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRecurrenceSequenceEnum.rsLast = B1ClassMetadata.EnumTypes.recurrenceSequenceEnum.member(name: "rsLast")
        }
        if !B1ClassMetadata.EnumValues.B1PreRepeatOptionEnum.roByDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRepeatOptionEnum.roByDate = B1ClassMetadata.EnumTypes.repeatOptionEnum.member(name: "roByDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreRepeatOptionEnum.roByWeekDay.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRepeatOptionEnum.roByWeekDay = B1ClassMetadata.EnumTypes.repeatOptionEnum.member(name: "roByWeekDay")
        }
        if !B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cA.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cA = B1ClassMetadata.EnumTypes.report349CodeListEnum.member(name: "r349cA")
        }
        if !B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cE.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cE = B1ClassMetadata.EnumTypes.report349CodeListEnum.member(name: "r349cE")
        }
        if !B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cEmpty.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cEmpty = B1ClassMetadata.EnumTypes.report349CodeListEnum.member(name: "r349cEmpty")
        }
        if !B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cH.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cH = B1ClassMetadata.EnumTypes.report349CodeListEnum.member(name: "r349cH")
        }
        if !B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cI.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cI = B1ClassMetadata.EnumTypes.report349CodeListEnum.member(name: "r349cI")
        }
        if !B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cM.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cM = B1ClassMetadata.EnumTypes.report349CodeListEnum.member(name: "r349cM")
        }
        if !B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cS.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cS = B1ClassMetadata.EnumTypes.report349CodeListEnum.member(name: "r349cS")
        }
        if !B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cT.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReport349CodeListEnum.r349cT = B1ClassMetadata.EnumTypes.report349CodeListEnum.member(name: "r349cT")
        }
        if !B1ClassMetadata.EnumValues.B1PreReportLayoutCategoryEnum.rlcPLD.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReportLayoutCategoryEnum.rlcPLD = B1ClassMetadata.EnumTypes.reportLayoutCategoryEnum.member(name: "rlcPLD")
        }
        if !B1ClassMetadata.EnumValues.B1PreReportLayoutCategoryEnum.rlcCrystal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReportLayoutCategoryEnum.rlcCrystal = B1ClassMetadata.EnumTypes.reportLayoutCategoryEnum.member(name: "rlcCrystal")
        }
        if !B1ClassMetadata.EnumValues.B1PreReportLayoutCategoryEnum.rlcLegalList.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReportLayoutCategoryEnum.rlcLegalList = B1ClassMetadata.EnumTypes.reportLayoutCategoryEnum.member(name: "rlcLegalList")
        }
        if !B1ClassMetadata.EnumValues.B1PreReportLayoutCategoryEnum.rlcUserDefinedType.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReportLayoutCategoryEnum.rlcUserDefinedType = B1ClassMetadata.EnumTypes.reportLayoutCategoryEnum.member(name: "rlcUserDefinedType")
        }
        if !B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntSpanishFiscalID.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntSpanishFiscalID = B1ClassMetadata.EnumTypes.residenceNumberTypeEnum.member(name: "rntSpanishFiscalID")
        }
        if !B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntVATRegistrationNumber.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntVATRegistrationNumber = B1ClassMetadata.EnumTypes.residenceNumberTypeEnum.member(name: "rntVATRegistrationNumber")
        }
        if !B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntPassport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntPassport = B1ClassMetadata.EnumTypes.residenceNumberTypeEnum.member(name: "rntPassport")
        }
        if !B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntFiscalIDIssuedbytheResidenceCountry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntFiscalIDIssuedbytheResidenceCountry = B1ClassMetadata.EnumTypes.residenceNumberTypeEnum.member(name: "rntFiscalIDIssuedbytheResidenceCountry")
        }
        if !B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntCertificateofFiscalResidence.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntCertificateofFiscalResidence = B1ClassMetadata.EnumTypes.residenceNumberTypeEnum.member(name: "rntCertificateofFiscalResidence")
        }
        if !B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntOtherDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResidenceNumberTypeEnum.rntOtherDocument = B1ClassMetadata.EnumTypes.residenceNumberTypeEnum.member(name: "rntOtherDocument")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceAllocationEnum.raOnStartDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceAllocationEnum.raOnStartDate = B1ClassMetadata.EnumTypes.resourceAllocationEnum.member(name: "raOnStartDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceAllocationEnum.raOnEndDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceAllocationEnum.raOnEndDate = B1ClassMetadata.EnumTypes.resourceAllocationEnum.member(name: "raOnEndDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceAllocationEnum.raStartDateForwards.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceAllocationEnum.raStartDateForwards = B1ClassMetadata.EnumTypes.resourceAllocationEnum.member(name: "raStartDateForwards")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceAllocationEnum.raEndDateBackwards.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceAllocationEnum.raEndDateBackwards = B1ClassMetadata.EnumTypes.resourceAllocationEnum.member(name: "raEndDateBackwards")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaUnknown.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaUnknown = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaUnknown")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderCreate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderCreate = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaProductionOrderCreate")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderClose.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderClose = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaProductionOrderClose")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderReschedule.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderReschedule = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaProductionOrderReschedule")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderAddLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderAddLine = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaProductionOrderAddLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderDeleteLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderDeleteLine = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaProductionOrderDeleteLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderUpdateLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaProductionOrderUpdateLine = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaProductionOrderUpdateLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaIssueForProductionCreate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaIssueForProductionCreate = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaIssueForProductionCreate")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaReceiptFromProductionCreate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityActionEnum.rcaReceiptFromProductionCreate = B1ClassMetadata.EnumTypes.resourceCapacityActionEnum.member(name: "rcaReceiptFromProductionCreate")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityBaseTypeEnum.rcbtNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityBaseTypeEnum.rcbtNone = B1ClassMetadata.EnumTypes.resourceCapacityBaseTypeEnum.member(name: "rcbtNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityBaseTypeEnum.rcbtProductionOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityBaseTypeEnum.rcbtProductionOrder = B1ClassMetadata.EnumTypes.resourceCapacityBaseTypeEnum.member(name: "rcbtProductionOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityMemoSourceEnum.rcmsUnknown.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityMemoSourceEnum.rcmsUnknown = B1ClassMetadata.EnumTypes.resourceCapacityMemoSourceEnum.member(name: "rcmsUnknown")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityMemoSourceEnum.rcmsResourceCapacityForm.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityMemoSourceEnum.rcmsResourceCapacityForm = B1ClassMetadata.EnumTypes.resourceCapacityMemoSourceEnum.member(name: "rcmsResourceCapacityForm")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityMemoSourceEnum.rcmsSetDailyInternalCapacitiesForm.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityMemoSourceEnum.rcmsSetDailyInternalCapacitiesForm = B1ClassMetadata.EnumTypes.resourceCapacityMemoSourceEnum.member(name: "rcmsSetDailyInternalCapacitiesForm")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityOwningTypeEnum.rcotNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityOwningTypeEnum.rcotNone = B1ClassMetadata.EnumTypes.resourceCapacityOwningTypeEnum.member(name: "rcotNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityOwningTypeEnum.rcotProductionOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityOwningTypeEnum.rcotProductionOrder = B1ClassMetadata.EnumTypes.resourceCapacityOwningTypeEnum.member(name: "rcotProductionOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityOwningTypeEnum.rcotIssueForProduction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityOwningTypeEnum.rcotIssueForProduction = B1ClassMetadata.EnumTypes.resourceCapacityOwningTypeEnum.member(name: "rcotIssueForProduction")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityOwningTypeEnum.rcotReceiptFromProduction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityOwningTypeEnum.rcotReceiptFromProduction = B1ClassMetadata.EnumTypes.resourceCapacityOwningTypeEnum.member(name: "rcotReceiptFromProduction")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityRevertedTypeEnum.rcrtNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityRevertedTypeEnum.rcrtNone = B1ClassMetadata.EnumTypes.resourceCapacityRevertedTypeEnum.member(name: "rcrtNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityRevertedTypeEnum.rcrtIssueForProduction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityRevertedTypeEnum.rcrtIssueForProduction = B1ClassMetadata.EnumTypes.resourceCapacityRevertedTypeEnum.member(name: "rcrtIssueForProduction")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacitySourceTypeEnum.rcstNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacitySourceTypeEnum.rcstNone = B1ClassMetadata.EnumTypes.resourceCapacitySourceTypeEnum.member(name: "rcstNone")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacitySourceTypeEnum.rcstProductionOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacitySourceTypeEnum.rcstProductionOrder = B1ClassMetadata.EnumTypes.resourceCapacitySourceTypeEnum.member(name: "rcstProductionOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacitySourceTypeEnum.rcstIssueForProduction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacitySourceTypeEnum.rcstIssueForProduction = B1ClassMetadata.EnumTypes.resourceCapacitySourceTypeEnum.member(name: "rcstIssueForProduction")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacitySourceTypeEnum.rcstReceiptFromProduction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacitySourceTypeEnum.rcstReceiptFromProduction = B1ClassMetadata.EnumTypes.resourceCapacitySourceTypeEnum.member(name: "rcstReceiptFromProduction")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityTypeEnum.rctInternal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityTypeEnum.rctInternal = B1ClassMetadata.EnumTypes.resourceCapacityTypeEnum.member(name: "rctInternal")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityTypeEnum.rctOrdered.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityTypeEnum.rctOrdered = B1ClassMetadata.EnumTypes.resourceCapacityTypeEnum.member(name: "rctOrdered")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityTypeEnum.rctCommitted.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityTypeEnum.rctCommitted = B1ClassMetadata.EnumTypes.resourceCapacityTypeEnum.member(name: "rctCommitted")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceCapacityTypeEnum.rctConsumed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceCapacityTypeEnum.rctConsumed = B1ClassMetadata.EnumTypes.resourceCapacityTypeEnum.member(name: "rctConsumed")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwFirst.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwFirst = B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum.member(name: "rdcwFirst")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwSecond.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwSecond = B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum.member(name: "rdcwSecond")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwThird.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwThird = B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum.member(name: "rdcwThird")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwFourth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwFourth = B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum.member(name: "rdcwFourth")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwFifth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwFifth = B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum.member(name: "rdcwFifth")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwSixth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwSixth = B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum.member(name: "rdcwSixth")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwSeventh.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceDailyCapacityWeekdayEnum.rdcwSeventh = B1ClassMetadata.EnumTypes.resourceDailyCapacityWeekdayEnum.member(name: "rdcwSeventh")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceIssueMethodEnum.rimBackflush.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceIssueMethodEnum.rimBackflush = B1ClassMetadata.EnumTypes.resourceIssueMethodEnum.member(name: "rimBackflush")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceIssueMethodEnum.rimManual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceIssueMethodEnum.rimManual = B1ClassMetadata.EnumTypes.resourceIssueMethodEnum.member(name: "rimManual")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceTypeEnum.rtMachine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceTypeEnum.rtMachine = B1ClassMetadata.EnumTypes.resourceTypeEnum.member(name: "rtMachine")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceTypeEnum.rtLabor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceTypeEnum.rtLabor = B1ClassMetadata.EnumTypes.resourceTypeEnum.member(name: "rtLabor")
        }
        if !B1ClassMetadata.EnumValues.B1PreResourceTypeEnum.rtOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreResourceTypeEnum.rtOther = B1ClassMetadata.EnumTypes.resourceTypeEnum.member(name: "rtOther")
        }
        if !B1ClassMetadata.EnumValues.B1PreRetirementMethodEnum.rmGross.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRetirementMethodEnum.rmGross = B1ClassMetadata.EnumTypes.retirementMethodEnum.member(name: "rmGross")
        }
        if !B1ClassMetadata.EnumValues.B1PreRetirementMethodEnum.rmNet.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRetirementMethodEnum.rmNet = B1ClassMetadata.EnumTypes.retirementMethodEnum.member(name: "rmNet")
        }
        if !B1ClassMetadata.EnumValues.B1PreRetirementPeriodControlEnum.rpcProRataTemporis.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRetirementPeriodControlEnum.rpcProRataTemporis = B1ClassMetadata.EnumTypes.retirementPeriodControlEnum.member(name: "rpcProRataTemporis")
        }
        if !B1ClassMetadata.EnumValues.B1PreRetirementPeriodControlEnum.rpcHalfYearConvention.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRetirementPeriodControlEnum.rpcHalfYearConvention = B1ClassMetadata.EnumTypes.retirementPeriodControlEnum.member(name: "rpcHalfYearConvention")
        }
        if !B1ClassMetadata.EnumValues.B1PreRetirementPeriodControlEnum.rpcOnlyAfterEndOfUsefulLife.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRetirementPeriodControlEnum.rpcOnlyAfterEndOfUsefulLife = B1ClassMetadata.EnumTypes.retirementPeriodControlEnum.member(name: "rpcOnlyAfterEndOfUsefulLife")
        }
        if !B1ClassMetadata.EnumValues.B1PreRetirementProRataTypeEnum.rprtExactlyDailyBase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRetirementProRataTypeEnum.rprtExactlyDailyBase = B1ClassMetadata.EnumTypes.retirementProRataTypeEnum.member(name: "rprtExactlyDailyBase")
        }
        if !B1ClassMetadata.EnumValues.B1PreRetirementProRataTypeEnum.rprtLastDayOfPriorPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRetirementProRataTypeEnum.rprtLastDayOfPriorPeriod = B1ClassMetadata.EnumTypes.retirementProRataTypeEnum.member(name: "rprtLastDayOfPriorPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreRetirementProRataTypeEnum.rprtLastDayOfCurrentPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRetirementProRataTypeEnum.rprtLastDayOfCurrentPeriod = B1ClassMetadata.EnumTypes.retirementProRataTypeEnum.member(name: "rprtLastDayOfCurrentPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreReturnTypeEnum.rt26Q.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReturnTypeEnum.rt26Q = B1ClassMetadata.EnumTypes.returnTypeEnum.member(name: "rt26Q")
        }
        if !B1ClassMetadata.EnumValues.B1PreReturnTypeEnum.rt27Q.isRemoved {
            B1ClassMetadata.EnumValues.B1PreReturnTypeEnum.rt27Q = B1ClassMetadata.EnumTypes.returnTypeEnum.member(name: "rt27Q")
        }
        if !B1ClassMetadata.EnumValues.B1PreRiskLevelTypeEnum.rltLow.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRiskLevelTypeEnum.rltLow = B1ClassMetadata.EnumTypes.riskLevelTypeEnum.member(name: "rlt_Low")
        }
        if !B1ClassMetadata.EnumValues.B1PreRiskLevelTypeEnum.rltMedium.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRiskLevelTypeEnum.rltMedium = B1ClassMetadata.EnumTypes.riskLevelTypeEnum.member(name: "rlt_Medium")
        }
        if !B1ClassMetadata.EnumValues.B1PreRiskLevelTypeEnum.rltHigh.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRiskLevelTypeEnum.rltHigh = B1ClassMetadata.EnumTypes.riskLevelTypeEnum.member(name: "rlt_High")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcSum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcSum = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcSum")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcPrice = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcPrice")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcRate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcRate = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcRate")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcQuantity.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcQuantity = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcQuantity")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcMeasure.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcMeasure = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcMeasure")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcPercent.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcPercent = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcPercent")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcTax = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcTaxPerGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcTaxPerGroup = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcTaxPerGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcBudgetSum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcBudgetSum = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcBudgetSum")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcPriceListSum.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcPriceListSum = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcPriceListSum")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcRealAmountInPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcRealAmountInPayment = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcRealAmountInPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcStockSumRoundUp.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcStockSumRoundUp = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcStockSumRoundUp")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcDocHeaderTotal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcDocHeaderTotal = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcDocHeaderTotal")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcVatReportAmount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcVatReportAmount = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcVatReportAmount")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcLineGrossTotal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcLineGrossTotal = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcLineGrossTotal")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcExpenseTotal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcExpenseTotal = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcExpenseTotal")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcWTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcWTax = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcWTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcBASCode.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcBASCode = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcBASCode")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcTaxForPrice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingContextEnum.rcTaxForPrice = B1ClassMetadata.EnumTypes.roundingContextEnum.member(name: "rcTaxForPrice")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsNoRounding.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsNoRounding = B1ClassMetadata.EnumTypes.roundingSysEnum.member(name: "rsNoRounding")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsRoundToFiveHundredth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsRoundToFiveHundredth = B1ClassMetadata.EnumTypes.roundingSysEnum.member(name: "rsRoundToFiveHundredth")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsRoundToOne.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsRoundToOne = B1ClassMetadata.EnumTypes.roundingSysEnum.member(name: "rsRoundToOne")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsRoundToTen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsRoundToTen = B1ClassMetadata.EnumTypes.roundingSysEnum.member(name: "rsRoundToTen")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsRoundToTenHundredth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingSysEnum.rsRoundToTenHundredth = B1ClassMetadata.EnumTypes.roundingSysEnum.member(name: "rsRoundToTenHundredth")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingTypeEnum.rtTruncatedAU.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingTypeEnum.rtTruncatedAU = B1ClassMetadata.EnumTypes.roundingTypeEnum.member(name: "rt_TruncatedAU")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingTypeEnum.rtCommercialValues.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingTypeEnum.rtCommercialValues = B1ClassMetadata.EnumTypes.roundingTypeEnum.member(name: "rt_CommercialValues")
        }
        if !B1ClassMetadata.EnumValues.B1PreRoundingTypeEnum.rtNoRounding.isRemoved {
            B1ClassMetadata.EnumValues.B1PreRoundingTypeEnum.rtNoRounding = B1ClassMetadata.EnumTypes.roundingTypeEnum.member(name: "rt_NoRounding")
        }
        if !B1ClassMetadata.EnumValues.B1PreSEPASequenceTypeEnum.sstOOFF.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSEPASequenceTypeEnum.sstOOFF = B1ClassMetadata.EnumTypes.sepaSequenceTypeEnum.member(name: "sstOOFF")
        }
        if !B1ClassMetadata.EnumValues.B1PreSEPASequenceTypeEnum.sstFRST.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSEPASequenceTypeEnum.sstFRST = B1ClassMetadata.EnumTypes.sepaSequenceTypeEnum.member(name: "sstFRST")
        }
        if !B1ClassMetadata.EnumValues.B1PreSEPASequenceTypeEnum.sstRCUR.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSEPASequenceTypeEnum.sstRCUR = B1ClassMetadata.EnumTypes.sepaSequenceTypeEnum.member(name: "sstRCUR")
        }
        if !B1ClassMetadata.EnumValues.B1PreSEPASequenceTypeEnum.sstFNAL.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSEPASequenceTypeEnum.sstFNAL = B1ClassMetadata.EnumTypes.sepaSequenceTypeEnum.member(name: "sstFNAL")
        }
        if !B1ClassMetadata.EnumValues.B1PreSOIExcisableTypeEnum.seExcisable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSOIExcisableTypeEnum.seExcisable = B1ClassMetadata.EnumTypes.soiExcisableTypeEnum.member(name: "se_Excisable")
        }
        if !B1ClassMetadata.EnumValues.B1PreSOIExcisableTypeEnum.seExemption.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSOIExcisableTypeEnum.seExemption = B1ClassMetadata.EnumTypes.soiExcisableTypeEnum.member(name: "se_Exemption")
        }
        if !B1ClassMetadata.EnumValues.B1PreSOIExcisableTypeEnum.sePaidToOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSOIExcisableTypeEnum.sePaidToOther = B1ClassMetadata.EnumTypes.soiExcisableTypeEnum.member(name: "se_PaidToOther")
        }
        if !B1ClassMetadata.EnumValues.B1PreSOIExcisableTypeEnum.seNotExcisable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSOIExcisableTypeEnum.seNotExcisable = B1ClassMetadata.EnumTypes.soiExcisableTypeEnum.member(name: "se_NotExcisable")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedContasDeAtivo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedContasDeAtivo = B1ClassMetadata.EnumTypes.spedContabilAccountPurposeCode.member(name: "spedContasDeAtivo")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedContasDePassivo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedContasDePassivo = B1ClassMetadata.EnumTypes.spedContabilAccountPurposeCode.member(name: "spedContasDePassivo")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedPatrimonioLiquido.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedPatrimonioLiquido = B1ClassMetadata.EnumTypes.spedContabilAccountPurposeCode.member(name: "spedPatrimonioLiquido")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedContasDeResultado.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedContasDeResultado = B1ClassMetadata.EnumTypes.spedContabilAccountPurposeCode.member(name: "spedContasDeResultado")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedContasDeCompensacao.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedContasDeCompensacao = B1ClassMetadata.EnumTypes.spedContabilAccountPurposeCode.member(name: "spedContasDeCompensacao")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedOutras.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilAccountPurposeCode.spedOutras = B1ClassMetadata.EnumTypes.spedContabilAccountPurposeCode.member(name: "spedOutras")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedNA.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedNA = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedNA")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedDiretor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedDiretor = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedDiretor")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedConselheiroDeAdministracao.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedConselheiroDeAdministracao = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedConselheiroDeAdministracao")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministrador.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministrador = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedAdministrador")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorDoGrupo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorDoGrupo = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedAdministradorDoGrupo")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorDeSociedadeFiliada.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorDeSociedadeFiliada = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedAdministradorDeSociedadeFiliada")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorJudicialPessoaFisica.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorJudicialPessoaFisica = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedAdministradorJudicialPessoaFisica")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorJudicialPessoaJuridicaProfissionalResponsavel.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorJudicialPessoaJuridicaProfissionalResponsavel = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedAdministradorJudicialPessoaJuridicaProfissionalResponsavel")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorJudicialGestor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedAdministradorJudicialGestor = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedAdministradorJudicialGestor")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedGestorJudicial.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedGestorJudicial = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedGestorJudicial")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedProcurador.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedProcurador = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedProcurador")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedInventariante.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedInventariante = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedInventariante")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedLiquidante.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedLiquidante = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedLiquidante")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedInterventor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedInterventor = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedInterventor")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedEmpresario.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedEmpresario = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedEmpresario")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedContador.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedContador = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedContador")
        }
        if !B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedOutros.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSPEDContabilQualificationCodeEnum.spedOutros = B1ClassMetadata.EnumTypes.spedContabilQualificationCodeEnum.member(name: "spedOutros")
        }
        if !B1ClassMetadata.EnumValues.B1PreServiceTypeEnum.srvcSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServiceTypeEnum.srvcSales = B1ClassMetadata.EnumTypes.serviceTypeEnum.member(name: "srvcSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreServiceTypeEnum.srvcPurchasing.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServiceTypeEnum.srvcPurchasing = B1ClassMetadata.EnumTypes.serviceTypeEnum.member(name: "srvcPurchasing")
        }
        if !B1ClassMetadata.EnumValues.B1PreServices.messagesService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServices.messagesService = B1ClassMetadata.EnumTypes.services.member(name: "MessagesService")
        }
        if !B1ClassMetadata.EnumValues.B1PreServices.companyService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServices.companyService = B1ClassMetadata.EnumTypes.services.member(name: "CompanyService")
        }
        if !B1ClassMetadata.EnumValues.B1PreServices.seriesService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServices.seriesService = B1ClassMetadata.EnumTypes.services.member(name: "SeriesService")
        }
        if !B1ClassMetadata.EnumValues.B1PreServices.reportLayoutsService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServices.reportLayoutsService = B1ClassMetadata.EnumTypes.services.member(name: "ReportLayoutsService")
        }
        if !B1ClassMetadata.EnumValues.B1PreServices.formPreferencesService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServices.formPreferencesService = B1ClassMetadata.EnumTypes.services.member(name: "FormPreferencesService")
        }
        if !B1ClassMetadata.EnumValues.B1PreServices.accountsService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServices.accountsService = B1ClassMetadata.EnumTypes.services.member(name: "AccountsService")
        }
        if !B1ClassMetadata.EnumValues.B1PreServices.businessPartnersService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreServices.businessPartnersService = B1ClassMetadata.EnumTypes.services.member(name: "BusinessPartnersService")
        }
        if !B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgServicesAndAsset.isRemoved {
            B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgServicesAndAsset = B1ClassMetadata.EnumTypes.shaamGroupEnum.member(name: "sgServicesAndAsset")
        }
        if !B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgAgriculturalProducts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgAgriculturalProducts = B1ClassMetadata.EnumTypes.shaamGroupEnum.member(name: "sgAgriculturalProducts")
        }
        if !B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgInsuranceCommissions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgInsuranceCommissions = B1ClassMetadata.EnumTypes.shaamGroupEnum.member(name: "sgInsuranceCommissions")
        }
        if !B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgWHTaxInstructions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgWHTaxInstructions = B1ClassMetadata.EnumTypes.shaamGroupEnum.member(name: "sgWHTaxInstructions")
        }
        if !B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgInterestExchangeRateDiffs.isRemoved {
            B1ClassMetadata.EnumValues.B1PreShaamGroupEnum.sgInterestExchangeRateDiffs = B1ClassMetadata.EnumTypes.shaamGroupEnum.member(name: "sgInterestExchangeRateDiffs")
        }
        if !B1ClassMetadata.EnumValues.B1PreSortOrderEnum.soAscending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSortOrderEnum.soAscending = B1ClassMetadata.EnumTypes.sortOrderEnum.member(name: "soAscending")
        }
        if !B1ClassMetadata.EnumValues.B1PreSortOrderEnum.soDescending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSortOrderEnum.soDescending = B1ClassMetadata.EnumTypes.sortOrderEnum.member(name: "soDescending")
        }
        if !B1ClassMetadata.EnumValues.B1PreSourceCurrencyEnum.scPrimaryCurrency.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSourceCurrencyEnum.scPrimaryCurrency = B1ClassMetadata.EnumTypes.sourceCurrencyEnum.member(name: "sc_PrimaryCurrency")
        }
        if !B1ClassMetadata.EnumValues.B1PreSourceCurrencyEnum.scAdditionalCurrency1.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSourceCurrencyEnum.scAdditionalCurrency1 = B1ClassMetadata.EnumTypes.sourceCurrencyEnum.member(name: "sc_AdditionalCurrency1")
        }
        if !B1ClassMetadata.EnumValues.B1PreSourceCurrencyEnum.scAdditionalCurrency2.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSourceCurrencyEnum.scAdditionalCurrency2 = B1ClassMetadata.EnumTypes.sourceCurrencyEnum.member(name: "sc_AdditionalCurrency2")
        }
        if !B1ClassMetadata.EnumValues.B1PreSpecialDepreciationCalculationMethodEnum.spcmAdditional.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSpecialDepreciationCalculationMethodEnum.spcmAdditional = B1ClassMetadata.EnumTypes.specialDepreciationCalculationMethodEnum.member(name: "spcmAdditional")
        }
        if !B1ClassMetadata.EnumValues.B1PreSpecialDepreciationCalculationMethodEnum.spcmAlternative.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSpecialDepreciationCalculationMethodEnum.spcmAlternative = B1ClassMetadata.EnumTypes.specialDepreciationCalculationMethodEnum.member(name: "spcmAlternative")
        }
        if !B1ClassMetadata.EnumValues.B1PreSpecialDepreciationMaximumFlagEnum.spmfPercentage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSpecialDepreciationMaximumFlagEnum.spmfPercentage = B1ClassMetadata.EnumTypes.specialDepreciationMaximumFlagEnum.member(name: "spmfPercentage")
        }
        if !B1ClassMetadata.EnumValues.B1PreSpecialDepreciationMaximumFlagEnum.spmfAmount.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSpecialDepreciationMaximumFlagEnum.spmfAmount = B1ClassMetadata.EnumTypes.specialDepreciationMaximumFlagEnum.member(name: "spmfAmount")
        }
        if !B1ClassMetadata.EnumValues.B1PreSpecialProductTypeEnum.sptMT.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSpecialProductTypeEnum.sptMT = B1ClassMetadata.EnumTypes.specialProductTypeEnum.member(name: "sptMT")
        }
        if !B1ClassMetadata.EnumValues.B1PreSpecialProductTypeEnum.sptIO.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSpecialProductTypeEnum.sptIO = B1ClassMetadata.EnumTypes.specialProductTypeEnum.member(name: "sptIO")
        }
        if !B1ClassMetadata.EnumValues.B1PreStageDepTypeEnum.sdtProject.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStageDepTypeEnum.sdtProject = B1ClassMetadata.EnumTypes.stageDepTypeEnum.member(name: "sdt_Project")
        }
        if !B1ClassMetadata.EnumValues.B1PreStageDepTypeEnum.sdtSubproject.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStageDepTypeEnum.sdtSubproject = B1ClassMetadata.EnumTypes.stageDepTypeEnum.member(name: "sdt_Subproject")
        }
        if !B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasWithout.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasWithout = B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum.member(name: "sasWithout")
        }
        if !B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasPending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasPending = B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum.member(name: "sasPending")
        }
        if !B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasApproved = B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum.member(name: "sasApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasRejected.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasRejected = B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum.member(name: "sasRejected")
        }
        if !B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasGenerated.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasGenerated = B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum.member(name: "sasGenerated")
        }
        if !B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasGeneratedbyAuthorizer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasGeneratedbyAuthorizer = B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum.member(name: "sasGeneratedbyAuthorizer")
        }
        if !B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasCancelled.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStockTransferAuthorizationStatusEnum.sasCancelled = B1ClassMetadata.EnumTypes.stockTransferAuthorizationStatusEnum.member(name: "sasCancelled")
        }
        if !B1ClassMetadata.EnumValues.B1PreStraightLineCalculationMethodEnum.slcmAuquisitionValueDividedByTotalUsefulLife.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStraightLineCalculationMethodEnum.slcmAuquisitionValueDividedByTotalUsefulLife = B1ClassMetadata.EnumTypes.straightLineCalculationMethodEnum.member(name: "slcmAuquisitionValueDividedByTotalUsefulLife")
        }
        if !B1ClassMetadata.EnumValues.B1PreStraightLineCalculationMethodEnum.slcmPercentageOfAcquisitionValue.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStraightLineCalculationMethodEnum.slcmPercentageOfAcquisitionValue = B1ClassMetadata.EnumTypes.straightLineCalculationMethodEnum.member(name: "slcmPercentageOfAcquisitionValue")
        }
        if !B1ClassMetadata.EnumValues.B1PreStraightLineCalculationMethodEnum.slcmNetBookValueDividedByRemainingLife.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStraightLineCalculationMethodEnum.slcmNetBookValueDividedByRemainingLife = B1ClassMetadata.EnumTypes.straightLineCalculationMethodEnum.member(name: "slcmNetBookValueDividedByRemainingLife")
        }
        if !B1ClassMetadata.EnumValues.B1PreStraightLinePeriodControlDepreciationPeriodsEnum.slpcdpStandard.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStraightLinePeriodControlDepreciationPeriodsEnum.slpcdpStandard = B1ClassMetadata.EnumTypes.straightLinePeriodControlDepreciationPeriodsEnum.member(name: "slpcdpStandard")
        }
        if !B1ClassMetadata.EnumValues.B1PreStraightLinePeriodControlDepreciationPeriodsEnum.slpcdpIndividual.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStraightLinePeriodControlDepreciationPeriodsEnum.slpcdpIndividual = B1ClassMetadata.EnumTypes.straightLinePeriodControlDepreciationPeriodsEnum.member(name: "slpcdpIndividual")
        }
        if !B1ClassMetadata.EnumValues.B1PreStraightLinePeriodControlDepreciationPeriodsEnum.slpcdpIndividualUsage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreStraightLinePeriodControlDepreciationPeriodsEnum.slpcdpIndividualUsage = B1ClassMetadata.EnumTypes.straightLinePeriodControlDepreciationPeriodsEnum.member(name: "slpcdpIndividualUsage")
        }
        if !B1ClassMetadata.EnumValues.B1PreSubprojectStatusTypeEnum.sstOpen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSubprojectStatusTypeEnum.sstOpen = B1ClassMetadata.EnumTypes.subprojectStatusTypeEnum.member(name: "sst_Open")
        }
        if !B1ClassMetadata.EnumValues.B1PreSubprojectStatusTypeEnum.sstClosed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSubprojectStatusTypeEnum.sstClosed = B1ClassMetadata.EnumTypes.subprojectStatusTypeEnum.member(name: "sst_Closed")
        }
        if !B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionPeriodControlEnum.sapcProRataTemporis.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionPeriodControlEnum.sapcProRataTemporis = B1ClassMetadata.EnumTypes.subsequentAcquisitionPeriodControlEnum.member(name: "sapcProRataTemporis")
        }
        if !B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionPeriodControlEnum.sapcHalfYearConvention.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionPeriodControlEnum.sapcHalfYearConvention = B1ClassMetadata.EnumTypes.subsequentAcquisitionPeriodControlEnum.member(name: "sapcHalfYearConvention")
        }
        if !B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionPeriodControlEnum.sapcFullYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionPeriodControlEnum.sapcFullYear = B1ClassMetadata.EnumTypes.subsequentAcquisitionPeriodControlEnum.member(name: "sapcFullYear")
        }
        if !B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionProRataTypeEnum.saprtExactlyDailyBase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionProRataTypeEnum.saprtExactlyDailyBase = B1ClassMetadata.EnumTypes.subsequentAcquisitionProRataTypeEnum.member(name: "saprtExactlyDailyBase")
        }
        if !B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionProRataTypeEnum.saprtFirstDayOfCurrentPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionProRataTypeEnum.saprtFirstDayOfCurrentPeriod = B1ClassMetadata.EnumTypes.subsequentAcquisitionProRataTypeEnum.member(name: "saprtFirstDayOfCurrentPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionProRataTypeEnum.saprtFirstDayOfNextPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreSubsequentAcquisitionProRataTypeEnum.saprtFirstDayOfNextPeriod = B1ClassMetadata.EnumTypes.subsequentAcquisitionProRataTypeEnum.member(name: "saprtFirstDayOfNextPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreTargetGroupTypeEnum.tgtCustomer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTargetGroupTypeEnum.tgtCustomer = B1ClassMetadata.EnumTypes.targetGroupTypeEnum.member(name: "tgtCustomer")
        }
        if !B1ClassMetadata.EnumValues.B1PreTargetGroupTypeEnum.tgtVendor.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTargetGroupTypeEnum.tgtVendor = B1ClassMetadata.EnumTypes.targetGroupTypeEnum.member(name: "tgtVendor")
        }
        if !B1ClassMetadata.EnumValues.B1PreTargetGroupsDetailStatusEnum.tdsActive.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTargetGroupsDetailStatusEnum.tdsActive = B1ClassMetadata.EnumTypes.targetGroupsDetailStatusEnum.member(name: "tdsActive")
        }
        if !B1ClassMetadata.EnumValues.B1PreTargetGroupsDetailStatusEnum.tdsInactive.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTargetGroupsDetailStatusEnum.tdsInactive = B1ClassMetadata.EnumTypes.targetGroupsDetailStatusEnum.member(name: "tdsInactive")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCalcSysEnum.preconfiguredFormulaWithJurisdictionSupport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCalcSysEnum.preconfiguredFormulaWithJurisdictionSupport = B1ClassMetadata.EnumTypes.taxCalcSysEnum.member(name: "PreconfiguredFormulaWithJurisdictionSupport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCalcSysEnum.userDefinedFormula.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCalcSysEnum.userDefinedFormula = B1ClassMetadata.EnumTypes.taxCalcSysEnum.member(name: "UserDefinedFormula")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCalcSysEnum.preconfiguredFormula.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCalcSysEnum.preconfiguredFormula = B1ClassMetadata.EnumTypes.taxCalcSysEnum.member(name: "PreconfiguredFormula")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDByUsageTypeEnum.tcdbutDefaultSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDByUsageTypeEnum.tcdbutDefaultSales = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDByUsageTypeEnum.member(name: "tcdbutDefaultSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDByUsageTypeEnum.tcdbutDefaultPurchase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDByUsageTypeEnum.tcdbutDefaultPurchase = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDByUsageTypeEnum.member(name: "tcdbutDefaultPurchase")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDByUsageTypeEnum.tcdbutLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDByUsageTypeEnum.tcdbutLine = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDByUsageTypeEnum.member(name: "tcdbutLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDDefaultWTTypeEnum.tcddwttDefaultSales.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDDefaultWTTypeEnum.tcddwttDefaultSales = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDDefaultWTTypeEnum.member(name: "tcddwttDefaultSales")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDDefaultWTTypeEnum.tcddwttDefaultPurchase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDDefaultWTTypeEnum.tcddwttDefaultPurchase = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDDefaultWTTypeEnum.member(name: "tcddwttDefaultPurchase")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDDefaultWTTypeEnum.tcddwttLine.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDDefaultWTTypeEnum.tcddwttLine = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDDefaultWTTypeEnum.member(name: "tcddwttLine")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDTypeEnum.tcdtMaterialItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDTypeEnum.tcdtMaterialItem = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDTypeEnum.member(name: "tcdtMaterialItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDTypeEnum.tcdtServiceItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDTypeEnum.tcdtServiceItem = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDTypeEnum.member(name: "tcdtServiceItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDTypeEnum.tcdtServiceDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDTypeEnum.tcdtServiceDocument = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDTypeEnum.member(name: "tcdtServiceDocument")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDTypeEnum.tcdtWithholdingTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxCodeDeterminationTCDTypeEnum.tcdtWithholdingTax = B1ClassMetadata.EnumTypes.taxCodeDeterminationTCDTypeEnum.member(name: "tcdtWithholdingTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportLineTypeEnum.lineOfBusinessPlace.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportLineTypeEnum.lineOfBusinessPlace = B1ClassMetadata.EnumTypes.taxInvoiceReportLineTypeEnum.member(name: "LineOfBusinessPlace")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportLineTypeEnum.lineOfBusinessPartner.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportLineTypeEnum.lineOfBusinessPartner = B1ClassMetadata.EnumTypes.taxInvoiceReportLineTypeEnum.member(name: "LineOfBusinessPartner")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportLineTypeEnum.lineOfDocument.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportLineTypeEnum.lineOfDocument = B1ClassMetadata.EnumTypes.taxInvoiceReportLineTypeEnum.member(name: "LineOfDocument")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportLineTypeEnum.lineOfItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportLineTypeEnum.lineOfItem = B1ClassMetadata.EnumTypes.taxInvoiceReportLineTypeEnum.member(name: "LineOfItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportNTSApprovedEnum.notApproved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportNTSApprovedEnum.notApproved = B1ClassMetadata.EnumTypes.taxInvoiceReportNTSApprovedEnum.member(name: "NotApproved")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportNTSApprovedEnum.approved.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxInvoiceReportNTSApprovedEnum.approved = B1ClassMetadata.EnumTypes.taxInvoiceReportNTSApprovedEnum.member(name: "Approved")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxRateDeterminationEnum.trdPostingDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxRateDeterminationEnum.trdPostingDate = B1ClassMetadata.EnumTypes.taxRateDeterminationEnum.member(name: "trd_PostingDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxRateDeterminationEnum.trdDocumentDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxRateDeterminationEnum.trdDocumentDate = B1ClassMetadata.EnumTypes.taxRateDeterminationEnum.member(name: "trd_DocumentDate")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterApArDocumentType.trfadtAPDocuments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterApArDocumentType.trfadtAPDocuments = B1ClassMetadata.EnumTypes.taxReportFilterApArDocumentType.member(name: "trfadt_APDocuments")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterApArDocumentType.trfadtARDocuments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterApArDocumentType.trfadtARDocuments = B1ClassMetadata.EnumTypes.taxReportFilterApArDocumentType.member(name: "trfadt_ARDocuments")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDeclarationType.trfdtOriginal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDeclarationType.trfdtOriginal = B1ClassMetadata.EnumTypes.taxReportFilterDeclarationType.member(name: "trfdt_Original")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDeclarationType.trfdtSubstitute.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDeclarationType.trfdtSubstitute = B1ClassMetadata.EnumTypes.taxReportFilterDeclarationType.member(name: "trfdt_Substitute")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDeclarationType.trfdtComplementary.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDeclarationType.trfdtComplementary = B1ClassMetadata.EnumTypes.taxReportFilterDeclarationType.member(name: "trfdt_Complementary")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtARInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtARInvoices = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_ARInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtARCreditMemos.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtARCreditMemos = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_ARCreditMemos")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtAPInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtAPInvoices = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_APInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtAPCreditMemos.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtAPCreditMemos = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_APCreditMemos")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtIncomingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtIncomingPayments = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_IncomingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtJournalEntries.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtJournalEntries = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_JournalEntries")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtOutgoingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtOutgoingPayments = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_OutgoingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtChecksforPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtChecksforPayment = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_ChecksforPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtInventoryTransfers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtInventoryTransfers = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_InventoryTransfers")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtARDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtARDownPayment = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_ARDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtAPDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterDocumentType.trfdtAPDownPayment = B1ClassMetadata.EnumTypes.taxReportFilterDocumentType.member(name: "trfdt_APDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterPeriod.trfPQuarter.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterPeriod.trfPQuarter = B1ClassMetadata.EnumTypes.taxReportFilterPeriod.member(name: "trfP_Quarter")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterPeriod.trfPYear.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterPeriod.trfPYear = B1ClassMetadata.EnumTypes.taxReportFilterPeriod.member(name: "trfP_Year")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterPeriod.trfPMonth.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterPeriod.trfPMonth = B1ClassMetadata.EnumTypes.taxReportFilterPeriod.member(name: "trfP_Month")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterPeriod.trfPNULL.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterPeriod.trfPNULL = B1ClassMetadata.EnumTypes.taxReportFilterPeriod.member(name: "trfP_NULL")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterQuarterOrDates.trfqdInterval.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterQuarterOrDates.trfqdInterval = B1ClassMetadata.EnumTypes.taxReportFilterQuarterOrDates.member(name: "trfqd_Interval")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterQuarterOrDates.trfqdDate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterQuarterOrDates.trfqdDate = B1ClassMetadata.EnumTypes.taxReportFilterQuarterOrDates.member(name: "trfqd_Date")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterReportLayoutType.trfrltRegisterBookLayout.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterReportLayoutType.trfrltRegisterBookLayout = B1ClassMetadata.EnumTypes.taxReportFilterReportLayoutType.member(name: "trfrlt_RegisterBookLayout")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterReportLayoutType.trfrltDeclarationLayout.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterReportLayoutType.trfrltDeclarationLayout = B1ClassMetadata.EnumTypes.taxReportFilterReportLayoutType.member(name: "trfrlt_DeclarationLayout")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftTaxReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftTaxReport = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_TaxReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftWTReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftWTReport = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_WTReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftReport347.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftReport347 = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_Report347")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftReport349.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftReport349 = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_Report349")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftReconciliationReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftReconciliationReport = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_ReconciliationReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftStampTax.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftStampTax = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_StampTax")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftSalesReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftSalesReport = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_SalesReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftNone.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftNone = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_None")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftBoxReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftBoxReport = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_BoxReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftAppendixOP.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftAppendixOP = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_AppendixOP")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftAnnualSalesReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftAnnualSalesReport = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_AnnualSalesReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftVATRefundReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxReportFilterType.trftVATRefundReport = B1ClassMetadata.EnumTypes.taxReportFilterType.member(name: "trft_VATRefundReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblExcluded.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblExcluded = B1ClassMetadata.EnumTypes.taxTypeBlackListEnum.member(name: "ttblExcluded")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblExempt.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblExempt = B1ClassMetadata.EnumTypes.taxTypeBlackListEnum.member(name: "ttblExempt")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblNonSubject.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblNonSubject = B1ClassMetadata.EnumTypes.taxTypeBlackListEnum.member(name: "ttblNonSubject")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblNotTaxable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblNotTaxable = B1ClassMetadata.EnumTypes.taxTypeBlackListEnum.member(name: "ttblNotTaxable")
        }
        if !B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblTaxable.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTaxTypeBlackListEnum.ttblTaxable = B1ClassMetadata.EnumTypes.taxTypeBlackListEnum.member(name: "ttblTaxable")
        }
        if !B1ClassMetadata.EnumValues.B1PreTdsTypeEnum.wtETds.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTdsTypeEnum.wtETds = B1ClassMetadata.EnumTypes.tdsTypeEnum.member(name: "wtETds")
        }
        if !B1ClassMetadata.EnumValues.B1PreTdsTypeEnum.wtGstTds.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTdsTypeEnum.wtGstTds = B1ClassMetadata.EnumTypes.tdsTypeEnum.member(name: "wtGstTds")
        }
        if !B1ClassMetadata.EnumValues.B1PreTdsTypeEnum.wtGstTcs.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTdsTypeEnum.wtGstTcs = B1ClassMetadata.EnumTypes.tdsTypeEnum.member(name: "wtGstTcs")
        }
        if !B1ClassMetadata.EnumValues.B1PreThreatLevelEnum.tlLow.isRemoved {
            B1ClassMetadata.EnumValues.B1PreThreatLevelEnum.tlLow = B1ClassMetadata.EnumTypes.threatLevelEnum.member(name: "tlLow")
        }
        if !B1ClassMetadata.EnumValues.B1PreThreatLevelEnum.tlMedium.isRemoved {
            B1ClassMetadata.EnumValues.B1PreThreatLevelEnum.tlMedium = B1ClassMetadata.EnumTypes.threatLevelEnum.member(name: "tlMedium")
        }
        if !B1ClassMetadata.EnumValues.B1PreThreatLevelEnum.tlHigh.isRemoved {
            B1ClassMetadata.EnumValues.B1PreThreatLevelEnum.tlHigh = B1ClassMetadata.EnumTypes.threatLevelEnum.member(name: "tlHigh")
        }
        if !B1ClassMetadata.EnumValues.B1PreTimeSheetTypeEnum.tshEmployee.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTimeSheetTypeEnum.tshEmployee = B1ClassMetadata.EnumTypes.timeSheetTypeEnum.member(name: "tsh_Employee")
        }
        if !B1ClassMetadata.EnumValues.B1PreTimeSheetTypeEnum.tshUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTimeSheetTypeEnum.tshUser = B1ClassMetadata.EnumTypes.timeSheetTypeEnum.member(name: "tsh_User")
        }
        if !B1ClassMetadata.EnumValues.B1PreTimeSheetTypeEnum.tshOther.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTimeSheetTypeEnum.tshOther = B1ClassMetadata.EnumTypes.timeSheetTypeEnum.member(name: "tsh_Other")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAllTransactions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAllTransactions = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttAllTransactions")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttOpeningBalance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttOpeningBalance = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttOpeningBalance")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttClosingBalance.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttClosingBalance = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttClosingBalance")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttARInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttARInvoice = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttARInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttARCredItnote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttARCredItnote = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttARCredItnote")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttDelivery.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttDelivery = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttDelivery")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttReturn = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAPInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAPInvoice = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttAPInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAPCreditNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAPCreditNote = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttAPCreditNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttPurchaseDeliveryNote.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttPurchaseDeliveryNote = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttPurchaseDeliveryNote")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttPurchaseReturn.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttPurchaseReturn = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttPurchaseReturn")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttReceipt.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttReceipt = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttReceipt")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttDeposit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttDeposit = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttDeposit")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttJournalEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttJournalEntry = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttJournalEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttVendorPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttVendorPayment = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttVendorPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttChequesForPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttChequesForPayment = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttChequesForPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttStockList.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttStockList = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttStockList")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttGeneralReceiptToStock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttGeneralReceiptToStock = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttGeneralReceiptToStock")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttGeneralReleaseFromStock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttGeneralReleaseFromStock = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttGeneralReleaseFromStock")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttTransferBetweenWarehouses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttTransferBetweenWarehouses = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttTransferBetweenWarehouses")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttWorkInstructions.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttWorkInstructions = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttWorkInstructions")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttLandedCosts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttLandedCosts = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttLandedCosts")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttDeferredDeposit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttDeferredDeposit = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttDeferredDeposit")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttCorrectionInvoice = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttInventoryValuation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttInventoryValuation = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttInventoryValuation")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAPCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAPCorrectionInvoice = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttAPCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAPCorrectionInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttAPCorrectionInvoiceReversal = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttAPCorrectionInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttARCorrectionInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttARCorrectionInvoice = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttARCorrectionInvoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttARCorrectionInvoiceReversal.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttARCorrectionInvoiceReversal = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttARCorrectionInvoiceReversal")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttBoETransaction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttBoETransaction = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttBoETransaction")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttProductionOrder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttProductionOrder = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttProductionOrder")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttDownPayment = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttPurchaseDownPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttPurchaseDownPayment = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttPurchaseDownPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttInternalReconciliation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransTypesEnum.ttInternalReconciliation = B1ClassMetadata.EnumTypes.transTypesEnum.member(name: "ttInternalReconciliation")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransferSourcePeriodControlEnum.tspcProRataTemporis.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransferSourcePeriodControlEnum.tspcProRataTemporis = B1ClassMetadata.EnumTypes.transferSourcePeriodControlEnum.member(name: "tspcProRataTemporis")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransferSourceProRataTypeEnum.tsprtExactlyDailyBase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransferSourceProRataTypeEnum.tsprtExactlyDailyBase = B1ClassMetadata.EnumTypes.transferSourceProRataTypeEnum.member(name: "tsprtExactlyDailyBase")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransferSourceProRataTypeEnum.tsprtLastDayOfPriorPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransferSourceProRataTypeEnum.tsprtLastDayOfPriorPeriod = B1ClassMetadata.EnumTypes.transferSourceProRataTypeEnum.member(name: "tsprtLastDayOfPriorPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransferSourceProRataTypeEnum.tsprtLastDayofCurrentPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransferSourceProRataTypeEnum.tsprtLastDayofCurrentPeriod = B1ClassMetadata.EnumTypes.transferSourceProRataTypeEnum.member(name: "tsprtLastDayofCurrentPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransferTargetPeriodControlEnum.ttpcProRataTemporis.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransferTargetPeriodControlEnum.ttpcProRataTemporis = B1ClassMetadata.EnumTypes.transferTargetPeriodControlEnum.member(name: "ttpcProRataTemporis")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransferTargetProRataTypeEnum.ttprtExactlyDailyBase.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransferTargetProRataTypeEnum.ttprtExactlyDailyBase = B1ClassMetadata.EnumTypes.transferTargetProRataTypeEnum.member(name: "ttprtExactlyDailyBase")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransferTargetProRataTypeEnum.ttprtFirstDayOfCurrentPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransferTargetProRataTypeEnum.ttprtFirstDayOfCurrentPeriod = B1ClassMetadata.EnumTypes.transferTargetProRataTypeEnum.member(name: "ttprtFirstDayOfCurrentPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreTransferTargetProRataTypeEnum.ttprtFirstDayOfNextPeriod.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTransferTargetProRataTypeEnum.ttprtFirstDayOfNextPeriod = B1ClassMetadata.EnumTypes.transferTargetProRataTypeEnum.member(name: "ttprtFirstDayOfNextPeriod")
        }
        if !B1ClassMetadata.EnumValues.B1PreTranslationCategoryEnum.asCRReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTranslationCategoryEnum.asCRReport = B1ClassMetadata.EnumTypes.translationCategoryEnum.member(name: "asCRReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreTranslationCategoryEnum.asMenuItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTranslationCategoryEnum.asMenuItem = B1ClassMetadata.EnumTypes.translationCategoryEnum.member(name: "asMenuItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreTranslationCategoryEnum.asEFMItem.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTranslationCategoryEnum.asEFMItem = B1ClassMetadata.EnumTypes.translationCategoryEnum.member(name: "asEFMItem")
        }
        if !B1ClassMetadata.EnumValues.B1PreTypeOfAdvancedRulesEnum.toarGeneral.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTypeOfAdvancedRulesEnum.toarGeneral = B1ClassMetadata.EnumTypes.typeOfAdvancedRulesEnum.member(name: "toarGeneral")
        }
        if !B1ClassMetadata.EnumValues.B1PreTypeOfAdvancedRulesEnum.toarWarehouse.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTypeOfAdvancedRulesEnum.toarWarehouse = B1ClassMetadata.EnumTypes.typeOfAdvancedRulesEnum.member(name: "toarWarehouse")
        }
        if !B1ClassMetadata.EnumValues.B1PreTypeOfAdvancedRulesEnum.toarItemGroup.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTypeOfAdvancedRulesEnum.toarItemGroup = B1ClassMetadata.EnumTypes.typeOfAdvancedRulesEnum.member(name: "toarItemGroup")
        }
        if !B1ClassMetadata.EnumValues.B1PreTypeOfOperationEnum.tooProfessionalServices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTypeOfOperationEnum.tooProfessionalServices = B1ClassMetadata.EnumTypes.typeOfOperationEnum.member(name: "tooProfessionalServices")
        }
        if !B1ClassMetadata.EnumValues.B1PreTypeOfOperationEnum.tooRentingAssets.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTypeOfOperationEnum.tooRentingAssets = B1ClassMetadata.EnumTypes.typeOfOperationEnum.member(name: "tooRentingAssets")
        }
        if !B1ClassMetadata.EnumValues.B1PreTypeOfOperationEnum.tooOthers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreTypeOfOperationEnum.tooOthers = B1ClassMetadata.EnumTypes.typeOfOperationEnum.member(name: "tooOthers")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulChartOfAccounts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulChartOfAccounts = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulChartOfAccounts")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulBusinessPartners.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulBusinessPartners = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulBusinessPartners")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulBanks.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulBanks = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulBanks")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulItems.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulItems = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulItems")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulUsers.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulUsers = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulUsers")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulInvoices = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulCreditNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulCreditNotes = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulCreditNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulDeliveryNotes = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulDeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulReturns = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulReturns")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulOrders = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseInvoices.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseInvoices = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulPurchaseInvoices")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseCreditNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseCreditNotes = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulPurchaseCreditNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseDeliveryNotes.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseDeliveryNotes = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulPurchaseDeliveryNotes")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseReturns.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseReturns = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulPurchaseReturns")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulPurchaseOrders = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulPurchaseOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulQuotations.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulQuotations = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulQuotations")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulIncomingPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulIncomingPayments = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulIncomingPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulDepositsService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulDepositsService = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulDepositsService")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulJournalEntries.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulJournalEntries = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulJournalEntries")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulContacts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulContacts = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulContacts")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulVendorPayments.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulVendorPayments = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulVendorPayments")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulChecksforPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulChecksforPayment = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulChecksforPayment")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulInventoryGenEntry.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulInventoryGenEntry = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulInventoryGenEntry")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulInventoryGenExit.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulInventoryGenExit = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulInventoryGenExit")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulWarehouses.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulWarehouses = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulWarehouses")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulProductTrees.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulProductTrees = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulProductTrees")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulStockTransfer.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulStockTransfer = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulStockTransfer")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulSalesOpportunities.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulSalesOpportunities = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulSalesOpportunities")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulDrafts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulDrafts = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulDrafts")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulMaterialRevaluation.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulMaterialRevaluation = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulMaterialRevaluation")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulEmployeesInfo.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulEmployeesInfo = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulEmployeesInfo")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulCustomerEquipmentCards.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulCustomerEquipmentCards = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulCustomerEquipmentCards")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulServiceContracts.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulServiceContracts = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulServiceContracts")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulServiceCalls.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulServiceCalls = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulServiceCalls")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulProductionOrders.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulProductionOrders = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulProductionOrders")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulInventoryTransferRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulInventoryTransferRequest = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulInventoryTransferRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulBlanketAgreementsService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulBlanketAgreementsService = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulBlanketAgreementsService")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulProjectManagementService.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulProjectManagementService = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulProjectManagementService")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulReturnRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulReturnRequest = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulReturnRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulGoodsReturnRequest.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUDFLinkedSystemObjectTypesEnum.ulGoodsReturnRequest = B1ClassMetadata.EnumTypes.udfLinkedSystemObjectTypesEnum.member(name: "ulGoodsReturnRequest")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionLogin.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionLogin = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionLogin")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionLoginFail.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionLoginFail = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionLoginFail")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionLogoff.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionLogoff = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionLogoff")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionCreateUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionCreateUser = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionCreateUser")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionRemoveUser.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionRemoveUser = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionRemoveUser")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionSelectSU.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionSelectSU = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionSelectSU")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionDeselectSU.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionDeselectSU = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionDeselectSU")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionLock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionLock = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionLock")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionUnlock.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionUnlock = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionUnlock")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionChPasswd.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionChPasswd = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionChPasswd")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionUnlockFail.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserActionTypeEnum.actionUnlockFail = B1ClassMetadata.EnumTypes.userActionTypeEnum.member(name: "actionUnlockFail")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcAuthorization.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcAuthorization = B1ClassMetadata.EnumTypes.userGroupCategoryEnum.member(name: "gc_Authorization")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcFormsetting.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcFormsetting = B1ClassMetadata.EnumTypes.userGroupCategoryEnum.member(name: "gc_Formsetting")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcAlert.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcAlert = B1ClassMetadata.EnumTypes.userGroupCategoryEnum.member(name: "gc_Alert")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcUITmplate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcUITmplate = B1ClassMetadata.EnumTypes.userGroupCategoryEnum.member(name: "gc_UITmplate")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcAll.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserGroupCategoryEnum.gcAll = B1ClassMetadata.EnumTypes.userGroupCategoryEnum.member(name: "gc_All")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitForm.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitForm = B1ClassMetadata.EnumTypes.userMenuItemTypeEnum.member(name: "umitForm")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitQuery.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitQuery = B1ClassMetadata.EnumTypes.userMenuItemTypeEnum.member(name: "umitQuery")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitFolder.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitFolder = B1ClassMetadata.EnumTypes.userMenuItemTypeEnum.member(name: "umitFolder")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitReport.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitReport = B1ClassMetadata.EnumTypes.userMenuItemTypeEnum.member(name: "umitReport")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitLink.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserMenuItemTypeEnum.umitLink = B1ClassMetadata.EnumTypes.userMenuItemTypeEnum.member(name: "umitLink")
        }
    }

    private static func merge6(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1ClassMetadata.EnumValues.B1PreUserQueryTypeEnum.uqtRegular.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserQueryTypeEnum.uqtRegular = B1ClassMetadata.EnumTypes.userQueryTypeEnum.member(name: "uqtRegular")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserQueryTypeEnum.uqtWizard.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserQueryTypeEnum.uqtWizard = B1ClassMetadata.EnumTypes.userQueryTypeEnum.member(name: "uqtWizard")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserQueryTypeEnum.uqtGenerator.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserQueryTypeEnum.uqtGenerator = B1ClassMetadata.EnumTypes.userQueryTypeEnum.member(name: "uqtGenerator")
        }
        if !B1ClassMetadata.EnumValues.B1PreUserQueryTypeEnum.uqtStoredProcedure.isRemoved {
            B1ClassMetadata.EnumValues.B1PreUserQueryTypeEnum.uqtStoredProcedure = B1ClassMetadata.EnumTypes.userQueryTypeEnum.member(name: "uqtStoredProcedure")
        }
        if !B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsPending.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsPending = B1ClassMetadata.EnumTypes.vmCommunicationStatusEnum.member(name: "vmcs_Pending")
        }
        if !B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsError.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsError = B1ClassMetadata.EnumTypes.vmCommunicationStatusEnum.member(name: "vmcs_Error")
        }
        if !B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsSuccessful.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsSuccessful = B1ClassMetadata.EnumTypes.vmCommunicationStatusEnum.member(name: "vmcs_Successful")
        }
        if !B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsNew.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsNew = B1ClassMetadata.EnumTypes.vmCommunicationStatusEnum.member(name: "vmcs_New")
        }
        if !B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsRejected.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVMCommunicationStatusEnum.vmcsRejected = B1ClassMetadata.EnumTypes.vmCommunicationStatusEnum.member(name: "vmcs_Rejected")
        }
        if !B1ClassMetadata.EnumValues.B1PreVMCommunicationTypeEnum.vmctMasterData.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVMCommunicationTypeEnum.vmctMasterData = B1ClassMetadata.EnumTypes.vmCommunicationTypeEnum.member(name: "vmct_MasterData")
        }
        if !B1ClassMetadata.EnumValues.B1PreVMCommunicationTypeEnum.vmctTransaction.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVMCommunicationTypeEnum.vmctTransaction = B1ClassMetadata.EnumTypes.vmCommunicationTypeEnum.member(name: "vmct_Transaction")
        }
        if !B1ClassMetadata.EnumValues.B1PreVatGroupsTaxRegionEnum.vgtrPT.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVatGroupsTaxRegionEnum.vgtrPT = B1ClassMetadata.EnumTypes.vatGroupsTaxRegionEnum.member(name: "vgtrPT")
        }
        if !B1ClassMetadata.EnumValues.B1PreVatGroupsTaxRegionEnum.vgtrPTAC.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVatGroupsTaxRegionEnum.vgtrPTAC = B1ClassMetadata.EnumTypes.vatGroupsTaxRegionEnum.member(name: "vgtrPT_AC")
        }
        if !B1ClassMetadata.EnumValues.B1PreVatGroupsTaxRegionEnum.vgtrPTMA.isRemoved {
            B1ClassMetadata.EnumValues.B1PreVatGroupsTaxRegionEnum.vgtrPTMA = B1ClassMetadata.EnumTypes.vatGroupsTaxRegionEnum.member(name: "vgtrPT_MA")
        }
        if !B1ClassMetadata.EnumValues.B1PreViewStyleTypeEnum.vstPage.isRemoved {
            B1ClassMetadata.EnumValues.B1PreViewStyleTypeEnum.vstPage = B1ClassMetadata.EnumTypes.viewStyleTypeEnum.member(name: "vstPage")
        }
        if !B1ClassMetadata.EnumValues.B1PreViewStyleTypeEnum.vstFullScreen.isRemoved {
            B1ClassMetadata.EnumValues.B1PreViewStyleTypeEnum.vstFullScreen = B1ClassMetadata.EnumTypes.viewStyleTypeEnum.member(name: "vstFullScreen")
        }
        if !B1ClassMetadata.EnumValues.B1PreViewStyleTypeEnum.vstLandscape.isRemoved {
            B1ClassMetadata.EnumValues.B1PreViewStyleTypeEnum.vstLandscape = B1ClassMetadata.EnumTypes.viewStyleTypeEnum.member(name: "vstLandscape")
        }
        if !B1ClassMetadata.EnumValues.B1PreWTDDetailType.allowed.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWTDDetailType.allowed = B1ClassMetadata.EnumTypes.wtdDetailType.member(name: "Allowed")
        }
        if !B1ClassMetadata.EnumValues.B1PreWTDDetailType.specialRate.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWTDDetailType.specialRate = B1ClassMetadata.EnumTypes.wtdDetailType.member(name: "SpecialRate")
        }
        if !B1ClassMetadata.EnumValues.B1PreWTDDetailType.exemption.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWTDDetailType.exemption = B1ClassMetadata.EnumTypes.wtdDetailType.member(name: "Exemption")
        }
        if !B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeBaseTypeEnum.wtcbtGross.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeBaseTypeEnum.wtcbtGross = B1ClassMetadata.EnumTypes.withholdingTaxCodeBaseTypeEnum.member(name: "wtcbt_Gross")
        }
        if !B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeBaseTypeEnum.wtcbtNet.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeBaseTypeEnum.wtcbtNet = B1ClassMetadata.EnumTypes.withholdingTaxCodeBaseTypeEnum.member(name: "wtcbt_Net")
        }
        if !B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeBaseTypeEnum.wtcbtVAT.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeBaseTypeEnum.wtcbtVAT = B1ClassMetadata.EnumTypes.withholdingTaxCodeBaseTypeEnum.member(name: "wtcbt_VAT")
        }
        if !B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeBaseTypeEnum.wtcbtGrossVAT.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeBaseTypeEnum.wtcbtGrossVAT = B1ClassMetadata.EnumTypes.withholdingTaxCodeBaseTypeEnum.member(name: "wtcbt_Gross_VAT")
        }
        if !B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeCategoryEnum.wtccInvoice.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeCategoryEnum.wtccInvoice = B1ClassMetadata.EnumTypes.withholdingTaxCodeCategoryEnum.member(name: "wtcc_Invoice")
        }
        if !B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeCategoryEnum.wtccPayment.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWithholdingTaxCodeCategoryEnum.wtccPayment = B1ClassMetadata.EnumTypes.withholdingTaxCodeCategoryEnum.member(name: "wtcc_Payment")
        }
        if !B1ClassMetadata.EnumValues.B1PreWithholdingTypeEnum.wtVatWithholding.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWithholdingTypeEnum.wtVatWithholding = B1ClassMetadata.EnumTypes.withholdingTypeEnum.member(name: "wt_VatWithholding")
        }
        if !B1ClassMetadata.EnumValues.B1PreWithholdingTypeEnum.wtIncomeTaxWithholding.isRemoved {
            B1ClassMetadata.EnumValues.B1PreWithholdingTypeEnum.wtIncomeTaxWithholding = B1ClassMetadata.EnumTypes.withholdingTypeEnum.member(name: "wt_IncomeTaxWithholding")
        }
        if !B1ClassMetadata.ComplexTypes.accountCategoryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.accountCategoryParams = metadata.complexType(withName: "SAPB1.AccountCategoryParams")
        }
        if !B1ClassMetadata.ComplexTypes.accountSegmentationCategoryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.accountSegmentationCategoryParams = metadata.complexType(withName: "SAPB1.AccountSegmentationCategoryParams")
        }
        if !B1ClassMetadata.ComplexTypes.accountSegmentationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.accountSegmentationParams = metadata.complexType(withName: "SAPB1.AccountSegmentationParams")
        }
        if !B1ClassMetadata.ComplexTypes.accountSegmentationsCategory.isRemoved {
            B1ClassMetadata.ComplexTypes.accountSegmentationsCategory = metadata.complexType(withName: "SAPB1.AccountSegmentationsCategory")
        }
        if !B1ClassMetadata.ComplexTypes.accrualTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.accrualTypeParams = metadata.complexType(withName: "SAPB1.AccrualTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.activityInstanceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.activityInstanceParams = metadata.complexType(withName: "SAPB1.ActivityInstanceParams")
        }
        if !B1ClassMetadata.ComplexTypes.activityInstancesListParams.isRemoved {
            B1ClassMetadata.ComplexTypes.activityInstancesListParams = metadata.complexType(withName: "SAPB1.ActivityInstancesListParams")
        }
        if !B1ClassMetadata.ComplexTypes.activityLocationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.activityLocationParams = metadata.complexType(withName: "SAPB1.ActivityLocationParams")
        }
        if !B1ClassMetadata.ComplexTypes.activityParams.isRemoved {
            B1ClassMetadata.ComplexTypes.activityParams = metadata.complexType(withName: "SAPB1.ActivityParams")
        }
        if !B1ClassMetadata.ComplexTypes.activityRecipient.isRemoved {
            B1ClassMetadata.ComplexTypes.activityRecipient = metadata.complexType(withName: "SAPB1.ActivityRecipient")
        }
        if !B1ClassMetadata.ComplexTypes.activityRecipientListParams.isRemoved {
            B1ClassMetadata.ComplexTypes.activityRecipientListParams = metadata.complexType(withName: "SAPB1.ActivityRecipientListParams")
        }
        if !B1ClassMetadata.ComplexTypes.activityStatusParams.isRemoved {
            B1ClassMetadata.ComplexTypes.activityStatusParams = metadata.complexType(withName: "SAPB1.ActivityStatusParams")
        }
        if !B1ClassMetadata.ComplexTypes.activityTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.activityTypeParams = metadata.complexType(withName: "SAPB1.ActivityTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.additionalExpensesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.additionalExpensesParams = metadata.complexType(withName: "SAPB1.AdditionalExpensesParams")
        }
        if !B1ClassMetadata.ComplexTypes.addressExtension.isRemoved {
            B1ClassMetadata.ComplexTypes.addressExtension = metadata.complexType(withName: "SAPB1.AddressExtension")
        }
        if !B1ClassMetadata.ComplexTypes.adminInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.adminInfo = metadata.complexType(withName: "SAPB1.AdminInfo")
        }
        if !B1ClassMetadata.ComplexTypes.advancedGLAccountParams.isRemoved {
            B1ClassMetadata.ComplexTypes.advancedGLAccountParams = metadata.complexType(withName: "SAPB1.AdvancedGLAccountParams")
        }
        if !B1ClassMetadata.ComplexTypes.advancedGLAccountReturnParams.isRemoved {
            B1ClassMetadata.ComplexTypes.advancedGLAccountReturnParams = metadata.complexType(withName: "SAPB1.AdvancedGLAccountReturnParams")
        }
        if !B1ClassMetadata.ComplexTypes.alertManagementDocument.isRemoved {
            B1ClassMetadata.ComplexTypes.alertManagementDocument = metadata.complexType(withName: "SAPB1.AlertManagementDocument")
        }
        if !B1ClassMetadata.ComplexTypes.alertManagementParams.isRemoved {
            B1ClassMetadata.ComplexTypes.alertManagementParams = metadata.complexType(withName: "SAPB1.AlertManagementParams")
        }
        if !B1ClassMetadata.ComplexTypes.alertManagementRecipient.isRemoved {
            B1ClassMetadata.ComplexTypes.alertManagementRecipient = metadata.complexType(withName: "SAPB1.AlertManagementRecipient")
        }
        if !B1ClassMetadata.ComplexTypes.alternateCatNumParams.isRemoved {
            B1ClassMetadata.ComplexTypes.alternateCatNumParams = metadata.complexType(withName: "SAPB1.AlternateCatNumParams")
        }
        if !B1ClassMetadata.ComplexTypes.alternativeItem.isRemoved {
            B1ClassMetadata.ComplexTypes.alternativeItem = metadata.complexType(withName: "SAPB1.AlternativeItem")
        }
        if !B1ClassMetadata.ComplexTypes.approvalRequestDecision.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalRequestDecision = metadata.complexType(withName: "SAPB1.ApprovalRequestDecision")
        }
        if !B1ClassMetadata.ComplexTypes.approvalRequestLine.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalRequestLine = metadata.complexType(withName: "SAPB1.ApprovalRequestLine")
        }
        if !B1ClassMetadata.ComplexTypes.approvalRequestParams.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalRequestParams = metadata.complexType(withName: "SAPB1.ApprovalRequestParams")
        }
        if !B1ClassMetadata.ComplexTypes.approvalStageApprover.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalStageApprover = metadata.complexType(withName: "SAPB1.ApprovalStageApprover")
        }
        if !B1ClassMetadata.ComplexTypes.approvalStageParams.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalStageParams = metadata.complexType(withName: "SAPB1.ApprovalStageParams")
        }
        if !B1ClassMetadata.ComplexTypes.approvalTemplateDocument.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalTemplateDocument = metadata.complexType(withName: "SAPB1.ApprovalTemplateDocument")
        }
        if !B1ClassMetadata.ComplexTypes.approvalTemplateParams.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalTemplateParams = metadata.complexType(withName: "SAPB1.ApprovalTemplateParams")
        }
        if !B1ClassMetadata.ComplexTypes.approvalTemplateQuery.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalTemplateQuery = metadata.complexType(withName: "SAPB1.ApprovalTemplateQuery")
        }
        if !B1ClassMetadata.ComplexTypes.approvalTemplateStage.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalTemplateStage = metadata.complexType(withName: "SAPB1.ApprovalTemplateStage")
        }
        if !B1ClassMetadata.ComplexTypes.approvalTemplateTerm.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalTemplateTerm = metadata.complexType(withName: "SAPB1.ApprovalTemplateTerm")
        }
        if !B1ClassMetadata.ComplexTypes.approvalTemplateUser.isRemoved {
            B1ClassMetadata.ComplexTypes.approvalTemplateUser = metadata.complexType(withName: "SAPB1.ApprovalTemplateUser")
        }
        if !B1ClassMetadata.ComplexTypes.assetClassLine.isRemoved {
            B1ClassMetadata.ComplexTypes.assetClassLine = metadata.complexType(withName: "SAPB1.AssetClassLine")
        }
        if !B1ClassMetadata.ComplexTypes.assetClassParams.isRemoved {
            B1ClassMetadata.ComplexTypes.assetClassParams = metadata.complexType(withName: "SAPB1.AssetClassParams")
        }
        if !B1ClassMetadata.ComplexTypes.assetDepreciationGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.assetDepreciationGroupParams = metadata.complexType(withName: "SAPB1.AssetDepreciationGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal.isRemoved {
            B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal = metadata.complexType(withName: "SAPB1.AssetDocumentAreaJournal")
        }
        if !B1ClassMetadata.ComplexTypes.assetDocumentLine.isRemoved {
            B1ClassMetadata.ComplexTypes.assetDocumentLine = metadata.complexType(withName: "SAPB1.AssetDocumentLine")
        }
        if !B1ClassMetadata.ComplexTypes.assetDocumentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.assetDocumentParams = metadata.complexType(withName: "SAPB1.AssetDocumentParams")
        }
        if !B1ClassMetadata.ComplexTypes.assetGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.assetGroupParams = metadata.complexType(withName: "SAPB1.AssetGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.attachments2Params.isRemoved {
            B1ClassMetadata.ComplexTypes.attachments2Params = metadata.complexType(withName: "SAPB1.Attachments2Params")
        }
        if !B1ClassMetadata.ComplexTypes.attachments2Line.isRemoved {
            B1ClassMetadata.ComplexTypes.attachments2Line = metadata.complexType(withName: "SAPB1.Attachments2_Line")
        }
        if !B1ClassMetadata.ComplexTypes.attributeGroupLine.isRemoved {
            B1ClassMetadata.ComplexTypes.attributeGroupLine = metadata.complexType(withName: "SAPB1.AttributeGroupLine")
        }
        if !B1ClassMetadata.ComplexTypes.attributeGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.attributeGroupParams = metadata.complexType(withName: "SAPB1.AttributeGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.boeDocumentTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.boeDocumentTypeParams = metadata.complexType(withName: "SAPB1.BOEDocumentTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.boeInstructionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.boeInstructionParams = metadata.complexType(withName: "SAPB1.BOEInstructionParams")
        }
        if !B1ClassMetadata.ComplexTypes.boeLine.isRemoved {
            B1ClassMetadata.ComplexTypes.boeLine = metadata.complexType(withName: "SAPB1.BOELine")
        }
        if !B1ClassMetadata.ComplexTypes.boeLineParams.isRemoved {
            B1ClassMetadata.ComplexTypes.boeLineParams = metadata.complexType(withName: "SAPB1.BOELineParams")
        }
        if !B1ClassMetadata.ComplexTypes.boePortfolioParams.isRemoved {
            B1ClassMetadata.ComplexTypes.boePortfolioParams = metadata.complexType(withName: "SAPB1.BOEPortfolioParams")
        }
        if !B1ClassMetadata.ComplexTypes.bpAccountReceivablePayble.isRemoved {
            B1ClassMetadata.ComplexTypes.bpAccountReceivablePayble = metadata.complexType(withName: "SAPB1.BPAccountReceivablePayble")
        }
        if !B1ClassMetadata.ComplexTypes.bpAddress.isRemoved {
            B1ClassMetadata.ComplexTypes.bpAddress = metadata.complexType(withName: "SAPB1.BPAddress")
        }
        if !B1ClassMetadata.ComplexTypes.bpBankAccount.isRemoved {
            B1ClassMetadata.ComplexTypes.bpBankAccount = metadata.complexType(withName: "SAPB1.BPBankAccount")
        }
        if !B1ClassMetadata.ComplexTypes.bpBlockSendingMarketingContent.isRemoved {
            B1ClassMetadata.ComplexTypes.bpBlockSendingMarketingContent = metadata.complexType(withName: "SAPB1.BPBlockSendingMarketingContent")
        }
        if !B1ClassMetadata.ComplexTypes.bpBranchAssignmentItem.isRemoved {
            B1ClassMetadata.ComplexTypes.bpBranchAssignmentItem = metadata.complexType(withName: "SAPB1.BPBranchAssignmentItem")
        }
        if !B1ClassMetadata.ComplexTypes.bpCode.isRemoved {
            B1ClassMetadata.ComplexTypes.bpCode = metadata.complexType(withName: "SAPB1.BPCode")
        }
        if !B1ClassMetadata.ComplexTypes.bpFiscalTaxID.isRemoved {
            B1ClassMetadata.ComplexTypes.bpFiscalTaxID = metadata.complexType(withName: "SAPB1.BPFiscalTaxID")
        }
        if !B1ClassMetadata.ComplexTypes.bpIntrastatExtension.isRemoved {
            B1ClassMetadata.ComplexTypes.bpIntrastatExtension = metadata.complexType(withName: "SAPB1.BPIntrastatExtension")
        }
        if !B1ClassMetadata.ComplexTypes.bpPaymentDate.isRemoved {
            B1ClassMetadata.ComplexTypes.bpPaymentDate = metadata.complexType(withName: "SAPB1.BPPaymentDate")
        }
        if !B1ClassMetadata.ComplexTypes.bpPaymentMethod.isRemoved {
            B1ClassMetadata.ComplexTypes.bpPaymentMethod = metadata.complexType(withName: "SAPB1.BPPaymentMethod")
        }
        if !B1ClassMetadata.ComplexTypes.bpPriorityParams.isRemoved {
            B1ClassMetadata.ComplexTypes.bpPriorityParams = metadata.complexType(withName: "SAPB1.BPPriorityParams")
        }
        if !B1ClassMetadata.ComplexTypes.bpWithholdingTax.isRemoved {
            B1ClassMetadata.ComplexTypes.bpWithholdingTax = metadata.complexType(withName: "SAPB1.BPWithholdingTax")
        }
        if !B1ClassMetadata.ComplexTypes.bankChargesAllocationCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.bankChargesAllocationCodeParams = metadata.complexType(withName: "SAPB1.BankChargesAllocationCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.bankPageParams.isRemoved {
            B1ClassMetadata.ComplexTypes.bankPageParams = metadata.complexType(withName: "SAPB1.BankPageParams")
        }
        if !B1ClassMetadata.ComplexTypes.bankParams.isRemoved {
            B1ClassMetadata.ComplexTypes.bankParams = metadata.complexType(withName: "SAPB1.BankParams")
        }
        if !B1ClassMetadata.ComplexTypes.bankStatementParams.isRemoved {
            B1ClassMetadata.ComplexTypes.bankStatementParams = metadata.complexType(withName: "SAPB1.BankStatementParams")
        }
        if !B1ClassMetadata.ComplexTypes.bankStatementRow.isRemoved {
            B1ClassMetadata.ComplexTypes.bankStatementRow = metadata.complexType(withName: "SAPB1.BankStatementRow")
        }
        if !B1ClassMetadata.ComplexTypes.bankStatementsFilter.isRemoved {
            B1ClassMetadata.ComplexTypes.bankStatementsFilter = metadata.complexType(withName: "SAPB1.BankStatementsFilter")
        }
        if !B1ClassMetadata.ComplexTypes.barCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.barCodeParams = metadata.complexType(withName: "SAPB1.BarCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.batchNumber.isRemoved {
            B1ClassMetadata.ComplexTypes.batchNumber = metadata.complexType(withName: "SAPB1.BatchNumber")
        }
        if !B1ClassMetadata.ComplexTypes.batchNumberDetailParams.isRemoved {
            B1ClassMetadata.ComplexTypes.batchNumberDetailParams = metadata.complexType(withName: "SAPB1.BatchNumberDetailParams")
        }
        if !B1ClassMetadata.ComplexTypes.billOfExchange.isRemoved {
            B1ClassMetadata.ComplexTypes.billOfExchange = metadata.complexType(withName: "SAPB1.BillOfExchange")
        }
        if !B1ClassMetadata.ComplexTypes.billOfExchangeTransBankPage.isRemoved {
            B1ClassMetadata.ComplexTypes.billOfExchangeTransBankPage = metadata.complexType(withName: "SAPB1.BillOfExchangeTransBankPage")
        }
        if !B1ClassMetadata.ComplexTypes.billOfExchangeTransDeposit.isRemoved {
            B1ClassMetadata.ComplexTypes.billOfExchangeTransDeposit = metadata.complexType(withName: "SAPB1.BillOfExchangeTransDeposit")
        }
        if !B1ClassMetadata.ComplexTypes.billOfExchangeTransactionLine.isRemoved {
            B1ClassMetadata.ComplexTypes.billOfExchangeTransactionLine = metadata.complexType(withName: "SAPB1.BillOfExchangeTransactionLine")
        }
        if !B1ClassMetadata.ComplexTypes.billOfExchangeTransactionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.billOfExchangeTransactionParams = metadata.complexType(withName: "SAPB1.BillOfExchangeTransactionParams")
        }
        if !B1ClassMetadata.ComplexTypes.binLocationAttributeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.binLocationAttributeParams = metadata.complexType(withName: "SAPB1.BinLocationAttributeParams")
        }
        if !B1ClassMetadata.ComplexTypes.binLocationFieldParams.isRemoved {
            B1ClassMetadata.ComplexTypes.binLocationFieldParams = metadata.complexType(withName: "SAPB1.BinLocationFieldParams")
        }
        if !B1ClassMetadata.ComplexTypes.binLocationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.binLocationParams = metadata.complexType(withName: "SAPB1.BinLocationParams")
        }
        if !B1ClassMetadata.ComplexTypes.blanketAgreementParams.isRemoved {
            B1ClassMetadata.ComplexTypes.blanketAgreementParams = metadata.complexType(withName: "SAPB1.BlanketAgreementParams")
        }
        if !B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.isRemoved {
            B1ClassMetadata.ComplexTypes.blanketAgreementsDocument = metadata.complexType(withName: "SAPB1.BlanketAgreementsDocument")
        }
        if !B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.isRemoved {
            B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine = metadata.complexType(withName: "SAPB1.BlanketAgreements_DetailsLine")
        }
        if !B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.isRemoved {
            B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine = metadata.complexType(withName: "SAPB1.BlanketAgreements_ItemsLine")
        }
        if !B1ClassMetadata.ComplexTypes.blob.isRemoved {
            B1ClassMetadata.ComplexTypes.blob = metadata.complexType(withName: "SAPB1.Blob")
        }
        if !B1ClassMetadata.ComplexTypes.blobParams.isRemoved {
            B1ClassMetadata.ComplexTypes.blobParams = metadata.complexType(withName: "SAPB1.BlobParams")
        }
        if !B1ClassMetadata.ComplexTypes.blobTableKeySegment.isRemoved {
            B1ClassMetadata.ComplexTypes.blobTableKeySegment = metadata.complexType(withName: "SAPB1.BlobTableKeySegment")
        }
        if !B1ClassMetadata.ComplexTypes.boxes1099.isRemoved {
            B1ClassMetadata.ComplexTypes.boxes1099 = metadata.complexType(withName: "SAPB1.Boxes1099")
        }
        if !B1ClassMetadata.ComplexTypes.branchParams.isRemoved {
            B1ClassMetadata.ComplexTypes.branchParams = metadata.complexType(withName: "SAPB1.BranchParams")
        }
        if !B1ClassMetadata.ComplexTypes.brazilBeverageIndexerParams.isRemoved {
            B1ClassMetadata.ComplexTypes.brazilBeverageIndexerParams = metadata.complexType(withName: "SAPB1.BrazilBeverageIndexerParams")
        }
        if !B1ClassMetadata.ComplexTypes.brazilFuelIndexerParams.isRemoved {
            B1ClassMetadata.ComplexTypes.brazilFuelIndexerParams = metadata.complexType(withName: "SAPB1.BrazilFuelIndexerParams")
        }
        if !B1ClassMetadata.ComplexTypes.brazilMultiIndexerParams.isRemoved {
            B1ClassMetadata.ComplexTypes.brazilMultiIndexerParams = metadata.complexType(withName: "SAPB1.BrazilMultiIndexerParams")
        }
        if !B1ClassMetadata.ComplexTypes.brazilNumericIndexerParams.isRemoved {
            B1ClassMetadata.ComplexTypes.brazilNumericIndexerParams = metadata.complexType(withName: "SAPB1.BrazilNumericIndexerParams")
        }
        if !B1ClassMetadata.ComplexTypes.brazilStringIndexerParams.isRemoved {
            B1ClassMetadata.ComplexTypes.brazilStringIndexerParams = metadata.complexType(withName: "SAPB1.BrazilStringIndexerParams")
        }
        if !B1ClassMetadata.ComplexTypes.budgetCostAccountingLine.isRemoved {
            B1ClassMetadata.ComplexTypes.budgetCostAccountingLine = metadata.complexType(withName: "SAPB1.BudgetCostAccountingLine")
        }
        if !B1ClassMetadata.ComplexTypes.budgetDistributionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.budgetDistributionParams = metadata.complexType(withName: "SAPB1.BudgetDistributionParams")
        }
        if !B1ClassMetadata.ComplexTypes.budgetLine.isRemoved {
            B1ClassMetadata.ComplexTypes.budgetLine = metadata.complexType(withName: "SAPB1.BudgetLine")
        }
        if !B1ClassMetadata.ComplexTypes.budgetParams.isRemoved {
            B1ClassMetadata.ComplexTypes.budgetParams = metadata.complexType(withName: "SAPB1.BudgetParams")
        }
        if !B1ClassMetadata.ComplexTypes.budgetScenarioParams.isRemoved {
            B1ClassMetadata.ComplexTypes.budgetScenarioParams = metadata.complexType(withName: "SAPB1.BudgetScenarioParams")
        }
        if !B1ClassMetadata.ComplexTypes.businessPartnerGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.businessPartnerGroupParams = metadata.complexType(withName: "SAPB1.BusinessPartnerGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.businessPartnerParams.isRemoved {
            B1ClassMetadata.ComplexTypes.businessPartnerParams = metadata.complexType(withName: "SAPB1.BusinessPartnerParams")
        }
        if !B1ClassMetadata.ComplexTypes.businessPartnerPropertyParams.isRemoved {
            B1ClassMetadata.ComplexTypes.businessPartnerPropertyParams = metadata.complexType(withName: "SAPB1.BusinessPartnerPropertyParams")
        }
        if !B1ClassMetadata.ComplexTypes.businessPlaceIENumber.isRemoved {
            B1ClassMetadata.ComplexTypes.businessPlaceIENumber = metadata.complexType(withName: "SAPB1.BusinessPlaceIENumber")
        }
        if !B1ClassMetadata.ComplexTypes.businessPlaceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.businessPlaceParams = metadata.complexType(withName: "SAPB1.BusinessPlaceParams")
        }
        if !B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo = metadata.complexType(withName: "SAPB1.BusinessPlaceTributaryInfo")
        }
        if !B1ClassMetadata.ComplexTypes.callArgument.isRemoved {
            B1ClassMetadata.ComplexTypes.callArgument = metadata.complexType(withName: "SAPB1.CallArgument")
        }
        if !B1ClassMetadata.ComplexTypes.callMessage.isRemoved {
            B1ClassMetadata.ComplexTypes.callMessage = metadata.complexType(withName: "SAPB1.CallMessage")
        }
        if !B1ClassMetadata.ComplexTypes.callMessageArgument.isRemoved {
            B1ClassMetadata.ComplexTypes.callMessageArgument = metadata.complexType(withName: "SAPB1.CallMessageArgument")
        }
        if !B1ClassMetadata.ComplexTypes.campaignBusinessPartner.isRemoved {
            B1ClassMetadata.ComplexTypes.campaignBusinessPartner = metadata.complexType(withName: "SAPB1.CampaignBusinessPartner")
        }
        if !B1ClassMetadata.ComplexTypes.campaignItem.isRemoved {
            B1ClassMetadata.ComplexTypes.campaignItem = metadata.complexType(withName: "SAPB1.CampaignItem")
        }
        if !B1ClassMetadata.ComplexTypes.campaignParams.isRemoved {
            B1ClassMetadata.ComplexTypes.campaignParams = metadata.complexType(withName: "SAPB1.CampaignParams")
        }
        if !B1ClassMetadata.ComplexTypes.campaignPartner.isRemoved {
            B1ClassMetadata.ComplexTypes.campaignPartner = metadata.complexType(withName: "SAPB1.CampaignPartner")
        }
        if !B1ClassMetadata.ComplexTypes.campaignResponseTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.campaignResponseTypeParams = metadata.complexType(withName: "SAPB1.CampaignResponseTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.cancelCheckRowParams.isRemoved {
            B1ClassMetadata.ComplexTypes.cancelCheckRowParams = metadata.complexType(withName: "SAPB1.CancelCheckRowParams")
        }
        if !B1ClassMetadata.ComplexTypes.cashDiscountParams.isRemoved {
            B1ClassMetadata.ComplexTypes.cashDiscountParams = metadata.complexType(withName: "SAPB1.CashDiscountParams")
        }
        if !B1ClassMetadata.ComplexTypes.cashFlowAssignment.isRemoved {
            B1ClassMetadata.ComplexTypes.cashFlowAssignment = metadata.complexType(withName: "SAPB1.CashFlowAssignment")
        }
        if !B1ClassMetadata.ComplexTypes.cashFlowLineItemParams.isRemoved {
            B1ClassMetadata.ComplexTypes.cashFlowLineItemParams = metadata.complexType(withName: "SAPB1.CashFlowLineItemParams")
        }
        if !B1ClassMetadata.ComplexTypes.categoryGroup.isRemoved {
            B1ClassMetadata.ComplexTypes.categoryGroup = metadata.complexType(withName: "SAPB1.CategoryGroup")
        }
        if !B1ClassMetadata.ComplexTypes.certificateSeriesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.certificateSeriesParams = metadata.complexType(withName: "SAPB1.CertificateSeriesParams")
        }
        if !B1ClassMetadata.ComplexTypes.changeLogDifferenceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.changeLogDifferenceParams = metadata.complexType(withName: "SAPB1.ChangeLogDifferenceParams")
        }
        if !B1ClassMetadata.ComplexTypes.changeLogParams.isRemoved {
            B1ClassMetadata.ComplexTypes.changeLogParams = metadata.complexType(withName: "SAPB1.ChangeLogParams")
        }
        if !B1ClassMetadata.ComplexTypes.chartOfAccountParams.isRemoved {
            B1ClassMetadata.ComplexTypes.chartOfAccountParams = metadata.complexType(withName: "SAPB1.ChartOfAccountParams")
        }
        if !B1ClassMetadata.ComplexTypes.checkInParams.isRemoved {
            B1ClassMetadata.ComplexTypes.checkInParams = metadata.complexType(withName: "SAPB1.CheckInParams")
        }
        if !B1ClassMetadata.ComplexTypes.checkLine.isRemoved {
            B1ClassMetadata.ComplexTypes.checkLine = metadata.complexType(withName: "SAPB1.CheckLine")
        }
        if !B1ClassMetadata.ComplexTypes.checkLineParams.isRemoved {
            B1ClassMetadata.ComplexTypes.checkLineParams = metadata.complexType(withName: "SAPB1.CheckLineParams")
        }
        if !B1ClassMetadata.ComplexTypes.checksforPaymentLine.isRemoved {
            B1ClassMetadata.ComplexTypes.checksforPaymentLine = metadata.complexType(withName: "SAPB1.ChecksforPaymentLine")
        }
        if !B1ClassMetadata.ComplexTypes.checksforPaymentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.checksforPaymentParams = metadata.complexType(withName: "SAPB1.ChecksforPaymentParams")
        }
        if !B1ClassMetadata.ComplexTypes.chooseFromListParams.isRemoved {
            B1ClassMetadata.ComplexTypes.chooseFromListParams = metadata.complexType(withName: "SAPB1.ChooseFromListParams")
        }
        if !B1ClassMetadata.ComplexTypes.chooseFromListLine.isRemoved {
            B1ClassMetadata.ComplexTypes.chooseFromListLine = metadata.complexType(withName: "SAPB1.ChooseFromList_Line")
        }
        if !B1ClassMetadata.ComplexTypes.cockpitParams.isRemoved {
            B1ClassMetadata.ComplexTypes.cockpitParams = metadata.complexType(withName: "SAPB1.CockpitParams")
        }
        if !B1ClassMetadata.ComplexTypes.columnsPreferencesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.columnsPreferencesParams = metadata.complexType(withName: "SAPB1.ColumnsPreferencesParams")
        }
        if !B1ClassMetadata.ComplexTypes.commissionGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.commissionGroupParams = metadata.complexType(withName: "SAPB1.CommissionGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.companyInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.companyInfo = metadata.complexType(withName: "SAPB1.CompanyInfo")
        }
        if !B1ClassMetadata.ComplexTypes.contactEmployee.isRemoved {
            B1ClassMetadata.ComplexTypes.contactEmployee = metadata.complexType(withName: "SAPB1.ContactEmployee")
        }
        if !B1ClassMetadata.ComplexTypes.contactEmployeeBlockSendingMarketingContent.isRemoved {
            B1ClassMetadata.ComplexTypes.contactEmployeeBlockSendingMarketingContent = metadata.complexType(withName: "SAPB1.ContactEmployeeBlockSendingMarketingContent")
        }
        if !B1ClassMetadata.ComplexTypes.contactParams.isRemoved {
            B1ClassMetadata.ComplexTypes.contactParams = metadata.complexType(withName: "SAPB1.ContactParams")
        }
        if !B1ClassMetadata.ComplexTypes.contractTemplateParams.isRemoved {
            B1ClassMetadata.ComplexTypes.contractTemplateParams = metadata.complexType(withName: "SAPB1.ContractTemplateParams")
        }
        if !B1ClassMetadata.ComplexTypes.costCenterTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.costCenterTypeParams = metadata.complexType(withName: "SAPB1.CostCenterTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.costElementParams.isRemoved {
            B1ClassMetadata.ComplexTypes.costElementParams = metadata.complexType(withName: "SAPB1.CostElementParams")
        }
        if !B1ClassMetadata.ComplexTypes.countryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.countryParams = metadata.complexType(withName: "SAPB1.CountryParams")
        }
        if !B1ClassMetadata.ComplexTypes.creditCardParams.isRemoved {
            B1ClassMetadata.ComplexTypes.creditCardParams = metadata.complexType(withName: "SAPB1.CreditCardParams")
        }
        if !B1ClassMetadata.ComplexTypes.creditCardPaymentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.creditCardPaymentParams = metadata.complexType(withName: "SAPB1.CreditCardPaymentParams")
        }
        if !B1ClassMetadata.ComplexTypes.creditLine.isRemoved {
            B1ClassMetadata.ComplexTypes.creditLine = metadata.complexType(withName: "SAPB1.CreditLine")
        }
        if !B1ClassMetadata.ComplexTypes.creditLineParams.isRemoved {
            B1ClassMetadata.ComplexTypes.creditLineParams = metadata.complexType(withName: "SAPB1.CreditLineParams")
        }
        if !B1ClassMetadata.ComplexTypes.creditPaymentMethodParams.isRemoved {
            B1ClassMetadata.ComplexTypes.creditPaymentMethodParams = metadata.complexType(withName: "SAPB1.CreditPaymentMethodParams")
        }
        if !B1ClassMetadata.ComplexTypes.currenciesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.currenciesParams = metadata.complexType(withName: "SAPB1.CurrenciesParams")
        }
        if !B1ClassMetadata.ComplexTypes.currencyRestriction.isRemoved {
            B1ClassMetadata.ComplexTypes.currencyRestriction = metadata.complexType(withName: "SAPB1.CurrencyRestriction")
        }
        if !B1ClassMetadata.ComplexTypes.customerEquipmentCardParams.isRemoved {
            B1ClassMetadata.ComplexTypes.customerEquipmentCardParams = metadata.complexType(withName: "SAPB1.CustomerEquipmentCardParams")
        }
        if !B1ClassMetadata.ComplexTypes.customsDeclarationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.customsDeclarationParams = metadata.complexType(withName: "SAPB1.CustomsDeclarationParams")
        }
        if !B1ClassMetadata.ComplexTypes.customsGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.customsGroupParams = metadata.complexType(withName: "SAPB1.CustomsGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.cycleCountDeterminationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.cycleCountDeterminationParams = metadata.complexType(withName: "SAPB1.CycleCountDeterminationParams")
        }
        if !B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.isRemoved {
            B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup = metadata.complexType(withName: "SAPB1.CycleCountDeterminationSetup")
        }
        if !B1ClassMetadata.ComplexTypes.dnfCodeSetupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.dnfCodeSetupParams = metadata.complexType(withName: "SAPB1.DNFCodeSetupParams")
        }
        if !B1ClassMetadata.ComplexTypes.dashboardPackageImportParams.isRemoved {
            B1ClassMetadata.ComplexTypes.dashboardPackageImportParams = metadata.complexType(withName: "SAPB1.DashboardPackageImportParams")
        }
        if !B1ClassMetadata.ComplexTypes.dashboardPackageParams.isRemoved {
            B1ClassMetadata.ComplexTypes.dashboardPackageParams = metadata.complexType(withName: "SAPB1.DashboardPackageParams")
        }
        if !B1ClassMetadata.ComplexTypes.decimalData.isRemoved {
            B1ClassMetadata.ComplexTypes.decimalData = metadata.complexType(withName: "SAPB1.DecimalData")
        }
        if !B1ClassMetadata.ComplexTypes.deductionTaxGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.deductionTaxGroupParams = metadata.complexType(withName: "SAPB1.DeductionTaxGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.deductionTaxHierarchiesLine.isRemoved {
            B1ClassMetadata.ComplexTypes.deductionTaxHierarchiesLine = metadata.complexType(withName: "SAPB1.DeductionTaxHierarchies_Line")
        }
        if !B1ClassMetadata.ComplexTypes.deductionTaxHierarchyParams.isRemoved {
            B1ClassMetadata.ComplexTypes.deductionTaxHierarchyParams = metadata.complexType(withName: "SAPB1.DeductionTaxHierarchyParams")
        }
        if !B1ClassMetadata.ComplexTypes.deductionTaxSubGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.deductionTaxSubGroupParams = metadata.complexType(withName: "SAPB1.DeductionTaxSubGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.defaultElectronicSeriesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.defaultElectronicSeriesParams = metadata.complexType(withName: "SAPB1.DefaultElectronicSeriesParams")
        }
        if !B1ClassMetadata.ComplexTypes.defaultReportParams.isRemoved {
            B1ClassMetadata.ComplexTypes.defaultReportParams = metadata.complexType(withName: "SAPB1.DefaultReportParams")
        }
        if !B1ClassMetadata.ComplexTypes.departmentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.departmentParams = metadata.complexType(withName: "SAPB1.DepartmentParams")
        }
        if !B1ClassMetadata.ComplexTypes.depositParams.isRemoved {
            B1ClassMetadata.ComplexTypes.depositParams = metadata.complexType(withName: "SAPB1.DepositParams")
        }
        if !B1ClassMetadata.ComplexTypes.depreciationAreaParams.isRemoved {
            B1ClassMetadata.ComplexTypes.depreciationAreaParams = metadata.complexType(withName: "SAPB1.DepreciationAreaParams")
        }
        if !B1ClassMetadata.ComplexTypes.depreciationLevel.isRemoved {
            B1ClassMetadata.ComplexTypes.depreciationLevel = metadata.complexType(withName: "SAPB1.DepreciationLevel")
        }
        if !B1ClassMetadata.ComplexTypes.depreciationTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.depreciationTypeParams = metadata.complexType(withName: "SAPB1.DepreciationTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.depreciationTypePoolParams.isRemoved {
            B1ClassMetadata.ComplexTypes.depreciationTypePoolParams = metadata.complexType(withName: "SAPB1.DepreciationTypePoolParams")
        }
        if !B1ClassMetadata.ComplexTypes.determinationCriteriaParams.isRemoved {
            B1ClassMetadata.ComplexTypes.determinationCriteriaParams = metadata.complexType(withName: "SAPB1.DeterminationCriteriaParams")
        }
        if !B1ClassMetadata.ComplexTypes.dimensionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.dimensionParams = metadata.complexType(withName: "SAPB1.DimensionParams")
        }
        if !B1ClassMetadata.ComplexTypes.discountGroup.isRemoved {
            B1ClassMetadata.ComplexTypes.discountGroup = metadata.complexType(withName: "SAPB1.DiscountGroup")
        }
        if !B1ClassMetadata.ComplexTypes.discountGroupLine.isRemoved {
            B1ClassMetadata.ComplexTypes.discountGroupLine = metadata.complexType(withName: "SAPB1.DiscountGroupLine")
        }
        if !B1ClassMetadata.ComplexTypes.discountLine.isRemoved {
            B1ClassMetadata.ComplexTypes.discountLine = metadata.complexType(withName: "SAPB1.DiscountLine")
        }
        if !B1ClassMetadata.ComplexTypes.distributionRuleLine.isRemoved {
            B1ClassMetadata.ComplexTypes.distributionRuleLine = metadata.complexType(withName: "SAPB1.DistributionRuleLine")
        }
        if !B1ClassMetadata.ComplexTypes.distributionRuleParams.isRemoved {
            B1ClassMetadata.ComplexTypes.distributionRuleParams = metadata.complexType(withName: "SAPB1.DistributionRuleParams")
        }
        if !B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.isRemoved {
            B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction = metadata.complexType(withName: "SAPB1.DocExpenseTaxJurisdiction")
        }
        if !B1ClassMetadata.ComplexTypes.docsInWTGroups.isRemoved {
            B1ClassMetadata.ComplexTypes.docsInWTGroups = metadata.complexType(withName: "SAPB1.DocsInWTGroups")
        }
        if !B1ClassMetadata.ComplexTypes.documentAdditionalExpense.isRemoved {
            B1ClassMetadata.ComplexTypes.documentAdditionalExpense = metadata.complexType(withName: "SAPB1.DocumentAdditionalExpense")
        }
        if !B1ClassMetadata.ComplexTypes.documentChangeMenuName.isRemoved {
            B1ClassMetadata.ComplexTypes.documentChangeMenuName = metadata.complexType(withName: "SAPB1.DocumentChangeMenuName")
        }
        if !B1ClassMetadata.ComplexTypes.documentInstallment.isRemoved {
            B1ClassMetadata.ComplexTypes.documentInstallment = metadata.complexType(withName: "SAPB1.DocumentInstallment")
        }
        if !B1ClassMetadata.ComplexTypes.documentLine.isRemoved {
            B1ClassMetadata.ComplexTypes.documentLine = metadata.complexType(withName: "SAPB1.DocumentLine")
        }
        if !B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense.isRemoved {
            B1ClassMetadata.ComplexTypes.documentLineAdditionalExpense = metadata.complexType(withName: "SAPB1.DocumentLineAdditionalExpense")
        }
        if !B1ClassMetadata.ComplexTypes.documentLinesBinAllocation.isRemoved {
            B1ClassMetadata.ComplexTypes.documentLinesBinAllocation = metadata.complexType(withName: "SAPB1.DocumentLinesBinAllocation")
        }
        if !B1ClassMetadata.ComplexTypes.documentPackage.isRemoved {
            B1ClassMetadata.ComplexTypes.documentPackage = metadata.complexType(withName: "SAPB1.DocumentPackage")
        }
        if !B1ClassMetadata.ComplexTypes.documentPackageItem.isRemoved {
            B1ClassMetadata.ComplexTypes.documentPackageItem = metadata.complexType(withName: "SAPB1.DocumentPackageItem")
        }
        if !B1ClassMetadata.ComplexTypes.documentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.documentParams = metadata.complexType(withName: "SAPB1.DocumentParams")
        }
        if !B1ClassMetadata.ComplexTypes.documentSeriesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.documentSeriesParams = metadata.complexType(withName: "SAPB1.DocumentSeriesParams")
        }
        if !B1ClassMetadata.ComplexTypes.documentSeriesUserParams.isRemoved {
            B1ClassMetadata.ComplexTypes.documentSeriesUserParams = metadata.complexType(withName: "SAPB1.DocumentSeriesUserParams")
        }
        if !B1ClassMetadata.ComplexTypes.documentSpecialLine.isRemoved {
            B1ClassMetadata.ComplexTypes.documentSpecialLine = metadata.complexType(withName: "SAPB1.DocumentSpecialLine")
        }
        if !B1ClassMetadata.ComplexTypes.documentTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.documentTypeParams = metadata.complexType(withName: "SAPB1.DocumentTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.documentApprovalRequest.isRemoved {
            B1ClassMetadata.ComplexTypes.documentApprovalRequest = metadata.complexType(withName: "SAPB1.Document_ApprovalRequest")
        }
        if !B1ClassMetadata.ComplexTypes.downPaymentToDraw.isRemoved {
            B1ClassMetadata.ComplexTypes.downPaymentToDraw = metadata.complexType(withName: "SAPB1.DownPaymentToDraw")
        }
        if !B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails.isRemoved {
            B1ClassMetadata.ComplexTypes.downPaymentToDrawDetails = metadata.complexType(withName: "SAPB1.DownPaymentToDrawDetails")
        }
        if !B1ClassMetadata.ComplexTypes.dppChangeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.dppChangeParams = metadata.complexType(withName: "SAPB1.DppChangeParams")
        }
        if !B1ClassMetadata.ComplexTypes.dunningLetterParams.isRemoved {
            B1ClassMetadata.ComplexTypes.dunningLetterParams = metadata.complexType(withName: "SAPB1.DunningLetterParams")
        }
        if !B1ClassMetadata.ComplexTypes.dunningTermLine.isRemoved {
            B1ClassMetadata.ComplexTypes.dunningTermLine = metadata.complexType(withName: "SAPB1.DunningTermLine")
        }
        if !B1ClassMetadata.ComplexTypes.dunningTermParams.isRemoved {
            B1ClassMetadata.ComplexTypes.dunningTermParams = metadata.complexType(withName: "SAPB1.DunningTermParams")
        }
        if !B1ClassMetadata.ComplexTypes.dynamicSystemStringParams.isRemoved {
            B1ClassMetadata.ComplexTypes.dynamicSystemStringParams = metadata.complexType(withName: "SAPB1.DynamicSystemStringParams")
        }
        if !B1ClassMetadata.ComplexTypes.ecmActionStatusData.isRemoved {
            B1ClassMetadata.ComplexTypes.ecmActionStatusData = metadata.complexType(withName: "SAPB1.ECMActionStatusData")
        }
        if !B1ClassMetadata.ComplexTypes.ecmCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.ecmCodeParams = metadata.complexType(withName: "SAPB1.ECMCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.ecmAction.isRemoved {
            B1ClassMetadata.ComplexTypes.ecmAction = metadata.complexType(withName: "SAPB1.EcmAction")
        }
        if !B1ClassMetadata.ComplexTypes.ecmActionDocParams.isRemoved {
            B1ClassMetadata.ComplexTypes.ecmActionDocParams = metadata.complexType(withName: "SAPB1.EcmActionDocParams")
        }
        if !B1ClassMetadata.ComplexTypes.ecmActionLog.isRemoved {
            B1ClassMetadata.ComplexTypes.ecmActionLog = metadata.complexType(withName: "SAPB1.EcmActionLog")
        }
        if !B1ClassMetadata.ComplexTypes.ecmActionLogParams.isRemoved {
            B1ClassMetadata.ComplexTypes.ecmActionLogParams = metadata.complexType(withName: "SAPB1.EcmActionLogParams")
        }
        if !B1ClassMetadata.ComplexTypes.ecmActionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.ecmActionParams = metadata.complexType(withName: "SAPB1.EcmActionParams")
        }
        if !B1ClassMetadata.ComplexTypes.electronicFileFormatParams.isRemoved {
            B1ClassMetadata.ComplexTypes.electronicFileFormatParams = metadata.complexType(withName: "SAPB1.ElectronicFileFormatParams")
        }
        if !B1ClassMetadata.ComplexTypes.electronicSeries.isRemoved {
            B1ClassMetadata.ComplexTypes.electronicSeries = metadata.complexType(withName: "SAPB1.ElectronicSeries")
        }
        if !B1ClassMetadata.ComplexTypes.electronicSeriesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.electronicSeriesParams = metadata.complexType(withName: "SAPB1.ElectronicSeriesParams")
        }
        if !B1ClassMetadata.ComplexTypes.emailGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.emailGroupParams = metadata.complexType(withName: "SAPB1.EmailGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.employeeAbsenceInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeAbsenceInfo = metadata.complexType(withName: "SAPB1.EmployeeAbsenceInfo")
        }
        if !B1ClassMetadata.ComplexTypes.employeeBranchAssignmentItem.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeBranchAssignmentItem = metadata.complexType(withName: "SAPB1.EmployeeBranchAssignmentItem")
        }
        if !B1ClassMetadata.ComplexTypes.employeeEducationInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeEducationInfo = metadata.complexType(withName: "SAPB1.EmployeeEducationInfo")
        }
        if !B1ClassMetadata.ComplexTypes.employeeFullNamesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeFullNamesParams = metadata.complexType(withName: "SAPB1.EmployeeFullNamesParams")
        }
        if !B1ClassMetadata.ComplexTypes.employeeIDTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeIDTypeParams = metadata.complexType(withName: "SAPB1.EmployeeIDTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.employeeInfoParams.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeInfoParams = metadata.complexType(withName: "SAPB1.EmployeeInfoParams")
        }
        if !B1ClassMetadata.ComplexTypes.employeePositionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.employeePositionParams = metadata.complexType(withName: "SAPB1.EmployeePositionParams")
        }
        if !B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.employeePreviousEmpoymentInfo = metadata.complexType(withName: "SAPB1.EmployeePreviousEmpoymentInfo")
        }
        if !B1ClassMetadata.ComplexTypes.employeeReviewsInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeReviewsInfo = metadata.complexType(withName: "SAPB1.EmployeeReviewsInfo")
        }
        if !B1ClassMetadata.ComplexTypes.employeeRoleSetupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeRoleSetupParams = metadata.complexType(withName: "SAPB1.EmployeeRoleSetupParams")
        }
        if !B1ClassMetadata.ComplexTypes.employeeRolesInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeRolesInfo = metadata.complexType(withName: "SAPB1.EmployeeRolesInfo")
        }
        if !B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeSavingsPaymentInfo = metadata.complexType(withName: "SAPB1.EmployeeSavingsPaymentInfo")
        }
        if !B1ClassMetadata.ComplexTypes.employeeStatusParams.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeStatusParams = metadata.complexType(withName: "SAPB1.EmployeeStatusParams")
        }
        if !B1ClassMetadata.ComplexTypes.employeeTransferDetail.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeTransferDetail = metadata.complexType(withName: "SAPB1.EmployeeTransferDetail")
        }
        if !B1ClassMetadata.ComplexTypes.employeeTransferParams.isRemoved {
            B1ClassMetadata.ComplexTypes.employeeTransferParams = metadata.complexType(withName: "SAPB1.EmployeeTransferParams")
        }
        if !B1ClassMetadata.ComplexTypes.enhancedDiscountGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.enhancedDiscountGroupParams = metadata.complexType(withName: "SAPB1.EnhancedDiscountGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.expenseTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.expenseTypeParams = metadata.complexType(withName: "SAPB1.ExpenseTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.exportProcess.isRemoved {
            B1ClassMetadata.ComplexTypes.exportProcess = metadata.complexType(withName: "SAPB1.ExportProcess")
        }
        if !B1ClassMetadata.ComplexTypes.extendedAdminInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.extendedAdminInfo = metadata.complexType(withName: "SAPB1.ExtendedAdminInfo")
        }
        if !B1ClassMetadata.ComplexTypes.extendedTranslationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.extendedTranslationParams = metadata.complexType(withName: "SAPB1.ExtendedTranslationParams")
        }
        if !B1ClassMetadata.ComplexTypes.extendedTranslationItemLine.isRemoved {
            B1ClassMetadata.ComplexTypes.extendedTranslationItemLine = metadata.complexType(withName: "SAPB1.ExtendedTranslation_ItemLine")
        }
        if !B1ClassMetadata.ComplexTypes.extendedTranslationResultLine.isRemoved {
            B1ClassMetadata.ComplexTypes.extendedTranslationResultLine = metadata.complexType(withName: "SAPB1.ExtendedTranslation_ResultLine")
        }
        if !B1ClassMetadata.ComplexTypes.externalCall.isRemoved {
            B1ClassMetadata.ComplexTypes.externalCall = metadata.complexType(withName: "SAPB1.ExternalCall")
        }
        if !B1ClassMetadata.ComplexTypes.externalCallParams.isRemoved {
            B1ClassMetadata.ComplexTypes.externalCallParams = metadata.complexType(withName: "SAPB1.ExternalCallParams")
        }
        if !B1ClassMetadata.ComplexTypes.externalReconciliation.isRemoved {
            B1ClassMetadata.ComplexTypes.externalReconciliation = metadata.complexType(withName: "SAPB1.ExternalReconciliation")
        }
        if !B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams.isRemoved {
            B1ClassMetadata.ComplexTypes.externalReconciliationFilterParams = metadata.complexType(withName: "SAPB1.ExternalReconciliationFilterParams")
        }
        if !B1ClassMetadata.ComplexTypes.externalReconciliationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.externalReconciliationParams = metadata.complexType(withName: "SAPB1.ExternalReconciliationParams")
        }
        if !B1ClassMetadata.ComplexTypes.faAccountDeterminationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.faAccountDeterminationParams = metadata.complexType(withName: "SAPB1.FAAccountDeterminationParams")
        }
        if !B1ClassMetadata.ComplexTypes.fifoLayer.isRemoved {
            B1ClassMetadata.ComplexTypes.fifoLayer = metadata.complexType(withName: "SAPB1.FIFOLayer")
        }
        if !B1ClassMetadata.ComplexTypes.factoringIndicatorParams.isRemoved {
            B1ClassMetadata.ComplexTypes.factoringIndicatorParams = metadata.complexType(withName: "SAPB1.FactoringIndicatorParams")
        }
        if !B1ClassMetadata.ComplexTypes.featureStatus.isRemoved {
            B1ClassMetadata.ComplexTypes.featureStatus = metadata.complexType(withName: "SAPB1.FeatureStatus")
        }
        if !B1ClassMetadata.ComplexTypes.financePeriod.isRemoved {
            B1ClassMetadata.ComplexTypes.financePeriod = metadata.complexType(withName: "SAPB1.FinancePeriod")
        }
        if !B1ClassMetadata.ComplexTypes.financePeriodParams.isRemoved {
            B1ClassMetadata.ComplexTypes.financePeriodParams = metadata.complexType(withName: "SAPB1.FinancePeriodParams")
        }
        if !B1ClassMetadata.ComplexTypes.financialYearParams.isRemoved {
            B1ClassMetadata.ComplexTypes.financialYearParams = metadata.complexType(withName: "SAPB1.FinancialYearParams")
        }
        if !B1ClassMetadata.ComplexTypes.fiscalPrinterParams.isRemoved {
            B1ClassMetadata.ComplexTypes.fiscalPrinterParams = metadata.complexType(withName: "SAPB1.FiscalPrinterParams")
        }
        if !B1ClassMetadata.ComplexTypes.fixedAssetEndBalance.isRemoved {
            B1ClassMetadata.ComplexTypes.fixedAssetEndBalance = metadata.complexType(withName: "SAPB1.FixedAssetEndBalance")
        }
        if !B1ClassMetadata.ComplexTypes.fixedAssetValues.isRemoved {
            B1ClassMetadata.ComplexTypes.fixedAssetValues = metadata.complexType(withName: "SAPB1.FixedAssetValues")
        }
        if !B1ClassMetadata.ComplexTypes.fixedAssetValuesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.fixedAssetValuesParams = metadata.complexType(withName: "SAPB1.FixedAssetValuesParams")
        }
        if !B1ClassMetadata.ComplexTypes.formattedSearchParams.isRemoved {
            B1ClassMetadata.ComplexTypes.formattedSearchParams = metadata.complexType(withName: "SAPB1.FormattedSearchParams")
        }
        if !B1ClassMetadata.ComplexTypes.forms1099Params.isRemoved {
            B1ClassMetadata.ComplexTypes.forms1099Params = metadata.complexType(withName: "SAPB1.Forms1099Params")
        }
        if !B1ClassMetadata.ComplexTypes.glAccount.isRemoved {
            B1ClassMetadata.ComplexTypes.glAccount = metadata.complexType(withName: "SAPB1.GLAccount")
        }
        if !B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams.isRemoved {
            B1ClassMetadata.ComplexTypes.glAccountAdvancedRuleParams = metadata.complexType(withName: "SAPB1.GLAccountAdvancedRuleParams")
        }
        if !B1ClassMetadata.ComplexTypes.gtiParams.isRemoved {
            B1ClassMetadata.ComplexTypes.gtiParams = metadata.complexType(withName: "SAPB1.GTIParams")
        }
        if !B1ClassMetadata.ComplexTypes.generatedAsset.isRemoved {
            B1ClassMetadata.ComplexTypes.generatedAsset = metadata.complexType(withName: "SAPB1.GeneratedAsset")
        }
        if !B1ClassMetadata.ComplexTypes.getChangeLogParams.isRemoved {
            B1ClassMetadata.ComplexTypes.getChangeLogParams = metadata.complexType(withName: "SAPB1.GetChangeLogParams")
        }
        if !B1ClassMetadata.ComplexTypes.govPayCodeAuthority.isRemoved {
            B1ClassMetadata.ComplexTypes.govPayCodeAuthority = metadata.complexType(withName: "SAPB1.GovPayCodeAuthority")
        }
        if !B1ClassMetadata.ComplexTypes.govPayCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.govPayCodeParams = metadata.complexType(withName: "SAPB1.GovPayCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.houseBankAccountParams.isRemoved {
            B1ClassMetadata.ComplexTypes.houseBankAccountParams = metadata.complexType(withName: "SAPB1.HouseBankAccountParams")
        }
        if !B1ClassMetadata.ComplexTypes.importProcess.isRemoved {
            B1ClassMetadata.ComplexTypes.importProcess = metadata.complexType(withName: "SAPB1.ImportProcess")
        }
        if !B1ClassMetadata.ComplexTypes.indiaSacCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.indiaSacCodeParams = metadata.complexType(withName: "SAPB1.IndiaSacCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.individualCounter.isRemoved {
            B1ClassMetadata.ComplexTypes.individualCounter = metadata.complexType(withName: "SAPB1.IndividualCounter")
        }
        if !B1ClassMetadata.ComplexTypes.industryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.industryParams = metadata.complexType(withName: "SAPB1.IndustryParams")
        }
        if !B1ClassMetadata.ComplexTypes.integrationPackageParams.isRemoved {
            B1ClassMetadata.ComplexTypes.integrationPackageParams = metadata.complexType(withName: "SAPB1.IntegrationPackageParams")
        }
        if !B1ClassMetadata.ComplexTypes.internalReconciliationBP.isRemoved {
            B1ClassMetadata.ComplexTypes.internalReconciliationBP = metadata.complexType(withName: "SAPB1.InternalReconciliationBP")
        }
        if !B1ClassMetadata.ComplexTypes.internalReconciliationOpenTrans.isRemoved {
            B1ClassMetadata.ComplexTypes.internalReconciliationOpenTrans = metadata.complexType(withName: "SAPB1.InternalReconciliationOpenTrans")
        }
        if !B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams.isRemoved {
            B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransParams = metadata.complexType(withName: "SAPB1.InternalReconciliationOpenTransParams")
        }
        if !B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow.isRemoved {
            B1ClassMetadata.ComplexTypes.internalReconciliationOpenTransRow = metadata.complexType(withName: "SAPB1.InternalReconciliationOpenTransRow")
        }
        if !B1ClassMetadata.ComplexTypes.internalReconciliationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.internalReconciliationParams = metadata.complexType(withName: "SAPB1.InternalReconciliationParams")
        }
        if !B1ClassMetadata.ComplexTypes.internalReconciliationRow.isRemoved {
            B1ClassMetadata.ComplexTypes.internalReconciliationRow = metadata.complexType(withName: "SAPB1.InternalReconciliationRow")
        }
        if !B1ClassMetadata.ComplexTypes.intrastatConfigurationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.intrastatConfigurationParams = metadata.complexType(withName: "SAPB1.IntrastatConfigurationParams")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryCountingBatchNumber = metadata.complexType(withName: "SAPB1.InventoryCountingBatchNumber")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryCountingLine.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryCountingLine = metadata.complexType(withName: "SAPB1.InventoryCountingLine")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryCountingLineUoM = metadata.complexType(withName: "SAPB1.InventoryCountingLineUoM")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryCountingParams.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryCountingParams = metadata.complexType(withName: "SAPB1.InventoryCountingParams")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryCountingSerialNumber = metadata.complexType(withName: "SAPB1.InventoryCountingSerialNumber")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryCyclesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryCyclesParams = metadata.complexType(withName: "SAPB1.InventoryCyclesParams")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceBatchNumber = metadata.complexType(withName: "SAPB1.InventoryOpeningBalanceBatchNumber")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceLine = metadata.complexType(withName: "SAPB1.InventoryOpeningBalanceLine")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceParams = metadata.complexType(withName: "SAPB1.InventoryOpeningBalanceParams")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryOpeningBalanceSerialNumber = metadata.complexType(withName: "SAPB1.InventoryOpeningBalanceSerialNumber")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryPostingBatchNumber = metadata.complexType(withName: "SAPB1.InventoryPostingBatchNumber")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryPostingCopyOption.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryPostingCopyOption = metadata.complexType(withName: "SAPB1.InventoryPostingCopyOption")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryPostingLine.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryPostingLine = metadata.complexType(withName: "SAPB1.InventoryPostingLine")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryPostingLineUoM = metadata.complexType(withName: "SAPB1.InventoryPostingLineUoM")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryPostingParams.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryPostingParams = metadata.complexType(withName: "SAPB1.InventoryPostingParams")
        }
        if !B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber.isRemoved {
            B1ClassMetadata.ComplexTypes.inventoryPostingSerialNumber = metadata.complexType(withName: "SAPB1.InventoryPostingSerialNumber")
        }
        if !B1ClassMetadata.ComplexTypes.itemAttributeGroups.isRemoved {
            B1ClassMetadata.ComplexTypes.itemAttributeGroups = metadata.complexType(withName: "SAPB1.ItemAttributeGroups")
        }
        if !B1ClassMetadata.ComplexTypes.itemBarCode.isRemoved {
            B1ClassMetadata.ComplexTypes.itemBarCode = metadata.complexType(withName: "SAPB1.ItemBarCode")
        }
        if !B1ClassMetadata.ComplexTypes.itemCycleCount.isRemoved {
            B1ClassMetadata.ComplexTypes.itemCycleCount = metadata.complexType(withName: "SAPB1.ItemCycleCount")
        }
        if !B1ClassMetadata.ComplexTypes.itemDepreciationParameter.isRemoved {
            B1ClassMetadata.ComplexTypes.itemDepreciationParameter = metadata.complexType(withName: "SAPB1.ItemDepreciationParameter")
        }
        if !B1ClassMetadata.ComplexTypes.itemDistributionRule.isRemoved {
            B1ClassMetadata.ComplexTypes.itemDistributionRule = metadata.complexType(withName: "SAPB1.ItemDistributionRule")
        }
        if !B1ClassMetadata.ComplexTypes.itemGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.itemGroupParams = metadata.complexType(withName: "SAPB1.ItemGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.itemGroupsWarehouseInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.itemGroupsWarehouseInfo = metadata.complexType(withName: "SAPB1.ItemGroupsWarehouseInfo")
        }
        if !B1ClassMetadata.ComplexTypes.itemIntrastatExtension.isRemoved {
            B1ClassMetadata.ComplexTypes.itemIntrastatExtension = metadata.complexType(withName: "SAPB1.ItemIntrastatExtension")
        }
        if !B1ClassMetadata.ComplexTypes.itemLocalizationInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.itemLocalizationInfo = metadata.complexType(withName: "SAPB1.ItemLocalizationInfo")
        }
        if !B1ClassMetadata.ComplexTypes.itemParams.isRemoved {
            B1ClassMetadata.ComplexTypes.itemParams = metadata.complexType(withName: "SAPB1.ItemParams")
        }
        if !B1ClassMetadata.ComplexTypes.itemPeriodControl.isRemoved {
            B1ClassMetadata.ComplexTypes.itemPeriodControl = metadata.complexType(withName: "SAPB1.ItemPeriodControl")
        }
        if !B1ClassMetadata.ComplexTypes.itemPreferredVendor.isRemoved {
            B1ClassMetadata.ComplexTypes.itemPreferredVendor = metadata.complexType(withName: "SAPB1.ItemPreferredVendor")
        }
        if !B1ClassMetadata.ComplexTypes.itemPrice.isRemoved {
            B1ClassMetadata.ComplexTypes.itemPrice = metadata.complexType(withName: "SAPB1.ItemPrice")
        }
        if !B1ClassMetadata.ComplexTypes.itemPriceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.itemPriceParams = metadata.complexType(withName: "SAPB1.ItemPriceParams")
        }
        if !B1ClassMetadata.ComplexTypes.itemPriceReturnParams.isRemoved {
            B1ClassMetadata.ComplexTypes.itemPriceReturnParams = metadata.complexType(withName: "SAPB1.ItemPriceReturnParams")
        }
        if !B1ClassMetadata.ComplexTypes.itemProject.isRemoved {
            B1ClassMetadata.ComplexTypes.itemProject = metadata.complexType(withName: "SAPB1.ItemProject")
        }
        if !B1ClassMetadata.ComplexTypes.itemPropertyParams.isRemoved {
            B1ClassMetadata.ComplexTypes.itemPropertyParams = metadata.complexType(withName: "SAPB1.ItemPropertyParams")
        }
        if !B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement.isRemoved {
            B1ClassMetadata.ComplexTypes.itemUnitOfMeasurement = metadata.complexType(withName: "SAPB1.ItemUnitOfMeasurement")
        }
        if !B1ClassMetadata.ComplexTypes.itemUoMPackage.isRemoved {
            B1ClassMetadata.ComplexTypes.itemUoMPackage = metadata.complexType(withName: "SAPB1.ItemUoMPackage")
        }
        if !B1ClassMetadata.ComplexTypes.itemWarehouseInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.itemWarehouseInfo = metadata.complexType(withName: "SAPB1.ItemWarehouseInfo")
        }
        if !B1ClassMetadata.ComplexTypes.journalEntryDocumentTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.journalEntryDocumentTypeParams = metadata.complexType(withName: "SAPB1.JournalEntryDocumentTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.journalEntryLine.isRemoved {
            B1ClassMetadata.ComplexTypes.journalEntryLine = metadata.complexType(withName: "SAPB1.JournalEntryLine")
        }
        if !B1ClassMetadata.ComplexTypes.journalEntryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.journalEntryParams = metadata.complexType(withName: "SAPB1.JournalEntryParams")
        }
        if !B1ClassMetadata.ComplexTypes.kpiParams.isRemoved {
            B1ClassMetadata.ComplexTypes.kpiParams = metadata.complexType(withName: "SAPB1.KPIParams")
        }
        if !B1ClassMetadata.ComplexTypes.kpiItemLine.isRemoved {
            B1ClassMetadata.ComplexTypes.kpiItemLine = metadata.complexType(withName: "SAPB1.KPI_ItemLine")
        }
        if !B1ClassMetadata.ComplexTypes.knowledgeBaseSolutionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.knowledgeBaseSolutionParams = metadata.complexType(withName: "SAPB1.KnowledgeBaseSolutionParams")
        }
        if !B1ClassMetadata.ComplexTypes.landedCostParams.isRemoved {
            B1ClassMetadata.ComplexTypes.landedCostParams = metadata.complexType(withName: "SAPB1.LandedCostParams")
        }
        if !B1ClassMetadata.ComplexTypes.landedCostCostLine.isRemoved {
            B1ClassMetadata.ComplexTypes.landedCostCostLine = metadata.complexType(withName: "SAPB1.LandedCost_CostLine")
        }
        if !B1ClassMetadata.ComplexTypes.landedCostItemLine.isRemoved {
            B1ClassMetadata.ComplexTypes.landedCostItemLine = metadata.complexType(withName: "SAPB1.LandedCost_ItemLine")
        }
        if !B1ClassMetadata.ComplexTypes.landedCostsCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.landedCostsCodeParams = metadata.complexType(withName: "SAPB1.LandedCostsCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.layer.isRemoved {
            B1ClassMetadata.ComplexTypes.layer = metadata.complexType(withName: "SAPB1.Layer")
        }
        if !B1ClassMetadata.ComplexTypes.legalDataDetail.isRemoved {
            B1ClassMetadata.ComplexTypes.legalDataDetail = metadata.complexType(withName: "SAPB1.LegalDataDetail")
        }
        if !B1ClassMetadata.ComplexTypes.legalDataParams.isRemoved {
            B1ClassMetadata.ComplexTypes.legalDataParams = metadata.complexType(withName: "SAPB1.LegalDataParams")
        }
        if !B1ClassMetadata.ComplexTypes.lengthMeasureParams.isRemoved {
            B1ClassMetadata.ComplexTypes.lengthMeasureParams = metadata.complexType(withName: "SAPB1.LengthMeasureParams")
        }
        if !B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction.isRemoved {
            B1ClassMetadata.ComplexTypes.lineExpenseTaxJurisdiction = metadata.complexType(withName: "SAPB1.LineExpenseTaxJurisdiction")
        }
        if !B1ClassMetadata.ComplexTypes.lineTaxJurisdiction.isRemoved {
            B1ClassMetadata.ComplexTypes.lineTaxJurisdiction = metadata.complexType(withName: "SAPB1.LineTaxJurisdiction")
        }
        if !B1ClassMetadata.ComplexTypes.localEraParams.isRemoved {
            B1ClassMetadata.ComplexTypes.localEraParams = metadata.complexType(withName: "SAPB1.LocalEraParams")
        }
        if !B1ClassMetadata.ComplexTypes.manufacturerParams.isRemoved {
            B1ClassMetadata.ComplexTypes.manufacturerParams = metadata.complexType(withName: "SAPB1.ManufacturerParams")
        }
        if !B1ClassMetadata.ComplexTypes.materialGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.materialGroupParams = metadata.complexType(withName: "SAPB1.MaterialGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.materialRevaluationFIFO.isRemoved {
            B1ClassMetadata.ComplexTypes.materialRevaluationFIFO = metadata.complexType(withName: "SAPB1.MaterialRevaluationFIFO")
        }
        if !B1ClassMetadata.ComplexTypes.materialRevaluationFIFOParams.isRemoved {
            B1ClassMetadata.ComplexTypes.materialRevaluationFIFOParams = metadata.complexType(withName: "SAPB1.MaterialRevaluationFIFOParams")
        }
        if !B1ClassMetadata.ComplexTypes.materialRevaluationLine.isRemoved {
            B1ClassMetadata.ComplexTypes.materialRevaluationLine = metadata.complexType(withName: "SAPB1.MaterialRevaluationLine")
        }
        if !B1ClassMetadata.ComplexTypes.materialRevaluationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.materialRevaluationParams = metadata.complexType(withName: "SAPB1.MaterialRevaluationParams")
        }
        if !B1ClassMetadata.ComplexTypes.materialRevaluationSNBParam.isRemoved {
            B1ClassMetadata.ComplexTypes.materialRevaluationSNBParam = metadata.complexType(withName: "SAPB1.MaterialRevaluationSNBParam")
        }
        if !B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams.isRemoved {
            B1ClassMetadata.ComplexTypes.materialRevaluationSNBParams = metadata.complexType(withName: "SAPB1.MaterialRevaluationSNBParams")
        }
        if !B1ClassMetadata.ComplexTypes.messageDataColumn.isRemoved {
            B1ClassMetadata.ComplexTypes.messageDataColumn = metadata.complexType(withName: "SAPB1.MessageDataColumn")
        }
        if !B1ClassMetadata.ComplexTypes.messageDataLine.isRemoved {
            B1ClassMetadata.ComplexTypes.messageDataLine = metadata.complexType(withName: "SAPB1.MessageDataLine")
        }
        if !B1ClassMetadata.ComplexTypes.messageHeader.isRemoved {
            B1ClassMetadata.ComplexTypes.messageHeader = metadata.complexType(withName: "SAPB1.MessageHeader")
        }
        if !B1ClassMetadata.ComplexTypes.mobileAddOnSettingParams.isRemoved {
            B1ClassMetadata.ComplexTypes.mobileAddOnSettingParams = metadata.complexType(withName: "SAPB1.MobileAddOnSettingParams")
        }
        if !B1ClassMetadata.ComplexTypes.mobileServerDateTime.isRemoved {
            B1ClassMetadata.ComplexTypes.mobileServerDateTime = metadata.complexType(withName: "SAPB1.MobileServerDateTime")
        }
        if !B1ClassMetadata.ComplexTypes.multiLanguageTranslationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.multiLanguageTranslationParams = metadata.complexType(withName: "SAPB1.MultiLanguageTranslationParams")
        }
        if !B1ClassMetadata.ComplexTypes.multiplePayment.isRemoved {
            B1ClassMetadata.ComplexTypes.multiplePayment = metadata.complexType(withName: "SAPB1.MultiplePayment")
        }
        if !B1ClassMetadata.ComplexTypes.ncmCodeSetupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.ncmCodeSetupParams = metadata.complexType(withName: "SAPB1.NCMCodeSetupParams")
        }
        if !B1ClassMetadata.ComplexTypes.nfModelParams.isRemoved {
            B1ClassMetadata.ComplexTypes.nfModelParams = metadata.complexType(withName: "SAPB1.NFModelParams")
        }
        if !B1ClassMetadata.ComplexTypes.nfTaxCategoryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.nfTaxCategoryParams = metadata.complexType(withName: "SAPB1.NFTaxCategoryParams")
        }
        if !B1ClassMetadata.ComplexTypes.natureOfAssesseeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.natureOfAssesseeParams = metadata.complexType(withName: "SAPB1.NatureOfAssesseeParams")
        }
        if !B1ClassMetadata.ComplexTypes.occurenceCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.occurenceCodeParams = metadata.complexType(withName: "SAPB1.OccurenceCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.openningBalanceAccount.isRemoved {
            B1ClassMetadata.ComplexTypes.openningBalanceAccount = metadata.complexType(withName: "SAPB1.OpenningBalanceAccount")
        }
        if !B1ClassMetadata.ComplexTypes.originalItem.isRemoved {
            B1ClassMetadata.ComplexTypes.originalItem = metadata.complexType(withName: "SAPB1.OriginalItem")
        }
        if !B1ClassMetadata.ComplexTypes.originalItemParams.isRemoved {
            B1ClassMetadata.ComplexTypes.originalItemParams = metadata.complexType(withName: "SAPB1.OriginalItemParams")
        }
        if !B1ClassMetadata.ComplexTypes.pmcActivityData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmcActivityData = metadata.complexType(withName: "SAPB1.PMC_ActivityData")
        }
        if !B1ClassMetadata.ComplexTypes.pmcAreaData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmcAreaData = metadata.complexType(withName: "SAPB1.PMC_AreaData")
        }
        if !B1ClassMetadata.ComplexTypes.pmcPriorityData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmcPriorityData = metadata.complexType(withName: "SAPB1.PMC_PriorityData")
        }
        if !B1ClassMetadata.ComplexTypes.pmcStageTypeData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmcStageTypeData = metadata.complexType(withName: "SAPB1.PMC_StageTypeData")
        }
        if !B1ClassMetadata.ComplexTypes.pmcSubprojectTypeData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmcSubprojectTypeData = metadata.complexType(withName: "SAPB1.PMC_SubprojectTypeData")
        }
        if !B1ClassMetadata.ComplexTypes.pmcTaskData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmcTaskData = metadata.complexType(withName: "SAPB1.PMC_TaskData")
        }
        if !B1ClassMetadata.ComplexTypes.pmsActivityData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmsActivityData = metadata.complexType(withName: "SAPB1.PMS_ActivityData")
        }
        if !B1ClassMetadata.ComplexTypes.pmsDocAttachement.isRemoved {
            B1ClassMetadata.ComplexTypes.pmsDocAttachement = metadata.complexType(withName: "SAPB1.PMS_DocAttachement")
        }
        if !B1ClassMetadata.ComplexTypes.pmsDocumentData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmsDocumentData = metadata.complexType(withName: "SAPB1.PMS_DocumentData")
        }
        if !B1ClassMetadata.ComplexTypes.pmsOpenIssueData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmsOpenIssueData = metadata.complexType(withName: "SAPB1.PMS_OpenIssueData")
        }
        if !B1ClassMetadata.ComplexTypes.pmsStageAttachement.isRemoved {
            B1ClassMetadata.ComplexTypes.pmsStageAttachement = metadata.complexType(withName: "SAPB1.PMS_StageAttachement")
        }
        if !B1ClassMetadata.ComplexTypes.pmsStageData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmsStageData = metadata.complexType(withName: "SAPB1.PMS_StageData")
        }
        if !B1ClassMetadata.ComplexTypes.pmsSummaryData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmsSummaryData = metadata.complexType(withName: "SAPB1.PMS_SummaryData")
        }
        if !B1ClassMetadata.ComplexTypes.pmsWorkOrderData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmsWorkOrderData = metadata.complexType(withName: "SAPB1.PMS_WorkOrderData")
        }
        if !B1ClassMetadata.ComplexTypes.pmActivityData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmActivityData = metadata.complexType(withName: "SAPB1.PM_ActivityData")
        }
        if !B1ClassMetadata.ComplexTypes.pmDocAttachement.isRemoved {
            B1ClassMetadata.ComplexTypes.pmDocAttachement = metadata.complexType(withName: "SAPB1.PM_DocAttachement")
        }
        if !B1ClassMetadata.ComplexTypes.pmDocumentData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmDocumentData = metadata.complexType(withName: "SAPB1.PM_DocumentData")
        }
        if !B1ClassMetadata.ComplexTypes.pmOpenIssueData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmOpenIssueData = metadata.complexType(withName: "SAPB1.PM_OpenIssueData")
        }
        if !B1ClassMetadata.ComplexTypes.pmProjectDocumentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.pmProjectDocumentParams = metadata.complexType(withName: "SAPB1.PM_ProjectDocumentParams")
        }
        if !B1ClassMetadata.ComplexTypes.pmStageAttachement.isRemoved {
            B1ClassMetadata.ComplexTypes.pmStageAttachement = metadata.complexType(withName: "SAPB1.PM_StageAttachement")
        }
        if !B1ClassMetadata.ComplexTypes.pmStageData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmStageData = metadata.complexType(withName: "SAPB1.PM_StageData")
        }
        if !B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmSubprojectDocumentData = metadata.complexType(withName: "SAPB1.PM_SubprojectDocumentData")
        }
        if !B1ClassMetadata.ComplexTypes.pmSubprojectDocumentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.pmSubprojectDocumentParams = metadata.complexType(withName: "SAPB1.PM_SubprojectDocumentParams")
        }
        if !B1ClassMetadata.ComplexTypes.pmSubprojectParams.isRemoved {
            B1ClassMetadata.ComplexTypes.pmSubprojectParams = metadata.complexType(withName: "SAPB1.PM_SubprojectParams")
        }
        if !B1ClassMetadata.ComplexTypes.pmSummaryData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmSummaryData = metadata.complexType(withName: "SAPB1.PM_SummaryData")
        }
        if !B1ClassMetadata.ComplexTypes.pmTimeSheetLineData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmTimeSheetLineData = metadata.complexType(withName: "SAPB1.PM_TimeSheetLineData")
        }
        if !B1ClassMetadata.ComplexTypes.pmTimeSheetParams.isRemoved {
            B1ClassMetadata.ComplexTypes.pmTimeSheetParams = metadata.complexType(withName: "SAPB1.PM_TimeSheetParams")
        }
        if !B1ClassMetadata.ComplexTypes.pmWorkOrderData.isRemoved {
            B1ClassMetadata.ComplexTypes.pmWorkOrderData = metadata.complexType(withName: "SAPB1.PM_WorkOrderData")
        }
        if !B1ClassMetadata.ComplexTypes.posDailySummaryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.posDailySummaryParams = metadata.complexType(withName: "SAPB1.POSDailySummaryParams")
        }
        if !B1ClassMetadata.ComplexTypes.posTotalizer.isRemoved {
            B1ClassMetadata.ComplexTypes.posTotalizer = metadata.complexType(withName: "SAPB1.POSTotalizer")
        }
        if !B1ClassMetadata.ComplexTypes.packagesTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.packagesTypeParams = metadata.complexType(withName: "SAPB1.PackagesTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.partnersSetupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.partnersSetupParams = metadata.complexType(withName: "SAPB1.PartnersSetupParams")
        }
        if !B1ClassMetadata.ComplexTypes.pathAdmin.isRemoved {
            B1ClassMetadata.ComplexTypes.pathAdmin = metadata.complexType(withName: "SAPB1.PathAdmin")
        }
        if !B1ClassMetadata.ComplexTypes.paymentAccount.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentAccount = metadata.complexType(withName: "SAPB1.PaymentAccount")
        }
        if !B1ClassMetadata.ComplexTypes.paymentAmountParams.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentAmountParams = metadata.complexType(withName: "SAPB1.PaymentAmountParams")
        }
        if !B1ClassMetadata.ComplexTypes.paymentBPCode.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentBPCode = metadata.complexType(withName: "SAPB1.PaymentBPCode")
        }
        if !B1ClassMetadata.ComplexTypes.paymentBlockParams.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentBlockParams = metadata.complexType(withName: "SAPB1.PaymentBlockParams")
        }
        if !B1ClassMetadata.ComplexTypes.paymentCheck.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentCheck = metadata.complexType(withName: "SAPB1.PaymentCheck")
        }
        if !B1ClassMetadata.ComplexTypes.paymentCreditCard.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentCreditCard = metadata.complexType(withName: "SAPB1.PaymentCreditCard")
        }
        if !B1ClassMetadata.ComplexTypes.paymentInvoice.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentInvoice = metadata.complexType(withName: "SAPB1.PaymentInvoice")
        }
        if !B1ClassMetadata.ComplexTypes.paymentInvoiceEntry.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentInvoiceEntry = metadata.complexType(withName: "SAPB1.PaymentInvoiceEntry")
        }
        if !B1ClassMetadata.ComplexTypes.paymentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentParams = metadata.complexType(withName: "SAPB1.PaymentParams")
        }
        if !B1ClassMetadata.ComplexTypes.paymentRunExportParams.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentRunExportParams = metadata.complexType(withName: "SAPB1.PaymentRunExportParams")
        }
        if !B1ClassMetadata.ComplexTypes.paymentRunExportLine.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentRunExportLine = metadata.complexType(withName: "SAPB1.PaymentRunExport_Line")
        }
        if !B1ClassMetadata.ComplexTypes.paymentTermsTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentTermsTypeParams = metadata.complexType(withName: "SAPB1.PaymentTermsTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.paymentsApprovalRequest.isRemoved {
            B1ClassMetadata.ComplexTypes.paymentsApprovalRequest = metadata.complexType(withName: "SAPB1.Payments_ApprovalRequest")
        }
        if !B1ClassMetadata.ComplexTypes.periodCategory.isRemoved {
            B1ClassMetadata.ComplexTypes.periodCategory = metadata.complexType(withName: "SAPB1.PeriodCategory")
        }
        if !B1ClassMetadata.ComplexTypes.periodCategoryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.periodCategoryParams = metadata.complexType(withName: "SAPB1.PeriodCategoryParams")
        }
        if !B1ClassMetadata.ComplexTypes.pickListParams.isRemoved {
            B1ClassMetadata.ComplexTypes.pickListParams = metadata.complexType(withName: "SAPB1.PickListParams")
        }
        if !B1ClassMetadata.ComplexTypes.pickListsLine.isRemoved {
            B1ClassMetadata.ComplexTypes.pickListsLine = metadata.complexType(withName: "SAPB1.PickListsLine")
        }
        if !B1ClassMetadata.ComplexTypes.predefinedTextParams.isRemoved {
            B1ClassMetadata.ComplexTypes.predefinedTextParams = metadata.complexType(withName: "SAPB1.PredefinedTextParams")
        }
        if !B1ClassMetadata.ComplexTypes.priceListParams.isRemoved {
            B1ClassMetadata.ComplexTypes.priceListParams = metadata.complexType(withName: "SAPB1.PriceListParams")
        }
        if !B1ClassMetadata.ComplexTypes.productTreeLine.isRemoved {
            B1ClassMetadata.ComplexTypes.productTreeLine = metadata.complexType(withName: "SAPB1.ProductTreeLine")
        }
        if !B1ClassMetadata.ComplexTypes.productTreeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.productTreeParams = metadata.complexType(withName: "SAPB1.ProductTreeParams")
        }
        if !B1ClassMetadata.ComplexTypes.productTreeStage.isRemoved {
            B1ClassMetadata.ComplexTypes.productTreeStage = metadata.complexType(withName: "SAPB1.ProductTreeStage")
        }
        if !B1ClassMetadata.ComplexTypes.productionOrderLine.isRemoved {
            B1ClassMetadata.ComplexTypes.productionOrderLine = metadata.complexType(withName: "SAPB1.ProductionOrderLine")
        }
        if !B1ClassMetadata.ComplexTypes.productionOrderParams.isRemoved {
            B1ClassMetadata.ComplexTypes.productionOrderParams = metadata.complexType(withName: "SAPB1.ProductionOrderParams")
        }
        if !B1ClassMetadata.ComplexTypes.productionOrdersSalesOrderLine.isRemoved {
            B1ClassMetadata.ComplexTypes.productionOrdersSalesOrderLine = metadata.complexType(withName: "SAPB1.ProductionOrdersSalesOrderLine")
        }
        if !B1ClassMetadata.ComplexTypes.productionOrdersStage.isRemoved {
            B1ClassMetadata.ComplexTypes.productionOrdersStage = metadata.complexType(withName: "SAPB1.ProductionOrdersStage")
        }
        if !B1ClassMetadata.ComplexTypes.profitCenterParams.isRemoved {
            B1ClassMetadata.ComplexTypes.profitCenterParams = metadata.complexType(withName: "SAPB1.ProfitCenterParams")
        }
        if !B1ClassMetadata.ComplexTypes.progressiveTaxLine.isRemoved {
            B1ClassMetadata.ComplexTypes.progressiveTaxLine = metadata.complexType(withName: "SAPB1.ProgressiveTax_Line")
        }
        if !B1ClassMetadata.ComplexTypes.projectParams.isRemoved {
            B1ClassMetadata.ComplexTypes.projectParams = metadata.complexType(withName: "SAPB1.ProjectParams")
        }
        if !B1ClassMetadata.ComplexTypes.purchaseTaxInvoiceLine.isRemoved {
            B1ClassMetadata.ComplexTypes.purchaseTaxInvoiceLine = metadata.complexType(withName: "SAPB1.PurchaseTaxInvoiceLine")
        }
        if !B1ClassMetadata.ComplexTypes.purchaseTaxInvoiceOperationCode.isRemoved {
            B1ClassMetadata.ComplexTypes.purchaseTaxInvoiceOperationCode = metadata.complexType(withName: "SAPB1.PurchaseTaxInvoiceOperationCode")
        }
        if !B1ClassMetadata.ComplexTypes.queryAuthGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.queryAuthGroupParams = metadata.complexType(withName: "SAPB1.QueryAuthGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.queryCategoryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.queryCategoryParams = metadata.complexType(withName: "SAPB1.QueryCategoryParams")
        }
        if !B1ClassMetadata.ComplexTypes.queueMember.isRemoved {
            B1ClassMetadata.ComplexTypes.queueMember = metadata.complexType(withName: "SAPB1.QueueMember")
        }
        if !B1ClassMetadata.ComplexTypes.queueParams.isRemoved {
            B1ClassMetadata.ComplexTypes.queueParams = metadata.complexType(withName: "SAPB1.QueueParams")
        }
        if !B1ClassMetadata.ComplexTypes.rclRecurringExecutionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.rclRecurringExecutionParams = metadata.complexType(withName: "SAPB1.RclRecurringExecutionParams")
        }
        if !B1ClassMetadata.ComplexTypes.rclRecurringTransaction.isRemoved {
            B1ClassMetadata.ComplexTypes.rclRecurringTransaction = metadata.complexType(withName: "SAPB1.RclRecurringTransaction")
        }
        if !B1ClassMetadata.ComplexTypes.rclRecurringTransactionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.rclRecurringTransactionParams = metadata.complexType(withName: "SAPB1.RclRecurringTransactionParams")
        }
        if !B1ClassMetadata.ComplexTypes.recipient.isRemoved {
            B1ClassMetadata.ComplexTypes.recipient = metadata.complexType(withName: "SAPB1.Recipient")
        }
        if !B1ClassMetadata.ComplexTypes.reconciliationBankStatementLine.isRemoved {
            B1ClassMetadata.ComplexTypes.reconciliationBankStatementLine = metadata.complexType(withName: "SAPB1.ReconciliationBankStatementLine")
        }
        if !B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine.isRemoved {
            B1ClassMetadata.ComplexTypes.reconciliationJournalEntryLine = metadata.complexType(withName: "SAPB1.ReconciliationJournalEntryLine")
        }
        if !B1ClassMetadata.ComplexTypes.recordsetParams.isRemoved {
            B1ClassMetadata.ComplexTypes.recordsetParams = metadata.complexType(withName: "SAPB1.RecordsetParams")
        }
        if !B1ClassMetadata.ComplexTypes.relationshipParams.isRemoved {
            B1ClassMetadata.ComplexTypes.relationshipParams = metadata.complexType(withName: "SAPB1.RelationshipParams")
        }
        if !B1ClassMetadata.ComplexTypes.reportInputParams.isRemoved {
            B1ClassMetadata.ComplexTypes.reportInputParams = metadata.complexType(withName: "SAPB1.ReportInputParams")
        }
        if !B1ClassMetadata.ComplexTypes.reportLayout.isRemoved {
            B1ClassMetadata.ComplexTypes.reportLayout = metadata.complexType(withName: "SAPB1.ReportLayout")
        }
        if !B1ClassMetadata.ComplexTypes.reportLayoutItem.isRemoved {
            B1ClassMetadata.ComplexTypes.reportLayoutItem = metadata.complexType(withName: "SAPB1.ReportLayoutItem")
        }
        if !B1ClassMetadata.ComplexTypes.reportLayoutParams.isRemoved {
            B1ClassMetadata.ComplexTypes.reportLayoutParams = metadata.complexType(withName: "SAPB1.ReportLayoutParams")
        }
        if !B1ClassMetadata.ComplexTypes.reportLayoutPrintParams.isRemoved {
            B1ClassMetadata.ComplexTypes.reportLayoutPrintParams = metadata.complexType(withName: "SAPB1.ReportLayoutPrintParams")
        }
        if !B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine.isRemoved {
            B1ClassMetadata.ComplexTypes.reportLayoutTranslationLine = metadata.complexType(withName: "SAPB1.ReportLayout_TranslationLine")
        }
        if !B1ClassMetadata.ComplexTypes.reportParams.isRemoved {
            B1ClassMetadata.ComplexTypes.reportParams = metadata.complexType(withName: "SAPB1.ReportParams")
        }
        if !B1ClassMetadata.ComplexTypes.reportTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.reportTypeParams = metadata.complexType(withName: "SAPB1.ReportTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.resourceCapacityParams.isRemoved {
            B1ClassMetadata.ComplexTypes.resourceCapacityParams = metadata.complexType(withName: "SAPB1.ResourceCapacityParams")
        }
        if !B1ClassMetadata.ComplexTypes.resourceCapacityWithFilterParams.isRemoved {
            B1ClassMetadata.ComplexTypes.resourceCapacityWithFilterParams = metadata.complexType(withName: "SAPB1.ResourceCapacityWithFilterParams")
        }
        if !B1ClassMetadata.ComplexTypes.resourceDailyCapacity.isRemoved {
            B1ClassMetadata.ComplexTypes.resourceDailyCapacity = metadata.complexType(withName: "SAPB1.ResourceDailyCapacity")
        }
        if !B1ClassMetadata.ComplexTypes.resourceEmployee.isRemoved {
            B1ClassMetadata.ComplexTypes.resourceEmployee = metadata.complexType(withName: "SAPB1.ResourceEmployee")
        }
        if !B1ClassMetadata.ComplexTypes.resourceFixedAsset.isRemoved {
            B1ClassMetadata.ComplexTypes.resourceFixedAsset = metadata.complexType(withName: "SAPB1.ResourceFixedAsset")
        }
        if !B1ClassMetadata.ComplexTypes.resourceGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.resourceGroupParams = metadata.complexType(withName: "SAPB1.ResourceGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.resourceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.resourceParams = metadata.complexType(withName: "SAPB1.ResourceParams")
        }
        if !B1ClassMetadata.ComplexTypes.resourcePropertyParams.isRemoved {
            B1ClassMetadata.ComplexTypes.resourcePropertyParams = metadata.complexType(withName: "SAPB1.ResourcePropertyParams")
        }
        if !B1ClassMetadata.ComplexTypes.resourceWarehouse.isRemoved {
            B1ClassMetadata.ComplexTypes.resourceWarehouse = metadata.complexType(withName: "SAPB1.ResourceWarehouse")
        }
        if !B1ClassMetadata.ComplexTypes.retornoCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.retornoCodeParams = metadata.complexType(withName: "SAPB1.RetornoCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.roundedData.isRemoved {
            B1ClassMetadata.ComplexTypes.roundedData = metadata.complexType(withName: "SAPB1.RoundedData")
        }
        if !B1ClassMetadata.ComplexTypes.routeStageParams.isRemoved {
            B1ClassMetadata.ComplexTypes.routeStageParams = metadata.complexType(withName: "SAPB1.RouteStageParams")
        }
        if !B1ClassMetadata.ComplexTypes.routingDateCalculationInput.isRemoved {
            B1ClassMetadata.ComplexTypes.routingDateCalculationInput = metadata.complexType(withName: "SAPB1.RoutingDateCalculationInput")
        }
        if !B1ClassMetadata.ComplexTypes.routingDateCalculationOutput.isRemoved {
            B1ClassMetadata.ComplexTypes.routingDateCalculationOutput = metadata.complexType(withName: "SAPB1.RoutingDateCalculationOutput")
        }
        if !B1ClassMetadata.ComplexTypes.snbLines.isRemoved {
            B1ClassMetadata.ComplexTypes.snbLines = metadata.complexType(withName: "SAPB1.SNBLines")
        }
        if !B1ClassMetadata.ComplexTypes.salesForecastLine.isRemoved {
            B1ClassMetadata.ComplexTypes.salesForecastLine = metadata.complexType(withName: "SAPB1.SalesForecastLine")
        }
        if !B1ClassMetadata.ComplexTypes.salesForecastParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesForecastParams = metadata.complexType(withName: "SAPB1.SalesForecastParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunitiesCompetitionItem.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunitiesCompetitionItem = metadata.complexType(withName: "SAPB1.SalesOpportunitiesCompetitionItem")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunitiesInterest.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunitiesInterest = metadata.complexType(withName: "SAPB1.SalesOpportunitiesInterest")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunitiesLine.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunitiesLine = metadata.complexType(withName: "SAPB1.SalesOpportunitiesLine")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunitiesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunitiesParams = metadata.complexType(withName: "SAPB1.SalesOpportunitiesParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunitiesPartner.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunitiesPartner = metadata.complexType(withName: "SAPB1.SalesOpportunitiesPartner")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunitiesReason.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunitiesReason = metadata.complexType(withName: "SAPB1.SalesOpportunitiesReason")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunityCompetitorSetupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunityCompetitorSetupParams = metadata.complexType(withName: "SAPB1.SalesOpportunityCompetitorSetupParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunityInterestSetupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunityInterestSetupParams = metadata.complexType(withName: "SAPB1.SalesOpportunityInterestSetupParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunityReasonSetupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunityReasonSetupParams = metadata.complexType(withName: "SAPB1.SalesOpportunityReasonSetupParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesOpportunitySourceSetupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesOpportunitySourceSetupParams = metadata.complexType(withName: "SAPB1.SalesOpportunitySourceSetupParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesPersonParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesPersonParams = metadata.complexType(withName: "SAPB1.SalesPersonParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesStageParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesStageParams = metadata.complexType(withName: "SAPB1.SalesStageParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesTaxAuthoritiesTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesTaxAuthoritiesTypeParams = metadata.complexType(withName: "SAPB1.SalesTaxAuthoritiesTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesTaxAuthorityParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesTaxAuthorityParams = metadata.complexType(withName: "SAPB1.SalesTaxAuthorityParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesTaxCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.salesTaxCodeParams = metadata.complexType(withName: "SAPB1.SalesTaxCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.salesTaxCodesLine.isRemoved {
            B1ClassMetadata.ComplexTypes.salesTaxCodesLine = metadata.complexType(withName: "SAPB1.SalesTaxCodes_Line")
        }
        if !B1ClassMetadata.ComplexTypes.salesTaxInvoiceLine.isRemoved {
            B1ClassMetadata.ComplexTypes.salesTaxInvoiceLine = metadata.complexType(withName: "SAPB1.SalesTaxInvoiceLine")
        }
        if !B1ClassMetadata.ComplexTypes.salesTaxInvoiceOperationCode.isRemoved {
            B1ClassMetadata.ComplexTypes.salesTaxInvoiceOperationCode = metadata.complexType(withName: "SAPB1.SalesTaxInvoiceOperationCode")
        }
        if !B1ClassMetadata.ComplexTypes.sectionParams.isRemoved {
            B1ClassMetadata.ComplexTypes.sectionParams = metadata.complexType(withName: "SAPB1.SectionParams")
        }
        if !B1ClassMetadata.ComplexTypes.sensitiveDataAccess.isRemoved {
            B1ClassMetadata.ComplexTypes.sensitiveDataAccess = metadata.complexType(withName: "SAPB1.SensitiveDataAccess")
        }
        if !B1ClassMetadata.ComplexTypes.serialNumber.isRemoved {
            B1ClassMetadata.ComplexTypes.serialNumber = metadata.complexType(withName: "SAPB1.SerialNumber")
        }
        if !B1ClassMetadata.ComplexTypes.serialNumberDetailParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serialNumberDetailParams = metadata.complexType(withName: "SAPB1.SerialNumberDetailParams")
        }
        if !B1ClassMetadata.ComplexTypes.series.isRemoved {
            B1ClassMetadata.ComplexTypes.series = metadata.complexType(withName: "SAPB1.Series")
        }
        if !B1ClassMetadata.ComplexTypes.seriesLine.isRemoved {
            B1ClassMetadata.ComplexTypes.seriesLine = metadata.complexType(withName: "SAPB1.SeriesLine")
        }
        if !B1ClassMetadata.ComplexTypes.seriesParams.isRemoved {
            B1ClassMetadata.ComplexTypes.seriesParams = metadata.complexType(withName: "SAPB1.SeriesParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceAppReport.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceAppReport = metadata.complexType(withName: "SAPB1.ServiceAppReport")
        }
        if !B1ClassMetadata.ComplexTypes.serviceAppReportContent.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceAppReportContent = metadata.complexType(withName: "SAPB1.ServiceAppReportContent")
        }
    }

    private static func merge7(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1ClassMetadata.ComplexTypes.serviceAppReportParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceAppReportParams = metadata.complexType(withName: "SAPB1.ServiceAppReportParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallActivity.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallActivity = metadata.complexType(withName: "SAPB1.ServiceCallActivity")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallBPAddressComponent = metadata.complexType(withName: "SAPB1.ServiceCallBPAddressComponent")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallInventoryExpense = metadata.complexType(withName: "SAPB1.ServiceCallInventoryExpense")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallOriginParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallOriginParams = metadata.complexType(withName: "SAPB1.ServiceCallOriginParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallParams = metadata.complexType(withName: "SAPB1.ServiceCallParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallProblemSubTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallProblemSubTypeParams = metadata.complexType(withName: "SAPB1.ServiceCallProblemSubTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallProblemTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallProblemTypeParams = metadata.complexType(withName: "SAPB1.ServiceCallProblemTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallScheduling.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallScheduling = metadata.complexType(withName: "SAPB1.ServiceCallScheduling")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallSolution.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallSolution = metadata.complexType(withName: "SAPB1.ServiceCallSolution")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallSolutionStatusParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallSolutionStatusParams = metadata.complexType(withName: "SAPB1.ServiceCallSolutionStatusParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallStatusParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallStatusParams = metadata.complexType(withName: "SAPB1.ServiceCallStatusParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceCallTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceCallTypeParams = metadata.complexType(withName: "SAPB1.ServiceCallTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceContractParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceContractParams = metadata.complexType(withName: "SAPB1.ServiceContractParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceContractLine.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceContractLine = metadata.complexType(withName: "SAPB1.ServiceContract_Line")
        }
        if !B1ClassMetadata.ComplexTypes.serviceGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceGroupParams = metadata.complexType(withName: "SAPB1.ServiceGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.serviceTaxPostingParams.isRemoved {
            B1ClassMetadata.ComplexTypes.serviceTaxPostingParams = metadata.complexType(withName: "SAPB1.ServiceTaxPostingParams")
        }
        if !B1ClassMetadata.ComplexTypes.shippingTypeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.shippingTypeParams = metadata.complexType(withName: "SAPB1.ShippingTypeParams")
        }
        if !B1ClassMetadata.ComplexTypes.showDifferenceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.showDifferenceParams = metadata.complexType(withName: "SAPB1.ShowDifferenceParams")
        }
        if !B1ClassMetadata.ComplexTypes.specialPriceDataArea.isRemoved {
            B1ClassMetadata.ComplexTypes.specialPriceDataArea = metadata.complexType(withName: "SAPB1.SpecialPriceDataArea")
        }
        if !B1ClassMetadata.ComplexTypes.specialPriceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.specialPriceParams = metadata.complexType(withName: "SAPB1.SpecialPriceParams")
        }
        if !B1ClassMetadata.ComplexTypes.specialPriceQuantityArea.isRemoved {
            B1ClassMetadata.ComplexTypes.specialPriceQuantityArea = metadata.complexType(withName: "SAPB1.SpecialPriceQuantityArea")
        }
        if !B1ClassMetadata.ComplexTypes.stateParams.isRemoved {
            B1ClassMetadata.ComplexTypes.stateParams = metadata.complexType(withName: "SAPB1.StateParams")
        }
        if !B1ClassMetadata.ComplexTypes.stockTakingParams.isRemoved {
            B1ClassMetadata.ComplexTypes.stockTakingParams = metadata.complexType(withName: "SAPB1.StockTakingParams")
        }
        if !B1ClassMetadata.ComplexTypes.stockTransferLine.isRemoved {
            B1ClassMetadata.ComplexTypes.stockTransferLine = metadata.complexType(withName: "SAPB1.StockTransferLine")
        }
        if !B1ClassMetadata.ComplexTypes.stockTransferLinesBinAllocation.isRemoved {
            B1ClassMetadata.ComplexTypes.stockTransferLinesBinAllocation = metadata.complexType(withName: "SAPB1.StockTransferLinesBinAllocation")
        }
        if !B1ClassMetadata.ComplexTypes.stockTransferParams.isRemoved {
            B1ClassMetadata.ComplexTypes.stockTransferParams = metadata.complexType(withName: "SAPB1.StockTransferParams")
        }
        if !B1ClassMetadata.ComplexTypes.stockTransferTaxExtension.isRemoved {
            B1ClassMetadata.ComplexTypes.stockTransferTaxExtension = metadata.complexType(withName: "SAPB1.StockTransferTaxExtension")
        }
        if !B1ClassMetadata.ComplexTypes.stockTransferApprovalRequest.isRemoved {
            B1ClassMetadata.ComplexTypes.stockTransferApprovalRequest = metadata.complexType(withName: "SAPB1.StockTransfer_ApprovalRequest")
        }
        if !B1ClassMetadata.ComplexTypes.tableInfo.isRemoved {
            B1ClassMetadata.ComplexTypes.tableInfo = metadata.complexType(withName: "SAPB1.TableInfo")
        }
        if !B1ClassMetadata.ComplexTypes.targetGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.targetGroupParams = metadata.complexType(withName: "SAPB1.TargetGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.targetGroupsDetail.isRemoved {
            B1ClassMetadata.ComplexTypes.targetGroupsDetail = metadata.complexType(withName: "SAPB1.TargetGroupsDetail")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationParams = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationParams")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDByUsage.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDByUsage = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationTCDByUsage")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDDefaultWT.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDDefaultWT = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationTCDDefaultWT")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyField = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationTCDKeyField")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValue = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationTCDKeyFieldValue")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValueDefaultWT.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValueDefaultWT = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationTCDKeyFieldValueDefaultWT")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriod.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriod = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationTCDKeyFieldValuePeriod")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriodByUsage.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDKeyFieldValuePeriodByUsage = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationTCDKeyFieldValuePeriodByUsage")
        }
        if !B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDParams.isRemoved {
            B1ClassMetadata.ComplexTypes.taxCodeDeterminationTCDParams = metadata.complexType(withName: "SAPB1.TaxCodeDeterminationTCDParams")
        }
        if !B1ClassMetadata.ComplexTypes.taxDefinition.isRemoved {
            B1ClassMetadata.ComplexTypes.taxDefinition = metadata.complexType(withName: "SAPB1.TaxDefinition")
        }
        if !B1ClassMetadata.ComplexTypes.taxExtension.isRemoved {
            B1ClassMetadata.ComplexTypes.taxExtension = metadata.complexType(withName: "SAPB1.TaxExtension")
        }
        if !B1ClassMetadata.ComplexTypes.taxInvoiceParams.isRemoved {
            B1ClassMetadata.ComplexTypes.taxInvoiceParams = metadata.complexType(withName: "SAPB1.TaxInvoiceParams")
        }
        if !B1ClassMetadata.ComplexTypes.taxInvoiceReportLine.isRemoved {
            B1ClassMetadata.ComplexTypes.taxInvoiceReportLine = metadata.complexType(withName: "SAPB1.TaxInvoiceReportLine")
        }
        if !B1ClassMetadata.ComplexTypes.taxInvoiceReportParams.isRemoved {
            B1ClassMetadata.ComplexTypes.taxInvoiceReportParams = metadata.complexType(withName: "SAPB1.TaxInvoiceReportParams")
        }
        if !B1ClassMetadata.ComplexTypes.taxReportAccount.isRemoved {
            B1ClassMetadata.ComplexTypes.taxReportAccount = metadata.complexType(withName: "SAPB1.TaxReportAccount")
        }
        if !B1ClassMetadata.ComplexTypes.taxReportBusinessPartner.isRemoved {
            B1ClassMetadata.ComplexTypes.taxReportBusinessPartner = metadata.complexType(withName: "SAPB1.TaxReportBusinessPartner")
        }
        if !B1ClassMetadata.ComplexTypes.taxReportDocument.isRemoved {
            B1ClassMetadata.ComplexTypes.taxReportDocument = metadata.complexType(withName: "SAPB1.TaxReportDocument")
        }
        if !B1ClassMetadata.ComplexTypes.taxReportFilterParams.isRemoved {
            B1ClassMetadata.ComplexTypes.taxReportFilterParams = metadata.complexType(withName: "SAPB1.TaxReportFilterParams")
        }
        if !B1ClassMetadata.ComplexTypes.taxReportGroup.isRemoved {
            B1ClassMetadata.ComplexTypes.taxReportGroup = metadata.complexType(withName: "SAPB1.TaxReportGroup")
        }
        if !B1ClassMetadata.ComplexTypes.taxReportSeries.isRemoved {
            B1ClassMetadata.ComplexTypes.taxReportSeries = metadata.complexType(withName: "SAPB1.TaxReportSeries")
        }
        if !B1ClassMetadata.ComplexTypes.taxWebSiteParams.isRemoved {
            B1ClassMetadata.ComplexTypes.taxWebSiteParams = metadata.complexType(withName: "SAPB1.TaxWebSiteParams")
        }
        if !B1ClassMetadata.ComplexTypes.teamCounter.isRemoved {
            B1ClassMetadata.ComplexTypes.teamCounter = metadata.complexType(withName: "SAPB1.TeamCounter")
        }
        if !B1ClassMetadata.ComplexTypes.teamMember.isRemoved {
            B1ClassMetadata.ComplexTypes.teamMember = metadata.complexType(withName: "SAPB1.TeamMember")
        }
        if !B1ClassMetadata.ComplexTypes.teamParams.isRemoved {
            B1ClassMetadata.ComplexTypes.teamParams = metadata.complexType(withName: "SAPB1.TeamParams")
        }
        if !B1ClassMetadata.ComplexTypes.technicianSchedulings.isRemoved {
            B1ClassMetadata.ComplexTypes.technicianSchedulings = metadata.complexType(withName: "SAPB1.TechnicianSchedulings")
        }
        if !B1ClassMetadata.ComplexTypes.technicianSchedulingsParams.isRemoved {
            B1ClassMetadata.ComplexTypes.technicianSchedulingsParams = metadata.complexType(withName: "SAPB1.TechnicianSchedulingsParams")
        }
        if !B1ClassMetadata.ComplexTypes.technicianSettings.isRemoved {
            B1ClassMetadata.ComplexTypes.technicianSettings = metadata.complexType(withName: "SAPB1.TechnicianSettings")
        }
        if !B1ClassMetadata.ComplexTypes.technicianSettingsGroup.isRemoved {
            B1ClassMetadata.ComplexTypes.technicianSettingsGroup = metadata.complexType(withName: "SAPB1.TechnicianSettingsGroup")
        }
        if !B1ClassMetadata.ComplexTypes.technicianSettingsGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.technicianSettingsGroupParams = metadata.complexType(withName: "SAPB1.TechnicianSettingsGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.technicianSettingsParams.isRemoved {
            B1ClassMetadata.ComplexTypes.technicianSettingsParams = metadata.complexType(withName: "SAPB1.TechnicianSettingsParams")
        }
        if !B1ClassMetadata.ComplexTypes.terminationReasonParams.isRemoved {
            B1ClassMetadata.ComplexTypes.terminationReasonParams = metadata.complexType(withName: "SAPB1.TerminationReasonParams")
        }
        if !B1ClassMetadata.ComplexTypes.territoryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.territoryParams = metadata.complexType(withName: "SAPB1.TerritoryParams")
        }
        if !B1ClassMetadata.ComplexTypes.trackingNoteBroker.isRemoved {
            B1ClassMetadata.ComplexTypes.trackingNoteBroker = metadata.complexType(withName: "SAPB1.TrackingNoteBroker")
        }
        if !B1ClassMetadata.ComplexTypes.trackingNoteItem.isRemoved {
            B1ClassMetadata.ComplexTypes.trackingNoteItem = metadata.complexType(withName: "SAPB1.TrackingNoteItem")
        }
        if !B1ClassMetadata.ComplexTypes.trackingNoteParams.isRemoved {
            B1ClassMetadata.ComplexTypes.trackingNoteParams = metadata.complexType(withName: "SAPB1.TrackingNoteParams")
        }
        if !B1ClassMetadata.ComplexTypes.transactionCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.transactionCodeParams = metadata.complexType(withName: "SAPB1.TransactionCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.translationsInUserLanguage.isRemoved {
            B1ClassMetadata.ComplexTypes.translationsInUserLanguage = metadata.complexType(withName: "SAPB1.TranslationsInUserLanguage")
        }
        if !B1ClassMetadata.ComplexTypes.transportationDocumentLineData.isRemoved {
            B1ClassMetadata.ComplexTypes.transportationDocumentLineData = metadata.complexType(withName: "SAPB1.TransportationDocumentLineData")
        }
        if !B1ClassMetadata.ComplexTypes.transportationDocumentParams.isRemoved {
            B1ClassMetadata.ComplexTypes.transportationDocumentParams = metadata.complexType(withName: "SAPB1.TransportationDocumentParams")
        }
        if !B1ClassMetadata.ComplexTypes.unitOfMeasurementGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.unitOfMeasurementGroupParams = metadata.complexType(withName: "SAPB1.UnitOfMeasurementGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.unitOfMeasurementParams.isRemoved {
            B1ClassMetadata.ComplexTypes.unitOfMeasurementParams = metadata.complexType(withName: "SAPB1.UnitOfMeasurementParams")
        }
        if !B1ClassMetadata.ComplexTypes.uoMGroupDefinition.isRemoved {
            B1ClassMetadata.ComplexTypes.uoMGroupDefinition = metadata.complexType(withName: "SAPB1.UoMGroupDefinition")
        }
        if !B1ClassMetadata.ComplexTypes.uoMPrice.isRemoved {
            B1ClassMetadata.ComplexTypes.uoMPrice = metadata.complexType(withName: "SAPB1.UoMPrice")
        }
        if !B1ClassMetadata.ComplexTypes.updateUserLicenseParams.isRemoved {
            B1ClassMetadata.ComplexTypes.updateUserLicenseParams = metadata.complexType(withName: "SAPB1.UpdateUserLicenseParams")
        }
        if !B1ClassMetadata.ComplexTypes.userActionRecordItem.isRemoved {
            B1ClassMetadata.ComplexTypes.userActionRecordItem = metadata.complexType(withName: "SAPB1.UserActionRecordItem")
        }
        if !B1ClassMetadata.ComplexTypes.userBranchAssignmentItem.isRemoved {
            B1ClassMetadata.ComplexTypes.userBranchAssignmentItem = metadata.complexType(withName: "SAPB1.UserBranchAssignmentItem")
        }
        if !B1ClassMetadata.ComplexTypes.userDefaultGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userDefaultGroupParams = metadata.complexType(withName: "SAPB1.UserDefaultGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.userFieldMDParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userFieldMDParams = metadata.complexType(withName: "SAPB1.UserFieldMDParams")
        }
        if !B1ClassMetadata.ComplexTypes.userGroupByUserItem.isRemoved {
            B1ClassMetadata.ComplexTypes.userGroupByUserItem = metadata.complexType(withName: "SAPB1.UserGroupByUserItem")
        }
        if !B1ClassMetadata.ComplexTypes.userGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userGroupParams = metadata.complexType(withName: "SAPB1.UserGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.userKeyParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userKeyParams = metadata.complexType(withName: "SAPB1.UserKeyParams")
        }
        if !B1ClassMetadata.ComplexTypes.userKeysMDElement.isRemoved {
            B1ClassMetadata.ComplexTypes.userKeysMDElement = metadata.complexType(withName: "SAPB1.UserKeysMD_Element")
        }
        if !B1ClassMetadata.ComplexTypes.userLanguageParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userLanguageParams = metadata.complexType(withName: "SAPB1.UserLanguageParams")
        }
        if !B1ClassMetadata.ComplexTypes.userMenuItem.isRemoved {
            B1ClassMetadata.ComplexTypes.userMenuItem = metadata.complexType(withName: "SAPB1.UserMenuItem")
        }
        if !B1ClassMetadata.ComplexTypes.userMenuParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userMenuParams = metadata.complexType(withName: "SAPB1.UserMenuParams")
        }
        if !B1ClassMetadata.ComplexTypes.userObjectMDChildTable.isRemoved {
            B1ClassMetadata.ComplexTypes.userObjectMDChildTable = metadata.complexType(withName: "SAPB1.UserObjectMD_ChildTable")
        }
        if !B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn.isRemoved {
            B1ClassMetadata.ComplexTypes.userObjectMDEnhancedFormColumn = metadata.complexType(withName: "SAPB1.UserObjectMD_EnhancedFormColumn")
        }
        if !B1ClassMetadata.ComplexTypes.userObjectMDFindColumn.isRemoved {
            B1ClassMetadata.ComplexTypes.userObjectMDFindColumn = metadata.complexType(withName: "SAPB1.UserObjectMD_FindColumn")
        }
        if !B1ClassMetadata.ComplexTypes.userObjectMDFormColumn.isRemoved {
            B1ClassMetadata.ComplexTypes.userObjectMDFormColumn = metadata.complexType(withName: "SAPB1.UserObjectMD_FormColumn")
        }
        if !B1ClassMetadata.ComplexTypes.userObjectsMDParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userObjectsMDParams = metadata.complexType(withName: "SAPB1.UserObjectsMDParams")
        }
        if !B1ClassMetadata.ComplexTypes.userParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userParams = metadata.complexType(withName: "SAPB1.UserParams")
        }
        if !B1ClassMetadata.ComplexTypes.userPermissionForm.isRemoved {
            B1ClassMetadata.ComplexTypes.userPermissionForm = metadata.complexType(withName: "SAPB1.UserPermissionForm")
        }
        if !B1ClassMetadata.ComplexTypes.userPermissionItem.isRemoved {
            B1ClassMetadata.ComplexTypes.userPermissionItem = metadata.complexType(withName: "SAPB1.UserPermissionItem")
        }
        if !B1ClassMetadata.ComplexTypes.userPermissionTreeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userPermissionTreeParams = metadata.complexType(withName: "SAPB1.UserPermissionTreeParams")
        }
        if !B1ClassMetadata.ComplexTypes.userQueryParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userQueryParams = metadata.complexType(withName: "SAPB1.UserQueryParams")
        }
        if !B1ClassMetadata.ComplexTypes.userTableParams.isRemoved {
            B1ClassMetadata.ComplexTypes.userTableParams = metadata.complexType(withName: "SAPB1.UserTableParams")
        }
        if !B1ClassMetadata.ComplexTypes.vmThirdPartyValuesData.isRemoved {
            B1ClassMetadata.ComplexTypes.vmThirdPartyValuesData = metadata.complexType(withName: "SAPB1.VM_ThirdPartyValuesData")
        }
        if !B1ClassMetadata.ComplexTypes.validValueMD.isRemoved {
            B1ClassMetadata.ComplexTypes.validValueMD = metadata.complexType(withName: "SAPB1.ValidValueMD")
        }
        if !B1ClassMetadata.ComplexTypes.valueMappingCommunicationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.valueMappingCommunicationParams = metadata.complexType(withName: "SAPB1.ValueMappingCommunicationParams")
        }
        if !B1ClassMetadata.ComplexTypes.valueMappingParams.isRemoved {
            B1ClassMetadata.ComplexTypes.valueMappingParams = metadata.complexType(withName: "SAPB1.ValueMappingParams")
        }
        if !B1ClassMetadata.ComplexTypes.vatGroupParams.isRemoved {
            B1ClassMetadata.ComplexTypes.vatGroupParams = metadata.complexType(withName: "SAPB1.VatGroupParams")
        }
        if !B1ClassMetadata.ComplexTypes.vatGroupsLine.isRemoved {
            B1ClassMetadata.ComplexTypes.vatGroupsLine = metadata.complexType(withName: "SAPB1.VatGroups_Line")
        }
        if !B1ClassMetadata.ComplexTypes.wipMapping.isRemoved {
            B1ClassMetadata.ComplexTypes.wipMapping = metadata.complexType(withName: "SAPB1.WIPMapping")
        }
        if !B1ClassMetadata.ComplexTypes.wtdbp.isRemoved {
            B1ClassMetadata.ComplexTypes.wtdbp = metadata.complexType(withName: "SAPB1.WTDBP")
        }
        if !B1ClassMetadata.ComplexTypes.wtdCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.wtdCodeParams = metadata.complexType(withName: "SAPB1.WTDCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.wtdEffectiveDate.isRemoved {
            B1ClassMetadata.ComplexTypes.wtdEffectiveDate = metadata.complexType(withName: "SAPB1.WTDEffectiveDate")
        }
        if !B1ClassMetadata.ComplexTypes.wtdFreight.isRemoved {
            B1ClassMetadata.ComplexTypes.wtdFreight = metadata.complexType(withName: "SAPB1.WTDFreight")
        }
        if !B1ClassMetadata.ComplexTypes.wtdItem.isRemoved {
            B1ClassMetadata.ComplexTypes.wtdItem = metadata.complexType(withName: "SAPB1.WTDItem")
        }
        if !B1ClassMetadata.ComplexTypes.wtdValueRange.isRemoved {
            B1ClassMetadata.ComplexTypes.wtdValueRange = metadata.complexType(withName: "SAPB1.WTDValueRange")
        }
        if !B1ClassMetadata.ComplexTypes.wtGroups.isRemoved {
            B1ClassMetadata.ComplexTypes.wtGroups = metadata.complexType(withName: "SAPB1.WTGroups")
        }
        if !B1ClassMetadata.ComplexTypes.warehouseLocationParams.isRemoved {
            B1ClassMetadata.ComplexTypes.warehouseLocationParams = metadata.complexType(withName: "SAPB1.WarehouseLocationParams")
        }
        if !B1ClassMetadata.ComplexTypes.warehouseParams.isRemoved {
            B1ClassMetadata.ComplexTypes.warehouseParams = metadata.complexType(withName: "SAPB1.WarehouseParams")
        }
        if !B1ClassMetadata.ComplexTypes.warehouseSublevelCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.warehouseSublevelCodeParams = metadata.complexType(withName: "SAPB1.WarehouseSublevelCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.weightMeasureParams.isRemoved {
            B1ClassMetadata.ComplexTypes.weightMeasureParams = metadata.complexType(withName: "SAPB1.WeightMeasureParams")
        }
        if !B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData.isRemoved {
            B1ClassMetadata.ComplexTypes.withholdingTaxCertificatesData = metadata.complexType(withName: "SAPB1.WithholdingTaxCertificatesData")
        }
        if !B1ClassMetadata.ComplexTypes.withholdingTaxCodeParams.isRemoved {
            B1ClassMetadata.ComplexTypes.withholdingTaxCodeParams = metadata.complexType(withName: "SAPB1.WithholdingTaxCodeParams")
        }
        if !B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine.isRemoved {
            B1ClassMetadata.ComplexTypes.withholdingTaxCodesLine = metadata.complexType(withName: "SAPB1.WithholdingTaxCodes_Line")
        }
        if !B1ClassMetadata.ComplexTypes.withholdingTaxCodesValueRangeLine.isRemoved {
            B1ClassMetadata.ComplexTypes.withholdingTaxCodesValueRangeLine = metadata.complexType(withName: "SAPB1.WithholdingTaxCodes_ValueRange_Line")
        }
        if !B1ClassMetadata.ComplexTypes.withholdingTaxData.isRemoved {
            B1ClassMetadata.ComplexTypes.withholdingTaxData = metadata.complexType(withName: "SAPB1.WithholdingTaxData")
        }
        if !B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX.isRemoved {
            B1ClassMetadata.ComplexTypes.withholdingTaxDataWTX = metadata.complexType(withName: "SAPB1.WithholdingTaxDataWTX")
        }
        if !B1ClassMetadata.ComplexTypes.withholdingTaxLine.isRemoved {
            B1ClassMetadata.ComplexTypes.withholdingTaxLine = metadata.complexType(withName: "SAPB1.WithholdingTaxLine")
        }
        if !B1ClassMetadata.ComplexTypes.wizardPaymentMethodParams.isRemoved {
            B1ClassMetadata.ComplexTypes.wizardPaymentMethodParams = metadata.complexType(withName: "SAPB1.WizardPaymentMethodParams")
        }
        if !B1ClassMetadata.ComplexTypes.workflowApprovalTaskListParams.isRemoved {
            B1ClassMetadata.ComplexTypes.workflowApprovalTaskListParams = metadata.complexType(withName: "SAPB1.WorkflowApprovalTaskListParams")
        }
        if !B1ClassMetadata.ComplexTypes.workflowTask.isRemoved {
            B1ClassMetadata.ComplexTypes.workflowTask = metadata.complexType(withName: "SAPB1.WorkflowTask")
        }
        if !B1ClassMetadata.ComplexTypes.workflowTaskCompleteParams.isRemoved {
            B1ClassMetadata.ComplexTypes.workflowTaskCompleteParams = metadata.complexType(withName: "SAPB1.WorkflowTaskCompleteParams")
        }
        if !B1ClassMetadata.ComplexTypes.workflowTaskInputObject.isRemoved {
            B1ClassMetadata.ComplexTypes.workflowTaskInputObject = metadata.complexType(withName: "SAPB1.WorkflowTaskInputObject")
        }
        if !B1ClassMetadata.ComplexTypes.workflowTaskNote.isRemoved {
            B1ClassMetadata.ComplexTypes.workflowTaskNote = metadata.complexType(withName: "SAPB1.WorkflowTaskNote")
        }
        if !B1ClassMetadata.ComplexTypes.workflowTaskOutputObject.isRemoved {
            B1ClassMetadata.ComplexTypes.workflowTaskOutputObject = metadata.complexType(withName: "SAPB1.WorkflowTaskOutputObject")
        }
        if !B1ClassMetadata.EntityTypes.b1Session.isRemoved {
            B1ClassMetadata.EntityTypes.b1Session = metadata.entityType(withName: "SAPB1.B1Session")
        }
        if !B1ClassMetadata.EntityTypes.document.isRemoved {
            B1ClassMetadata.EntityTypes.document = metadata.entityType(withName: "SAPB1.Document")
        }
        if !B1ClassMetadata.EntitySets.b1Sessions.isRemoved {
            B1ClassMetadata.EntitySets.b1Sessions = metadata.entitySet(withName: "B1Sessions")
        }
        if !B1ClassMetadata.EntitySets.orders.isRemoved {
            B1ClassMetadata.EntitySets.orders = metadata.entitySet(withName: "Orders")
        }
        if !B1ClassMetadata.EntitySets.purchaseOrders.isRemoved {
            B1ClassMetadata.EntitySets.purchaseOrders = metadata.entitySet(withName: "PurchaseOrders")
        }
        if !B1ClassMetadata.Actions.login.isRemoved {
            B1ClassMetadata.Actions.login = metadata.dataMethod(withName: "SAPB1.Login")
        }
        if !B1ClassMetadata.Actions.logout.isRemoved {
            B1ClassMetadata.Actions.logout = metadata.dataMethod(withName: "SAPB1.Logout")
        }
        if !B1ClassMetadata.ActionImports.login.isRemoved {
            B1ClassMetadata.ActionImports.login = metadata.dataMethod(withName: "Login")
        }
        if !B1ClassMetadata.ActionImports.logout.isRemoved {
            B1ClassMetadata.ActionImports.logout = metadata.dataMethod(withName: "Logout")
        }
        if !B1PreAccountCategoryParams.categoryCode.isRemoved {
            B1PreAccountCategoryParams.categoryCode = B1ClassMetadata.ComplexTypes.accountCategoryParams.property(withName: "CategoryCode")
        }
        if !B1PreAccountCategoryParams.categoryName.isRemoved {
            B1PreAccountCategoryParams.categoryName = B1ClassMetadata.ComplexTypes.accountCategoryParams.property(withName: "CategoryName")
        }
        if !B1PreAccountSegmentationCategoryParams.segmentID.isRemoved {
            B1PreAccountSegmentationCategoryParams.segmentID = B1ClassMetadata.ComplexTypes.accountSegmentationCategoryParams.property(withName: "SegmentID")
        }
        if !B1PreAccountSegmentationCategoryParams.code.isRemoved {
            B1PreAccountSegmentationCategoryParams.code = B1ClassMetadata.ComplexTypes.accountSegmentationCategoryParams.property(withName: "Code")
        }
        if !B1PreAccountSegmentationParams.numerator.isRemoved {
            B1PreAccountSegmentationParams.numerator = B1ClassMetadata.ComplexTypes.accountSegmentationParams.property(withName: "Numerator")
        }
        if !B1PreAccountSegmentationsCategory.segmentID.isRemoved {
            B1PreAccountSegmentationsCategory.segmentID = B1ClassMetadata.ComplexTypes.accountSegmentationsCategory.property(withName: "SegmentID")
        }
        if !B1PreAccountSegmentationsCategory.code.isRemoved {
            B1PreAccountSegmentationsCategory.code = B1ClassMetadata.ComplexTypes.accountSegmentationsCategory.property(withName: "Code")
        }
        if !B1PreAccountSegmentationsCategory.name.isRemoved {
            B1PreAccountSegmentationsCategory.name = B1ClassMetadata.ComplexTypes.accountSegmentationsCategory.property(withName: "Name")
        }
        if !B1PreAccountSegmentationsCategory.shortName.isRemoved {
            B1PreAccountSegmentationsCategory.shortName = B1ClassMetadata.ComplexTypes.accountSegmentationsCategory.property(withName: "ShortName")
        }
        if !B1PreAccrualTypeParams.code.isRemoved {
            B1PreAccrualTypeParams.code = B1ClassMetadata.ComplexTypes.accrualTypeParams.property(withName: "Code")
        }
        if !B1PreActivityInstanceParams.activityCode.isRemoved {
            B1PreActivityInstanceParams.activityCode = B1ClassMetadata.ComplexTypes.activityInstanceParams.property(withName: "ActivityCode")
        }
        if !B1PreActivityInstanceParams.instanceDate.isRemoved {
            B1PreActivityInstanceParams.instanceDate = B1ClassMetadata.ComplexTypes.activityInstanceParams.property(withName: "InstanceDate")
        }
        if !B1PreActivityInstancesListParams.startDate.isRemoved {
            B1PreActivityInstancesListParams.startDate = B1ClassMetadata.ComplexTypes.activityInstancesListParams.property(withName: "StartDate")
        }
        if !B1PreActivityInstancesListParams.instanceCount.isRemoved {
            B1PreActivityInstancesListParams.instanceCount = B1ClassMetadata.ComplexTypes.activityInstancesListParams.property(withName: "InstanceCount")
        }
        if !B1PreActivityLocationParams.code.isRemoved {
            B1PreActivityLocationParams.code = B1ClassMetadata.ComplexTypes.activityLocationParams.property(withName: "Code")
        }
        if !B1PreActivityParams.activityCode.isRemoved {
            B1PreActivityParams.activityCode = B1ClassMetadata.ComplexTypes.activityParams.property(withName: "ActivityCode")
        }
        if !B1PreActivityRecipient.lineNumber.isRemoved {
            B1PreActivityRecipient.lineNumber = B1ClassMetadata.ComplexTypes.activityRecipient.property(withName: "LineNumber")
        }
        if !B1PreActivityRecipient.recipientType.isRemoved {
            B1PreActivityRecipient.recipientType = B1ClassMetadata.ComplexTypes.activityRecipient.property(withName: "RecipientType")
        }
        if !B1PreActivityRecipient.recipientCode.isRemoved {
            B1PreActivityRecipient.recipientCode = B1ClassMetadata.ComplexTypes.activityRecipient.property(withName: "RecipientCode")
        }
        if !B1PreActivityRecipientListParams.code.isRemoved {
            B1PreActivityRecipientListParams.code = B1ClassMetadata.ComplexTypes.activityRecipientListParams.property(withName: "Code")
        }
        if !B1PreActivityRecipientListParams.name.isRemoved {
            B1PreActivityRecipientListParams.name = B1ClassMetadata.ComplexTypes.activityRecipientListParams.property(withName: "Name")
        }
        if !B1PreActivityRecipientListParams.active.isRemoved {
            B1PreActivityRecipientListParams.active = B1ClassMetadata.ComplexTypes.activityRecipientListParams.property(withName: "Active")
        }
        if !B1PreActivityRecipientListParams.isMultiple.isRemoved {
            B1PreActivityRecipientListParams.isMultiple = B1ClassMetadata.ComplexTypes.activityRecipientListParams.property(withName: "IsMultiple")
        }
        if !B1PreActivityStatusParams.statusID.isRemoved {
            B1PreActivityStatusParams.statusID = B1ClassMetadata.ComplexTypes.activityStatusParams.property(withName: "StatusId")
        }
        if !B1PreActivityTypeParams.code.isRemoved {
            B1PreActivityTypeParams.code = B1ClassMetadata.ComplexTypes.activityTypeParams.property(withName: "Code")
        }
        if !B1PreAdditionalExpensesParams.expensCode.isRemoved {
            B1PreAdditionalExpensesParams.expensCode = B1ClassMetadata.ComplexTypes.additionalExpensesParams.property(withName: "ExpensCode")
        }
        if !B1PreAddressExtension.shipToStreet.isRemoved {
            B1PreAddressExtension.shipToStreet = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToStreet")
        }
        if !B1PreAddressExtension.shipToStreetNo.isRemoved {
            B1PreAddressExtension.shipToStreetNo = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToStreetNo")
        }
        if !B1PreAddressExtension.shipToBlock.isRemoved {
            B1PreAddressExtension.shipToBlock = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToBlock")
        }
        if !B1PreAddressExtension.shipToBuilding.isRemoved {
            B1PreAddressExtension.shipToBuilding = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToBuilding")
        }
        if !B1PreAddressExtension.shipToCity.isRemoved {
            B1PreAddressExtension.shipToCity = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToCity")
        }
        if !B1PreAddressExtension.shipToZipCode.isRemoved {
            B1PreAddressExtension.shipToZipCode = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToZipCode")
        }
        if !B1PreAddressExtension.shipToCounty.isRemoved {
            B1PreAddressExtension.shipToCounty = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToCounty")
        }
        if !B1PreAddressExtension.shipToState.isRemoved {
            B1PreAddressExtension.shipToState = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToState")
        }
        if !B1PreAddressExtension.shipToCountry.isRemoved {
            B1PreAddressExtension.shipToCountry = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToCountry")
        }
        if !B1PreAddressExtension.shipToAddressType.isRemoved {
            B1PreAddressExtension.shipToAddressType = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToAddressType")
        }
        if !B1PreAddressExtension.billToStreet.isRemoved {
            B1PreAddressExtension.billToStreet = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToStreet")
        }
        if !B1PreAddressExtension.billToStreetNo.isRemoved {
            B1PreAddressExtension.billToStreetNo = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToStreetNo")
        }
        if !B1PreAddressExtension.billToBlock.isRemoved {
            B1PreAddressExtension.billToBlock = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToBlock")
        }
        if !B1PreAddressExtension.billToBuilding.isRemoved {
            B1PreAddressExtension.billToBuilding = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToBuilding")
        }
        if !B1PreAddressExtension.billToCity.isRemoved {
            B1PreAddressExtension.billToCity = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToCity")
        }
        if !B1PreAddressExtension.billToZipCode.isRemoved {
            B1PreAddressExtension.billToZipCode = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToZipCode")
        }
        if !B1PreAddressExtension.billToCounty.isRemoved {
            B1PreAddressExtension.billToCounty = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToCounty")
        }
        if !B1PreAddressExtension.billToState.isRemoved {
            B1PreAddressExtension.billToState = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToState")
        }
        if !B1PreAddressExtension.billToCountry.isRemoved {
            B1PreAddressExtension.billToCountry = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToCountry")
        }
        if !B1PreAddressExtension.billToAddressType.isRemoved {
            B1PreAddressExtension.billToAddressType = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToAddressType")
        }
        if !B1PreAddressExtension.shipToGlobalLocationNumber.isRemoved {
            B1PreAddressExtension.shipToGlobalLocationNumber = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToGlobalLocationNumber")
        }
        if !B1PreAddressExtension.billToGlobalLocationNumber.isRemoved {
            B1PreAddressExtension.billToGlobalLocationNumber = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToGlobalLocationNumber")
        }
        if !B1PreAddressExtension.shipToAddress2.isRemoved {
            B1PreAddressExtension.shipToAddress2 = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToAddress2")
        }
        if !B1PreAddressExtension.shipToAddress3.isRemoved {
            B1PreAddressExtension.shipToAddress3 = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "ShipToAddress3")
        }
        if !B1PreAddressExtension.billToAddress2.isRemoved {
            B1PreAddressExtension.billToAddress2 = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToAddress2")
        }
        if !B1PreAddressExtension.billToAddress3.isRemoved {
            B1PreAddressExtension.billToAddress3 = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "BillToAddress3")
        }
        if !B1PreAddressExtension.placeOfSupply.isRemoved {
            B1PreAddressExtension.placeOfSupply = B1ClassMetadata.ComplexTypes.addressExtension.property(withName: "PlaceOfSupply")
        }
        if !B1PreAdminInfo.code.isRemoved {
            B1PreAdminInfo.code = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "Code")
        }
        if !B1PreAdminInfo.companyName.isRemoved {
            B1PreAdminInfo.companyName = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CompanyName")
        }
        if !B1PreAdminInfo.address.isRemoved {
            B1PreAdminInfo.address = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "Address")
        }
        if !B1PreAdminInfo.country.isRemoved {
            B1PreAdminInfo.country = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "Country")
        }
        if !B1PreAdminInfo.printingHeader.isRemoved {
            B1PreAdminInfo.printingHeader = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PrintingHeader")
        }
        if !B1PreAdminInfo.phoneNumber1.isRemoved {
            B1PreAdminInfo.phoneNumber1 = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PhoneNumber1")
        }
        if !B1PreAdminInfo.phoneNumber2.isRemoved {
            B1PreAdminInfo.phoneNumber2 = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PhoneNumber2")
        }
        if !B1PreAdminInfo.faxNumber.isRemoved {
            B1PreAdminInfo.faxNumber = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "FaxNumber")
        }
        if !B1PreAdminInfo.eMail.isRemoved {
            B1PreAdminInfo.eMail = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "eMail")
        }
        if !B1PreAdminInfo.managingDirector.isRemoved {
            B1PreAdminInfo.managingDirector = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ManagingDirector")
        }
        if !B1PreAdminInfo.chartofAccountsTemplate.isRemoved {
            B1PreAdminInfo.chartofAccountsTemplate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ChartofAccountsTemplate")
        }
        if !B1PreAdminInfo.localCurrency.isRemoved {
            B1PreAdminInfo.localCurrency = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "LocalCurrency")
        }
        if !B1PreAdminInfo.systemCurrency.isRemoved {
            B1PreAdminInfo.systemCurrency = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SystemCurrency")
        }
        if !B1PreAdminInfo.creditBalancewithMinusSign.isRemoved {
            B1PreAdminInfo.creditBalancewithMinusSign = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CreditBalancewithMinusSign")
        }
        if !B1PreAdminInfo.standardUnitofLength.isRemoved {
            B1PreAdminInfo.standardUnitofLength = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "StandardUnitofLength")
        }
        if !B1PreAdminInfo.weightUnitDefault.isRemoved {
            B1PreAdminInfo.weightUnitDefault = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WeightUnitDefault")
        }
        if !B1PreAdminInfo.directIndirectRate.isRemoved {
            B1PreAdminInfo.directIndirectRate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DirectIndirectRate")
        }
        if !B1PreAdminInfo.minimumAmountfor347Report.isRemoved {
            B1PreAdminInfo.minimumAmountfor347Report = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "MinimumAmountfor347Report")
        }
        if !B1PreAdminInfo.setItemsWarehouses.isRemoved {
            B1PreAdminInfo.setItemsWarehouses = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SetItemsWarehouses")
        }
        if !B1PreAdminInfo.bankCountry.isRemoved {
            B1PreAdminInfo.bankCountry = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BankCountry")
        }
        if !B1PreAdminInfo.federalTaxID.isRemoved {
            B1PreAdminInfo.federalTaxID = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "FederalTaxID")
        }
        if !B1PreAdminInfo.taxOffice.isRemoved {
            B1PreAdminInfo.taxOffice = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxOffice")
        }
        if !B1PreAdminInfo.deductionFileNo.isRemoved {
            B1PreAdminInfo.deductionFileNo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DeductionFileNo")
        }
        if !B1PreAdminInfo.taxCollection.isRemoved {
            B1PreAdminInfo.taxCollection = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxCollection")
        }
        if !B1PreAdminInfo.taxDefinition.isRemoved {
            B1PreAdminInfo.taxDefinition = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxDefinition")
        }
        if !B1PreAdminInfo.taxPercentage.isRemoved {
            B1PreAdminInfo.taxPercentage = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxPercentage")
        }
        if !B1PreAdminInfo.advancesonCorpIncomeTax.isRemoved {
            B1PreAdminInfo.advancesonCorpIncomeTax = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AdvancesonCorpIncomeTax")
        }
        if !B1PreAdminInfo.withTax.isRemoved {
            B1PreAdminInfo.withTax = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WithTax")
        }
        if !B1PreAdminInfo.withholdingTaxVendorDdct.isRemoved {
            B1PreAdminInfo.withholdingTaxVendorDdct = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WithholdingTaxVendorDdct")
        }
        if !B1PreAdminInfo.customersDeductionatSource.isRemoved {
            B1PreAdminInfo.customersDeductionatSource = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CustomersDeductionatSource")
        }
        if !B1PreAdminInfo.withholdingTaxTdctPercnt.isRemoved {
            B1PreAdminInfo.withholdingTaxTdctPercnt = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WithholdingTaxTdctPercnt")
        }
        if !B1PreAdminInfo.withholdingTaxDdctExpired.isRemoved {
            B1PreAdminInfo.withholdingTaxDdctExpired = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WithholdingTaxDdctExpired")
        }
        if !B1PreAdminInfo.withholdingTaxDdctOffice.isRemoved {
            B1PreAdminInfo.withholdingTaxDdctOffice = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WithholdingTaxDdctOffice")
        }
        if !B1PreAdminInfo.commitmentRestriction.isRemoved {
            B1PreAdminInfo.commitmentRestriction = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CommitmentRestriction")
        }
        if !B1PreAdminInfo.creditRestriction.isRemoved {
            B1PreAdminInfo.creditRestriction = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CreditRestriction")
        }
        if !B1PreAdminInfo.restrictSales.isRemoved {
            B1PreAdminInfo.restrictSales = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "RestrictSales")
        }
        if !B1PreAdminInfo.restrictDelNotesPO.isRemoved {
            B1PreAdminInfo.restrictDelNotesPO = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "RestrictDelNotesPO")
        }
        if !B1PreAdminInfo.restrictOrders.isRemoved {
            B1PreAdminInfo.restrictOrders = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "RestrictOrders")
        }
        if !B1PreAdminInfo.considerDelNotesinSalesR.isRemoved {
            B1PreAdminInfo.considerDelNotesinSalesR = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ConsiderDelNotesinSalesR")
        }
        if !B1PreAdminInfo.creditDepositType.isRemoved {
            B1PreAdminInfo.creditDepositType = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CreditDepositType")
        }
        if !B1PreAdminInfo.useTax.isRemoved {
            B1PreAdminInfo.useTax = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "UseTax")
        }
        if !B1PreAdminInfo.splitPO.isRemoved {
            B1PreAdminInfo.splitPO = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SplitPO")
        }
        if !B1PreAdminInfo.altNameForApInvoice.isRemoved {
            B1PreAdminInfo.altNameForApInvoice = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AltNameForApInvoice")
        }
        if !B1PreAdminInfo.altNameforCreditMemo.isRemoved {
            B1PreAdminInfo.altNameforCreditMemo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AltNameforCreditMemo")
        }
        if !B1PreAdminInfo.altNameForGoodsReceipt.isRemoved {
            B1PreAdminInfo.altNameForGoodsReceipt = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AltNameForGoodsReceipt")
        }
        if !B1PreAdminInfo.altNameForGoodsReturn.isRemoved {
            B1PreAdminInfo.altNameForGoodsReturn = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AltNameForGoodsReturn")
        }
        if !B1PreAdminInfo.altNameForPurchase.isRemoved {
            B1PreAdminInfo.altNameForPurchase = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AltNameForPurchase")
        }
        if !B1PreAdminInfo.alertTypeforWHStock.isRemoved {
            B1PreAdminInfo.alertTypeforWHStock = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AlertTypeforWHStock")
        }
        if !B1PreAdminInfo.setCommissionbyCustomer.isRemoved {
            B1PreAdminInfo.setCommissionbyCustomer = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SetCommissionbyCustomer")
        }
        if !B1PreAdminInfo.setCommissionbyItem.isRemoved {
            B1PreAdminInfo.setCommissionbyItem = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SetCommissionbyItem")
        }
        if !B1PreAdminInfo.setCommissionbySE.isRemoved {
            B1PreAdminInfo.setCommissionbySE = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SetCommissionbySE")
        }
        if !B1PreAdminInfo.defaultCustomerPaymentTerms.isRemoved {
            B1PreAdminInfo.defaultCustomerPaymentTerms = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultCustomerPaymentTerms")
        }
        if !B1PreAdminInfo.defaultVendorPaymentTerms.isRemoved {
            B1PreAdminInfo.defaultVendorPaymentTerms = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultVendorPaymentTerms")
        }
        if !B1PreAdminInfo.calculateGrossProfitperTra.isRemoved {
            B1PreAdminInfo.calculateGrossProfitperTra = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CalculateGrossProfitperTra")
        }
        if !B1PreAdminInfo.priceListforCostPrice.isRemoved {
            B1PreAdminInfo.priceListforCostPrice = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PriceListforCostPrice")
        }
        if !B1PreAdminInfo.grossProfitAfterSale.isRemoved {
            B1PreAdminInfo.grossProfitAfterSale = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GrossProfitAfterSale")
        }
        if !B1PreAdminInfo.displayPriceforPriceOnly.isRemoved {
            B1PreAdminInfo.displayPriceforPriceOnly = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayPriceforPriceOnly")
        }
        if !B1PreAdminInfo.calculateTaxinSalesQuotati.isRemoved {
            B1PreAdminInfo.calculateTaxinSalesQuotati = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CalculateTaxinSalesQuotati")
        }
        if !B1PreAdminInfo.baseField.isRemoved {
            B1PreAdminInfo.baseField = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BaseField")
        }
        if !B1PreAdminInfo.allowClosedSalesQuotations.isRemoved {
            B1PreAdminInfo.allowClosedSalesQuotations = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AllowClosedSalesQuotations")
        }
        if !B1PreAdminInfo.userConversionCode.isRemoved {
            B1PreAdminInfo.userConversionCode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "UserConversionCode")
        }
        if !B1PreAdminInfo.companyColor.isRemoved {
            B1PreAdminInfo.companyColor = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CompanyColor")
        }
        if !B1PreAdminInfo.totalsAccuracy.isRemoved {
            B1PreAdminInfo.totalsAccuracy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TotalsAccuracy")
        }
        if !B1PreAdminInfo.accuracyofQuantities.isRemoved {
            B1PreAdminInfo.accuracyofQuantities = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AccuracyofQuantities")
        }
        if !B1PreAdminInfo.priceAccuracy.isRemoved {
            B1PreAdminInfo.priceAccuracy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PriceAccuracy")
        }
        if !B1PreAdminInfo.rateAccuracy.isRemoved {
            B1PreAdminInfo.rateAccuracy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "RateAccuracy")
        }
        if !B1PreAdminInfo.percentageAccuracy.isRemoved {
            B1PreAdminInfo.percentageAccuracy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PercentageAccuracy")
        }
        if !B1PreAdminInfo.measuringAccuracy.isRemoved {
            B1PreAdminInfo.measuringAccuracy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "MeasuringAccuracy")
        }
        if !B1PreAdminInfo.queryAccuracy.isRemoved {
            B1PreAdminInfo.queryAccuracy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "QueryAccuracy")
        }
        if !B1PreAdminInfo.addressinForeignLanguage.isRemoved {
            B1PreAdminInfo.addressinForeignLanguage = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AddressinForeignLanguage")
        }
        if !B1PreAdminInfo.defaultTaxCode.isRemoved {
            B1PreAdminInfo.defaultTaxCode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultTaxCode")
        }
        if !B1PreAdminInfo.letterHeaderinForeignLangu.isRemoved {
            B1PreAdminInfo.letterHeaderinForeignLangu = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "LetterHeaderinForeignLangu")
        }
        if !B1PreAdminInfo.phoneNumber1ForeignLang.isRemoved {
            B1PreAdminInfo.phoneNumber1ForeignLang = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PhoneNumber1ForeignLang")
        }
        if !B1PreAdminInfo.phoneNumber2ForeignLang.isRemoved {
            B1PreAdminInfo.phoneNumber2ForeignLang = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PhoneNumber2ForeignLang")
        }
        if !B1PreAdminInfo.faxNumberForeignLang.isRemoved {
            B1PreAdminInfo.faxNumberForeignLang = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "FaxNumberForeignLang")
        }
        if !B1PreAdminInfo.managingDirectorForeignLan.isRemoved {
            B1PreAdminInfo.managingDirectorForeignLan = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ManagingDirectorForeignLan")
        }
        if !B1PreAdminInfo.timeTemplate.isRemoved {
            B1PreAdminInfo.timeTemplate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TimeTemplate")
        }
        if !B1PreAdminInfo.dateTemplate.isRemoved {
            B1PreAdminInfo.dateTemplate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DateTemplate")
        }
        if !B1PreAdminInfo.dateSeparator.isRemoved {
            B1PreAdminInfo.dateSeparator = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DateSeparator")
        }
        if !B1PreAdminInfo.fcCheckAccount.isRemoved {
            B1PreAdminInfo.fcCheckAccount = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "FCCheckAccount")
        }
        if !B1PreAdminInfo.changedExistingOrders.isRemoved {
            B1PreAdminInfo.changedExistingOrders = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ChangedExistingOrders")
        }
        if !B1PreAdminInfo.multiCurrencyCheck.isRemoved {
            B1PreAdminInfo.multiCurrencyCheck = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "MultiCurrencyCheck")
        }
        if !B1PreAdminInfo.isrType.isRemoved {
            B1PreAdminInfo.isrType = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ISRType")
        }
        if !B1PreAdminInfo.displayRoundingRemark.isRemoved {
            B1PreAdminInfo.displayRoundingRemark = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayRoundingRemark")
        }
        if !B1PreAdminInfo.isrBillerID.isRemoved {
            B1PreAdminInfo.isrBillerID = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ISRBillerID")
        }
        if !B1PreAdminInfo.blockSystemCurrencyEditing.isRemoved {
            B1PreAdminInfo.blockSystemCurrencyEditing = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockSystemCurrencyEditing")
        }
        if !B1PreAdminInfo.blockPostingDateEditing.isRemoved {
            B1PreAdminInfo.blockPostingDateEditing = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockPostingDateEditing")
        }
        if !B1PreAdminInfo.defaultWarehouse.isRemoved {
            B1PreAdminInfo.defaultWarehouse = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultWarehouse")
        }
        if !B1PreAdminInfo.blockTaxDate.isRemoved {
            B1PreAdminInfo.blockTaxDate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockTaxDate")
        }
        if !B1PreAdminInfo.taxDefinitionforVatitem.isRemoved {
            B1PreAdminInfo.taxDefinitionforVatitem = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxDefinitionforVatitem")
        }
        if !B1PreAdminInfo.taxDefinitionforVatservice.isRemoved {
            B1PreAdminInfo.taxDefinitionforVatservice = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxDefinitionforVatservice")
        }
        if !B1PreAdminInfo.taxGroupforPurchaseItem.isRemoved {
            B1PreAdminInfo.taxGroupforPurchaseItem = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxGroupforPurchaseItem")
        }
        if !B1PreAdminInfo.taxGroupforServicePurchase.isRemoved {
            B1PreAdminInfo.taxGroupforServicePurchase = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxGroupforServicePurchase")
        }
        if !B1PreAdminInfo.calculateBudget.isRemoved {
            B1PreAdminInfo.calculateBudget = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CalculateBudget")
        }
        if !B1PreAdminInfo.customerIdNumber.isRemoved {
            B1PreAdminInfo.customerIdNumber = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CustomerIdNumber")
        }
        if !B1PreAdminInfo.blockBudget.isRemoved {
            B1PreAdminInfo.blockBudget = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockBudget")
        }
        if !B1PreAdminInfo.budgetAlert.isRemoved {
            B1PreAdminInfo.budgetAlert = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BudgetAlert")
        }
        if !B1PreAdminInfo.blockPurchaseOrders.isRemoved {
            B1PreAdminInfo.blockPurchaseOrders = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockPurchaseOrders")
        }
        if !B1PreAdminInfo.blockBookkeeping.isRemoved {
            B1PreAdminInfo.blockBookkeeping = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockBookkeeping")
        }
        if !B1PreAdminInfo.defaultBudgetCostAssessMt.isRemoved {
            B1PreAdminInfo.defaultBudgetCostAssessMt = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultBudgetCostAssessMt")
        }
        if !B1PreAdminInfo.continuousStockManagement.isRemoved {
            B1PreAdminInfo.continuousStockManagement = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ContinuousStockManagement")
        }
        if !B1PreAdminInfo.continuousStockSystem.isRemoved {
            B1PreAdminInfo.continuousStockSystem = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ContinuousStockSystem")
        }
        if !B1PreAdminInfo.roundTaxAmounts.isRemoved {
            B1PreAdminInfo.roundTaxAmounts = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "RoundTaxAmounts")
        }
        if !B1PreAdminInfo.blockDelNotesforPurchase.isRemoved {
            B1PreAdminInfo.blockDelNotesforPurchase = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockDelNotesforPurchase")
        }
        if !B1PreAdminInfo.fileNumberinIncomeTax.isRemoved {
            B1PreAdminInfo.fileNumberinIncomeTax = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "FileNumberinIncomeTax")
        }
        if !B1PreAdminInfo.deferredTax.isRemoved {
            B1PreAdminInfo.deferredTax = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DeferredTax")
        }
        if !B1PreAdminInfo.defaultBankNo.isRemoved {
            B1PreAdminInfo.defaultBankNo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultBankNo")
        }
        if !B1PreAdminInfo.defaultBankAccount.isRemoved {
            B1PreAdminInfo.defaultBankAccount = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultBankAccount")
        }
        if !B1PreAdminInfo.defaultBranch.isRemoved {
            B1PreAdminInfo.defaultBranch = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultBranch")
        }
        if !B1PreAdminInfo.usePASystem.isRemoved {
            B1PreAdminInfo.usePASystem = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "UsePASystem")
        }
        if !B1PreAdminInfo.serviceCode.isRemoved {
            B1PreAdminInfo.serviceCode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ServiceCode")
        }
        if !B1PreAdminInfo.servicePassword.isRemoved {
            B1PreAdminInfo.servicePassword = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ServicePassword")
        }
        if !B1PreAdminInfo.paramFolderPath.isRemoved {
            B1PreAdminInfo.paramFolderPath = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ParamFolderPath")
        }
        if !B1PreAdminInfo.excelFolderPath.isRemoved {
            B1PreAdminInfo.excelFolderPath = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ExcelFolderPath")
        }
        if !B1PreAdminInfo.federalTaxID2.isRemoved {
            B1PreAdminInfo.federalTaxID2 = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "FederalTaxID2")
        }
        if !B1PreAdminInfo.federalTaxID3.isRemoved {
            B1PreAdminInfo.federalTaxID3 = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "FederalTaxID3")
        }
        if !B1PreAdminInfo.decimalSeparator.isRemoved {
            B1PreAdminInfo.decimalSeparator = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DecimalSeparator")
        }
        if !B1PreAdminInfo.thousandsSeparator.isRemoved {
            B1PreAdminInfo.thousandsSeparator = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ThousandsSeparator")
        }
        if !B1PreAdminInfo.displayCurrencyontheRight.isRemoved {
            B1PreAdminInfo.displayCurrencyontheRight = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayCurrencyontheRight")
        }
        if !B1PreAdminInfo.alertbyWarehouse.isRemoved {
            B1PreAdminInfo.alertbyWarehouse = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AlertbyWarehouse")
        }
        if !B1PreAdminInfo.priceSystem.isRemoved {
            B1PreAdminInfo.priceSystem = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PriceSystem")
        }
        if !B1PreAdminInfo.wholdingTaxDedHierarchy.isRemoved {
            B1PreAdminInfo.wholdingTaxDedHierarchy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WholdingTaxDedHierarchy")
        }
        if !B1PreAdminInfo.docConfirmation.isRemoved {
            B1PreAdminInfo.docConfirmation = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DocConfirmation")
        }
        if !B1PreAdminInfo.defaultforBatchStatus.isRemoved {
            B1PreAdminInfo.defaultforBatchStatus = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultforBatchStatus")
        }
        if !B1PreAdminInfo.glMethod.isRemoved {
            B1PreAdminInfo.glMethod = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GLMethod")
        }
        if !B1PreAdminInfo.uniqueSerialNo.isRemoved {
            B1PreAdminInfo.uniqueSerialNo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "UniqueSerialNo")
        }
        if !B1PreAdminInfo.maxHistory.isRemoved {
            B1PreAdminInfo.maxHistory = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "MaxHistory")
        }
        if !B1PreAdminInfo.changeDefReconAPAccounts.isRemoved {
            B1PreAdminInfo.changeDefReconAPAccounts = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ChangeDefReconAPAccounts")
        }
        if !B1PreAdminInfo.changeDefReconARAccounts.isRemoved {
            B1PreAdminInfo.changeDefReconARAccounts = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ChangeDefReconARAccounts")
        }
        if !B1PreAdminInfo.bpTypeCode.isRemoved {
            B1PreAdminInfo.bpTypeCode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BPTypeCode")
        }
        if !B1PreAdminInfo.pbsNumber.isRemoved {
            B1PreAdminInfo.pbsNumber = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PBSNumber")
        }
        if !B1PreAdminInfo.pbsGroupNumber.isRemoved {
            B1PreAdminInfo.pbsGroupNumber = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PBSGroupNumber")
        }
        if !B1PreAdminInfo.organizationNumber.isRemoved {
            B1PreAdminInfo.organizationNumber = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "OrganizationNumber")
        }
        if !B1PreAdminInfo.accountSegmentsSeparator.isRemoved {
            B1PreAdminInfo.accountSegmentsSeparator = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AccountSegmentsSeparator")
        }
        if !B1PreAdminInfo.displayBookkeepingWindow.isRemoved {
            B1PreAdminInfo.displayBookkeepingWindow = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayBookkeepingWindow")
        }
        if !B1PreAdminInfo.sHandleWT.isRemoved {
            B1PreAdminInfo.sHandleWT = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SHandleWT")
        }
        if !B1PreAdminInfo.sDefaultWTCode.isRemoved {
            B1PreAdminInfo.sDefaultWTCode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SDefaultWTCode")
        }
        if !B1PreAdminInfo.withholdingTaxPHandle.isRemoved {
            B1PreAdminInfo.withholdingTaxPHandle = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WithholdingTaxPHandle")
        }
        if !B1PreAdminInfo.pDefaultWTCode.isRemoved {
            B1PreAdminInfo.pDefaultWTCode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PDefaultWTCode")
        }
        if !B1PreAdminInfo.wtLiableExpense.isRemoved {
            B1PreAdminInfo.wtLiableExpense = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WTLiableExpense")
        }
        if !B1PreAdminInfo.useNegativeAmounts.isRemoved {
            B1PreAdminInfo.useNegativeAmounts = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "UseNegativeAmounts")
        }
        if !B1PreAdminInfo.holidaysName.isRemoved {
            B1PreAdminInfo.holidaysName = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "HolidaysName")
        }
        if !B1PreAdminInfo.orderBlock.isRemoved {
            B1PreAdminInfo.orderBlock = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "OrderBlock")
        }
        if !B1PreAdminInfo.roundingMethod.isRemoved {
            B1PreAdminInfo.roundingMethod = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "RoundingMethod")
        }
        if !B1PreAdminInfo.adressFromWH.isRemoved {
            B1PreAdminInfo.adressFromWH = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AdressFromWH")
        }
        if !B1PreAdminInfo.orderingParty.isRemoved {
            B1PreAdminInfo.orderingParty = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "OrderingParty")
        }
        if !B1PreAdminInfo.certificateNo.isRemoved {
            B1PreAdminInfo.certificateNo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CertificateNo")
        }
        if !B1PreAdminInfo.expirationDate.isRemoved {
            B1PreAdminInfo.expirationDate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ExpirationDate")
        }
        if !B1PreAdminInfo.nationalInsuranceNo.isRemoved {
            B1PreAdminInfo.nationalInsuranceNo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "NationalInsuranceNo")
        }
        if !B1PreAdminInfo.salesOrderConfirmed.isRemoved {
            B1PreAdminInfo.salesOrderConfirmed = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SalesOrderConfirmed")
        }
        if !B1PreAdminInfo.purchaseOrderConfirmed.isRemoved {
            B1PreAdminInfo.purchaseOrderConfirmed = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PurchaseOrderConfirmed")
        }
        if !B1PreAdminInfo.sDfltITWT.isRemoved {
            B1PreAdminInfo.sDfltITWT = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SDfltITWT")
        }
        if !B1PreAdminInfo.pDfltITWT.isRemoved {
            B1PreAdminInfo.pDfltITWT = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PDfltITWT")
        }
        if !B1PreAdminInfo.defaultAccountCurrency.isRemoved {
            B1PreAdminInfo.defaultAccountCurrency = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultAccountCurrency")
        }
        if !B1PreAdminInfo.deferredTaxforVendors.isRemoved {
            B1PreAdminInfo.deferredTaxforVendors = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DeferredTaxforVendors")
        }
        if !B1PreAdminInfo.createAutoVATLineinJDT.isRemoved {
            B1PreAdminInfo.createAutoVATLineinJDT = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CreateAutoVATLineinJDT")
        }
        if !B1PreAdminInfo.consumeForecast.isRemoved {
            B1PreAdminInfo.consumeForecast = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ConsumeForecast")
        }
        if !B1PreAdminInfo.consumptionMethod.isRemoved {
            B1PreAdminInfo.consumptionMethod = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ConsumptionMethod")
        }
        if !B1PreAdminInfo.daysBackward.isRemoved {
            B1PreAdminInfo.daysBackward = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DaysBackward")
        }
        if !B1PreAdminInfo.daysForward.isRemoved {
            B1PreAdminInfo.daysForward = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DaysForward")
        }
        if !B1PreAdminInfo.defaultDunningTerm.isRemoved {
            B1PreAdminInfo.defaultDunningTerm = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultDunningTerm")
        }
        if !B1PreAdminInfo.defaultBankAccountKey.isRemoved {
            B1PreAdminInfo.defaultBankAccountKey = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DefaultBankAccountKey")
        }
        if !B1PreAdminInfo.multiLanguageSupportEnable.isRemoved {
            B1PreAdminInfo.multiLanguageSupportEnable = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "MultiLanguageSupportEnable")
        }
        if !B1PreAdminInfo.allowFuturePostingDate.isRemoved {
            B1PreAdminInfo.allowFuturePostingDate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AllowFuturePostingDate")
        }
        if !B1PreAdminInfo.additionalIdNumber.isRemoved {
            B1PreAdminInfo.additionalIdNumber = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AdditionalIdNumber")
        }
        if !B1PreAdminInfo.state.isRemoved {
            B1PreAdminInfo.state = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "State")
        }
        if !B1PreAdminInfo.calculateRowDiscount.isRemoved {
            B1PreAdminInfo.calculateRowDiscount = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CalculateRowDiscount")
        }
        if !B1PreAdminInfo.bankStatementInstalled.isRemoved {
            B1PreAdminInfo.bankStatementInstalled = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BankStatementInstalled")
        }
        if !B1PreAdminInfo.uniqueTaxPayerReference.isRemoved {
            B1PreAdminInfo.uniqueTaxPayerReference = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "UniqueTaxPayerReference")
        }
        if !B1PreAdminInfo.employerReference.isRemoved {
            B1PreAdminInfo.employerReference = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EmployerReference")
        }
        if !B1PreAdminInfo.periodStatusAutoChange.isRemoved {
            B1PreAdminInfo.periodStatusAutoChange = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PeriodStatusAutoChange")
        }
        if !B1PreAdminInfo.periodStatusChangeDelay.isRemoved {
            B1PreAdminInfo.periodStatusChangeDelay = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PeriodStatusChangeDelay")
        }
        if !B1PreAdminInfo.grossProfitPercentForServiceDocuments.isRemoved {
            B1PreAdminInfo.grossProfitPercentForServiceDocuments = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GrossProfitPercentForServiceDocuments")
        }
        if !B1PreAdminInfo.xmlFileFolderPath.isRemoved {
            B1PreAdminInfo.xmlFileFolderPath = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "XMLFileFolderPath")
        }
        if !B1PreAdminInfo.pickList.isRemoved {
            B1PreAdminInfo.pickList = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PickList")
        }
        if !B1PreAdminInfo.generalManager.isRemoved {
            B1PreAdminInfo.generalManager = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GeneralManager")
        }
        if !B1PreAdminInfo.generalManagerForeignLanguage.isRemoved {
            B1PreAdminInfo.generalManagerForeignLanguage = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GeneralManagerForeignLanguage")
        }
        if !B1PreAdminInfo.useProductionProfitAndLossAccount.isRemoved {
            B1PreAdminInfo.useProductionProfitAndLossAccount = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "UseProductionProfitAndLossAccount")
        }
        if !B1PreAdminInfo.wtAccumAmountAP.isRemoved {
            B1PreAdminInfo.wtAccumAmountAP = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WTAccumAmountAP")
        }
        if !B1PreAdminInfo.wtAccumAmountAR.isRemoved {
            B1PreAdminInfo.wtAccumAmountAR = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "WTAccumAmountAR")
        }
        if !B1PreAdminInfo.copyExchangeRateInCopyTo.isRemoved {
            B1PreAdminInfo.copyExchangeRateInCopyTo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CopyExchangeRateInCopyTo")
        }
        if !B1PreAdminInfo.gtsOutboundFolder.isRemoved {
            B1PreAdminInfo.gtsOutboundFolder = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GTSOutboundFolder")
        }
        if !B1PreAdminInfo.gtsInboundFolder.isRemoved {
            B1PreAdminInfo.gtsInboundFolder = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GTSInboundFolder")
        }
        if !B1PreAdminInfo.gtsSeparateCode.isRemoved {
            B1PreAdminInfo.gtsSeparateCode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GTSSeparateCode")
        }
        if !B1PreAdminInfo.gtsDefaultChecker.isRemoved {
            B1PreAdminInfo.gtsDefaultChecker = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GTSDefaultChecker")
        }
        if !B1PreAdminInfo.gtsDefaultPayee.isRemoved {
            B1PreAdminInfo.gtsDefaultPayee = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GTSDefaultPayee")
        }
        if !B1PreAdminInfo.gtsMaxAmount.isRemoved {
            B1PreAdminInfo.gtsMaxAmount = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GTSMaxAmount")
        }
        if !B1PreAdminInfo.gtsResponseToExceeding.isRemoved {
            B1PreAdminInfo.gtsResponseToExceeding = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "GTSResponseToExceeding")
        }
        if !B1PreAdminInfo.applicationOfIFRS.isRemoved {
            B1PreAdminInfo.applicationOfIFRS = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ApplicationOfIFRS")
        }
        if !B1PreAdminInfo.startingInFiscalYear.isRemoved {
            B1PreAdminInfo.startingInFiscalYear = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "StartingInFiscalYear")
        }
        if !B1PreAdminInfo.reportAccordingTo.isRemoved {
            B1PreAdminInfo.reportAccordingTo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ReportAccordingTo")
        }
        if !B1PreAdminInfo.copyOpenRowsToDelivery.isRemoved {
            B1PreAdminInfo.copyOpenRowsToDelivery = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CopyOpenRowsToDelivery")
        }
        if !B1PreAdminInfo.enableApprovalProcedureInDI.isRemoved {
            B1PreAdminInfo.enableApprovalProcedureInDI = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableApprovalProcedureInDI")
        }
        if !B1PreAdminInfo.enableUpdateDocAfterApproval.isRemoved {
            B1PreAdminInfo.enableUpdateDocAfterApproval = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableUpdateDocAfterApproval")
        }
        if !B1PreAdminInfo.enableUpdateDraftDuringApproval.isRemoved {
            B1PreAdminInfo.enableUpdateDraftDuringApproval = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableUpdateDraftDuringApproval")
        }
        if !B1PreAdminInfo.issuePrimarilyBy.isRemoved {
            B1PreAdminInfo.issuePrimarilyBy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "IssuePrimarilyBy")
        }
        if !B1PreAdminInfo.isRemoveUnpricedValue.isRemoved {
            B1PreAdminInfo.isRemoveUnpricedValue = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "IsRemoveUnpricedValue")
        }
        if !B1PreAdminInfo.enableAdvancedGLAccountDetermination.isRemoved {
            B1PreAdminInfo.enableAdvancedGLAccountDetermination = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableAdvancedGLAccountDetermination")
        }
        if !B1PreAdminInfo.createOnlineQuotation.isRemoved {
            B1PreAdminInfo.createOnlineQuotation = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CreateOnlineQuotation")
        }
        if !B1PreAdminInfo.isPrinterConnected.isRemoved {
            B1PreAdminInfo.isPrinterConnected = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "IsPrinterConnected")
        }
        if !B1PreAdminInfo.enableBranches.isRemoved {
            B1PreAdminInfo.enableBranches = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableBranches")
        }
        if !B1PreAdminInfo.ieMandatoryValidation.isRemoved {
            B1PreAdminInfo.ieMandatoryValidation = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "IEMandatoryValidation")
        }
        if !B1PreAdminInfo.enablePaymentDueDates.isRemoved {
            B1PreAdminInfo.enablePaymentDueDates = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnablePaymentDueDates")
        }
        if !B1PreAdminInfo.maximumNumberOfDaysForDueDate.isRemoved {
            B1PreAdminInfo.maximumNumberOfDaysForDueDate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "MaximumNumberOfDaysForDueDate")
        }
        if !B1PreAdminInfo.aliasName.isRemoved {
            B1PreAdminInfo.aliasName = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AliasName")
        }
        if !B1PreAdminInfo.enableCentralizedIncomingPayments.isRemoved {
            B1PreAdminInfo.enableCentralizedIncomingPayments = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableCentralizedIncomingPayments")
        }
        if !B1PreAdminInfo.enableCentralizedOutgoingPayments.isRemoved {
            B1PreAdminInfo.enableCentralizedOutgoingPayments = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableCentralizedOutgoingPayments")
        }
        if !B1PreAdminInfo.taxRateDetermination.isRemoved {
            B1PreAdminInfo.taxRateDetermination = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "TaxRateDetermination")
        }
        if !B1PreAdminInfo.boletoFolderPath.isRemoved {
            B1PreAdminInfo.boletoFolderPath = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BoletoFolderPath")
        }
        if !B1PreAdminInfo.allowMultipleBAOnSamePeriod.isRemoved {
            B1PreAdminInfo.allowMultipleBAOnSamePeriod = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AllowMultipleBAOnSamePeriod")
        }
        if !B1PreAdminInfo.blockMultipleBAOnSameAPDocument.isRemoved {
            B1PreAdminInfo.blockMultipleBAOnSameAPDocument = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockMultipleBAOnSameAPDocument")
        }
        if !B1PreAdminInfo.blockMultipleBAOnSameARDocument.isRemoved {
            B1PreAdminInfo.blockMultipleBAOnSameARDocument = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockMultipleBAOnSameARDocument")
        }
        if !B1PreAdminInfo.displayCancelDocInReport.isRemoved {
            B1PreAdminInfo.displayCancelDocInReport = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayCancelDocInReport")
        }
        if !B1PreAdminInfo.maxDaysForCancel.isRemoved {
            B1PreAdminInfo.maxDaysForCancel = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "MaxDaysForCancel")
        }
        if !B1PreAdminInfo.reuseDocumentNum.isRemoved {
            B1PreAdminInfo.reuseDocumentNum = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ReuseDocumentNum")
        }
        if !B1PreAdminInfo.reuseNotaFiscalNum.isRemoved {
            B1PreAdminInfo.reuseNotaFiscalNum = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ReuseNotaFiscalNum")
        }
        if !B1PreAdminInfo.autoAddUoM.isRemoved {
            B1PreAdminInfo.autoAddUoM = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AutoAddUoM")
        }
        if !B1PreAdminInfo.autoAddPackage.isRemoved {
            B1PreAdminInfo.autoAddPackage = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AutoAddPackage")
        }
        if !B1PreAdminInfo.displayInactivePriceListInReports.isRemoved {
            B1PreAdminInfo.displayInactivePriceListInReports = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayInactivePriceListInReports")
        }
        if !B1PreAdminInfo.displayInactivePriceListInDocuments.isRemoved {
            B1PreAdminInfo.displayInactivePriceListInDocuments = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayInactivePriceListInDocuments")
        }
        if !B1PreAdminInfo.displayInactivePriceListInSettings.isRemoved {
            B1PreAdminInfo.displayInactivePriceListInSettings = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayInactivePriceListInSettings")
        }
        if !B1PreAdminInfo.applyBaseInactiveStatusToSpecialPrices.isRemoved {
            B1PreAdminInfo.applyBaseInactiveStatusToSpecialPrices = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ApplyBaseInactiveStatusToSpecialPrices")
        }
        if !B1PreAdminInfo.applyBaseInactiveStatusToPeriodVolumeDiscounts.isRemoved {
            B1PreAdminInfo.applyBaseInactiveStatusToPeriodVolumeDiscounts = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ApplyBaseInactiveStatusToPeriodVolumeDiscounts")
        }
        if !B1PreAdminInfo.applyBaseInactiveStatusToPriceLists.isRemoved {
            B1PreAdminInfo.applyBaseInactiveStatusToPriceLists = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ApplyBaseInactiveStatusToPriceLists")
        }
        if !B1PreAdminInfo.priceProceedMethod.isRemoved {
            B1PreAdminInfo.priceProceedMethod = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "PriceProceedMethod")
        }
        if !B1PreAdminInfo.removeUpdatePricesBasedOnNonStandardPriceLists.isRemoved {
            B1PreAdminInfo.removeUpdatePricesBasedOnNonStandardPriceLists = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "RemoveUpdatePricesBasedOnNonStandardPriceLists")
        }
        if !B1PreAdminInfo.sirenNo.isRemoved {
            B1PreAdminInfo.sirenNo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SirenNo")
        }
        if !B1PreAdminInfo.institutionCode.isRemoved {
            B1PreAdminInfo.institutionCode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "InstitutionCode")
        }
        if !B1PreAdminInfo.setResourcesWarehouses.isRemoved {
            B1PreAdminInfo.setResourcesWarehouses = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SetResourcesWarehouses")
        }
        if !B1PreAdminInfo.blockStockNegativeQuantity.isRemoved {
            B1PreAdminInfo.blockStockNegativeQuantity = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "BlockStockNegativeQuantity")
        }
        if !B1PreAdminInfo.useParentWIPInComponents.isRemoved {
            B1PreAdminInfo.useParentWIPInComponents = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "UseParentWIPInComponents")
        }
        if !B1PreAdminInfo.enableUpdateBAPriceAndPlannedAmount.isRemoved {
            B1PreAdminInfo.enableUpdateBAPriceAndPlannedAmount = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableUpdateBAPriceAndPlannedAmount")
        }
        if !B1PreAdminInfo.autoAssignOnlyValidAPBA.isRemoved {
            B1PreAdminInfo.autoAssignOnlyValidAPBA = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AutoAssignOnlyValidAPBA")
        }
        if !B1PreAdminInfo.autoAssignOnlyValidARBA.isRemoved {
            B1PreAdminInfo.autoAssignOnlyValidARBA = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AutoAssignOnlyValidARBA")
        }
        if !B1PreAdminInfo.actionWhenDeviateFromBAForPO.isRemoved {
            B1PreAdminInfo.actionWhenDeviateFromBAForPO = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ActionWhenDeviateFromBAForPO")
        }
        if !B1PreAdminInfo.actionWhenDeviateFromBAForGRPO.isRemoved {
            B1PreAdminInfo.actionWhenDeviateFromBAForGRPO = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ActionWhenDeviateFromBAForGRPO")
        }
        if !B1PreAdminInfo.actionWhenDeviateFromBAForAccounting.isRemoved {
            B1PreAdminInfo.actionWhenDeviateFromBAForAccounting = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ActionWhenDeviateFromBAForAccounting")
        }
        if !B1PreAdminInfo.series.isRemoved {
            B1PreAdminInfo.series = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "Series")
        }
        if !B1PreAdminInfo.account.isRemoved {
            B1PreAdminInfo.account = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "Account")
        }
        if !B1PreAdminInfo.enableMultipleSchedulings.isRemoved {
            B1PreAdminInfo.enableMultipleSchedulings = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableMultipleSchedulings")
        }
        if !B1PreAdminInfo.displayBatchQtyUoMBy.isRemoved {
            B1PreAdminInfo.displayBatchQtyUoMBy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DisplayBatchQtyUoMBy")
        }
        if !B1PreAdminInfo.allowInBoundPostingWithZeroPrice.isRemoved {
            B1PreAdminInfo.allowInBoundPostingWithZeroPrice = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AllowInBoundPostingWithZeroPrice")
        }
        if !B1PreAdminInfo.inventoryPostingHighlightVariance.isRemoved {
            B1PreAdminInfo.inventoryPostingHighlightVariance = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "InventoryPostingHighlightVariance")
        }
        if !B1PreAdminInfo.inventoryPostingReleaseOnlySerialAndBatch.isRemoved {
            B1PreAdminInfo.inventoryPostingReleaseOnlySerialAndBatch = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "InventoryPostingReleaseOnlySerialAndBatch")
        }
        if !B1PreAdminInfo.inventoryCountingHighlightVariance.isRemoved {
            B1PreAdminInfo.inventoryCountingHighlightVariance = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "InventoryCountingHighlightVariance")
        }
        if !B1PreAdminInfo.inventoryCountingHighlightMaxVariance.isRemoved {
            B1PreAdminInfo.inventoryCountingHighlightMaxVariance = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "InventoryCountingHighlightMaxVariance")
        }
        if !B1PreAdminInfo.inventoryCountingHighlightCountersDifference.isRemoved {
            B1PreAdminInfo.inventoryCountingHighlightCountersDifference = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "InventoryCountingHighlightCountersDifference")
        }
        if !B1PreAdminInfo.copySingleCounterToIndividualCounter.isRemoved {
            B1PreAdminInfo.copySingleCounterToIndividualCounter = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CopySingleCounterToIndividualCounter")
        }
        if !B1PreAdminInfo.closeCountedRowsWithZeroDifference.isRemoved {
            B1PreAdminInfo.closeCountedRowsWithZeroDifference = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CloseCountedRowsWithZeroDifference")
        }
        if !B1PreAdminInfo.closeCountedRowsWithoutConfirmation.isRemoved {
            B1PreAdminInfo.closeCountedRowsWithoutConfirmation = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CloseCountedRowsWithoutConfirmation")
        }
        if !B1PreAdminInfo.calculateInWhseQtyBasedOnPostingDate.isRemoved {
            B1PreAdminInfo.calculateInWhseQtyBasedOnPostingDate = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "CalculateInWhseQtyBasedOnPostingDate")
        }
        if !B1PreAdminInfo.refreshInWhseQtyInDI.isRemoved {
            B1PreAdminInfo.refreshInWhseQtyInDI = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "RefreshInWhseQtyInDI")
        }
        if !B1PreAdminInfo.sepaCreditorID.isRemoved {
            B1PreAdminInfo.sepaCreditorID = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "SEPACreditorID")
        }
        if !B1PreAdminInfo.dataOwnershipManageBy.isRemoved {
            B1PreAdminInfo.dataOwnershipManageBy = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "DataOwnershipManageBy")
        }
        if !B1PreAdminInfo.allowBPWithNoOwner.isRemoved {
            B1PreAdminInfo.allowBPWithNoOwner = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "AllowBPWithNoOwner")
        }
        if !B1PreAdminInfo.enableSeparatePriceMode.isRemoved {
            B1PreAdminInfo.enableSeparatePriceMode = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "EnableSeparatePriceMode")
        }
        if !B1PreAdminInfo.extendedAdminInfo.isRemoved {
            B1PreAdminInfo.extendedAdminInfo = B1ClassMetadata.ComplexTypes.adminInfo.property(withName: "ExtendedAdminInfo")
        }
        if !B1PreAdvancedGLAccountParams.itemCode.isRemoved {
            B1PreAdvancedGLAccountParams.itemCode = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "ItemCode")
        }
        if !B1PreAdvancedGLAccountParams.warehouse.isRemoved {
            B1PreAdvancedGLAccountParams.warehouse = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "Warehouse")
        }
        if !B1PreAdvancedGLAccountParams.bpCode.isRemoved {
            B1PreAdvancedGLAccountParams.bpCode = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "BPCode")
        }
        if !B1PreAdvancedGLAccountParams.federalTaxID.isRemoved {
            B1PreAdvancedGLAccountParams.federalTaxID = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "FederalTaxID")
        }
        if !B1PreAdvancedGLAccountParams.shipToCountry.isRemoved {
            B1PreAdvancedGLAccountParams.shipToCountry = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "ShipToCountry")
        }
        if !B1PreAdvancedGLAccountParams.shipToState.isRemoved {
            B1PreAdvancedGLAccountParams.shipToState = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "ShipToState")
        }
        if !B1PreAdvancedGLAccountParams.vatGroup.isRemoved {
            B1PreAdvancedGLAccountParams.vatGroup = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "VatGroup")
        }
        if !B1PreAdvancedGLAccountParams.postingDate.isRemoved {
            B1PreAdvancedGLAccountParams.postingDate = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "PostingDate")
        }
        if !B1PreAdvancedGLAccountParams.accountType.isRemoved {
            B1PreAdvancedGLAccountParams.accountType = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "AccountType")
        }
        if !B1PreAdvancedGLAccountParams.usage.isRemoved {
            B1PreAdvancedGLAccountParams.usage = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "Usage")
        }
        if !B1PreAdvancedGLAccountParams.udf1.isRemoved {
            B1PreAdvancedGLAccountParams.udf1 = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "UDF1")
        }
        if !B1PreAdvancedGLAccountParams.udf2.isRemoved {
            B1PreAdvancedGLAccountParams.udf2 = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "UDF2")
        }
        if !B1PreAdvancedGLAccountParams.udf3.isRemoved {
            B1PreAdvancedGLAccountParams.udf3 = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "UDF3")
        }
        if !B1PreAdvancedGLAccountParams.udf4.isRemoved {
            B1PreAdvancedGLAccountParams.udf4 = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "UDF4")
        }
        if !B1PreAdvancedGLAccountParams.udf5.isRemoved {
            B1PreAdvancedGLAccountParams.udf5 = B1ClassMetadata.ComplexTypes.advancedGLAccountParams.property(withName: "UDF5")
        }
        if !B1PreAdvancedGLAccountReturnParams.accountCode.isRemoved {
            B1PreAdvancedGLAccountReturnParams.accountCode = B1ClassMetadata.ComplexTypes.advancedGLAccountReturnParams.property(withName: "AccountCode")
        }
        if !B1PreAlertManagementDocument.document.isRemoved {
            B1PreAlertManagementDocument.document = B1ClassMetadata.ComplexTypes.alertManagementDocument.property(withName: "Document")
        }
        if !B1PreAlertManagementDocument.active.isRemoved {
            B1PreAlertManagementDocument.active = B1ClassMetadata.ComplexTypes.alertManagementDocument.property(withName: "Active")
        }
        if !B1PreAlertManagementParams.code.isRemoved {
            B1PreAlertManagementParams.code = B1ClassMetadata.ComplexTypes.alertManagementParams.property(withName: "Code")
        }
        if !B1PreAlertManagementParams.type_.isRemoved {
            B1PreAlertManagementParams.type_ = B1ClassMetadata.ComplexTypes.alertManagementParams.property(withName: "Type")
        }
        if !B1PreAlertManagementParams.name.isRemoved {
            B1PreAlertManagementParams.name = B1ClassMetadata.ComplexTypes.alertManagementParams.property(withName: "Name")
        }
        if !B1PreAlertManagementRecipient.userCode.isRemoved {
            B1PreAlertManagementRecipient.userCode = B1ClassMetadata.ComplexTypes.alertManagementRecipient.property(withName: "UserCode")
        }
        if !B1PreAlertManagementRecipient.sendEMail.isRemoved {
            B1PreAlertManagementRecipient.sendEMail = B1ClassMetadata.ComplexTypes.alertManagementRecipient.property(withName: "SendEMail")
        }
        if !B1PreAlertManagementRecipient.sendSMS.isRemoved {
            B1PreAlertManagementRecipient.sendSMS = B1ClassMetadata.ComplexTypes.alertManagementRecipient.property(withName: "SendSMS")
        }
        if !B1PreAlertManagementRecipient.sendFax.isRemoved {
            B1PreAlertManagementRecipient.sendFax = B1ClassMetadata.ComplexTypes.alertManagementRecipient.property(withName: "SendFax")
        }
        if !B1PreAlertManagementRecipient.sendInternal.isRemoved {
            B1PreAlertManagementRecipient.sendInternal = B1ClassMetadata.ComplexTypes.alertManagementRecipient.property(withName: "SendInternal")
        }
        if !B1PreAlternateCatNumParams.itemCode.isRemoved {
            B1PreAlternateCatNumParams.itemCode = B1ClassMetadata.ComplexTypes.alternateCatNumParams.property(withName: "ItemCode")
        }
        if !B1PreAlternateCatNumParams.cardCode.isRemoved {
            B1PreAlternateCatNumParams.cardCode = B1ClassMetadata.ComplexTypes.alternateCatNumParams.property(withName: "CardCode")
        }
        if !B1PreAlternateCatNumParams.substitute.isRemoved {
            B1PreAlternateCatNumParams.substitute = B1ClassMetadata.ComplexTypes.alternateCatNumParams.property(withName: "Substitute")
        }
        if !B1PreAlternativeItem.alternativeItemCode.isRemoved {
            B1PreAlternativeItem.alternativeItemCode = B1ClassMetadata.ComplexTypes.alternativeItem.property(withName: "AlternativeItemCode")
        }
        if !B1PreAlternativeItem.matchFactor.isRemoved {
            B1PreAlternativeItem.matchFactor = B1ClassMetadata.ComplexTypes.alternativeItem.property(withName: "MatchFactor")
        }
        if !B1PreAlternativeItem.remarks.isRemoved {
            B1PreAlternativeItem.remarks = B1ClassMetadata.ComplexTypes.alternativeItem.property(withName: "Remarks")
        }
        if !B1PreApprovalRequestDecision.approverUserName.isRemoved {
            B1PreApprovalRequestDecision.approverUserName = B1ClassMetadata.ComplexTypes.approvalRequestDecision.property(withName: "ApproverUserName")
        }
        if !B1PreApprovalRequestDecision.approverPassword.isRemoved {
            B1PreApprovalRequestDecision.approverPassword = B1ClassMetadata.ComplexTypes.approvalRequestDecision.property(withName: "ApproverPassword")
        }
        if !B1PreApprovalRequestDecision.status.isRemoved {
            B1PreApprovalRequestDecision.status = B1ClassMetadata.ComplexTypes.approvalRequestDecision.property(withName: "Status")
        }
        if !B1PreApprovalRequestDecision.remarks.isRemoved {
            B1PreApprovalRequestDecision.remarks = B1ClassMetadata.ComplexTypes.approvalRequestDecision.property(withName: "Remarks")
        }
        if !B1PreApprovalRequestLine.stageCode.isRemoved {
            B1PreApprovalRequestLine.stageCode = B1ClassMetadata.ComplexTypes.approvalRequestLine.property(withName: "StageCode")
        }
        if !B1PreApprovalRequestLine.userID.isRemoved {
            B1PreApprovalRequestLine.userID = B1ClassMetadata.ComplexTypes.approvalRequestLine.property(withName: "UserID")
        }
        if !B1PreApprovalRequestLine.status.isRemoved {
            B1PreApprovalRequestLine.status = B1ClassMetadata.ComplexTypes.approvalRequestLine.property(withName: "Status")
        }
        if !B1PreApprovalRequestLine.remarks.isRemoved {
            B1PreApprovalRequestLine.remarks = B1ClassMetadata.ComplexTypes.approvalRequestLine.property(withName: "Remarks")
        }
        if !B1PreApprovalRequestLine.updateDate.isRemoved {
            B1PreApprovalRequestLine.updateDate = B1ClassMetadata.ComplexTypes.approvalRequestLine.property(withName: "UpdateDate")
        }
        if !B1PreApprovalRequestLine.updateTime.isRemoved {
            B1PreApprovalRequestLine.updateTime = B1ClassMetadata.ComplexTypes.approvalRequestLine.property(withName: "UpdateTime")
        }
        if !B1PreApprovalRequestLine.creationDate.isRemoved {
            B1PreApprovalRequestLine.creationDate = B1ClassMetadata.ComplexTypes.approvalRequestLine.property(withName: "CreationDate")
        }
        if !B1PreApprovalRequestLine.creationTime.isRemoved {
            B1PreApprovalRequestLine.creationTime = B1ClassMetadata.ComplexTypes.approvalRequestLine.property(withName: "CreationTime")
        }
        if !B1PreApprovalRequestParams.code.isRemoved {
            B1PreApprovalRequestParams.code = B1ClassMetadata.ComplexTypes.approvalRequestParams.property(withName: "Code")
        }
        if !B1PreApprovalRequestParams.remarks.isRemoved {
            B1PreApprovalRequestParams.remarks = B1ClassMetadata.ComplexTypes.approvalRequestParams.property(withName: "Remarks")
        }
        if !B1PreApprovalRequestParams.status.isRemoved {
            B1PreApprovalRequestParams.status = B1ClassMetadata.ComplexTypes.approvalRequestParams.property(withName: "Status")
        }
        if !B1PreApprovalStageApprover.userID.isRemoved {
            B1PreApprovalStageApprover.userID = B1ClassMetadata.ComplexTypes.approvalStageApprover.property(withName: "UserID")
        }
        if !B1PreApprovalStageParams.code.isRemoved {
            B1PreApprovalStageParams.code = B1ClassMetadata.ComplexTypes.approvalStageParams.property(withName: "Code")
        }
        if !B1PreApprovalStageParams.name.isRemoved {
            B1PreApprovalStageParams.name = B1ClassMetadata.ComplexTypes.approvalStageParams.property(withName: "Name")
        }
        if !B1PreApprovalTemplateDocument.documentType.isRemoved {
            B1PreApprovalTemplateDocument.documentType = B1ClassMetadata.ComplexTypes.approvalTemplateDocument.property(withName: "DocumentType")
        }
    }

    private static func merge8(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PreApprovalTemplateParams.code.isRemoved {
            B1PreApprovalTemplateParams.code = B1ClassMetadata.ComplexTypes.approvalTemplateParams.property(withName: "Code")
        }
        if !B1PreApprovalTemplateParams.name.isRemoved {
            B1PreApprovalTemplateParams.name = B1ClassMetadata.ComplexTypes.approvalTemplateParams.property(withName: "Name")
        }
        if !B1PreApprovalTemplateQuery.queryID.isRemoved {
            B1PreApprovalTemplateQuery.queryID = B1ClassMetadata.ComplexTypes.approvalTemplateQuery.property(withName: "QueryID")
        }
        if !B1PreApprovalTemplateStage.sortID.isRemoved {
            B1PreApprovalTemplateStage.sortID = B1ClassMetadata.ComplexTypes.approvalTemplateStage.property(withName: "SortID")
        }
        if !B1PreApprovalTemplateStage.approvalStageCode.isRemoved {
            B1PreApprovalTemplateStage.approvalStageCode = B1ClassMetadata.ComplexTypes.approvalTemplateStage.property(withName: "ApprovalStageCode")
        }
        if !B1PreApprovalTemplateStage.remarks.isRemoved {
            B1PreApprovalTemplateStage.remarks = B1ClassMetadata.ComplexTypes.approvalTemplateStage.property(withName: "Remarks")
        }
        if !B1PreApprovalTemplateTerm.conditionType.isRemoved {
            B1PreApprovalTemplateTerm.conditionType = B1ClassMetadata.ComplexTypes.approvalTemplateTerm.property(withName: "ConditionType")
        }
        if !B1PreApprovalTemplateTerm.operationType.isRemoved {
            B1PreApprovalTemplateTerm.operationType = B1ClassMetadata.ComplexTypes.approvalTemplateTerm.property(withName: "OperationType")
        }
        if !B1PreApprovalTemplateTerm.value.isRemoved {
            B1PreApprovalTemplateTerm.value = B1ClassMetadata.ComplexTypes.approvalTemplateTerm.property(withName: "Value")
        }
        if !B1PreApprovalTemplateUser.userID.isRemoved {
            B1PreApprovalTemplateUser.userID = B1ClassMetadata.ComplexTypes.approvalTemplateUser.property(withName: "UserID")
        }
        if !B1PreAssetClassLine.code.isRemoved {
            B1PreAssetClassLine.code = B1ClassMetadata.ComplexTypes.assetClassLine.property(withName: "Code")
        }
        if !B1PreAssetClassLine.lineNumber.isRemoved {
            B1PreAssetClassLine.lineNumber = B1ClassMetadata.ComplexTypes.assetClassLine.property(withName: "LineNumber")
        }
        if !B1PreAssetClassLine.depreciationAreaID.isRemoved {
            B1PreAssetClassLine.depreciationAreaID = B1ClassMetadata.ComplexTypes.assetClassLine.property(withName: "DepreciationAreaID")
        }
        if !B1PreAssetClassLine.activeStatus.isRemoved {
            B1PreAssetClassLine.activeStatus = B1ClassMetadata.ComplexTypes.assetClassLine.property(withName: "ActiveStatus")
        }
        if !B1PreAssetClassLine.accountDetermination.isRemoved {
            B1PreAssetClassLine.accountDetermination = B1ClassMetadata.ComplexTypes.assetClassLine.property(withName: "AccountDetermination")
        }
        if !B1PreAssetClassLine.depreciationTypeID.isRemoved {
            B1PreAssetClassLine.depreciationTypeID = B1ClassMetadata.ComplexTypes.assetClassLine.property(withName: "DepreciationTypeID")
        }
        if !B1PreAssetClassLine.useLife.isRemoved {
            B1PreAssetClassLine.useLife = B1ClassMetadata.ComplexTypes.assetClassLine.property(withName: "UseLife")
        }
        if !B1PreAssetClassParams.code.isRemoved {
            B1PreAssetClassParams.code = B1ClassMetadata.ComplexTypes.assetClassParams.property(withName: "Code")
        }
        if !B1PreAssetClassParams.description.isRemoved {
            B1PreAssetClassParams.description = B1ClassMetadata.ComplexTypes.assetClassParams.property(withName: "Description")
        }
        if !B1PreAssetDepreciationGroupParams.code.isRemoved {
            B1PreAssetDepreciationGroupParams.code = B1ClassMetadata.ComplexTypes.assetDepreciationGroupParams.property(withName: "Code")
        }
        if !B1PreAssetDepreciationGroupParams.description.isRemoved {
            B1PreAssetDepreciationGroupParams.description = B1ClassMetadata.ComplexTypes.assetDepreciationGroupParams.property(withName: "Description")
        }
        if !B1PreAssetDocumentAreaJournal.docEntry.isRemoved {
            B1PreAssetDocumentAreaJournal.docEntry = B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal.property(withName: "DocEntry")
        }
        if !B1PreAssetDocumentAreaJournal.lineNumber.isRemoved {
            B1PreAssetDocumentAreaJournal.lineNumber = B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal.property(withName: "LineNumber")
        }
        if !B1PreAssetDocumentAreaJournal.depreciationArea.isRemoved {
            B1PreAssetDocumentAreaJournal.depreciationArea = B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal.property(withName: "DepreciationArea")
        }
        if !B1PreAssetDocumentAreaJournal.journalRemarks.isRemoved {
            B1PreAssetDocumentAreaJournal.journalRemarks = B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal.property(withName: "JournalRemarks")
        }
        if !B1PreAssetDocumentAreaJournal.transactionNumber.isRemoved {
            B1PreAssetDocumentAreaJournal.transactionNumber = B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal.property(withName: "TransactionNumber")
        }
        if !B1PreAssetDocumentAreaJournal.cancellationJournalRemarks.isRemoved {
            B1PreAssetDocumentAreaJournal.cancellationJournalRemarks = B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal.property(withName: "CancellationJournalRemarks")
        }
        if !B1PreAssetDocumentAreaJournal.cancellationTransactionNumber.isRemoved {
            B1PreAssetDocumentAreaJournal.cancellationTransactionNumber = B1ClassMetadata.ComplexTypes.assetDocumentAreaJournal.property(withName: "CancellationTransactionNumber")
        }
        if !B1PreAssetDocumentLine.docEntry.isRemoved {
            B1PreAssetDocumentLine.docEntry = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "DocEntry")
        }
        if !B1PreAssetDocumentLine.lineNumber.isRemoved {
            B1PreAssetDocumentLine.lineNumber = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "LineNumber")
        }
        if !B1PreAssetDocumentLine.assetNumber.isRemoved {
            B1PreAssetDocumentLine.assetNumber = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "AssetNumber")
        }
        if !B1PreAssetDocumentLine.glAccount.isRemoved {
            B1PreAssetDocumentLine.glAccount = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "GLAccount")
        }
        if !B1PreAssetDocumentLine.quantity.isRemoved {
            B1PreAssetDocumentLine.quantity = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "Quantity")
        }
        if !B1PreAssetDocumentLine.totalLC.isRemoved {
            B1PreAssetDocumentLine.totalLC = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "TotalLC")
        }
        if !B1PreAssetDocumentLine.totalFC.isRemoved {
            B1PreAssetDocumentLine.totalFC = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "TotalFC")
        }
        if !B1PreAssetDocumentLine.totalSC.isRemoved {
            B1PreAssetDocumentLine.totalSC = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "TotalSC")
        }
        if !B1PreAssetDocumentLine.depreciationArea.isRemoved {
            B1PreAssetDocumentLine.depreciationArea = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "DepreciationArea")
        }
        if !B1PreAssetDocumentLine.remarks.isRemoved {
            B1PreAssetDocumentLine.remarks = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "Remarks")
        }
        if !B1PreAssetDocumentLine.newAssetNumber.isRemoved {
            B1PreAssetDocumentLine.newAssetNumber = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "NewAssetNumber")
        }
        if !B1PreAssetDocumentLine.partial.isRemoved {
            B1PreAssetDocumentLine.partial = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "Partial")
        }
        if !B1PreAssetDocumentLine.apc.isRemoved {
            B1PreAssetDocumentLine.apc = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "APC")
        }
        if !B1PreAssetDocumentLine.newAssetClass.isRemoved {
            B1PreAssetDocumentLine.newAssetClass = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "NewAssetClass")
        }
        if !B1PreAssetDocumentLine.distributionRule.isRemoved {
            B1PreAssetDocumentLine.distributionRule = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "DistributionRule")
        }
        if !B1PreAssetDocumentLine.distributionRule2.isRemoved {
            B1PreAssetDocumentLine.distributionRule2 = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "DistributionRule2")
        }
        if !B1PreAssetDocumentLine.distributionRule3.isRemoved {
            B1PreAssetDocumentLine.distributionRule3 = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "DistributionRule3")
        }
        if !B1PreAssetDocumentLine.distributionRule4.isRemoved {
            B1PreAssetDocumentLine.distributionRule4 = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "DistributionRule4")
        }
        if !B1PreAssetDocumentLine.distributionRule5.isRemoved {
            B1PreAssetDocumentLine.distributionRule5 = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "DistributionRule5")
        }
        if !B1PreAssetDocumentLine.project.isRemoved {
            B1PreAssetDocumentLine.project = B1ClassMetadata.ComplexTypes.assetDocumentLine.property(withName: "Project")
        }
        if !B1PreAssetDocumentParams.code.isRemoved {
            B1PreAssetDocumentParams.code = B1ClassMetadata.ComplexTypes.assetDocumentParams.property(withName: "Code")
        }
        if !B1PreAssetDocumentParams.cancellationOption.isRemoved {
            B1PreAssetDocumentParams.cancellationOption = B1ClassMetadata.ComplexTypes.assetDocumentParams.property(withName: "CancellationOption")
        }
        if !B1PreAssetDocumentParams.cancellationDate.isRemoved {
            B1PreAssetDocumentParams.cancellationDate = B1ClassMetadata.ComplexTypes.assetDocumentParams.property(withName: "CancellationDate")
        }
        if !B1PreAssetGroupParams.code.isRemoved {
            B1PreAssetGroupParams.code = B1ClassMetadata.ComplexTypes.assetGroupParams.property(withName: "Code")
        }
        if !B1PreAssetGroupParams.description.isRemoved {
            B1PreAssetGroupParams.description = B1ClassMetadata.ComplexTypes.assetGroupParams.property(withName: "Description")
        }
        if !B1PreAttachments2Params.absoluteEntry.isRemoved {
            B1PreAttachments2Params.absoluteEntry = B1ClassMetadata.ComplexTypes.attachments2Params.property(withName: "AbsoluteEntry")
        }
        if !B1PreAttachments2Line.sourcePath.isRemoved {
            B1PreAttachments2Line.sourcePath = B1ClassMetadata.ComplexTypes.attachments2Line.property(withName: "SourcePath")
        }
        if !B1PreAttachments2Line.fileName.isRemoved {
            B1PreAttachments2Line.fileName = B1ClassMetadata.ComplexTypes.attachments2Line.property(withName: "FileName")
        }
        if !B1PreAttachments2Line.fileExtension.isRemoved {
            B1PreAttachments2Line.fileExtension = B1ClassMetadata.ComplexTypes.attachments2Line.property(withName: "FileExtension")
        }
        if !B1PreAttachments2Line.attachmentDate.isRemoved {
            B1PreAttachments2Line.attachmentDate = B1ClassMetadata.ComplexTypes.attachments2Line.property(withName: "AttachmentDate")
        }
        if !B1PreAttachments2Line.userID.isRemoved {
            B1PreAttachments2Line.userID = B1ClassMetadata.ComplexTypes.attachments2Line.property(withName: "UserID")
        }
        if !B1PreAttachments2Line.override.isRemoved {
            B1PreAttachments2Line.override = B1ClassMetadata.ComplexTypes.attachments2Line.property(withName: "Override")
        }
        if !B1PreAttachments2Line.freeText.isRemoved {
            B1PreAttachments2Line.freeText = B1ClassMetadata.ComplexTypes.attachments2Line.property(withName: "FreeText")
        }
        if !B1PreAttributeGroupLine.code.isRemoved {
            B1PreAttributeGroupLine.code = B1ClassMetadata.ComplexTypes.attributeGroupLine.property(withName: "Code")
        }
        if !B1PreAttributeGroupLine.sortNumber.isRemoved {
            B1PreAttributeGroupLine.sortNumber = B1ClassMetadata.ComplexTypes.attributeGroupLine.property(withName: "SortNumber")
        }
        if !B1PreAttributeGroupLine.attributeID.isRemoved {
            B1PreAttributeGroupLine.attributeID = B1ClassMetadata.ComplexTypes.attributeGroupLine.property(withName: "AttributeID")
        }
        if !B1PreAttributeGroupLine.attributeName.isRemoved {
            B1PreAttributeGroupLine.attributeName = B1ClassMetadata.ComplexTypes.attributeGroupLine.property(withName: "AttributeName")
        }
        if !B1PreAttributeGroupLine.fieldType.isRemoved {
            B1PreAttributeGroupLine.fieldType = B1ClassMetadata.ComplexTypes.attributeGroupLine.property(withName: "FieldType")
        }
        if !B1PreAttributeGroupLine.defaultValue.isRemoved {
            B1PreAttributeGroupLine.defaultValue = B1ClassMetadata.ComplexTypes.attributeGroupLine.property(withName: "DefaultValue")
        }
        if !B1PreAttributeGroupParams.code.isRemoved {
            B1PreAttributeGroupParams.code = B1ClassMetadata.ComplexTypes.attributeGroupParams.property(withName: "Code")
        }
        if !B1PreAttributeGroupParams.name.isRemoved {
            B1PreAttributeGroupParams.name = B1ClassMetadata.ComplexTypes.attributeGroupParams.property(withName: "Name")
        }
        if !B1PreBOEDocumentTypeParams.docEntry.isRemoved {
            B1PreBOEDocumentTypeParams.docEntry = B1ClassMetadata.ComplexTypes.boeDocumentTypeParams.property(withName: "DocEntry")
        }
        if !B1PreBOEDocumentTypeParams.docType.isRemoved {
            B1PreBOEDocumentTypeParams.docType = B1ClassMetadata.ComplexTypes.boeDocumentTypeParams.property(withName: "DocType")
        }
        if !B1PreBOEInstructionParams.instructionEntry.isRemoved {
            B1PreBOEInstructionParams.instructionEntry = B1ClassMetadata.ComplexTypes.boeInstructionParams.property(withName: "InstructionEntry")
        }
        if !B1PreBOEInstructionParams.instructionCode.isRemoved {
            B1PreBOEInstructionParams.instructionCode = B1ClassMetadata.ComplexTypes.boeInstructionParams.property(withName: "InstructionCode")
        }
        if !B1PreBOELine.boeKey.isRemoved {
            B1PreBOELine.boeKey = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "BOEKey")
        }
        if !B1PreBOELine.boeNumber.isRemoved {
            B1PreBOELine.boeNumber = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "BOENumber")
        }
        if !B1PreBOELine.dueDate.isRemoved {
            B1PreBOELine.dueDate = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "DueDate")
        }
        if !B1PreBOELine.bank.isRemoved {
            B1PreBOELine.bank = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "Bank")
        }
        if !B1PreBOELine.branch.isRemoved {
            B1PreBOELine.branch = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "Branch")
        }
        if !B1PreBOELine.accountNumber.isRemoved {
            B1PreBOELine.accountNumber = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "AccountNumber")
        }
        if !B1PreBOELine.amount.isRemoved {
            B1PreBOELine.amount = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "Amount")
        }
        if !B1PreBOELine.boeStatus.isRemoved {
            B1PreBOELine.boeStatus = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "BOEStatus")
        }
        if !B1PreBOELine.transferred.isRemoved {
            B1PreBOELine.transferred = B1ClassMetadata.ComplexTypes.boeLine.property(withName: "Transferred")
        }
        if !B1PreBOELineParams.boeKey.isRemoved {
            B1PreBOELineParams.boeKey = B1ClassMetadata.ComplexTypes.boeLineParams.property(withName: "BOEKey")
        }
        if !B1PreBOEPortfolioParams.portfolioEntry.isRemoved {
            B1PreBOEPortfolioParams.portfolioEntry = B1ClassMetadata.ComplexTypes.boePortfolioParams.property(withName: "PortfolioEntry")
        }
        if !B1PreBOEPortfolioParams.portfolioID.isRemoved {
            B1PreBOEPortfolioParams.portfolioID = B1ClassMetadata.ComplexTypes.boePortfolioParams.property(withName: "PortfolioID")
        }
        if !B1PreBOEPortfolioParams.portfolioCode.isRemoved {
            B1PreBOEPortfolioParams.portfolioCode = B1ClassMetadata.ComplexTypes.boePortfolioParams.property(withName: "PortfolioCode")
        }
        if !B1PreBPAccountReceivablePayble.accountType.isRemoved {
            B1PreBPAccountReceivablePayble.accountType = B1ClassMetadata.ComplexTypes.bpAccountReceivablePayble.property(withName: "AccountType")
        }
        if !B1PreBPAccountReceivablePayble.accountCode.isRemoved {
            B1PreBPAccountReceivablePayble.accountCode = B1ClassMetadata.ComplexTypes.bpAccountReceivablePayble.property(withName: "AccountCode")
        }
        if !B1PreBPAccountReceivablePayble.bpCode.isRemoved {
            B1PreBPAccountReceivablePayble.bpCode = B1ClassMetadata.ComplexTypes.bpAccountReceivablePayble.property(withName: "BPCode")
        }
        if !B1PreBPAddress.addressName.isRemoved {
            B1PreBPAddress.addressName = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "AddressName")
        }
        if !B1PreBPAddress.street.isRemoved {
            B1PreBPAddress.street = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "Street")
        }
        if !B1PreBPAddress.block.isRemoved {
            B1PreBPAddress.block = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "Block")
        }
        if !B1PreBPAddress.zipCode.isRemoved {
            B1PreBPAddress.zipCode = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "ZipCode")
        }
        if !B1PreBPAddress.city.isRemoved {
            B1PreBPAddress.city = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "City")
        }
        if !B1PreBPAddress.county.isRemoved {
            B1PreBPAddress.county = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "County")
        }
        if !B1PreBPAddress.country.isRemoved {
            B1PreBPAddress.country = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "Country")
        }
        if !B1PreBPAddress.state.isRemoved {
            B1PreBPAddress.state = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "State")
        }
        if !B1PreBPAddress.federalTaxID.isRemoved {
            B1PreBPAddress.federalTaxID = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "FederalTaxID")
        }
        if !B1PreBPAddress.taxCode.isRemoved {
            B1PreBPAddress.taxCode = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "TaxCode")
        }
        if !B1PreBPAddress.buildingFloorRoom.isRemoved {
            B1PreBPAddress.buildingFloorRoom = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "BuildingFloorRoom")
        }
        if !B1PreBPAddress.addressType.isRemoved {
            B1PreBPAddress.addressType = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "AddressType")
        }
        if !B1PreBPAddress.addressName2.isRemoved {
            B1PreBPAddress.addressName2 = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "AddressName2")
        }
        if !B1PreBPAddress.addressName3.isRemoved {
            B1PreBPAddress.addressName3 = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "AddressName3")
        }
        if !B1PreBPAddress.typeOfAddress.isRemoved {
            B1PreBPAddress.typeOfAddress = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "TypeOfAddress")
        }
        if !B1PreBPAddress.streetNo.isRemoved {
            B1PreBPAddress.streetNo = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "StreetNo")
        }
        if !B1PreBPAddress.bpCode.isRemoved {
            B1PreBPAddress.bpCode = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "BPCode")
        }
        if !B1PreBPAddress.rowNum.isRemoved {
            B1PreBPAddress.rowNum = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "RowNum")
        }
        if !B1PreBPAddress.globalLocationNumber.isRemoved {
            B1PreBPAddress.globalLocationNumber = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "GlobalLocationNumber")
        }
        if !B1PreBPAddress.nationality.isRemoved {
            B1PreBPAddress.nationality = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "Nationality")
        }
        if !B1PreBPAddress.taxOffice.isRemoved {
            B1PreBPAddress.taxOffice = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "TaxOffice")
        }
        if !B1PreBPAddress.gstin.isRemoved {
            B1PreBPAddress.gstin = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "GSTIN")
        }
        if !B1PreBPAddress.gstType.isRemoved {
            B1PreBPAddress.gstType = B1ClassMetadata.ComplexTypes.bpAddress.property(withName: "GstType")
        }
        if !B1PreBPBankAccount.logInstance.isRemoved {
            B1PreBPBankAccount.logInstance = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "LogInstance")
        }
        if !B1PreBPBankAccount.userNo4.isRemoved {
            B1PreBPBankAccount.userNo4 = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "UserNo4")
        }
        if !B1PreBPBankAccount.bpCode.isRemoved {
            B1PreBPBankAccount.bpCode = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "BPCode")
        }
        if !B1PreBPBankAccount.county.isRemoved {
            B1PreBPBankAccount.county = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "County")
        }
        if !B1PreBPBankAccount.state.isRemoved {
            B1PreBPBankAccount.state = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "State")
        }
        if !B1PreBPBankAccount.userNo2.isRemoved {
            B1PreBPBankAccount.userNo2 = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "UserNo2")
        }
        if !B1PreBPBankAccount.iban.isRemoved {
            B1PreBPBankAccount.iban = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "IBAN")
        }
        if !B1PreBPBankAccount.zipCode.isRemoved {
            B1PreBPBankAccount.zipCode = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "ZipCode")
        }
        if !B1PreBPBankAccount.city.isRemoved {
            B1PreBPBankAccount.city = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "City")
        }
        if !B1PreBPBankAccount.block.isRemoved {
            B1PreBPBankAccount.block = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "Block")
        }
        if !B1PreBPBankAccount.branch.isRemoved {
            B1PreBPBankAccount.branch = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "Branch")
        }
        if !B1PreBPBankAccount.country.isRemoved {
            B1PreBPBankAccount.country = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "Country")
        }
        if !B1PreBPBankAccount.street.isRemoved {
            B1PreBPBankAccount.street = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "Street")
        }
        if !B1PreBPBankAccount.controlKey.isRemoved {
            B1PreBPBankAccount.controlKey = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "ControlKey")
        }
        if !B1PreBPBankAccount.userNo3.isRemoved {
            B1PreBPBankAccount.userNo3 = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "UserNo3")
        }
        if !B1PreBPBankAccount.bankCode.isRemoved {
            B1PreBPBankAccount.bankCode = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "BankCode")
        }
        if !B1PreBPBankAccount.accountNo.isRemoved {
            B1PreBPBankAccount.accountNo = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "AccountNo")
        }
        if !B1PreBPBankAccount.userNo1.isRemoved {
            B1PreBPBankAccount.userNo1 = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "UserNo1")
        }
        if !B1PreBPBankAccount.internalKey.isRemoved {
            B1PreBPBankAccount.internalKey = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "InternalKey")
        }
        if !B1PreBPBankAccount.buildingFloorRoom.isRemoved {
            B1PreBPBankAccount.buildingFloorRoom = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "BuildingFloorRoom")
        }
        if !B1PreBPBankAccount.bik.isRemoved {
            B1PreBPBankAccount.bik = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "BIK")
        }
        if !B1PreBPBankAccount.accountName.isRemoved {
            B1PreBPBankAccount.accountName = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "AccountName")
        }
        if !B1PreBPBankAccount.correspondentAccount.isRemoved {
            B1PreBPBankAccount.correspondentAccount = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "CorrespondentAccount")
        }
        if !B1PreBPBankAccount.phone.isRemoved {
            B1PreBPBankAccount.phone = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "Phone")
        }
        if !B1PreBPBankAccount.fax.isRemoved {
            B1PreBPBankAccount.fax = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "Fax")
        }
        if !B1PreBPBankAccount.customerIdNumber.isRemoved {
            B1PreBPBankAccount.customerIdNumber = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "CustomerIdNumber")
        }
        if !B1PreBPBankAccount.isrBillerID.isRemoved {
            B1PreBPBankAccount.isrBillerID = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "ISRBillerID")
        }
        if !B1PreBPBankAccount.isrType.isRemoved {
            B1PreBPBankAccount.isrType = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "ISRType")
        }
        if !B1PreBPBankAccount.bicSwiftCode.isRemoved {
            B1PreBPBankAccount.bicSwiftCode = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "BICSwiftCode")
        }
        if !B1PreBPBankAccount.abaRoutingNumber.isRemoved {
            B1PreBPBankAccount.abaRoutingNumber = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "ABARoutingNumber")
        }
        if !B1PreBPBankAccount.mandateID.isRemoved {
            B1PreBPBankAccount.mandateID = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "MandateID")
        }
        if !B1PreBPBankAccount.signatureDate.isRemoved {
            B1PreBPBankAccount.signatureDate = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "SignatureDate")
        }
        if !B1PreBPBankAccount.mandateExpDate.isRemoved {
            B1PreBPBankAccount.mandateExpDate = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "MandateExpDate")
        }
        if !B1PreBPBankAccount.sepaSeqType.isRemoved {
            B1PreBPBankAccount.sepaSeqType = B1ClassMetadata.ComplexTypes.bpBankAccount.property(withName: "SEPASeqType")
        }
        if !B1PreBPBlockSendingMarketingContent.cardCode.isRemoved {
            B1PreBPBlockSendingMarketingContent.cardCode = B1ClassMetadata.ComplexTypes.bpBlockSendingMarketingContent.property(withName: "CardCode")
        }
        if !B1PreBPBlockSendingMarketingContent.communicationMediaID.isRemoved {
            B1PreBPBlockSendingMarketingContent.communicationMediaID = B1ClassMetadata.ComplexTypes.bpBlockSendingMarketingContent.property(withName: "CommunicationMediaId")
        }
        if !B1PreBPBlockSendingMarketingContent.choose.isRemoved {
            B1PreBPBlockSendingMarketingContent.choose = B1ClassMetadata.ComplexTypes.bpBlockSendingMarketingContent.property(withName: "Choose")
        }
        if !B1PreBPBranchAssignmentItem.bpCode.isRemoved {
            B1PreBPBranchAssignmentItem.bpCode = B1ClassMetadata.ComplexTypes.bpBranchAssignmentItem.property(withName: "BPCode")
        }
        if !B1PreBPBranchAssignmentItem.bplid.isRemoved {
            B1PreBPBranchAssignmentItem.bplid = B1ClassMetadata.ComplexTypes.bpBranchAssignmentItem.property(withName: "BPLID")
        }
        if !B1PreBPBranchAssignmentItem.disabledForBP.isRemoved {
            B1PreBPBranchAssignmentItem.disabledForBP = B1ClassMetadata.ComplexTypes.bpBranchAssignmentItem.property(withName: "DisabledForBP")
        }
        if !B1PreBPCode.code.isRemoved {
            B1PreBPCode.code = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "Code")
        }
        if !B1PreBPCode.dueDate.isRemoved {
            B1PreBPCode.dueDate = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "DueDate")
        }
        if !B1PreBPCode.debit.isRemoved {
            B1PreBPCode.debit = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "Debit")
        }
        if !B1PreBPCode.credit.isRemoved {
            B1PreBPCode.credit = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "Credit")
        }
        if !B1PreBPCode.systemDebit.isRemoved {
            B1PreBPCode.systemDebit = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "SystemDebit")
        }
        if !B1PreBPCode.systemCredit.isRemoved {
            B1PreBPCode.systemCredit = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "SystemCredit")
        }
        if !B1PreBPCode.foreignDebit.isRemoved {
            B1PreBPCode.foreignDebit = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "ForeignDebit")
        }
        if !B1PreBPCode.foreignCredit.isRemoved {
            B1PreBPCode.foreignCredit = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "ForeignCredit")
        }
        if !B1PreBPCode.foreignCurrency.isRemoved {
            B1PreBPCode.foreignCurrency = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "ForeignCurrency")
        }
        if !B1PreBPCode.bpCtrlAcct.isRemoved {
            B1PreBPCode.bpCtrlAcct = B1ClassMetadata.ComplexTypes.bpCode.property(withName: "BpCtrlAcct")
        }
        if !B1PreBPFiscalTaxID.address.isRemoved {
            B1PreBPFiscalTaxID.address = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "Address")
        }
        if !B1PreBPFiscalTaxID.cnaeCode.isRemoved {
            B1PreBPFiscalTaxID.cnaeCode = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "CNAECode")
        }
        if !B1PreBPFiscalTaxID.taxId0.isRemoved {
            B1PreBPFiscalTaxID.taxId0 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId0")
        }
        if !B1PreBPFiscalTaxID.taxId1.isRemoved {
            B1PreBPFiscalTaxID.taxId1 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId1")
        }
        if !B1PreBPFiscalTaxID.taxId2.isRemoved {
            B1PreBPFiscalTaxID.taxId2 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId2")
        }
        if !B1PreBPFiscalTaxID.taxId3.isRemoved {
            B1PreBPFiscalTaxID.taxId3 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId3")
        }
        if !B1PreBPFiscalTaxID.taxId4.isRemoved {
            B1PreBPFiscalTaxID.taxId4 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId4")
        }
        if !B1PreBPFiscalTaxID.taxId5.isRemoved {
            B1PreBPFiscalTaxID.taxId5 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId5")
        }
        if !B1PreBPFiscalTaxID.taxId6.isRemoved {
            B1PreBPFiscalTaxID.taxId6 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId6")
        }
        if !B1PreBPFiscalTaxID.taxId7.isRemoved {
            B1PreBPFiscalTaxID.taxId7 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId7")
        }
        if !B1PreBPFiscalTaxID.taxId8.isRemoved {
            B1PreBPFiscalTaxID.taxId8 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId8")
        }
        if !B1PreBPFiscalTaxID.taxId9.isRemoved {
            B1PreBPFiscalTaxID.taxId9 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId9")
        }
        if !B1PreBPFiscalTaxID.taxId10.isRemoved {
            B1PreBPFiscalTaxID.taxId10 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId10")
        }
        if !B1PreBPFiscalTaxID.taxId11.isRemoved {
            B1PreBPFiscalTaxID.taxId11 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId11")
        }
        if !B1PreBPFiscalTaxID.bpCode.isRemoved {
            B1PreBPFiscalTaxID.bpCode = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "BPCode")
        }
        if !B1PreBPFiscalTaxID.addrType.isRemoved {
            B1PreBPFiscalTaxID.addrType = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "AddrType")
        }
        if !B1PreBPFiscalTaxID.taxId12.isRemoved {
            B1PreBPFiscalTaxID.taxId12 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId12")
        }
        if !B1PreBPFiscalTaxID.taxId13.isRemoved {
            B1PreBPFiscalTaxID.taxId13 = B1ClassMetadata.ComplexTypes.bpFiscalTaxID.property(withName: "TaxId13")
        }
        if !B1PreBPIntrastatExtension.cardCode.isRemoved {
            B1PreBPIntrastatExtension.cardCode = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "CardCode")
        }
        if !B1PreBPIntrastatExtension.transportMode.isRemoved {
            B1PreBPIntrastatExtension.transportMode = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "TransportMode")
        }
        if !B1PreBPIntrastatExtension.incoterms.isRemoved {
            B1PreBPIntrastatExtension.incoterms = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "Incoterms")
        }
        if !B1PreBPIntrastatExtension.natureOfTransactions.isRemoved {
            B1PreBPIntrastatExtension.natureOfTransactions = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "NatureOfTransactions")
        }
        if !B1PreBPIntrastatExtension.statisticalProcedure.isRemoved {
            B1PreBPIntrastatExtension.statisticalProcedure = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "StatisticalProcedure")
        }
        if !B1PreBPIntrastatExtension.customsProcedure.isRemoved {
            B1PreBPIntrastatExtension.customsProcedure = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "CustomsProcedure")
        }
        if !B1PreBPIntrastatExtension.portOfEntryOrExit.isRemoved {
            B1PreBPIntrastatExtension.portOfEntryOrExit = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "PortOfEntryOrExit")
        }
        if !B1PreBPIntrastatExtension.domesticOrForeignID.isRemoved {
            B1PreBPIntrastatExtension.domesticOrForeignID = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "DomesticOrForeignID")
        }
        if !B1PreBPIntrastatExtension.intrastatRelevant.isRemoved {
            B1PreBPIntrastatExtension.intrastatRelevant = B1ClassMetadata.ComplexTypes.bpIntrastatExtension.property(withName: "IntrastatRelevant")
        }
        if !B1PreBPPaymentDate.paymentDate.isRemoved {
            B1PreBPPaymentDate.paymentDate = B1ClassMetadata.ComplexTypes.bpPaymentDate.property(withName: "PaymentDate")
        }
        if !B1PreBPPaymentDate.bpCode.isRemoved {
            B1PreBPPaymentDate.bpCode = B1ClassMetadata.ComplexTypes.bpPaymentDate.property(withName: "BPCode")
        }
        if !B1PreBPPaymentMethod.paymentMethodCode.isRemoved {
            B1PreBPPaymentMethod.paymentMethodCode = B1ClassMetadata.ComplexTypes.bpPaymentMethod.property(withName: "PaymentMethodCode")
        }
        if !B1PreBPPaymentMethod.rowNumber.isRemoved {
            B1PreBPPaymentMethod.rowNumber = B1ClassMetadata.ComplexTypes.bpPaymentMethod.property(withName: "RowNumber")
        }
        if !B1PreBPPaymentMethod.bpCode.isRemoved {
            B1PreBPPaymentMethod.bpCode = B1ClassMetadata.ComplexTypes.bpPaymentMethod.property(withName: "BPCode")
        }
        if !B1PreBPPriorityParams.priority.isRemoved {
            B1PreBPPriorityParams.priority = B1ClassMetadata.ComplexTypes.bpPriorityParams.property(withName: "Priority")
        }
        if !B1PreBPWithholdingTax.wtCode.isRemoved {
            B1PreBPWithholdingTax.wtCode = B1ClassMetadata.ComplexTypes.bpWithholdingTax.property(withName: "WTCode")
        }
        if !B1PreBPWithholdingTax.bpCode.isRemoved {
            B1PreBPWithholdingTax.bpCode = B1ClassMetadata.ComplexTypes.bpWithholdingTax.property(withName: "BPCode")
        }
        if !B1PreBankChargesAllocationCodeParams.code.isRemoved {
            B1PreBankChargesAllocationCodeParams.code = B1ClassMetadata.ComplexTypes.bankChargesAllocationCodeParams.property(withName: "Code")
        }
        if !B1PreBankChargesAllocationCodeParams.description.isRemoved {
            B1PreBankChargesAllocationCodeParams.description = B1ClassMetadata.ComplexTypes.bankChargesAllocationCodeParams.property(withName: "Description")
        }
        if !B1PreBankPageParams.accountCode.isRemoved {
            B1PreBankPageParams.accountCode = B1ClassMetadata.ComplexTypes.bankPageParams.property(withName: "AccountCode")
        }
        if !B1PreBankPageParams.sequence.isRemoved {
            B1PreBankPageParams.sequence = B1ClassMetadata.ComplexTypes.bankPageParams.property(withName: "Sequence")
        }
        if !B1PreBankParams.absoluteEntry.isRemoved {
            B1PreBankParams.absoluteEntry = B1ClassMetadata.ComplexTypes.bankParams.property(withName: "AbsoluteEntry")
        }
        if !B1PreBankStatementParams.internalNumber.isRemoved {
            B1PreBankStatementParams.internalNumber = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "InternalNumber")
        }
        if !B1PreBankStatementParams.bankAccountKey.isRemoved {
            B1PreBankStatementParams.bankAccountKey = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "BankAccountKey")
        }
        if !B1PreBankStatementParams.statementNumber.isRemoved {
            B1PreBankStatementParams.statementNumber = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "StatementNumber")
        }
        if !B1PreBankStatementParams.statementDate.isRemoved {
            B1PreBankStatementParams.statementDate = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "StatementDate")
        }
        if !B1PreBankStatementParams.status.isRemoved {
            B1PreBankStatementParams.status = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "Status")
        }
        if !B1PreBankStatementParams.imported.isRemoved {
            B1PreBankStatementParams.imported = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "Imported")
        }
        if !B1PreBankStatementParams.startingBalanceF.isRemoved {
            B1PreBankStatementParams.startingBalanceF = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "StartingBalanceF")
        }
        if !B1PreBankStatementParams.endingBalanceF.isRemoved {
            B1PreBankStatementParams.endingBalanceF = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "EndingBalanceF")
        }
        if !B1PreBankStatementParams.currency.isRemoved {
            B1PreBankStatementParams.currency = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "Currency")
        }
        if !B1PreBankStatementParams.startingBalanceL.isRemoved {
            B1PreBankStatementParams.startingBalanceL = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "StartingBalanceL")
        }
        if !B1PreBankStatementParams.endingBalanceL.isRemoved {
            B1PreBankStatementParams.endingBalanceL = B1ClassMetadata.ComplexTypes.bankStatementParams.property(withName: "EndingBalanceL")
        }
        if !B1PreBankStatementRow.externalBankStatementNo.isRemoved {
            B1PreBankStatementRow.externalBankStatementNo = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "ExternalBankStatementNo")
        }
        if !B1PreBankStatementRow.accountNumber.isRemoved {
            B1PreBankStatementRow.accountNumber = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "AccountNumber")
        }
        if !B1PreBankStatementRow.sequenceNo.isRemoved {
            B1PreBankStatementRow.sequenceNo = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "SequenceNo")
        }
        if !B1PreBankStatementRow.accountName.isRemoved {
            B1PreBankStatementRow.accountName = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "AccountName")
        }
        if !B1PreBankStatementRow.reference.isRemoved {
            B1PreBankStatementRow.reference = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "Reference")
        }
        if !B1PreBankStatementRow.dueDate.isRemoved {
            B1PreBankStatementRow.dueDate = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "DueDate")
        }
        if !B1PreBankStatementRow.details.isRemoved {
            B1PreBankStatementRow.details = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "Details")
        }
        if !B1PreBankStatementRow.debitAmountFC.isRemoved {
            B1PreBankStatementRow.debitAmountFC = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "DebitAmountFC")
        }
        if !B1PreBankStatementRow.creditAmountFC.isRemoved {
            B1PreBankStatementRow.creditAmountFC = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "CreditAmountFC")
        }
        if !B1PreBankStatementRow.creditCurrency.isRemoved {
            B1PreBankStatementRow.creditCurrency = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "CreditCurrency")
        }
        if !B1PreBankStatementRow.balance.isRemoved {
            B1PreBankStatementRow.balance = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "Balance")
        }
        if !B1PreBankStatementRow.reconciliationNo.isRemoved {
            B1PreBankStatementRow.reconciliationNo = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "ReconciliationNo")
        }
        if !B1PreBankStatementRow.externalCode.isRemoved {
            B1PreBankStatementRow.externalCode = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "ExternalCode")
        }
        if !B1PreBankStatementRow.bpCode.isRemoved {
            B1PreBankStatementRow.bpCode = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "BPCode")
        }
        if !B1PreBankStatementRow.bpName.isRemoved {
            B1PreBankStatementRow.bpName = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "BPName")
        }
        if !B1PreBankStatementRow.statementNumber.isRemoved {
            B1PreBankStatementRow.statementNumber = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "StatementNumber")
        }
        if !B1PreBankStatementRow.rowStatus.isRemoved {
            B1PreBankStatementRow.rowStatus = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "RowStatus")
        }
        if !B1PreBankStatementRow.visualOrder.isRemoved {
            B1PreBankStatementRow.visualOrder = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "VisualOrder")
        }
        if !B1PreBankStatementRow.docNumType.isRemoved {
            B1PreBankStatementRow.docNumType = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "DocNumType")
        }
        if !B1PreBankStatementRow.details2.isRemoved {
            B1PreBankStatementRow.details2 = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "Details2")
        }
        if !B1PreBankStatementRow.paymentReferenceNo.isRemoved {
            B1PreBankStatementRow.paymentReferenceNo = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "PaymentReferenceNo")
        }
        if !B1PreBankStatementRow.createMethod.isRemoved {
            B1PreBankStatementRow.createMethod = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "CreateMethod")
        }
        if !B1PreBankStatementRow.bankStmtLineDate.isRemoved {
            B1PreBankStatementRow.bankStmtLineDate = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "BankStmtLineDate")
        }
        if !B1PreBankStatementRow.bankStmtDueDate.isRemoved {
            B1PreBankStatementRow.bankStmtDueDate = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "BankStmtDueDate")
        }
        if !B1PreBankStatementRow.internalBankOpCode.isRemoved {
            B1PreBankStatementRow.internalBankOpCode = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "InternalBankOpCode")
        }
        if !B1PreBankStatementRow.bpBankAccount.isRemoved {
            B1PreBankStatementRow.bpBankAccount = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "BPBankAccount")
        }
        if !B1PreBankStatementRow.debitAmountLC.isRemoved {
            B1PreBankStatementRow.debitAmountLC = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "DebitAmountLC")
        }
        if !B1PreBankStatementRow.creditAmountLC.isRemoved {
            B1PreBankStatementRow.creditAmountLC = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "CreditAmountLC")
        }
        if !B1PreBankStatementRow.exchangeRate.isRemoved {
            B1PreBankStatementRow.exchangeRate = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "ExchangeRate")
        }
        if !B1PreBankStatementRow.ibaNofBPBankAccount.isRemoved {
            B1PreBankStatementRow.ibaNofBPBankAccount = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "IBANofBPBankAccount")
        }
        if !B1PreBankStatementRow.feeOnTheLine.isRemoved {
            B1PreBankStatementRow.feeOnTheLine = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FeeOnTheLine")
        }
        if !B1PreBankStatementRow.vatAmountLC.isRemoved {
            B1PreBankStatementRow.vatAmountLC = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "VATAmountLC")
        }
        if !B1PreBankStatementRow.vatAmountFC.isRemoved {
            B1PreBankStatementRow.vatAmountFC = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "VATAmountFC")
        }
        if !B1PreBankStatementRow.journalEntryID.isRemoved {
            B1PreBankStatementRow.journalEntryID = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "JournalEntryID")
        }
        if !B1PreBankStatementRow.paymentID.isRemoved {
            B1PreBankStatementRow.paymentID = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "PaymentID")
        }
        if !B1PreBankStatementRow.documentType.isRemoved {
            B1PreBankStatementRow.documentType = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "DocumentType")
        }
        if !B1PreBankStatementRow.postingMethod.isRemoved {
            B1PreBankStatementRow.postingMethod = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "PostingMethod")
        }
        if !B1PreBankStatementRow.glAccountforFee.isRemoved {
            B1PreBankStatementRow.glAccountforFee = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "GLAccountforFee")
        }
        if !B1PreBankStatementRow.feeProfitCenter.isRemoved {
            B1PreBankStatementRow.feeProfitCenter = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FeeProfitCenter")
        }
        if !B1PreBankStatementRow.feeProject.isRemoved {
            B1PreBankStatementRow.feeProject = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FeeProject")
        }
        if !B1PreBankStatementRow.bpBankCode.isRemoved {
            B1PreBankStatementRow.bpBankCode = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "BPBankCode")
        }
        if !B1PreBankStatementRow.feeDistributionRule.isRemoved {
            B1PreBankStatementRow.feeDistributionRule = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FeeDistributionRule")
        }
        if !B1PreBankStatementRow.feeDistributionRule2.isRemoved {
            B1PreBankStatementRow.feeDistributionRule2 = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FeeDistributionRule2")
        }
        if !B1PreBankStatementRow.feeDistributionRule3.isRemoved {
            B1PreBankStatementRow.feeDistributionRule3 = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FeeDistributionRule3")
        }
        if !B1PreBankStatementRow.feeDistributionRule4.isRemoved {
            B1PreBankStatementRow.feeDistributionRule4 = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FeeDistributionRule4")
        }
        if !B1PreBankStatementRow.feeDistributionRule5.isRemoved {
            B1PreBankStatementRow.feeDistributionRule5 = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FeeDistributionRule5")
        }
        if !B1PreBankStatementRow.bpbicSwiftCode.isRemoved {
            B1PreBankStatementRow.bpbicSwiftCode = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "BPBICSwiftCode")
        }
        if !B1PreBankStatementRow.source.isRemoved {
            B1PreBankStatementRow.source = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "Source")
        }
        if !B1PreBankStatementRow.folioPrefixString.isRemoved {
            B1PreBankStatementRow.folioPrefixString = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FolioPrefixString")
        }
        if !B1PreBankStatementRow.folioNumber.isRemoved {
            B1PreBankStatementRow.folioNumber = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "FolioNumber")
        }
        if !B1PreBankStatementRow.multiplePayments.isRemoved {
            B1PreBankStatementRow.multiplePayments = B1ClassMetadata.ComplexTypes.bankStatementRow.property(withName: "MultiplePayments")
        }
        if !B1PreBankStatementsFilter.country.isRemoved {
            B1PreBankStatementsFilter.country = B1ClassMetadata.ComplexTypes.bankStatementsFilter.property(withName: "Country")
        }
        if !B1PreBankStatementsFilter.bank.isRemoved {
            B1PreBankStatementsFilter.bank = B1ClassMetadata.ComplexTypes.bankStatementsFilter.property(withName: "Bank")
        }
        if !B1PreBankStatementsFilter.account.isRemoved {
            B1PreBankStatementsFilter.account = B1ClassMetadata.ComplexTypes.bankStatementsFilter.property(withName: "Account")
        }
        if !B1PreBarCodeParams.absEntry.isRemoved {
            B1PreBarCodeParams.absEntry = B1ClassMetadata.ComplexTypes.barCodeParams.property(withName: "AbsEntry")
        }
        if !B1PreBarCodeParams.itemNo.isRemoved {
            B1PreBarCodeParams.itemNo = B1ClassMetadata.ComplexTypes.barCodeParams.property(withName: "ItemNo")
        }
        if !B1PreBarCodeParams.uoMEntry.isRemoved {
            B1PreBarCodeParams.uoMEntry = B1ClassMetadata.ComplexTypes.barCodeParams.property(withName: "UoMEntry")
        }
        if !B1PreBarCodeParams.barcode.isRemoved {
            B1PreBarCodeParams.barcode = B1ClassMetadata.ComplexTypes.barCodeParams.property(withName: "Barcode")
        }
        if !B1PreBatchNumber.batchNumber.isRemoved {
            B1PreBatchNumber.batchNumber = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "BatchNumber")
        }
        if !B1PreBatchNumber.manufacturerSerialNumber.isRemoved {
            B1PreBatchNumber.manufacturerSerialNumber = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "ManufacturerSerialNumber")
        }
        if !B1PreBatchNumber.internalSerialNumber.isRemoved {
            B1PreBatchNumber.internalSerialNumber = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "InternalSerialNumber")
        }
        if !B1PreBatchNumber.expiryDate.isRemoved {
            B1PreBatchNumber.expiryDate = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "ExpiryDate")
        }
        if !B1PreBatchNumber.manufacturingDate.isRemoved {
            B1PreBatchNumber.manufacturingDate = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "ManufacturingDate")
        }
        if !B1PreBatchNumber.addmisionDate.isRemoved {
            B1PreBatchNumber.addmisionDate = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "AddmisionDate")
        }
        if !B1PreBatchNumber.location.isRemoved {
            B1PreBatchNumber.location = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "Location")
        }
        if !B1PreBatchNumber.notes.isRemoved {
            B1PreBatchNumber.notes = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "Notes")
        }
        if !B1PreBatchNumber.quantity.isRemoved {
            B1PreBatchNumber.quantity = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "Quantity")
        }
        if !B1PreBatchNumber.baseLineNumber.isRemoved {
            B1PreBatchNumber.baseLineNumber = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "BaseLineNumber")
        }
        if !B1PreBatchNumber.trackingNote.isRemoved {
            B1PreBatchNumber.trackingNote = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "TrackingNote")
        }
        if !B1PreBatchNumber.trackingNoteLine.isRemoved {
            B1PreBatchNumber.trackingNoteLine = B1ClassMetadata.ComplexTypes.batchNumber.property(withName: "TrackingNoteLine")
        }
        if !B1PreBatchNumberDetailParams.docEntry.isRemoved {
            B1PreBatchNumberDetailParams.docEntry = B1ClassMetadata.ComplexTypes.batchNumberDetailParams.property(withName: "DocEntry")
        }
        if !B1PreBillOfExchange.billOfExchangeNo.isRemoved {
            B1PreBillOfExchange.billOfExchangeNo = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "BillOfExchangeNo")
        }
        if !B1PreBillOfExchange.billOfExchangeDueDate.isRemoved {
            B1PreBillOfExchange.billOfExchangeDueDate = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "BillOfExchangeDueDate")
        }
        if !B1PreBillOfExchange.details.isRemoved {
            B1PreBillOfExchange.details = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "Details")
        }
        if !B1PreBillOfExchange.referenceNo.isRemoved {
            B1PreBillOfExchange.referenceNo = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "ReferenceNo")
        }
        if !B1PreBillOfExchange.remarks.isRemoved {
            B1PreBillOfExchange.remarks = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "Remarks")
        }
        if !B1PreBillOfExchange.paymentMethodCode.isRemoved {
            B1PreBillOfExchange.paymentMethodCode = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "PaymentMethodCode")
        }
        if !B1PreBillOfExchange.bpBankCode.isRemoved {
            B1PreBillOfExchange.bpBankCode = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "BPBankCode")
        }
        if !B1PreBillOfExchange.bpBankAct.isRemoved {
            B1PreBillOfExchange.bpBankAct = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "BPBankAct")
        }
        if !B1PreBillOfExchange.bpBankCountry.isRemoved {
            B1PreBillOfExchange.bpBankCountry = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "BPBankCountry")
        }
        if !B1PreBillOfExchange.controlKey.isRemoved {
            B1PreBillOfExchange.controlKey = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "ControlKey")
        }
        if !B1PreBillOfExchange.paymentEngineStatus1.isRemoved {
            B1PreBillOfExchange.paymentEngineStatus1 = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "PaymentEngineStatus1")
        }
        if !B1PreBillOfExchange.paymentEngineStatus2.isRemoved {
            B1PreBillOfExchange.paymentEngineStatus2 = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "PaymentEngineStatus2")
        }
        if !B1PreBillOfExchange.paymentEngineStatus3.isRemoved {
            B1PreBillOfExchange.paymentEngineStatus3 = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "PaymentEngineStatus3")
        }
        if !B1PreBillOfExchange.stampTaxCode.isRemoved {
            B1PreBillOfExchange.stampTaxCode = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "StampTaxCode")
        }
        if !B1PreBillOfExchange.stampTaxAmount.isRemoved {
            B1PreBillOfExchange.stampTaxAmount = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "StampTaxAmount")
        }
        if !B1PreBillOfExchange.folioNumber.isRemoved {
            B1PreBillOfExchange.folioNumber = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "FolioNumber")
        }
        if !B1PreBillOfExchange.folioPrefixString.isRemoved {
            B1PreBillOfExchange.folioPrefixString = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "FolioPrefixString")
        }
        if !B1PreBillOfExchange.interestAmount.isRemoved {
            B1PreBillOfExchange.interestAmount = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "InterestAmount")
        }
        if !B1PreBillOfExchange.discountAmount.isRemoved {
            B1PreBillOfExchange.discountAmount = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "DiscountAmount")
        }
        if !B1PreBillOfExchange.fineAmount.isRemoved {
            B1PreBillOfExchange.fineAmount = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "FineAmount")
        }
        if !B1PreBillOfExchange.interestDate.isRemoved {
            B1PreBillOfExchange.interestDate = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "InterestDate")
        }
        if !B1PreBillOfExchange.discountDate.isRemoved {
            B1PreBillOfExchange.discountDate = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "DiscountDate")
        }
        if !B1PreBillOfExchange.fineDate.isRemoved {
            B1PreBillOfExchange.fineDate = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "FineDate")
        }
        if !B1PreBillOfExchange.iofAmount.isRemoved {
            B1PreBillOfExchange.iofAmount = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "IOFAmount")
        }
        if !B1PreBillOfExchange.serviceFeeAmount.isRemoved {
            B1PreBillOfExchange.serviceFeeAmount = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "ServiceFeeAmount")
        }
        if !B1PreBillOfExchange.otherExpensesAmount.isRemoved {
            B1PreBillOfExchange.otherExpensesAmount = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "OtherExpensesAmount")
        }
        if !B1PreBillOfExchange.otherIncomesAmount.isRemoved {
            B1PreBillOfExchange.otherIncomesAmount = B1ClassMetadata.ComplexTypes.billOfExchange.property(withName: "OtherIncomesAmount")
        }
        if !B1PreBillOfExchangeTransBankPage.accountCode.isRemoved {
            B1PreBillOfExchangeTransBankPage.accountCode = B1ClassMetadata.ComplexTypes.billOfExchangeTransBankPage.property(withName: "AccountCode")
        }
        if !B1PreBillOfExchangeTransBankPage.sequence.isRemoved {
            B1PreBillOfExchangeTransBankPage.sequence = B1ClassMetadata.ComplexTypes.billOfExchangeTransBankPage.property(withName: "Sequence")
        }
        if !B1PreBillOfExchangeTransDeposit.depositNorm.isRemoved {
            B1PreBillOfExchangeTransDeposit.depositNorm = B1ClassMetadata.ComplexTypes.billOfExchangeTransDeposit.property(withName: "DepositNorm")
        }
        if !B1PreBillOfExchangeTransDeposit.postingType.isRemoved {
            B1PreBillOfExchangeTransDeposit.postingType = B1ClassMetadata.ComplexTypes.billOfExchangeTransDeposit.property(withName: "PostingType")
        }
        if !B1PreBillOfExchangeTransDeposit.bankCountry.isRemoved {
            B1PreBillOfExchangeTransDeposit.bankCountry = B1ClassMetadata.ComplexTypes.billOfExchangeTransDeposit.property(withName: "BankCountry")
        }
        if !B1PreBillOfExchangeTransDeposit.bankAccount.isRemoved {
            B1PreBillOfExchangeTransDeposit.bankAccount = B1ClassMetadata.ComplexTypes.billOfExchangeTransDeposit.property(withName: "BankAccount")
        }
        if !B1PreBillOfExchangeTransDeposit.bankDepositAccount.isRemoved {
            B1PreBillOfExchangeTransDeposit.bankDepositAccount = B1ClassMetadata.ComplexTypes.billOfExchangeTransDeposit.property(withName: "BankDepositAccount")
        }
        if !B1PreBillOfExchangeTransDeposit.bankBranch.isRemoved {
            B1PreBillOfExchangeTransDeposit.bankBranch = B1ClassMetadata.ComplexTypes.billOfExchangeTransDeposit.property(withName: "BankBranch")
        }
        if !B1PreBillOfExchangeTransactionLine.billOfExchangeNo.isRemoved {
            B1PreBillOfExchangeTransactionLine.billOfExchangeNo = B1ClassMetadata.ComplexTypes.billOfExchangeTransactionLine.property(withName: "BillOfExchangeNo")
        }
        if !B1PreBillOfExchangeTransactionLine.billOfExchangeType.isRemoved {
            B1PreBillOfExchangeTransactionLine.billOfExchangeType = B1ClassMetadata.ComplexTypes.billOfExchangeTransactionLine.property(withName: "BillOfExchangeType")
        }
        if !B1PreBillOfExchangeTransactionLine.billOfExchangeDueDate.isRemoved {
            B1PreBillOfExchangeTransactionLine.billOfExchangeDueDate = B1ClassMetadata.ComplexTypes.billOfExchangeTransactionLine.property(withName: "BillOfExchangeDueDate")
        }
        if !B1PreBillOfExchangeTransactionParams.boeTransactionkey.isRemoved {
            B1PreBillOfExchangeTransactionParams.boeTransactionkey = B1ClassMetadata.ComplexTypes.billOfExchangeTransactionParams.property(withName: "BOETransactionkey")
        }
        if !B1PreBinLocationAttributeParams.absEntry.isRemoved {
            B1PreBinLocationAttributeParams.absEntry = B1ClassMetadata.ComplexTypes.binLocationAttributeParams.property(withName: "AbsEntry")
        }
        if !B1PreBinLocationAttributeParams.attribute.isRemoved {
            B1PreBinLocationAttributeParams.attribute = B1ClassMetadata.ComplexTypes.binLocationAttributeParams.property(withName: "Attribute")
        }
        if !B1PreBinLocationAttributeParams.code.isRemoved {
            B1PreBinLocationAttributeParams.code = B1ClassMetadata.ComplexTypes.binLocationAttributeParams.property(withName: "Code")
        }
        if !B1PreBinLocationFieldParams.absEntry.isRemoved {
            B1PreBinLocationFieldParams.absEntry = B1ClassMetadata.ComplexTypes.binLocationFieldParams.property(withName: "AbsEntry")
        }
        if !B1PreBinLocationParams.absEntry.isRemoved {
            B1PreBinLocationParams.absEntry = B1ClassMetadata.ComplexTypes.binLocationParams.property(withName: "AbsEntry")
        }
        if !B1PreBinLocationParams.binCode.isRemoved {
            B1PreBinLocationParams.binCode = B1ClassMetadata.ComplexTypes.binLocationParams.property(withName: "BinCode")
        }
        if !B1PreBlanketAgreementParams.agreementNo.isRemoved {
            B1PreBlanketAgreementParams.agreementNo = B1ClassMetadata.ComplexTypes.blanketAgreementParams.property(withName: "AgreementNo")
        }
        if !B1PreBlanketAgreementsDocument.agreementRowNumber.isRemoved {
            B1PreBlanketAgreementsDocument.agreementRowNumber = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "AgreementRowNumber")
        }
        if !B1PreBlanketAgreementsDocument.documentType.isRemoved {
            B1PreBlanketAgreementsDocument.documentType = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "DocumentType")
        }
        if !B1PreBlanketAgreementsDocument.documentNo.isRemoved {
            B1PreBlanketAgreementsDocument.documentNo = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "DocumentNo")
        }
        if !B1PreBlanketAgreementsDocument.documentRowNumber.isRemoved {
            B1PreBlanketAgreementsDocument.documentRowNumber = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "DocumentRowNumber")
        }
        if !B1PreBlanketAgreementsDocument.documentDate.isRemoved {
            B1PreBlanketAgreementsDocument.documentDate = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "DocumentDate")
        }
        if !B1PreBlanketAgreementsDocument.itemNo.isRemoved {
            B1PreBlanketAgreementsDocument.itemNo = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "ItemNo")
        }
        if !B1PreBlanketAgreementsDocument.itemDescription.isRemoved {
            B1PreBlanketAgreementsDocument.itemDescription = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "ItemDescription")
        }
        if !B1PreBlanketAgreementsDocument.unitPrice.isRemoved {
            B1PreBlanketAgreementsDocument.unitPrice = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "UnitPrice")
        }
        if !B1PreBlanketAgreementsDocument.quantity.isRemoved {
            B1PreBlanketAgreementsDocument.quantity = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "Quantity")
        }
        if !B1PreBlanketAgreementsDocument.discount.isRemoved {
            B1PreBlanketAgreementsDocument.discount = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "Discount")
        }
        if !B1PreBlanketAgreementsDocument.uoM.isRemoved {
            B1PreBlanketAgreementsDocument.uoM = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "UoM")
        }
        if !B1PreBlanketAgreementsDocument.rowStatus.isRemoved {
            B1PreBlanketAgreementsDocument.rowStatus = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "RowStatus")
        }
        if !B1PreBlanketAgreementsDocument.uoMCode.isRemoved {
            B1PreBlanketAgreementsDocument.uoMCode = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "UoMCode")
        }
        if !B1PreBlanketAgreementsDocument.unitsOfMeasurement.isRemoved {
            B1PreBlanketAgreementsDocument.unitsOfMeasurement = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "UnitsOfMeasurement")
        }
        if !B1PreBlanketAgreementsDocument.docStatus.isRemoved {
            B1PreBlanketAgreementsDocument.docStatus = B1ClassMetadata.ComplexTypes.blanketAgreementsDocument.property(withName: "DocStatus")
        }
        if !B1PreBlanketAgreementsDetailsLine.agreementNo.isRemoved {
            B1PreBlanketAgreementsDetailsLine.agreementNo = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "AgreementNo")
        }
        if !B1PreBlanketAgreementsDetailsLine.agreementRowNumber.isRemoved {
            B1PreBlanketAgreementsDetailsLine.agreementRowNumber = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "AgreementRowNumber")
        }
        if !B1PreBlanketAgreementsDetailsLine.agreementEffectiveRowNumber.isRemoved {
            B1PreBlanketAgreementsDetailsLine.agreementEffectiveRowNumber = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "AgreementEffectiveRowNumber")
        }
        if !B1PreBlanketAgreementsDetailsLine.frequency.isRemoved {
            B1PreBlanketAgreementsDetailsLine.frequency = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "Frequency")
        }
        if !B1PreBlanketAgreementsDetailsLine.from.isRemoved {
            B1PreBlanketAgreementsDetailsLine.from = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "From")
        }
        if !B1PreBlanketAgreementsDetailsLine.to.isRemoved {
            B1PreBlanketAgreementsDetailsLine.to = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "To")
        }
        if !B1PreBlanketAgreementsDetailsLine.releaseInformation.isRemoved {
            B1PreBlanketAgreementsDetailsLine.releaseInformation = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "ReleaseInformation")
        }
        if !B1PreBlanketAgreementsDetailsLine.quantity.isRemoved {
            B1PreBlanketAgreementsDetailsLine.quantity = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "Quantity")
        }
        if !B1PreBlanketAgreementsDetailsLine.warehouse.isRemoved {
            B1PreBlanketAgreementsDetailsLine.warehouse = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "Warehouse")
        }
        if !B1PreBlanketAgreementsDetailsLine.freeText.isRemoved {
            B1PreBlanketAgreementsDetailsLine.freeText = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "FreeText")
        }
        if !B1PreBlanketAgreementsDetailsLine.consumeSalesForecast.isRemoved {
            B1PreBlanketAgreementsDetailsLine.consumeSalesForecast = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "ConsumeSalesForecast")
        }
        if !B1PreBlanketAgreementsDetailsLine.plannedAmountLC.isRemoved {
            B1PreBlanketAgreementsDetailsLine.plannedAmountLC = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "PlannedAmountLC")
        }
        if !B1PreBlanketAgreementsDetailsLine.plannedAmountFC.isRemoved {
            B1PreBlanketAgreementsDetailsLine.plannedAmountFC = B1ClassMetadata.ComplexTypes.blanketAgreementsDetailsLine.property(withName: "PlannedAmountFC")
        }
        if !B1PreBlanketAgreementsItemsLine.agreementNo.isRemoved {
            B1PreBlanketAgreementsItemsLine.agreementNo = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "AgreementNo")
        }
        if !B1PreBlanketAgreementsItemsLine.agreementRowNumber.isRemoved {
            B1PreBlanketAgreementsItemsLine.agreementRowNumber = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "AgreementRowNumber")
        }
        if !B1PreBlanketAgreementsItemsLine.itemNo.isRemoved {
            B1PreBlanketAgreementsItemsLine.itemNo = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "ItemNo")
        }
        if !B1PreBlanketAgreementsItemsLine.itemDescription.isRemoved {
            B1PreBlanketAgreementsItemsLine.itemDescription = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "ItemDescription")
        }
        if !B1PreBlanketAgreementsItemsLine.itemGroup.isRemoved {
            B1PreBlanketAgreementsItemsLine.itemGroup = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "ItemGroup")
        }
        if !B1PreBlanketAgreementsItemsLine.plannedQuantity.isRemoved {
            B1PreBlanketAgreementsItemsLine.plannedQuantity = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "PlannedQuantity")
        }
        if !B1PreBlanketAgreementsItemsLine.unitPrice.isRemoved {
            B1PreBlanketAgreementsItemsLine.unitPrice = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "UnitPrice")
        }
        if !B1PreBlanketAgreementsItemsLine.priceCurrency.isRemoved {
            B1PreBlanketAgreementsItemsLine.priceCurrency = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "PriceCurrency")
        }
        if !B1PreBlanketAgreementsItemsLine.cumulativeQuantity.isRemoved {
            B1PreBlanketAgreementsItemsLine.cumulativeQuantity = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "CumulativeQuantity")
        }
        if !B1PreBlanketAgreementsItemsLine.cumulativeAmountLC.isRemoved {
            B1PreBlanketAgreementsItemsLine.cumulativeAmountLC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "CumulativeAmountLC")
        }
        if !B1PreBlanketAgreementsItemsLine.cumulativeAmountFC.isRemoved {
            B1PreBlanketAgreementsItemsLine.cumulativeAmountFC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "CumulativeAmountFC")
        }
        if !B1PreBlanketAgreementsItemsLine.freeText.isRemoved {
            B1PreBlanketAgreementsItemsLine.freeText = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "FreeText")
        }
        if !B1PreBlanketAgreementsItemsLine.inventoryUoM.isRemoved {
            B1PreBlanketAgreementsItemsLine.inventoryUoM = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "InventoryUoM")
        }
        if !B1PreBlanketAgreementsItemsLine.portionOfReturns.isRemoved {
            B1PreBlanketAgreementsItemsLine.portionOfReturns = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "PortionOfReturns")
        }
        if !B1PreBlanketAgreementsItemsLine.endOfWarranty.isRemoved {
            B1PreBlanketAgreementsItemsLine.endOfWarranty = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "EndOfWarranty")
        }
        if !B1PreBlanketAgreementsItemsLine.plannedAmountLC.isRemoved {
            B1PreBlanketAgreementsItemsLine.plannedAmountLC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "PlannedAmountLC")
        }
        if !B1PreBlanketAgreementsItemsLine.plannedAmountFC.isRemoved {
            B1PreBlanketAgreementsItemsLine.plannedAmountFC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "PlannedAmountFC")
        }
        if !B1PreBlanketAgreementsItemsLine.lineDiscount.isRemoved {
            B1PreBlanketAgreementsItemsLine.lineDiscount = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "LineDiscount")
        }
        if !B1PreBlanketAgreementsItemsLine.uoMEntry.isRemoved {
            B1PreBlanketAgreementsItemsLine.uoMEntry = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "UoMEntry")
        }
        if !B1PreBlanketAgreementsItemsLine.uoMCode.isRemoved {
            B1PreBlanketAgreementsItemsLine.uoMCode = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "UoMCode")
        }
        if !B1PreBlanketAgreementsItemsLine.unitsOfMeasurement.isRemoved {
            B1PreBlanketAgreementsItemsLine.unitsOfMeasurement = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "UnitsOfMeasurement")
        }
        if !B1PreBlanketAgreementsItemsLine.undeliveredCumulativeQuantity.isRemoved {
            B1PreBlanketAgreementsItemsLine.undeliveredCumulativeQuantity = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "UndeliveredCumulativeQuantity")
        }
        if !B1PreBlanketAgreementsItemsLine.undeliveredCumulativeAmountLC.isRemoved {
            B1PreBlanketAgreementsItemsLine.undeliveredCumulativeAmountLC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "UndeliveredCumulativeAmountLC")
        }
        if !B1PreBlanketAgreementsItemsLine.undeliveredCumulativeAmountFC.isRemoved {
            B1PreBlanketAgreementsItemsLine.undeliveredCumulativeAmountFC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "UndeliveredCumulativeAmountFC")
        }
        if !B1PreBlanketAgreementsItemsLine.shippingType.isRemoved {
            B1PreBlanketAgreementsItemsLine.shippingType = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "ShippingType")
        }
        if !B1PreBlanketAgreementsItemsLine.project.isRemoved {
            B1PreBlanketAgreementsItemsLine.project = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "Project")
        }
        if !B1PreBlanketAgreementsItemsLine.taxCode.isRemoved {
            B1PreBlanketAgreementsItemsLine.taxCode = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "TaxCode")
        }
        if !B1PreBlanketAgreementsItemsLine.taxRate.isRemoved {
            B1PreBlanketAgreementsItemsLine.taxRate = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "TAXRate")
        }
        if !B1PreBlanketAgreementsItemsLine.plannedVATAmountLC.isRemoved {
            B1PreBlanketAgreementsItemsLine.plannedVATAmountLC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "PlannedVATAmountLC")
        }
        if !B1PreBlanketAgreementsItemsLine.plannedVATAmountFC.isRemoved {
            B1PreBlanketAgreementsItemsLine.plannedVATAmountFC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "PlannedVATAmountFC")
        }
        if !B1PreBlanketAgreementsItemsLine.cumulativeVATAmountLC.isRemoved {
            B1PreBlanketAgreementsItemsLine.cumulativeVATAmountLC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "CumulativeVATAmountLC")
        }
        if !B1PreBlanketAgreementsItemsLine.cumulativeVATAmountFC.isRemoved {
            B1PreBlanketAgreementsItemsLine.cumulativeVATAmountFC = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "CumulativeVATAmountFC")
        }
        if !B1PreBlanketAgreementsItemsLine.blanketAgreementsDetailsLines.isRemoved {
            B1PreBlanketAgreementsItemsLine.blanketAgreementsDetailsLines = B1ClassMetadata.ComplexTypes.blanketAgreementsItemsLine.property(withName: "BlanketAgreements_DetailsLines")
        }
        if !B1PreBlob.content.isRemoved {
            B1PreBlob.content = B1ClassMetadata.ComplexTypes.blob.property(withName: "Content")
        }
        if !B1PreBlobParams.table.isRemoved {
            B1PreBlobParams.table = B1ClassMetadata.ComplexTypes.blobParams.property(withName: "Table")
        }
        if !B1PreBlobParams.field.isRemoved {
            B1PreBlobParams.field = B1ClassMetadata.ComplexTypes.blobParams.property(withName: "Field")
        }
        if !B1PreBlobParams.fileName.isRemoved {
            B1PreBlobParams.fileName = B1ClassMetadata.ComplexTypes.blobParams.property(withName: "FileName")
        }
        if !B1PreBlobParams.blobTableKeySegments.isRemoved {
            B1PreBlobParams.blobTableKeySegments = B1ClassMetadata.ComplexTypes.blobParams.property(withName: "BlobTableKeySegments")
        }
        if !B1PreBlobTableKeySegment.name.isRemoved {
            B1PreBlobTableKeySegment.name = B1ClassMetadata.ComplexTypes.blobTableKeySegment.property(withName: "Name")
        }
        if !B1PreBlobTableKeySegment.value.isRemoved {
            B1PreBlobTableKeySegment.value = B1ClassMetadata.ComplexTypes.blobTableKeySegment.property(withName: "Value")
        }
        if !B1PreBoxes1099.formCode.isRemoved {
            B1PreBoxes1099.formCode = B1ClassMetadata.ComplexTypes.boxes1099.property(withName: "FormCode")
        }
        if !B1PreBoxes1099.box1099.isRemoved {
            B1PreBoxes1099.box1099 = B1ClassMetadata.ComplexTypes.boxes1099.property(withName: "Box1099")
        }
        if !B1PreBoxes1099.boxDescription.isRemoved {
            B1PreBoxes1099.boxDescription = B1ClassMetadata.ComplexTypes.boxes1099.property(withName: "BoxDescription")
        }
        if !B1PreBoxes1099.minimum1099Amount.isRemoved {
            B1PreBoxes1099.minimum1099Amount = B1ClassMetadata.ComplexTypes.boxes1099.property(withName: "Minimum1099Amount")
        }
        if !B1PreBranchParams.code.isRemoved {
            B1PreBranchParams.code = B1ClassMetadata.ComplexTypes.branchParams.property(withName: "Code")
        }
        if !B1PreBranchParams.name.isRemoved {
            B1PreBranchParams.name = B1ClassMetadata.ComplexTypes.branchParams.property(withName: "Name")
        }
        if !B1PreBrazilBeverageIndexerParams.beverageID.isRemoved {
            B1PreBrazilBeverageIndexerParams.beverageID = B1ClassMetadata.ComplexTypes.brazilBeverageIndexerParams.property(withName: "BeverageID")
        }
        if !B1PreBrazilFuelIndexerParams.fuelID.isRemoved {
            B1PreBrazilFuelIndexerParams.fuelID = B1ClassMetadata.ComplexTypes.brazilFuelIndexerParams.property(withName: "FuelID")
        }
        if !B1PreBrazilFuelIndexerParams.fuelGroupCode.isRemoved {
            B1PreBrazilFuelIndexerParams.fuelGroupCode = B1ClassMetadata.ComplexTypes.brazilFuelIndexerParams.property(withName: "FuelGroupCode")
        }
        if !B1PreBrazilFuelIndexerParams.fuelCode.isRemoved {
            B1PreBrazilFuelIndexerParams.fuelCode = B1ClassMetadata.ComplexTypes.brazilFuelIndexerParams.property(withName: "FuelCode")
        }
        if !B1PreBrazilFuelIndexerParams.description.isRemoved {
            B1PreBrazilFuelIndexerParams.description = B1ClassMetadata.ComplexTypes.brazilFuelIndexerParams.property(withName: "Description")
        }
        if !B1PreBrazilMultiIndexerParams.id.isRemoved {
            B1PreBrazilMultiIndexerParams.id = B1ClassMetadata.ComplexTypes.brazilMultiIndexerParams.property(withName: "ID")
        }
        if !B1PreBrazilNumericIndexerParams.id.isRemoved {
            B1PreBrazilNumericIndexerParams.id = B1ClassMetadata.ComplexTypes.brazilNumericIndexerParams.property(withName: "ID")
        }
        if !B1PreBrazilStringIndexerParams.id.isRemoved {
            B1PreBrazilStringIndexerParams.id = B1ClassMetadata.ComplexTypes.brazilStringIndexerParams.property(withName: "ID")
        }
        if !B1PreBudgetCostAccountingLine.distrRuleCode.isRemoved {
            B1PreBudgetCostAccountingLine.distrRuleCode = B1ClassMetadata.ComplexTypes.budgetCostAccountingLine.property(withName: "DistrRuleCode")
        }
        if !B1PreBudgetCostAccountingLine.dimension.isRemoved {
            B1PreBudgetCostAccountingLine.dimension = B1ClassMetadata.ComplexTypes.budgetCostAccountingLine.property(withName: "Dimension")
        }
        if !B1PreBudgetCostAccountingLine.distrRuleDebitLC.isRemoved {
            B1PreBudgetCostAccountingLine.distrRuleDebitLC = B1ClassMetadata.ComplexTypes.budgetCostAccountingLine.property(withName: "DistrRuleDebitLC")
        }
        if !B1PreBudgetCostAccountingLine.distrRuleDebitSC.isRemoved {
            B1PreBudgetCostAccountingLine.distrRuleDebitSC = B1ClassMetadata.ComplexTypes.budgetCostAccountingLine.property(withName: "DistrRuleDebitSC")
        }
        if !B1PreBudgetCostAccountingLine.distrRuleCreditLC.isRemoved {
            B1PreBudgetCostAccountingLine.distrRuleCreditLC = B1ClassMetadata.ComplexTypes.budgetCostAccountingLine.property(withName: "DistrRuleCreditLC")
        }
        if !B1PreBudgetCostAccountingLine.distrRuleCreditSC.isRemoved {
            B1PreBudgetCostAccountingLine.distrRuleCreditSC = B1ClassMetadata.ComplexTypes.budgetCostAccountingLine.property(withName: "DistrRuleCreditSC")
        }
        if !B1PreBudgetDistributionParams.divisionCode.isRemoved {
            B1PreBudgetDistributionParams.divisionCode = B1ClassMetadata.ComplexTypes.budgetDistributionParams.property(withName: "DivisionCode")
        }
        if !B1PreBudgetLine.precentOfAnnualBudgetAmount.isRemoved {
            B1PreBudgetLine.precentOfAnnualBudgetAmount = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "PrecentOfAnnualBudgetAmount")
        }
        if !B1PreBudgetLine.rowDetails.isRemoved {
            B1PreBudgetLine.rowDetails = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "RowDetails")
        }
        if !B1PreBudgetLine.rowNumber.isRemoved {
            B1PreBudgetLine.rowNumber = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "RowNumber")
        }
        if !B1PreBudgetLine.futExpenSysDebit.isRemoved {
            B1PreBudgetLine.futExpenSysDebit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "FutExpenSysDebit")
        }
        if !B1PreBudgetLine.futExpenDebit.isRemoved {
            B1PreBudgetLine.futExpenDebit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "FutExpenDebit")
        }
        if !B1PreBudgetLine.futExpenSysCredit.isRemoved {
            B1PreBudgetLine.futExpenSysCredit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "FutExpenSysCredit")
        }
        if !B1PreBudgetLine.futExpenCredit.isRemoved {
            B1PreBudgetLine.futExpenCredit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "FutExpenCredit")
        }
        if !B1PreBudgetLine.futIncomesSysCredit.isRemoved {
            B1PreBudgetLine.futIncomesSysCredit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "FutIncomesSysCredit")
        }
        if !B1PreBudgetLine.futIncomesSysDebit.isRemoved {
            B1PreBudgetLine.futIncomesSysDebit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "FutIncomesSysDebit")
        }
        if !B1PreBudgetLine.futIncomesCredit.isRemoved {
            B1PreBudgetLine.futIncomesCredit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "FutIncomesCredit")
        }
        if !B1PreBudgetLine.budgetSysTotDebit.isRemoved {
            B1PreBudgetLine.budgetSysTotDebit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BudgetSysTotDebit")
        }
        if !B1PreBudgetLine.balSysTotDebit.isRemoved {
            B1PreBudgetLine.balSysTotDebit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BalSysTotDebit")
        }
        if !B1PreBudgetLine.balTotDebit.isRemoved {
            B1PreBudgetLine.balTotDebit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BalTotDebit")
        }
        if !B1PreBudgetLine.budgetTotCredit.isRemoved {
            B1PreBudgetLine.budgetTotCredit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BudgetTotCredit")
        }
        if !B1PreBudgetLine.budgetSysTotCredit.isRemoved {
            B1PreBudgetLine.budgetSysTotCredit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BudgetSysTotCredit")
        }
        if !B1PreBudgetLine.budgetTotDebit.isRemoved {
            B1PreBudgetLine.budgetTotDebit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BudgetTotDebit")
        }
        if !B1PreBudgetLine.balSysTotCredit.isRemoved {
            B1PreBudgetLine.balSysTotCredit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BalSysTotCredit")
        }
        if !B1PreBudgetLine.balTotCredit.isRemoved {
            B1PreBudgetLine.balTotCredit = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BalTotCredit")
        }
        if !B1PreBudgetLine.budgetKey.isRemoved {
            B1PreBudgetLine.budgetKey = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "BudgetKey")
        }
        if !B1PreBudgetLine.accountCode.isRemoved {
            B1PreBudgetLine.accountCode = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "AccountCode")
        }
        if !B1PreBudgetLine.futureIncomeDeb.isRemoved {
            B1PreBudgetLine.futureIncomeDeb = B1ClassMetadata.ComplexTypes.budgetLine.property(withName: "FutureIncomeDeb")
        }
        if !B1PreBudgetParams.numerator.isRemoved {
            B1PreBudgetParams.numerator = B1ClassMetadata.ComplexTypes.budgetParams.property(withName: "Numerator")
        }
        if !B1PreBudgetScenarioParams.numerator.isRemoved {
            B1PreBudgetScenarioParams.numerator = B1ClassMetadata.ComplexTypes.budgetScenarioParams.property(withName: "Numerator")
        }
        if !B1PreBusinessPartnerGroupParams.code.isRemoved {
            B1PreBusinessPartnerGroupParams.code = B1ClassMetadata.ComplexTypes.businessPartnerGroupParams.property(withName: "Code")
        }
        if !B1PreBusinessPartnerParams.cardCode.isRemoved {
            B1PreBusinessPartnerParams.cardCode = B1ClassMetadata.ComplexTypes.businessPartnerParams.property(withName: "CardCode")
        }
        if !B1PreBusinessPartnerPropertyParams.propertyCode.isRemoved {
            B1PreBusinessPartnerPropertyParams.propertyCode = B1ClassMetadata.ComplexTypes.businessPartnerPropertyParams.property(withName: "PropertyCode")
        }
        if !B1PreBusinessPartnerPropertyParams.propertyName.isRemoved {
            B1PreBusinessPartnerPropertyParams.propertyName = B1ClassMetadata.ComplexTypes.businessPartnerPropertyParams.property(withName: "PropertyName")
        }
        if !B1PreBusinessPlaceIENumber.bplid.isRemoved {
            B1PreBusinessPlaceIENumber.bplid = B1ClassMetadata.ComplexTypes.businessPlaceIENumber.property(withName: "BPLID")
        }
        if !B1PreBusinessPlaceIENumber.state.isRemoved {
            B1PreBusinessPlaceIENumber.state = B1ClassMetadata.ComplexTypes.businessPlaceIENumber.property(withName: "State")
        }
        if !B1PreBusinessPlaceIENumber.ieNumber.isRemoved {
            B1PreBusinessPlaceIENumber.ieNumber = B1ClassMetadata.ComplexTypes.businessPlaceIENumber.property(withName: "IENumber")
        }
        if !B1PreBusinessPlaceParams.bplid.isRemoved {
            B1PreBusinessPlaceParams.bplid = B1ClassMetadata.ComplexTypes.businessPlaceParams.property(withName: "BPLID")
        }
        if !B1PreBusinessPlaceTributaryInfo.bplid.isRemoved {
            B1PreBusinessPlaceTributaryInfo.bplid = B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.property(withName: "BPLID")
        }
        if !B1PreBusinessPlaceTributaryInfo.tributaryID.isRemoved {
            B1PreBusinessPlaceTributaryInfo.tributaryID = B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.property(withName: "TributaryID")
        }
        if !B1PreBusinessPlaceTributaryInfo.tributaryType.isRemoved {
            B1PreBusinessPlaceTributaryInfo.tributaryType = B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.property(withName: "TributaryType")
        }
        if !B1PreBusinessPlaceTributaryInfo.ttStartDate.isRemoved {
            B1PreBusinessPlaceTributaryInfo.ttStartDate = B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.property(withName: "TTStartDate")
        }
        if !B1PreBusinessPlaceTributaryInfo.ttEndDate.isRemoved {
            B1PreBusinessPlaceTributaryInfo.ttEndDate = B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.property(withName: "TTEndDate")
        }
        if !B1PreBusinessPlaceTributaryInfo.tributaryRegimeCode.isRemoved {
            B1PreBusinessPlaceTributaryInfo.tributaryRegimeCode = B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.property(withName: "TributaryRegimeCode")
        }
        if !B1PreBusinessPlaceTributaryInfo.trcStartDate.isRemoved {
            B1PreBusinessPlaceTributaryInfo.trcStartDate = B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.property(withName: "TRCStartDate")
        }
        if !B1PreBusinessPlaceTributaryInfo.trcEndDate.isRemoved {
            B1PreBusinessPlaceTributaryInfo.trcEndDate = B1ClassMetadata.ComplexTypes.businessPlaceTributaryInfo.property(withName: "TRCEndDate")
        }
        if !B1PreCallArgument.name.isRemoved {
            B1PreCallArgument.name = B1ClassMetadata.ComplexTypes.callArgument.property(withName: "Name")
        }
        if !B1PreCallArgument.value.isRemoved {
            B1PreCallArgument.value = B1ClassMetadata.ComplexTypes.callArgument.property(withName: "Value")
        }
        if !B1PreCallMessage.id.isRemoved {
            B1PreCallMessage.id = B1ClassMetadata.ComplexTypes.callMessage.property(withName: "ID")
        }
        if !B1PreCallMessage.type_.isRemoved {
            B1PreCallMessage.type_ = B1ClassMetadata.ComplexTypes.callMessage.property(withName: "Type")
        }
        if !B1PreCallMessage.errorCode.isRemoved {
            B1PreCallMessage.errorCode = B1ClassMetadata.ComplexTypes.callMessage.property(withName: "ErrorCode")
        }
        if !B1PreCallMessage.messageBody.isRemoved {
            B1PreCallMessage.messageBody = B1ClassMetadata.ComplexTypes.callMessage.property(withName: "MessageBody")
        }
        if !B1PreCallMessage.status.isRemoved {
            B1PreCallMessage.status = B1ClassMetadata.ComplexTypes.callMessage.property(withName: "Status")
        }
        if !B1PreCallMessage.creationDate.isRemoved {
            B1PreCallMessage.creationDate = B1ClassMetadata.ComplexTypes.callMessage.property(withName: "CreationDate")
        }
        if !B1PreCallMessage.creationTime.isRemoved {
            B1PreCallMessage.creationTime = B1ClassMetadata.ComplexTypes.callMessage.property(withName: "CreationTime")
        }
        if !B1PreCallMessage.callMessageArguments.isRemoved {
            B1PreCallMessage.callMessageArguments = B1ClassMetadata.ComplexTypes.callMessage.property(withName: "CallMessageArguments")
        }
        if !B1PreCallMessageArgument.name.isRemoved {
            B1PreCallMessageArgument.name = B1ClassMetadata.ComplexTypes.callMessageArgument.property(withName: "Name")
        }
        if !B1PreCallMessageArgument.value.isRemoved {
            B1PreCallMessageArgument.value = B1ClassMetadata.ComplexTypes.callMessageArgument.property(withName: "Value")
        }
        if !B1PreCampaignBusinessPartner.campaignNumber.isRemoved {
            B1PreCampaignBusinessPartner.campaignNumber = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "CampaignNumber")
        }
        if !B1PreCampaignBusinessPartner.campaignLineNumber.isRemoved {
            B1PreCampaignBusinessPartner.campaignLineNumber = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "CampaignLineNumber")
        }
        if !B1PreCampaignBusinessPartner.bpCode.isRemoved {
            B1PreCampaignBusinessPartner.bpCode = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "BPCode")
        }
        if !B1PreCampaignBusinessPartner.bpName.isRemoved {
            B1PreCampaignBusinessPartner.bpName = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "BPName")
        }
        if !B1PreCampaignBusinessPartner.bpGroupName.isRemoved {
            B1PreCampaignBusinessPartner.bpGroupName = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "BPGroupName")
        }
        if !B1PreCampaignBusinessPartner.bpIndustryName.isRemoved {
            B1PreCampaignBusinessPartner.bpIndustryName = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "BPIndustryName")
        }
        if !B1PreCampaignBusinessPartner.bpStatus.isRemoved {
            B1PreCampaignBusinessPartner.bpStatus = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "BPStatus")
        }
        if !B1PreCampaignBusinessPartner.contactCode.isRemoved {
            B1PreCampaignBusinessPartner.contactCode = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ContactCode")
        }
        if !B1PreCampaignBusinessPartner.contactTitle.isRemoved {
            B1PreCampaignBusinessPartner.contactTitle = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ContactTitle")
        }
        if !B1PreCampaignBusinessPartner.contactPosition.isRemoved {
            B1PreCampaignBusinessPartner.contactPosition = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ContactPosition")
        }
        if !B1PreCampaignBusinessPartner.contactEmail.isRemoved {
            B1PreCampaignBusinessPartner.contactEmail = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ContactEmail")
        }
        if !B1PreCampaignBusinessPartner.contactTelephone.isRemoved {
            B1PreCampaignBusinessPartner.contactTelephone = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ContactTelephone")
        }
        if !B1PreCampaignBusinessPartner.contactMobile.isRemoved {
            B1PreCampaignBusinessPartner.contactMobile = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ContactMobile")
        }
        if !B1PreCampaignBusinessPartner.contactFax.isRemoved {
            B1PreCampaignBusinessPartner.contactFax = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ContactFax")
        }
        if !B1PreCampaignBusinessPartner.contactAddress.isRemoved {
            B1PreCampaignBusinessPartner.contactAddress = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ContactAddress")
        }
        if !B1PreCampaignBusinessPartner.response.isRemoved {
            B1PreCampaignBusinessPartner.response = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "Response")
        }
        if !B1PreCampaignBusinessPartner.relatedSalesOpportunity.isRemoved {
            B1PreCampaignBusinessPartner.relatedSalesOpportunity = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "RelatedSalesOpportunity")
        }
        if !B1PreCampaignBusinessPartner.street.isRemoved {
            B1PreCampaignBusinessPartner.street = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "Street")
        }
        if !B1PreCampaignBusinessPartner.block.isRemoved {
            B1PreCampaignBusinessPartner.block = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "Block")
        }
        if !B1PreCampaignBusinessPartner.city.isRemoved {
            B1PreCampaignBusinessPartner.city = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "City")
        }
        if !B1PreCampaignBusinessPartner.zipCode.isRemoved {
            B1PreCampaignBusinessPartner.zipCode = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ZipCode")
        }
        if !B1PreCampaignBusinessPartner.county.isRemoved {
            B1PreCampaignBusinessPartner.county = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "County")
        }
        if !B1PreCampaignBusinessPartner.state.isRemoved {
            B1PreCampaignBusinessPartner.state = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "State")
        }
        if !B1PreCampaignBusinessPartner.country.isRemoved {
            B1PreCampaignBusinessPartner.country = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "Country")
        }
        if !B1PreCampaignBusinessPartner.building.isRemoved {
            B1PreCampaignBusinessPartner.building = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "Building")
        }
        if !B1PreCampaignBusinessPartner.docType.isRemoved {
            B1PreCampaignBusinessPartner.docType = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "DocType")
        }
        if !B1PreCampaignBusinessPartner.isShowLinkedDoc.isRemoved {
            B1PreCampaignBusinessPartner.isShowLinkedDoc = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "IsShowLinkedDoc")
        }
        if !B1PreCampaignBusinessPartner.docNumber.isRemoved {
            B1PreCampaignBusinessPartner.docNumber = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "DocNumber")
        }
        if !B1PreCampaignBusinessPartner.docEntry.isRemoved {
            B1PreCampaignBusinessPartner.docEntry = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "DocEntry")
        }
        if !B1PreCampaignBusinessPartner.firstName.isRemoved {
            B1PreCampaignBusinessPartner.firstName = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "FirstName")
        }
    }

    private static func merge9(metadata: CSDLDocument) {
        Ignore.valueOf_any(metadata)
        if !B1PreCampaignBusinessPartner.middleName.isRemoved {
            B1PreCampaignBusinessPartner.middleName = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "MiddleName")
        }
        if !B1PreCampaignBusinessPartner.lastName.isRemoved {
            B1PreCampaignBusinessPartner.lastName = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "LastName")
        }
        if !B1PreCampaignBusinessPartner.addressID.isRemoved {
            B1PreCampaignBusinessPartner.addressID = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "AddressID")
        }
        if !B1PreCampaignBusinessPartner.addressType.isRemoved {
            B1PreCampaignBusinessPartner.addressType = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "AddressType")
        }
        if !B1PreCampaignBusinessPartner.addressName2.isRemoved {
            B1PreCampaignBusinessPartner.addressName2 = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "AddressName2")
        }
        if !B1PreCampaignBusinessPartner.addressName3.isRemoved {
            B1PreCampaignBusinessPartner.addressName3 = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "AddressName3")
        }
        if !B1PreCampaignBusinessPartner.federalTaxID.isRemoved {
            B1PreCampaignBusinessPartner.federalTaxID = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "FederalTaxID")
        }
        if !B1PreCampaignBusinessPartner.streetNo.isRemoved {
            B1PreCampaignBusinessPartner.streetNo = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "StreetNo")
        }
        if !B1PreCampaignBusinessPartner.createActivity.isRemoved {
            B1PreCampaignBusinessPartner.createActivity = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "CreateActivity")
        }
        if !B1PreCampaignBusinessPartner.assignTo.isRemoved {
            B1PreCampaignBusinessPartner.assignTo = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "AssignTo")
        }
        if !B1PreCampaignBusinessPartner.assignName.isRemoved {
            B1PreCampaignBusinessPartner.assignName = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "AssignName")
        }
        if !B1PreCampaignBusinessPartner.responseType.isRemoved {
            B1PreCampaignBusinessPartner.responseType = B1ClassMetadata.ComplexTypes.campaignBusinessPartner.property(withName: "ResponseType")
        }
        if !B1PreCampaignItem.campaignNumber.isRemoved {
            B1PreCampaignItem.campaignNumber = B1ClassMetadata.ComplexTypes.campaignItem.property(withName: "CampaignNumber")
        }
        if !B1PreCampaignItem.campaignLineNumber.isRemoved {
            B1PreCampaignItem.campaignLineNumber = B1ClassMetadata.ComplexTypes.campaignItem.property(withName: "CampaignLineNumber")
        }
        if !B1PreCampaignItem.itemCode.isRemoved {
            B1PreCampaignItem.itemCode = B1ClassMetadata.ComplexTypes.campaignItem.property(withName: "ItemCode")
        }
        if !B1PreCampaignItem.itemName.isRemoved {
            B1PreCampaignItem.itemName = B1ClassMetadata.ComplexTypes.campaignItem.property(withName: "ItemName")
        }
        if !B1PreCampaignItem.itemType.isRemoved {
            B1PreCampaignItem.itemType = B1ClassMetadata.ComplexTypes.campaignItem.property(withName: "ItemType")
        }
        if !B1PreCampaignItem.itemGroup.isRemoved {
            B1PreCampaignItem.itemGroup = B1ClassMetadata.ComplexTypes.campaignItem.property(withName: "ItemGroup")
        }
        if !B1PreCampaignParams.campaignNumber.isRemoved {
            B1PreCampaignParams.campaignNumber = B1ClassMetadata.ComplexTypes.campaignParams.property(withName: "CampaignNumber")
        }
        if !B1PreCampaignParams.campaignName.isRemoved {
            B1PreCampaignParams.campaignName = B1ClassMetadata.ComplexTypes.campaignParams.property(withName: "CampaignName")
        }
        if !B1PreCampaignPartner.campaignNumber.isRemoved {
            B1PreCampaignPartner.campaignNumber = B1ClassMetadata.ComplexTypes.campaignPartner.property(withName: "CampaignNumber")
        }
        if !B1PreCampaignPartner.campaignLineNumber.isRemoved {
            B1PreCampaignPartner.campaignLineNumber = B1ClassMetadata.ComplexTypes.campaignPartner.property(withName: "CampaignLineNumber")
        }
        if !B1PreCampaignPartner.partnerID.isRemoved {
            B1PreCampaignPartner.partnerID = B1ClassMetadata.ComplexTypes.campaignPartner.property(withName: "PartnerID")
        }
        if !B1PreCampaignPartner.relationshipCode.isRemoved {
            B1PreCampaignPartner.relationshipCode = B1ClassMetadata.ComplexTypes.campaignPartner.property(withName: "RelationshipCode")
        }
        if !B1PreCampaignPartner.relatedBP.isRemoved {
            B1PreCampaignPartner.relatedBP = B1ClassMetadata.ComplexTypes.campaignPartner.property(withName: "RelatedBP")
        }
        if !B1PreCampaignPartner.details.isRemoved {
            B1PreCampaignPartner.details = B1ClassMetadata.ComplexTypes.campaignPartner.property(withName: "Details")
        }
        if !B1PreCampaignResponseTypeParams.responseType.isRemoved {
            B1PreCampaignResponseTypeParams.responseType = B1ClassMetadata.ComplexTypes.campaignResponseTypeParams.property(withName: "ResponseType")
        }
        if !B1PreCampaignResponseTypeParams.responseTypeDescription.isRemoved {
            B1PreCampaignResponseTypeParams.responseTypeDescription = B1ClassMetadata.ComplexTypes.campaignResponseTypeParams.property(withName: "ResponseTypeDescription")
        }
        if !B1PreCampaignResponseTypeParams.isActive.isRemoved {
            B1PreCampaignResponseTypeParams.isActive = B1ClassMetadata.ComplexTypes.campaignResponseTypeParams.property(withName: "IsActive")
        }
        if !B1PreCancelCheckRowParams.depositID.isRemoved {
            B1PreCancelCheckRowParams.depositID = B1ClassMetadata.ComplexTypes.cancelCheckRowParams.property(withName: "DepositID")
        }
        if !B1PreCancelCheckRowParams.checkID.isRemoved {
            B1PreCancelCheckRowParams.checkID = B1ClassMetadata.ComplexTypes.cancelCheckRowParams.property(withName: "CheckID")
        }
        if !B1PreCashDiscountParams.code.isRemoved {
            B1PreCashDiscountParams.code = B1ClassMetadata.ComplexTypes.cashDiscountParams.property(withName: "Code")
        }
        if !B1PreCashDiscountParams.name.isRemoved {
            B1PreCashDiscountParams.name = B1ClassMetadata.ComplexTypes.cashDiscountParams.property(withName: "Name")
        }
        if !B1PreCashFlowAssignment.cashFlowAssignmentsID.isRemoved {
            B1PreCashFlowAssignment.cashFlowAssignmentsID = B1ClassMetadata.ComplexTypes.cashFlowAssignment.property(withName: "CashFlowAssignmentsID")
        }
        if !B1PreCashFlowAssignment.cashFlowLineItemID.isRemoved {
            B1PreCashFlowAssignment.cashFlowLineItemID = B1ClassMetadata.ComplexTypes.cashFlowAssignment.property(withName: "CashFlowLineItemID")
        }
        if !B1PreCashFlowAssignment.credit.isRemoved {
            B1PreCashFlowAssignment.credit = B1ClassMetadata.ComplexTypes.cashFlowAssignment.property(withName: "Credit")
        }
        if !B1PreCashFlowAssignment.paymentMeans.isRemoved {
            B1PreCashFlowAssignment.paymentMeans = B1ClassMetadata.ComplexTypes.cashFlowAssignment.property(withName: "PaymentMeans")
        }
        if !B1PreCashFlowAssignment.checkNumber.isRemoved {
            B1PreCashFlowAssignment.checkNumber = B1ClassMetadata.ComplexTypes.cashFlowAssignment.property(withName: "CheckNumber")
        }
        if !B1PreCashFlowAssignment.amountLC.isRemoved {
            B1PreCashFlowAssignment.amountLC = B1ClassMetadata.ComplexTypes.cashFlowAssignment.property(withName: "AmountLC")
        }
        if !B1PreCashFlowAssignment.amountFC.isRemoved {
            B1PreCashFlowAssignment.amountFC = B1ClassMetadata.ComplexTypes.cashFlowAssignment.property(withName: "AmountFC")
        }
        if !B1PreCashFlowAssignment.jdtLineID.isRemoved {
            B1PreCashFlowAssignment.jdtLineID = B1ClassMetadata.ComplexTypes.cashFlowAssignment.property(withName: "JDTLineId")
        }
        if !B1PreCashFlowLineItemParams.lineItemID.isRemoved {
            B1PreCashFlowLineItemParams.lineItemID = B1ClassMetadata.ComplexTypes.cashFlowLineItemParams.property(withName: "LineItemID")
        }
        if !B1PreCashFlowLineItemParams.lineItemName.isRemoved {
            B1PreCashFlowLineItemParams.lineItemName = B1ClassMetadata.ComplexTypes.cashFlowLineItemParams.property(withName: "LineItemName")
        }
        if !B1PreCategoryGroup.authGroupID.isRemoved {
            B1PreCategoryGroup.authGroupID = B1ClassMetadata.ComplexTypes.categoryGroup.property(withName: "AuthGroupId")
        }
        if !B1PreCategoryGroup.categoryID.isRemoved {
            B1PreCategoryGroup.categoryID = B1ClassMetadata.ComplexTypes.categoryGroup.property(withName: "CategoryId")
        }
        if !B1PreCertificateSeriesParams.absEntry.isRemoved {
            B1PreCertificateSeriesParams.absEntry = B1ClassMetadata.ComplexTypes.certificateSeriesParams.property(withName: "AbsEntry")
        }
        if !B1PreCertificateSeriesParams.code.isRemoved {
            B1PreCertificateSeriesParams.code = B1ClassMetadata.ComplexTypes.certificateSeriesParams.property(withName: "Code")
        }
        if !B1PreCertificateSeriesParams.section.isRemoved {
            B1PreCertificateSeriesParams.section = B1ClassMetadata.ComplexTypes.certificateSeriesParams.property(withName: "Section")
        }
        if !B1PreCertificateSeriesParams.location.isRemoved {
            B1PreCertificateSeriesParams.location = B1ClassMetadata.ComplexTypes.certificateSeriesParams.property(withName: "Location")
        }
        if !B1PreChangeLogDifferenceParams.date.isRemoved {
            B1PreChangeLogDifferenceParams.date = B1ClassMetadata.ComplexTypes.changeLogDifferenceParams.property(withName: "Date")
        }
        if !B1PreChangeLogDifferenceParams.changedField.isRemoved {
            B1PreChangeLogDifferenceParams.changedField = B1ClassMetadata.ComplexTypes.changeLogDifferenceParams.property(withName: "ChangedField")
        }
        if !B1PreChangeLogDifferenceParams.oldValue.isRemoved {
            B1PreChangeLogDifferenceParams.oldValue = B1ClassMetadata.ComplexTypes.changeLogDifferenceParams.property(withName: "OldValue")
        }
        if !B1PreChangeLogDifferenceParams.newValue.isRemoved {
            B1PreChangeLogDifferenceParams.newValue = B1ClassMetadata.ComplexTypes.changeLogDifferenceParams.property(withName: "NewValue")
        }
        if !B1PreChangeLogDifferenceParams.userName.isRemoved {
            B1PreChangeLogDifferenceParams.userName = B1ClassMetadata.ComplexTypes.changeLogDifferenceParams.property(withName: "UserName")
        }
        if !B1PreChangeLogDifferenceParams.arrayOffset.isRemoved {
            B1PreChangeLogDifferenceParams.arrayOffset = B1ClassMetadata.ComplexTypes.changeLogDifferenceParams.property(withName: "ArrayOffset")
        }
        if !B1PreChangeLogDifferenceParams.lineNumber.isRemoved {
            B1PreChangeLogDifferenceParams.lineNumber = B1ClassMetadata.ComplexTypes.changeLogDifferenceParams.property(withName: "LineNumber")
        }
        if !B1PreChangeLogParams.logInstance.isRemoved {
            B1PreChangeLogParams.logInstance = B1ClassMetadata.ComplexTypes.changeLogParams.property(withName: "LogInstance")
        }
        if !B1PreChangeLogParams.updatedDate.isRemoved {
            B1PreChangeLogParams.updatedDate = B1ClassMetadata.ComplexTypes.changeLogParams.property(withName: "UpdatedDate")
        }
        if !B1PreChangeLogParams.userName.isRemoved {
            B1PreChangeLogParams.userName = B1ClassMetadata.ComplexTypes.changeLogParams.property(withName: "UserName")
        }
        if !B1PreChangeLogParams.objectCode.isRemoved {
            B1PreChangeLogParams.objectCode = B1ClassMetadata.ComplexTypes.changeLogParams.property(withName: "ObjectCode")
        }
        if !B1PreChartOfAccountParams.code.isRemoved {
            B1PreChartOfAccountParams.code = B1ClassMetadata.ComplexTypes.chartOfAccountParams.property(withName: "Code")
        }
        if !B1PreCheckInParams.lineNumber.isRemoved {
            B1PreCheckInParams.lineNumber = B1ClassMetadata.ComplexTypes.checkInParams.property(withName: "LineNumber")
        }
        if !B1PreCheckInParams.date.isRemoved {
            B1PreCheckInParams.date = B1ClassMetadata.ComplexTypes.checkInParams.property(withName: "Date")
        }
        if !B1PreCheckInParams.time.isRemoved {
            B1PreCheckInParams.time = B1ClassMetadata.ComplexTypes.checkInParams.property(withName: "Time")
        }
        if !B1PreCheckInParams.location.isRemoved {
            B1PreCheckInParams.location = B1ClassMetadata.ComplexTypes.checkInParams.property(withName: "Location")
        }
        if !B1PreCheckInParams.latitude.isRemoved {
            B1PreCheckInParams.latitude = B1ClassMetadata.ComplexTypes.checkInParams.property(withName: "Latitude")
        }
        if !B1PreCheckInParams.longitude.isRemoved {
            B1PreCheckInParams.longitude = B1ClassMetadata.ComplexTypes.checkInParams.property(withName: "Longitude")
        }
        if !B1PreCheckInParams.handledBy.isRemoved {
            B1PreCheckInParams.handledBy = B1ClassMetadata.ComplexTypes.checkInParams.property(withName: "HandledBy")
        }
        if !B1PreCheckInParams.handledByEmployee.isRemoved {
            B1PreCheckInParams.handledByEmployee = B1ClassMetadata.ComplexTypes.checkInParams.property(withName: "HandledByEmployee")
        }
        if !B1PreCheckLine.checkKey.isRemoved {
            B1PreCheckLine.checkKey = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "CheckKey")
        }
        if !B1PreCheckLine.checkNumber.isRemoved {
            B1PreCheckLine.checkNumber = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "CheckNumber")
        }
        if !B1PreCheckLine.bank.isRemoved {
            B1PreCheckLine.bank = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "Bank")
        }
        if !B1PreCheckLine.branch.isRemoved {
            B1PreCheckLine.branch = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "Branch")
        }
        if !B1PreCheckLine.cashCheck.isRemoved {
            B1PreCheckLine.cashCheck = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "CashCheck")
        }
        if !B1PreCheckLine.checkDate.isRemoved {
            B1PreCheckLine.checkDate = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "CheckDate")
        }
        if !B1PreCheckLine.customer.isRemoved {
            B1PreCheckLine.customer = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "Customer")
        }
        if !B1PreCheckLine.checkAmount.isRemoved {
            B1PreCheckLine.checkAmount = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "CheckAmount")
        }
        if !B1PreCheckLine.deposited.isRemoved {
            B1PreCheckLine.deposited = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "Deposited")
        }
        if !B1PreCheckLine.transferred.isRemoved {
            B1PreCheckLine.transferred = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "Transferred")
        }
        if !B1PreCheckLine.accountNumber.isRemoved {
            B1PreCheckLine.accountNumber = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "AccountNumber")
        }
        if !B1PreCheckLine.checkCurrency.isRemoved {
            B1PreCheckLine.checkCurrency = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "CheckCurrency")
        }
        if !B1PreCheckLine.fiscalID.isRemoved {
            B1PreCheckLine.fiscalID = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "FiscalID")
        }
        if !B1PreCheckLine.originallyIssuedBy.isRemoved {
            B1PreCheckLine.originallyIssuedBy = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "OriginallyIssuedBy")
        }
        if !B1PreCheckLine.rejectedByBank.isRemoved {
            B1PreCheckLine.rejectedByBank = B1ClassMetadata.ComplexTypes.checkLine.property(withName: "RejectedByBank")
        }
        if !B1PreCheckLineParams.checkKey.isRemoved {
            B1PreCheckLineParams.checkKey = B1ClassMetadata.ComplexTypes.checkLineParams.property(withName: "CheckKey")
        }
        if !B1PreChecksforPaymentLine.rowNumber.isRemoved {
            B1PreChecksforPaymentLine.rowNumber = B1ClassMetadata.ComplexTypes.checksforPaymentLine.property(withName: "RowNumber")
        }
        if !B1PreChecksforPaymentLine.rowDetails.isRemoved {
            B1PreChecksforPaymentLine.rowDetails = B1ClassMetadata.ComplexTypes.checksforPaymentLine.property(withName: "RowDetails")
        }
        if !B1PreChecksforPaymentLine.rowTotal.isRemoved {
            B1PreChecksforPaymentLine.rowTotal = B1ClassMetadata.ComplexTypes.checksforPaymentLine.property(withName: "RowTotal")
        }
        if !B1PreChecksforPaymentLine.rowCurrency.isRemoved {
            B1PreChecksforPaymentLine.rowCurrency = B1ClassMetadata.ComplexTypes.checksforPaymentLine.property(withName: "RowCurrency")
        }
        if !B1PreChecksforPaymentLine.taxDefinition.isRemoved {
            B1PreChecksforPaymentLine.taxDefinition = B1ClassMetadata.ComplexTypes.checksforPaymentLine.property(withName: "TaxDefinition")
        }
        if !B1PreChecksforPaymentLine.taxPercent.isRemoved {
            B1PreChecksforPaymentLine.taxPercent = B1ClassMetadata.ComplexTypes.checksforPaymentLine.property(withName: "TaxPercent")
        }
        if !B1PreChecksforPaymentLine.creditedAccount.isRemoved {
            B1PreChecksforPaymentLine.creditedAccount = B1ClassMetadata.ComplexTypes.checksforPaymentLine.property(withName: "CreditedAccount")
        }
        if !B1PreChecksforPaymentLine.lineTotal.isRemoved {
            B1PreChecksforPaymentLine.lineTotal = B1ClassMetadata.ComplexTypes.checksforPaymentLine.property(withName: "LineTotal")
        }
        if !B1PreChecksforPaymentParams.checkKey.isRemoved {
            B1PreChecksforPaymentParams.checkKey = B1ClassMetadata.ComplexTypes.checksforPaymentParams.property(withName: "CheckKey")
        }
        if !B1PreChooseFromListParams.objectName.isRemoved {
            B1PreChooseFromListParams.objectName = B1ClassMetadata.ComplexTypes.chooseFromListParams.property(withName: "ObjectName")
        }
        if !B1PreChooseFromListParams.fieldIndex.isRemoved {
            B1PreChooseFromListParams.fieldIndex = B1ClassMetadata.ComplexTypes.chooseFromListParams.property(withName: "FieldIndex")
        }
        if !B1PreChooseFromListLine.fieldNo.isRemoved {
            B1PreChooseFromListLine.fieldNo = B1ClassMetadata.ComplexTypes.chooseFromListLine.property(withName: "FieldNo")
        }
        if !B1PreChooseFromListLine.displayedName.isRemoved {
            B1PreChooseFromListLine.displayedName = B1ClassMetadata.ComplexTypes.chooseFromListLine.property(withName: "DisplayedName")
        }
        if !B1PreChooseFromListLine.groupBy.isRemoved {
            B1PreChooseFromListLine.groupBy = B1ClassMetadata.ComplexTypes.chooseFromListLine.property(withName: "GroupBy")
        }
        if !B1PreChooseFromListLine.visible.isRemoved {
            B1PreChooseFromListLine.visible = B1ClassMetadata.ComplexTypes.chooseFromListLine.property(withName: "Visible")
        }
        if !B1PreChooseFromListLine.showType.isRemoved {
            B1PreChooseFromListLine.showType = B1ClassMetadata.ComplexTypes.chooseFromListLine.property(withName: "ShowType")
        }
        if !B1PreChooseFromListLine.sortOrder.isRemoved {
            B1PreChooseFromListLine.sortOrder = B1ClassMetadata.ComplexTypes.chooseFromListLine.property(withName: "SortOrder")
        }
        if !B1PreChooseFromListLine.visualIndex.isRemoved {
            B1PreChooseFromListLine.visualIndex = B1ClassMetadata.ComplexTypes.chooseFromListLine.property(withName: "VisualIndex")
        }
        if !B1PreCockpitParams.absEntry.isRemoved {
            B1PreCockpitParams.absEntry = B1ClassMetadata.ComplexTypes.cockpitParams.property(withName: "AbsEntry")
        }
        if !B1PreCockpitParams.cockpitType.isRemoved {
            B1PreCockpitParams.cockpitType = B1ClassMetadata.ComplexTypes.cockpitParams.property(withName: "CockpitType")
        }
        if !B1PreColumnsPreferencesParams.user.isRemoved {
            B1PreColumnsPreferencesParams.user = B1ClassMetadata.ComplexTypes.columnsPreferencesParams.property(withName: "User")
        }
        if !B1PreColumnsPreferencesParams.formID.isRemoved {
            B1PreColumnsPreferencesParams.formID = B1ClassMetadata.ComplexTypes.columnsPreferencesParams.property(withName: "FormID")
        }
        if !B1PreCommissionGroupParams.commissionGroupCode.isRemoved {
            B1PreCommissionGroupParams.commissionGroupCode = B1ClassMetadata.ComplexTypes.commissionGroupParams.property(withName: "CommissionGroupCode")
        }
        if !B1PreCompanyInfo.version.isRemoved {
            B1PreCompanyInfo.version = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "Version")
        }
        if !B1PreCompanyInfo.enableExpensesManagement.isRemoved {
            B1PreCompanyInfo.enableExpensesManagement = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "EnableExpensesManagement")
        }
        if !B1PreCompanyInfo.enableAccountSegmentation.isRemoved {
            B1PreCompanyInfo.enableAccountSegmentation = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "EnableAccountSegmentation")
        }
        if !B1PreCompanyInfo.enableBillOfExchange.isRemoved {
            B1PreCompanyInfo.enableBillOfExchange = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "EnableBillOfExchange")
        }
        if !B1PreCompanyInfo.baseDateForExchangeRate.isRemoved {
            B1PreCompanyInfo.baseDateForExchangeRate = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "BaseDateForExchangeRate")
        }
        if !B1PreCompanyInfo.bisrBankActKey.isRemoved {
            B1PreCompanyInfo.bisrBankActKey = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "BISRBankActKey")
        }
        if !B1PreCompanyInfo.bisrBankCountry.isRemoved {
            B1PreCompanyInfo.bisrBankCountry = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "BISRBankCountry")
        }
        if !B1PreCompanyInfo.bisrBankNo.isRemoved {
            B1PreCompanyInfo.bisrBankNo = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "BISRBankNo")
        }
        if !B1PreCompanyInfo.bisrBankAccount.isRemoved {
            B1PreCompanyInfo.bisrBankAccount = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "BISRBankAccount")
        }
        if !B1PreCompanyInfo.bisrBranch.isRemoved {
            B1PreCompanyInfo.bisrBranch = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "BISRBranch")
        }
        if !B1PreCompanyInfo.maxRecordsInChooseFromList.isRemoved {
            B1PreCompanyInfo.maxRecordsInChooseFromList = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "MaxRecordsInChooseFromList")
        }
        if !B1PreCompanyInfo.enableCheckQuantityInRDR.isRemoved {
            B1PreCompanyInfo.enableCheckQuantityInRDR = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "EnableCheckQuantityInRDR")
        }
        if !B1PreCompanyInfo.sriManagementSystem.isRemoved {
            B1PreCompanyInfo.sriManagementSystem = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "SRIManagementSystem")
        }
        if !B1PreCompanyInfo.autoSRICreationOnReceipt.isRemoved {
            B1PreCompanyInfo.autoSRICreationOnReceipt = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "AutoSRICreationOnReceipt")
        }
        if !B1PreCompanyInfo.iepsPayer.isRemoved {
            B1PreCompanyInfo.iepsPayer = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "IEPSPayer")
        }
        if !B1PreCompanyInfo.defaultDaysForOrdCanc.isRemoved {
            B1PreCompanyInfo.defaultDaysForOrdCanc = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "DefaultDaysForOrdCanc")
        }
        if !B1PreCompanyInfo.percentOfTotalAcquisition.isRemoved {
            B1PreCompanyInfo.percentOfTotalAcquisition = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "PercentOfTotalAcquisition")
        }
        if !B1PreCompanyInfo.minimumBaseAmountPerDoc.isRemoved {
            B1PreCompanyInfo.minimumBaseAmountPerDoc = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "MinimumBaseAmountPerDoc")
        }
        if !B1PreCompanyInfo.enableSharingSeries.isRemoved {
            B1PreCompanyInfo.enableSharingSeries = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "EnableSharingSeries")
        }
        if !B1PreCompanyInfo.dataOwnershipIndication.isRemoved {
            B1PreCompanyInfo.dataOwnershipIndication = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "DataOwnershipIndication")
        }
        if !B1PreCompanyInfo.minimumAmountForAppndixOP.isRemoved {
            B1PreCompanyInfo.minimumAmountForAppndixOP = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "MinimumAmountForAppndixOP")
        }
        if !B1PreCompanyInfo.displayTransactionsByDflt.isRemoved {
            B1PreCompanyInfo.displayTransactionsByDflt = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "DisplayTransactionsByDflt")
        }
        if !B1PreCompanyInfo.defaultStampTax.isRemoved {
            B1PreCompanyInfo.defaultStampTax = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "DefaultStampTax")
        }
        if !B1PreCompanyInfo.minimumAmountForAnnualList.isRemoved {
            B1PreCompanyInfo.minimumAmountForAnnualList = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "MinimumAmountForAnnualList")
        }
        if !B1PreCompanyInfo.blockStockNegativeQuantity.isRemoved {
            B1PreCompanyInfo.blockStockNegativeQuantity = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "BlockStockNegativeQuantity")
        }
        if !B1PreCompanyInfo.autoCreateCustomerEqCard.isRemoved {
            B1PreCompanyInfo.autoCreateCustomerEqCard = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "AutoCreateCustomerEqCard")
        }
        if !B1PreCompanyInfo.maxNumberOfDocumentsInPmt.isRemoved {
            B1PreCompanyInfo.maxNumberOfDocumentsInPmt = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "MaxNumberOfDocumentsInPmt")
        }
        if !B1PreCompanyInfo.enableStockRelNoCostPrice.isRemoved {
            B1PreCompanyInfo.enableStockRelNoCostPrice = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "EnableStockRelNoCostPrice")
        }
        if !B1PreCompanyInfo.companyName.isRemoved {
            B1PreCompanyInfo.companyName = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "CompanyName")
        }
        if !B1PreCompanyInfo.groupLinesInVATCalculation.isRemoved {
            B1PreCompanyInfo.groupLinesInVATCalculation = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "GroupLinesInVATCalculation")
        }
        if !B1PreCompanyInfo.taxCalculationSystem.isRemoved {
            B1PreCompanyInfo.taxCalculationSystem = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "TaxCalculationSystem")
        }
        if !B1PreCompanyInfo.enableTransactionNotification.isRemoved {
            B1PreCompanyInfo.enableTransactionNotification = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "EnableTransactionNotification")
        }
        if !B1PreCompanyInfo.enableConversionDifferentAcct.isRemoved {
            B1PreCompanyInfo.enableConversionDifferentAcct = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "EnableConversionDifferentAcct")
        }
        if !B1PreCompanyInfo.b1iTimeOut.isRemoved {
            B1PreCompanyInfo.b1iTimeOut = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "B1iTimeOut")
        }
        if !B1PreCompanyInfo.languageCode.isRemoved {
            B1PreCompanyInfo.languageCode = B1ClassMetadata.ComplexTypes.companyInfo.property(withName: "LanguageCode")
        }
        if !B1PreContactEmployee.cardCode.isRemoved {
            B1PreContactEmployee.cardCode = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "CardCode")
        }
        if !B1PreContactEmployee.name.isRemoved {
            B1PreContactEmployee.name = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Name")
        }
        if !B1PreContactEmployee.position.isRemoved {
            B1PreContactEmployee.position = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Position")
        }
        if !B1PreContactEmployee.address.isRemoved {
            B1PreContactEmployee.address = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Address")
        }
        if !B1PreContactEmployee.phone1.isRemoved {
            B1PreContactEmployee.phone1 = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Phone1")
        }
        if !B1PreContactEmployee.phone2.isRemoved {
            B1PreContactEmployee.phone2 = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Phone2")
        }
        if !B1PreContactEmployee.mobilePhone.isRemoved {
            B1PreContactEmployee.mobilePhone = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "MobilePhone")
        }
        if !B1PreContactEmployee.fax.isRemoved {
            B1PreContactEmployee.fax = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Fax")
        }
        if !B1PreContactEmployee.eMail.isRemoved {
            B1PreContactEmployee.eMail = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "E_Mail")
        }
        if !B1PreContactEmployee.pager.isRemoved {
            B1PreContactEmployee.pager = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Pager")
        }
        if !B1PreContactEmployee.remarks1.isRemoved {
            B1PreContactEmployee.remarks1 = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Remarks1")
        }
        if !B1PreContactEmployee.remarks2.isRemoved {
            B1PreContactEmployee.remarks2 = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Remarks2")
        }
        if !B1PreContactEmployee.password.isRemoved {
            B1PreContactEmployee.password = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Password")
        }
        if !B1PreContactEmployee.internalCode.isRemoved {
            B1PreContactEmployee.internalCode = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "InternalCode")
        }
        if !B1PreContactEmployee.placeOfBirth.isRemoved {
            B1PreContactEmployee.placeOfBirth = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "PlaceOfBirth")
        }
        if !B1PreContactEmployee.dateOfBirth.isRemoved {
            B1PreContactEmployee.dateOfBirth = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "DateOfBirth")
        }
        if !B1PreContactEmployee.gender.isRemoved {
            B1PreContactEmployee.gender = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Gender")
        }
        if !B1PreContactEmployee.profession.isRemoved {
            B1PreContactEmployee.profession = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Profession")
        }
        if !B1PreContactEmployee.title.isRemoved {
            B1PreContactEmployee.title = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Title")
        }
        if !B1PreContactEmployee.cityOfBirth.isRemoved {
            B1PreContactEmployee.cityOfBirth = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "CityOfBirth")
        }
        if !B1PreContactEmployee.active.isRemoved {
            B1PreContactEmployee.active = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "Active")
        }
        if !B1PreContactEmployee.firstName.isRemoved {
            B1PreContactEmployee.firstName = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "FirstName")
        }
        if !B1PreContactEmployee.middleName.isRemoved {
            B1PreContactEmployee.middleName = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "MiddleName")
        }
        if !B1PreContactEmployee.lastName.isRemoved {
            B1PreContactEmployee.lastName = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "LastName")
        }
        if !B1PreContactEmployee.emailGroupCode.isRemoved {
            B1PreContactEmployee.emailGroupCode = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "EmailGroupCode")
        }
        if !B1PreContactEmployee.blockSendingMarketingContent.isRemoved {
            B1PreContactEmployee.blockSendingMarketingContent = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "BlockSendingMarketingContent")
        }
        if !B1PreContactEmployee.contactEmployeeBlockSendingMarketingContents.isRemoved {
            B1PreContactEmployee.contactEmployeeBlockSendingMarketingContents = B1ClassMetadata.ComplexTypes.contactEmployee.property(withName: "ContactEmployeeBlockSendingMarketingContents")
        }
        if !B1PreContactEmployeeBlockSendingMarketingContent.contactEmployeeAbsEntry.isRemoved {
            B1PreContactEmployeeBlockSendingMarketingContent.contactEmployeeAbsEntry = B1ClassMetadata.ComplexTypes.contactEmployeeBlockSendingMarketingContent.property(withName: "ContactEmployeeAbsEntry")
        }
        if !B1PreContactEmployeeBlockSendingMarketingContent.communicationMediaID.isRemoved {
            B1PreContactEmployeeBlockSendingMarketingContent.communicationMediaID = B1ClassMetadata.ComplexTypes.contactEmployeeBlockSendingMarketingContent.property(withName: "CommunicationMediaId")
        }
        if !B1PreContactEmployeeBlockSendingMarketingContent.choose.isRemoved {
            B1PreContactEmployeeBlockSendingMarketingContent.choose = B1ClassMetadata.ComplexTypes.contactEmployeeBlockSendingMarketingContent.property(withName: "Choose")
        }
        if !B1PreContactParams.contactCode.isRemoved {
            B1PreContactParams.contactCode = B1ClassMetadata.ComplexTypes.contactParams.property(withName: "ContactCode")
        }
        if !B1PreContractTemplateParams.templateName.isRemoved {
            B1PreContractTemplateParams.templateName = B1ClassMetadata.ComplexTypes.contractTemplateParams.property(withName: "TemplateName")
        }
        if !B1PreCostCenterTypeParams.costCenterTypeCode.isRemoved {
            B1PreCostCenterTypeParams.costCenterTypeCode = B1ClassMetadata.ComplexTypes.costCenterTypeParams.property(withName: "CostCenterTypeCode")
        }
        if !B1PreCostElementParams.code.isRemoved {
            B1PreCostElementParams.code = B1ClassMetadata.ComplexTypes.costElementParams.property(withName: "Code")
        }
        if !B1PreCostElementParams.description.isRemoved {
            B1PreCostElementParams.description = B1ClassMetadata.ComplexTypes.costElementParams.property(withName: "Description")
        }
        if !B1PreCountryParams.code.isRemoved {
            B1PreCountryParams.code = B1ClassMetadata.ComplexTypes.countryParams.property(withName: "Code")
        }
        if !B1PreCountryParams.name.isRemoved {
            B1PreCountryParams.name = B1ClassMetadata.ComplexTypes.countryParams.property(withName: "Name")
        }
        if !B1PreCreditCardParams.creditCardCode.isRemoved {
            B1PreCreditCardParams.creditCardCode = B1ClassMetadata.ComplexTypes.creditCardParams.property(withName: "CreditCardCode")
        }
        if !B1PreCreditCardPaymentParams.dueDateCode.isRemoved {
            B1PreCreditCardPaymentParams.dueDateCode = B1ClassMetadata.ComplexTypes.creditCardPaymentParams.property(withName: "DueDateCode")
        }
        if !B1PreCreditLine.absID.isRemoved {
            B1PreCreditLine.absID = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "AbsId")
        }
        if !B1PreCreditLine.creditCard.isRemoved {
            B1PreCreditLine.creditCard = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "CreditCard")
        }
        if !B1PreCreditLine.voucherNumber.isRemoved {
            B1PreCreditLine.voucherNumber = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "VoucherNumber")
        }
        if !B1PreCreditLine.paymentMethodCode.isRemoved {
            B1PreCreditLine.paymentMethodCode = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "PaymentMethodCode")
        }
        if !B1PreCreditLine.payDate.isRemoved {
            B1PreCreditLine.payDate = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "PayDate")
        }
        if !B1PreCreditLine.deposited.isRemoved {
            B1PreCreditLine.deposited = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "Deposited")
        }
        if !B1PreCreditLine.numOfPayments.isRemoved {
            B1PreCreditLine.numOfPayments = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "NumOfPayments")
        }
        if !B1PreCreditLine.customer.isRemoved {
            B1PreCreditLine.customer = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "Customer")
        }
        if !B1PreCreditLine.reference.isRemoved {
            B1PreCreditLine.reference = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "Reference")
        }
        if !B1PreCreditLine.transferred.isRemoved {
            B1PreCreditLine.transferred = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "Transferred")
        }
        if !B1PreCreditLine.total.isRemoved {
            B1PreCreditLine.total = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "Total")
        }
        if !B1PreCreditLine.creditCurrency.isRemoved {
            B1PreCreditLine.creditCurrency = B1ClassMetadata.ComplexTypes.creditLine.property(withName: "CreditCurrency")
        }
        if !B1PreCreditLineParams.absID.isRemoved {
            B1PreCreditLineParams.absID = B1ClassMetadata.ComplexTypes.creditLineParams.property(withName: "AbsId")
        }
        if !B1PreCreditPaymentMethodParams.paymentMethodCode.isRemoved {
            B1PreCreditPaymentMethodParams.paymentMethodCode = B1ClassMetadata.ComplexTypes.creditPaymentMethodParams.property(withName: "PaymentMethodCode")
        }
        if !B1PreCurrenciesParams.code.isRemoved {
            B1PreCurrenciesParams.code = B1ClassMetadata.ComplexTypes.currenciesParams.property(withName: "Code")
        }
        if !B1PreCurrencyRestriction.paymentMethodCode.isRemoved {
            B1PreCurrencyRestriction.paymentMethodCode = B1ClassMetadata.ComplexTypes.currencyRestriction.property(withName: "PaymentMethodCode")
        }
        if !B1PreCurrencyRestriction.currencyCode.isRemoved {
            B1PreCurrencyRestriction.currencyCode = B1ClassMetadata.ComplexTypes.currencyRestriction.property(withName: "CurrencyCode")
        }
        if !B1PreCurrencyRestriction.currencyName.isRemoved {
            B1PreCurrencyRestriction.currencyName = B1ClassMetadata.ComplexTypes.currencyRestriction.property(withName: "CurrencyName")
        }
        if !B1PreCurrencyRestriction.choose.isRemoved {
            B1PreCurrencyRestriction.choose = B1ClassMetadata.ComplexTypes.currencyRestriction.property(withName: "Choose")
        }
        if !B1PreCustomerEquipmentCardParams.equipmentCardNum.isRemoved {
            B1PreCustomerEquipmentCardParams.equipmentCardNum = B1ClassMetadata.ComplexTypes.customerEquipmentCardParams.property(withName: "EquipmentCardNum")
        }
        if !B1PreCustomsDeclarationParams.ccdNum.isRemoved {
            B1PreCustomsDeclarationParams.ccdNum = B1ClassMetadata.ComplexTypes.customsDeclarationParams.property(withName: "CCDNum")
        }
        if !B1PreCustomsGroupParams.code.isRemoved {
            B1PreCustomsGroupParams.code = B1ClassMetadata.ComplexTypes.customsGroupParams.property(withName: "Code")
        }
        if !B1PreCustomsGroupParams.portAddress.isRemoved {
            B1PreCustomsGroupParams.portAddress = B1ClassMetadata.ComplexTypes.customsGroupParams.property(withName: "PortAddress")
        }
        if !B1PreCustomsGroupParams.portState.isRemoved {
            B1PreCustomsGroupParams.portState = B1ClassMetadata.ComplexTypes.customsGroupParams.property(withName: "PortState")
        }
        if !B1PreCycleCountDeterminationParams.warehouseCode.isRemoved {
            B1PreCycleCountDeterminationParams.warehouseCode = B1ClassMetadata.ComplexTypes.cycleCountDeterminationParams.property(withName: "WarehouseCode")
        }
        if !B1PreCycleCountDeterminationParams.cycleBy.isRemoved {
            B1PreCycleCountDeterminationParams.cycleBy = B1ClassMetadata.ComplexTypes.cycleCountDeterminationParams.property(withName: "CycleBy")
        }
        if !B1PreCycleCountDeterminationSetup.warehouseCode.isRemoved {
            B1PreCycleCountDeterminationSetup.warehouseCode = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "WarehouseCode")
        }
        if !B1PreCycleCountDeterminationSetup.entry.isRemoved {
            B1PreCycleCountDeterminationSetup.entry = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "Entry")
        }
        if !B1PreCycleCountDeterminationSetup.cycleCode.isRemoved {
            B1PreCycleCountDeterminationSetup.cycleCode = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "CycleCode")
        }
        if !B1PreCycleCountDeterminationSetup.alert.isRemoved {
            B1PreCycleCountDeterminationSetup.alert = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "Alert")
        }
        if !B1PreCycleCountDeterminationSetup.destinationUser.isRemoved {
            B1PreCycleCountDeterminationSetup.destinationUser = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "DestinationUser")
        }
        if !B1PreCycleCountDeterminationSetup.nextCountingDate.isRemoved {
            B1PreCycleCountDeterminationSetup.nextCountingDate = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "NextCountingDate")
        }
        if !B1PreCycleCountDeterminationSetup.time.isRemoved {
            B1PreCycleCountDeterminationSetup.time = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "Time")
        }
        if !B1PreCycleCountDeterminationSetup.excludeItemsWithZeroQuantity.isRemoved {
            B1PreCycleCountDeterminationSetup.excludeItemsWithZeroQuantity = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "ExcludeItemsWithZeroQuantity")
        }
        if !B1PreCycleCountDeterminationSetup.changeExistingItems.isRemoved {
            B1PreCycleCountDeterminationSetup.changeExistingItems = B1ClassMetadata.ComplexTypes.cycleCountDeterminationSetup.property(withName: "ChangeExistingItems")
        }
        if !B1PreDNFCodeSetupParams.absEntry.isRemoved {
            B1PreDNFCodeSetupParams.absEntry = B1ClassMetadata.ComplexTypes.dnfCodeSetupParams.property(withName: "AbsEntry")
        }
        if !B1PreDNFCodeSetupParams.ncmCode.isRemoved {
            B1PreDNFCodeSetupParams.ncmCode = B1ClassMetadata.ComplexTypes.dnfCodeSetupParams.property(withName: "NCMCode")
        }
        if !B1PreDNFCodeSetupParams.dnfCode.isRemoved {
            B1PreDNFCodeSetupParams.dnfCode = B1ClassMetadata.ComplexTypes.dnfCodeSetupParams.property(withName: "DNFCode")
        }
        if !B1PreDashboardPackageImportParams.packageFilePath.isRemoved {
            B1PreDashboardPackageImportParams.packageFilePath = B1ClassMetadata.ComplexTypes.dashboardPackageImportParams.property(withName: "PackageFilePath")
        }
        if !B1PreDashboardPackageImportParams.importQueries.isRemoved {
            B1PreDashboardPackageImportParams.importQueries = B1ClassMetadata.ComplexTypes.dashboardPackageImportParams.property(withName: "ImportQueries")
        }
        if !B1PreDashboardPackageImportParams.forceOverwriteQuery.isRemoved {
            B1PreDashboardPackageImportParams.forceOverwriteQuery = B1ClassMetadata.ComplexTypes.dashboardPackageImportParams.property(withName: "ForceOverwriteQuery")
        }
        if !B1PreDashboardPackageImportParams.forceOverwritePackage.isRemoved {
            B1PreDashboardPackageImportParams.forceOverwritePackage = B1ClassMetadata.ComplexTypes.dashboardPackageImportParams.property(withName: "ForceOverwritePackage")
        }
        if !B1PreDashboardPackageParams.absEntry.isRemoved {
            B1PreDashboardPackageParams.absEntry = B1ClassMetadata.ComplexTypes.dashboardPackageParams.property(withName: "AbsEntry")
        }
        if !B1PreDecimalData.value.isRemoved {
            B1PreDecimalData.value = B1ClassMetadata.ComplexTypes.decimalData.property(withName: "Value")
        }
        if !B1PreDecimalData.context.isRemoved {
            B1PreDecimalData.context = B1ClassMetadata.ComplexTypes.decimalData.property(withName: "Context")
        }
        if !B1PreDecimalData.currency.isRemoved {
            B1PreDecimalData.currency = B1ClassMetadata.ComplexTypes.decimalData.property(withName: "Currency")
        }
        if !B1PreDeductionTaxGroupParams.groupKey.isRemoved {
            B1PreDeductionTaxGroupParams.groupKey = B1ClassMetadata.ComplexTypes.deductionTaxGroupParams.property(withName: "GroupKey")
        }
        if !B1PreDeductionTaxHierarchiesLine.rowNumber.isRemoved {
            B1PreDeductionTaxHierarchiesLine.rowNumber = B1ClassMetadata.ComplexTypes.deductionTaxHierarchiesLine.property(withName: "RowNumber")
        }
        if !B1PreDeductionTaxHierarchiesLine.deductionPercent.isRemoved {
            B1PreDeductionTaxHierarchiesLine.deductionPercent = B1ClassMetadata.ComplexTypes.deductionTaxHierarchiesLine.property(withName: "DeductionPercent")
        }
        if !B1PreDeductionTaxHierarchiesLine.maximumTotal.isRemoved {
            B1PreDeductionTaxHierarchiesLine.maximumTotal = B1ClassMetadata.ComplexTypes.deductionTaxHierarchiesLine.property(withName: "MaximumTotal")
        }
        if !B1PreDeductionTaxHierarchyParams.absEntry.isRemoved {
            B1PreDeductionTaxHierarchyParams.absEntry = B1ClassMetadata.ComplexTypes.deductionTaxHierarchyParams.property(withName: "AbsEntry")
        }
        if !B1PreDeductionTaxSubGroupParams.groupCode.isRemoved {
            B1PreDeductionTaxSubGroupParams.groupCode = B1ClassMetadata.ComplexTypes.deductionTaxSubGroupParams.property(withName: "GroupCode")
        }
        if !B1PreDeductionTaxSubGroupParams.groupName.isRemoved {
            B1PreDeductionTaxSubGroupParams.groupName = B1ClassMetadata.ComplexTypes.deductionTaxSubGroupParams.property(withName: "GroupName")
        }
        if !B1PreDefaultElectronicSeriesParams.series.isRemoved {
            B1PreDefaultElectronicSeriesParams.series = B1ClassMetadata.ComplexTypes.defaultElectronicSeriesParams.property(withName: "Series")
        }
        if !B1PreDefaultElectronicSeriesParams.electronicSeries.isRemoved {
            B1PreDefaultElectronicSeriesParams.electronicSeries = B1ClassMetadata.ComplexTypes.defaultElectronicSeriesParams.property(withName: "ElectronicSeries")
        }
        if !B1PreDefaultReportParams.reportCode.isRemoved {
            B1PreDefaultReportParams.reportCode = B1ClassMetadata.ComplexTypes.defaultReportParams.property(withName: "ReportCode")
        }
        if !B1PreDefaultReportParams.layoutCode.isRemoved {
            B1PreDefaultReportParams.layoutCode = B1ClassMetadata.ComplexTypes.defaultReportParams.property(withName: "LayoutCode")
        }
        if !B1PreDefaultReportParams.userID.isRemoved {
            B1PreDefaultReportParams.userID = B1ClassMetadata.ComplexTypes.defaultReportParams.property(withName: "UserID")
        }
        if !B1PreDefaultReportParams.cardCode.isRemoved {
            B1PreDefaultReportParams.cardCode = B1ClassMetadata.ComplexTypes.defaultReportParams.property(withName: "CardCode")
        }
        if !B1PreDepartmentParams.code.isRemoved {
            B1PreDepartmentParams.code = B1ClassMetadata.ComplexTypes.departmentParams.property(withName: "Code")
        }
        if !B1PreDepartmentParams.name.isRemoved {
            B1PreDepartmentParams.name = B1ClassMetadata.ComplexTypes.departmentParams.property(withName: "Name")
        }
        if !B1PreDepositParams.depositNumber.isRemoved {
            B1PreDepositParams.depositNumber = B1ClassMetadata.ComplexTypes.depositParams.property(withName: "DepositNumber")
        }
        if !B1PreDepositParams.absEntry.isRemoved {
            B1PreDepositParams.absEntry = B1ClassMetadata.ComplexTypes.depositParams.property(withName: "AbsEntry")
        }
        if !B1PreDepositParams.series.isRemoved {
            B1PreDepositParams.series = B1ClassMetadata.ComplexTypes.depositParams.property(withName: "Series")
        }
        if !B1PreDepreciationAreaParams.code.isRemoved {
            B1PreDepreciationAreaParams.code = B1ClassMetadata.ComplexTypes.depreciationAreaParams.property(withName: "Code")
        }
        if !B1PreDepreciationAreaParams.description.isRemoved {
            B1PreDepreciationAreaParams.description = B1ClassMetadata.ComplexTypes.depreciationAreaParams.property(withName: "Description")
        }
        if !B1PreDepreciationLevel.level.isRemoved {
            B1PreDepreciationLevel.level = B1ClassMetadata.ComplexTypes.depreciationLevel.property(withName: "Level")
        }
        if !B1PreDepreciationLevel.depreciationCalculationBase.isRemoved {
            B1PreDepreciationLevel.depreciationCalculationBase = B1ClassMetadata.ComplexTypes.depreciationLevel.property(withName: "DepreciationCalculationBase")
        }
        if !B1PreDepreciationLevel.numberOfYears.isRemoved {
            B1PreDepreciationLevel.numberOfYears = B1ClassMetadata.ComplexTypes.depreciationLevel.property(withName: "NumberOfYears")
        }
        if !B1PreDepreciationLevel.percentage.isRemoved {
            B1PreDepreciationLevel.percentage = B1ClassMetadata.ComplexTypes.depreciationLevel.property(withName: "Percentage")
        }
        if !B1PreDepreciationLevel.amount.isRemoved {
            B1PreDepreciationLevel.amount = B1ClassMetadata.ComplexTypes.depreciationLevel.property(withName: "Amount")
        }
        if !B1PreDepreciationTypeParams.code.isRemoved {
            B1PreDepreciationTypeParams.code = B1ClassMetadata.ComplexTypes.depreciationTypeParams.property(withName: "Code")
        }
        if !B1PreDepreciationTypeParams.description.isRemoved {
            B1PreDepreciationTypeParams.description = B1ClassMetadata.ComplexTypes.depreciationTypeParams.property(withName: "Description")
        }
        if !B1PreDepreciationTypePoolParams.code.isRemoved {
            B1PreDepreciationTypePoolParams.code = B1ClassMetadata.ComplexTypes.depreciationTypePoolParams.property(withName: "Code")
        }
        if !B1PreDepreciationTypePoolParams.description.isRemoved {
            B1PreDepreciationTypePoolParams.description = B1ClassMetadata.ComplexTypes.depreciationTypePoolParams.property(withName: "Description")
        }
        if !B1PreDeterminationCriteriaParams.dmcID.isRemoved {
            B1PreDeterminationCriteriaParams.dmcID = B1ClassMetadata.ComplexTypes.determinationCriteriaParams.property(withName: "DmcId")
        }
        if !B1PreDimensionParams.dimensionCode.isRemoved {
            B1PreDimensionParams.dimensionCode = B1ClassMetadata.ComplexTypes.dimensionParams.property(withName: "DimensionCode")
        }
        if !B1PreDimensionParams.dimensionName.isRemoved {
            B1PreDimensionParams.dimensionName = B1ClassMetadata.ComplexTypes.dimensionParams.property(withName: "DimensionName")
        }
        if !B1PreDiscountGroup.objectEntry.isRemoved {
            B1PreDiscountGroup.objectEntry = B1ClassMetadata.ComplexTypes.discountGroup.property(withName: "ObjectEntry")
        }
        if !B1PreDiscountGroup.discountPercentage.isRemoved {
            B1PreDiscountGroup.discountPercentage = B1ClassMetadata.ComplexTypes.discountGroup.property(withName: "DiscountPercentage")
        }
        if !B1PreDiscountGroup.bpCode.isRemoved {
            B1PreDiscountGroup.bpCode = B1ClassMetadata.ComplexTypes.discountGroup.property(withName: "BPCode")
        }
        if !B1PreDiscountGroup.baseObjectType.isRemoved {
            B1PreDiscountGroup.baseObjectType = B1ClassMetadata.ComplexTypes.discountGroup.property(withName: "BaseObjectType")
        }
        if !B1PreDiscountGroupLine.absEntry.isRemoved {
            B1PreDiscountGroupLine.absEntry = B1ClassMetadata.ComplexTypes.discountGroupLine.property(withName: "AbsEntry")
        }
        if !B1PreDiscountGroupLine.objectType.isRemoved {
            B1PreDiscountGroupLine.objectType = B1ClassMetadata.ComplexTypes.discountGroupLine.property(withName: "ObjectType")
        }
        if !B1PreDiscountGroupLine.objectCode.isRemoved {
            B1PreDiscountGroupLine.objectCode = B1ClassMetadata.ComplexTypes.discountGroupLine.property(withName: "ObjectCode")
        }
        if !B1PreDiscountGroupLine.discountType.isRemoved {
            B1PreDiscountGroupLine.discountType = B1ClassMetadata.ComplexTypes.discountGroupLine.property(withName: "DiscountType")
        }
        if !B1PreDiscountGroupLine.discount.isRemoved {
            B1PreDiscountGroupLine.discount = B1ClassMetadata.ComplexTypes.discountGroupLine.property(withName: "Discount")
        }
        if !B1PreDiscountGroupLine.paidQuantity.isRemoved {
            B1PreDiscountGroupLine.paidQuantity = B1ClassMetadata.ComplexTypes.discountGroupLine.property(withName: "PaidQuantity")
        }
        if !B1PreDiscountGroupLine.freeQuantity.isRemoved {
            B1PreDiscountGroupLine.freeQuantity = B1ClassMetadata.ComplexTypes.discountGroupLine.property(withName: "FreeQuantity")
        }
        if !B1PreDiscountGroupLine.maximumFreeQuantity.isRemoved {
            B1PreDiscountGroupLine.maximumFreeQuantity = B1ClassMetadata.ComplexTypes.discountGroupLine.property(withName: "MaximumFreeQuantity")
        }
        if !B1PreDiscountLine.discountCode.isRemoved {
            B1PreDiscountLine.discountCode = B1ClassMetadata.ComplexTypes.discountLine.property(withName: "DiscountCode")
        }
        if !B1PreDiscountLine.lineID.isRemoved {
            B1PreDiscountLine.lineID = B1ClassMetadata.ComplexTypes.discountLine.property(withName: "LineId")
        }
        if !B1PreDiscountLine.numOfDays.isRemoved {
            B1PreDiscountLine.numOfDays = B1ClassMetadata.ComplexTypes.discountLine.property(withName: "NumOfDays")
        }
        if !B1PreDiscountLine.discount.isRemoved {
            B1PreDiscountLine.discount = B1ClassMetadata.ComplexTypes.discountLine.property(withName: "Discount")
        }
        if !B1PreDiscountLine.day.isRemoved {
            B1PreDiscountLine.day = B1ClassMetadata.ComplexTypes.discountLine.property(withName: "Day")
        }
        if !B1PreDiscountLine.month.isRemoved {
            B1PreDiscountLine.month = B1ClassMetadata.ComplexTypes.discountLine.property(withName: "Month")
        }
        if !B1PreDistributionRuleLine.centerCode.isRemoved {
            B1PreDistributionRuleLine.centerCode = B1ClassMetadata.ComplexTypes.distributionRuleLine.property(withName: "CenterCode")
        }
        if !B1PreDistributionRuleLine.totalInCenter.isRemoved {
            B1PreDistributionRuleLine.totalInCenter = B1ClassMetadata.ComplexTypes.distributionRuleLine.property(withName: "TotalInCenter")
        }
        if !B1PreDistributionRuleLine.effectiveFrom.isRemoved {
            B1PreDistributionRuleLine.effectiveFrom = B1ClassMetadata.ComplexTypes.distributionRuleLine.property(withName: "EffectiveFrom")
        }
        if !B1PreDistributionRuleLine.effectiveTo.isRemoved {
            B1PreDistributionRuleLine.effectiveTo = B1ClassMetadata.ComplexTypes.distributionRuleLine.property(withName: "EffectiveTo")
        }
        if !B1PreDistributionRuleParams.factorCode.isRemoved {
            B1PreDistributionRuleParams.factorCode = B1ClassMetadata.ComplexTypes.distributionRuleParams.property(withName: "FactorCode")
        }
        if !B1PreDistributionRuleParams.factorDescription.isRemoved {
            B1PreDistributionRuleParams.factorDescription = B1ClassMetadata.ComplexTypes.distributionRuleParams.property(withName: "FactorDescription")
        }
        if !B1PreDocExpenseTaxJurisdiction.jurisdictionCode.isRemoved {
            B1PreDocExpenseTaxJurisdiction.jurisdictionCode = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "JurisdictionCode")
        }
        if !B1PreDocExpenseTaxJurisdiction.jurisdictionType.isRemoved {
            B1PreDocExpenseTaxJurisdiction.jurisdictionType = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "JurisdictionType")
        }
        if !B1PreDocExpenseTaxJurisdiction.taxAmount.isRemoved {
            B1PreDocExpenseTaxJurisdiction.taxAmount = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "TaxAmount")
        }
        if !B1PreDocExpenseTaxJurisdiction.taxAmountSC.isRemoved {
            B1PreDocExpenseTaxJurisdiction.taxAmountSC = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "TaxAmountSC")
        }
        if !B1PreDocExpenseTaxJurisdiction.taxAmountFC.isRemoved {
            B1PreDocExpenseTaxJurisdiction.taxAmountFC = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "TaxAmountFC")
        }
        if !B1PreDocExpenseTaxJurisdiction.taxRate.isRemoved {
            B1PreDocExpenseTaxJurisdiction.taxRate = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "TaxRate")
        }
        if !B1PreDocExpenseTaxJurisdiction.docEntry.isRemoved {
            B1PreDocExpenseTaxJurisdiction.docEntry = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "DocEntry")
        }
        if !B1PreDocExpenseTaxJurisdiction.lineNumber.isRemoved {
            B1PreDocExpenseTaxJurisdiction.lineNumber = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "LineNumber")
        }
        if !B1PreDocExpenseTaxJurisdiction.rowSequence.isRemoved {
            B1PreDocExpenseTaxJurisdiction.rowSequence = B1ClassMetadata.ComplexTypes.docExpenseTaxJurisdiction.property(withName: "RowSequence")
        }
        if !B1PreDocsInWTGroups.docEntry.isRemoved {
            B1PreDocsInWTGroups.docEntry = B1ClassMetadata.ComplexTypes.docsInWTGroups.property(withName: "DocEntry")
        }
        if !B1PreDocsInWTGroups.docObjType.isRemoved {
            B1PreDocsInWTGroups.docObjType = B1ClassMetadata.ComplexTypes.docsInWTGroups.property(withName: "DocObjType")
        }
        if !B1PreDocsInWTGroups.vatAmount.isRemoved {
            B1PreDocsInWTGroups.vatAmount = B1ClassMetadata.ComplexTypes.docsInWTGroups.property(withName: "VATAmount")
        }
        if !B1PreDocsInWTGroups.docTotal.isRemoved {
            B1PreDocsInWTGroups.docTotal = B1ClassMetadata.ComplexTypes.docsInWTGroups.property(withName: "DocTotal")
        }
        if !B1PreDocsInWTGroups.baseAmount.isRemoved {
            B1PreDocsInWTGroups.baseAmount = B1ClassMetadata.ComplexTypes.docsInWTGroups.property(withName: "BaseAmount")
        }
        if !B1PreDocsInWTGroups.accumAmount.isRemoved {
            B1PreDocsInWTGroups.accumAmount = B1ClassMetadata.ComplexTypes.docsInWTGroups.property(withName: "AccumAmount")
        }
        if !B1PreDocsInWTGroups.perceptAmount.isRemoved {
            B1PreDocsInWTGroups.perceptAmount = B1ClassMetadata.ComplexTypes.docsInWTGroups.property(withName: "PerceptAmount")
        }
        if !B1PreDocsInWTGroups.percent.isRemoved {
            B1PreDocsInWTGroups.percent = B1ClassMetadata.ComplexTypes.docsInWTGroups.property(withName: "Percent")
        }
        if !B1PreDocumentAdditionalExpense.expenseCode.isRemoved {
            B1PreDocumentAdditionalExpense.expenseCode = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "ExpenseCode")
        }
        if !B1PreDocumentAdditionalExpense.lineTotal.isRemoved {
            B1PreDocumentAdditionalExpense.lineTotal = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "LineTotal")
        }
        if !B1PreDocumentAdditionalExpense.lineTotalFC.isRemoved {
            B1PreDocumentAdditionalExpense.lineTotalFC = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "LineTotalFC")
        }
        if !B1PreDocumentAdditionalExpense.lineTotalSys.isRemoved {
            B1PreDocumentAdditionalExpense.lineTotalSys = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "LineTotalSys")
        }
        if !B1PreDocumentAdditionalExpense.paidToDate.isRemoved {
            B1PreDocumentAdditionalExpense.paidToDate = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "PaidToDate")
        }
        if !B1PreDocumentAdditionalExpense.paidToDateFC.isRemoved {
            B1PreDocumentAdditionalExpense.paidToDateFC = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "PaidToDateFC")
        }
        if !B1PreDocumentAdditionalExpense.paidToDateSys.isRemoved {
            B1PreDocumentAdditionalExpense.paidToDateSys = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "PaidToDateSys")
        }
        if !B1PreDocumentAdditionalExpense.remarks.isRemoved {
            B1PreDocumentAdditionalExpense.remarks = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "Remarks")
        }
        if !B1PreDocumentAdditionalExpense.distributionMethod.isRemoved {
            B1PreDocumentAdditionalExpense.distributionMethod = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DistributionMethod")
        }
        if !B1PreDocumentAdditionalExpense.taxLiable.isRemoved {
            B1PreDocumentAdditionalExpense.taxLiable = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxLiable")
        }
        if !B1PreDocumentAdditionalExpense.vatGroup.isRemoved {
            B1PreDocumentAdditionalExpense.vatGroup = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "VatGroup")
        }
        if !B1PreDocumentAdditionalExpense.taxPercent.isRemoved {
            B1PreDocumentAdditionalExpense.taxPercent = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxPercent")
        }
        if !B1PreDocumentAdditionalExpense.taxSum.isRemoved {
            B1PreDocumentAdditionalExpense.taxSum = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxSum")
        }
        if !B1PreDocumentAdditionalExpense.taxSumFC.isRemoved {
            B1PreDocumentAdditionalExpense.taxSumFC = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxSumFC")
        }
        if !B1PreDocumentAdditionalExpense.taxSumSys.isRemoved {
            B1PreDocumentAdditionalExpense.taxSumSys = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxSumSys")
        }
        if !B1PreDocumentAdditionalExpense.deductibleTaxSum.isRemoved {
            B1PreDocumentAdditionalExpense.deductibleTaxSum = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DeductibleTaxSum")
        }
        if !B1PreDocumentAdditionalExpense.deductibleTaxSumFC.isRemoved {
            B1PreDocumentAdditionalExpense.deductibleTaxSumFC = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DeductibleTaxSumFC")
        }
        if !B1PreDocumentAdditionalExpense.deductibleTaxSumSys.isRemoved {
            B1PreDocumentAdditionalExpense.deductibleTaxSumSys = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DeductibleTaxSumSys")
        }
        if !B1PreDocumentAdditionalExpense.aquisitionTax.isRemoved {
            B1PreDocumentAdditionalExpense.aquisitionTax = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "AquisitionTax")
        }
        if !B1PreDocumentAdditionalExpense.taxCode.isRemoved {
            B1PreDocumentAdditionalExpense.taxCode = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxCode")
        }
        if !B1PreDocumentAdditionalExpense.taxType.isRemoved {
            B1PreDocumentAdditionalExpense.taxType = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxType")
        }
        if !B1PreDocumentAdditionalExpense.taxPaid.isRemoved {
            B1PreDocumentAdditionalExpense.taxPaid = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxPaid")
        }
        if !B1PreDocumentAdditionalExpense.taxPaidFC.isRemoved {
            B1PreDocumentAdditionalExpense.taxPaidFC = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxPaidFC")
        }
        if !B1PreDocumentAdditionalExpense.taxPaidSys.isRemoved {
            B1PreDocumentAdditionalExpense.taxPaidSys = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxPaidSys")
        }
        if !B1PreDocumentAdditionalExpense.equalizationTaxPercent.isRemoved {
            B1PreDocumentAdditionalExpense.equalizationTaxPercent = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "EqualizationTaxPercent")
        }
        if !B1PreDocumentAdditionalExpense.equalizationTaxSum.isRemoved {
            B1PreDocumentAdditionalExpense.equalizationTaxSum = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "EqualizationTaxSum")
        }
        if !B1PreDocumentAdditionalExpense.equalizationTaxFC.isRemoved {
            B1PreDocumentAdditionalExpense.equalizationTaxFC = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "EqualizationTaxFC")
        }
        if !B1PreDocumentAdditionalExpense.equalizationTaxSys.isRemoved {
            B1PreDocumentAdditionalExpense.equalizationTaxSys = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "EqualizationTaxSys")
        }
        if !B1PreDocumentAdditionalExpense.taxTotalSum.isRemoved {
            B1PreDocumentAdditionalExpense.taxTotalSum = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxTotalSum")
        }
        if !B1PreDocumentAdditionalExpense.taxTotalSumFC.isRemoved {
            B1PreDocumentAdditionalExpense.taxTotalSumFC = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxTotalSumFC")
        }
        if !B1PreDocumentAdditionalExpense.taxTotalSumSys.isRemoved {
            B1PreDocumentAdditionalExpense.taxTotalSumSys = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TaxTotalSumSys")
        }
        if !B1PreDocumentAdditionalExpense.baseDocEntry.isRemoved {
            B1PreDocumentAdditionalExpense.baseDocEntry = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "BaseDocEntry")
        }
        if !B1PreDocumentAdditionalExpense.baseDocLine.isRemoved {
            B1PreDocumentAdditionalExpense.baseDocLine = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "BaseDocLine")
        }
        if !B1PreDocumentAdditionalExpense.baseDocType.isRemoved {
            B1PreDocumentAdditionalExpense.baseDocType = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "BaseDocType")
        }
        if !B1PreDocumentAdditionalExpense.baseDocumentReference.isRemoved {
            B1PreDocumentAdditionalExpense.baseDocumentReference = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "BaseDocumentReference")
        }
        if !B1PreDocumentAdditionalExpense.lineNum.isRemoved {
            B1PreDocumentAdditionalExpense.lineNum = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "LineNum")
        }
        if !B1PreDocumentAdditionalExpense.lastPurchasePrice.isRemoved {
            B1PreDocumentAdditionalExpense.lastPurchasePrice = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "LastPurchasePrice")
        }
        if !B1PreDocumentAdditionalExpense.status.isRemoved {
            B1PreDocumentAdditionalExpense.status = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "Status")
        }
        if !B1PreDocumentAdditionalExpense.stock.isRemoved {
            B1PreDocumentAdditionalExpense.stock = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "Stock")
        }
        if !B1PreDocumentAdditionalExpense.targetAbsEntry.isRemoved {
            B1PreDocumentAdditionalExpense.targetAbsEntry = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TargetAbsEntry")
        }
        if !B1PreDocumentAdditionalExpense.targetType.isRemoved {
            B1PreDocumentAdditionalExpense.targetType = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "TargetType")
        }
        if !B1PreDocumentAdditionalExpense.wtLiable.isRemoved {
            B1PreDocumentAdditionalExpense.wtLiable = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "WTLiable")
        }
        if !B1PreDocumentAdditionalExpense.distributionRule.isRemoved {
            B1PreDocumentAdditionalExpense.distributionRule = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DistributionRule")
        }
        if !B1PreDocumentAdditionalExpense.project.isRemoved {
            B1PreDocumentAdditionalExpense.project = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "Project")
        }
        if !B1PreDocumentAdditionalExpense.distributionRule2.isRemoved {
            B1PreDocumentAdditionalExpense.distributionRule2 = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DistributionRule2")
        }
        if !B1PreDocumentAdditionalExpense.distributionRule3.isRemoved {
            B1PreDocumentAdditionalExpense.distributionRule3 = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DistributionRule3")
        }
        if !B1PreDocumentAdditionalExpense.distributionRule4.isRemoved {
            B1PreDocumentAdditionalExpense.distributionRule4 = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DistributionRule4")
        }
        if !B1PreDocumentAdditionalExpense.distributionRule5.isRemoved {
            B1PreDocumentAdditionalExpense.distributionRule5 = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DistributionRule5")
        }
        if !B1PreDocumentAdditionalExpense.lineGross.isRemoved {
            B1PreDocumentAdditionalExpense.lineGross = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "LineGross")
        }
        if !B1PreDocumentAdditionalExpense.lineGrossSys.isRemoved {
            B1PreDocumentAdditionalExpense.lineGrossSys = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "LineGrossSys")
        }
        if !B1PreDocumentAdditionalExpense.lineGrossFC.isRemoved {
            B1PreDocumentAdditionalExpense.lineGrossFC = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "LineGrossFC")
        }
        if !B1PreDocumentAdditionalExpense.docExpenseTaxJurisdictions.isRemoved {
            B1PreDocumentAdditionalExpense.docExpenseTaxJurisdictions = B1ClassMetadata.ComplexTypes.documentAdditionalExpense.property(withName: "DocExpenseTaxJurisdictions")
        }
        if !B1PreDocumentChangeMenuName.document.isRemoved {
            B1PreDocumentChangeMenuName.document = B1ClassMetadata.ComplexTypes.documentChangeMenuName.property(withName: "Document")
        }
        if !B1PreDocumentChangeMenuName.documentSubType.isRemoved {
            B1PreDocumentChangeMenuName.documentSubType = B1ClassMetadata.ComplexTypes.documentChangeMenuName.property(withName: "DocumentSubType")
        }
        if !B1PreDocumentChangeMenuName.changedMenuName.isRemoved {
            B1PreDocumentChangeMenuName.changedMenuName = B1ClassMetadata.ComplexTypes.documentChangeMenuName.property(withName: "ChangedMenuName")
        }
        if !B1PreDocumentInstallment.dueDate.isRemoved {
            B1PreDocumentInstallment.dueDate = B1ClassMetadata.ComplexTypes.documentInstallment.property(withName: "DueDate")
        }
        if !B1PreDocumentInstallment.percentage.isRemoved {
            B1PreDocumentInstallment.percentage = B1ClassMetadata.ComplexTypes.documentInstallment.property(withName: "Percentage")
        }
        if !B1PreDocumentInstallment.total.isRemoved {
            B1PreDocumentInstallment.total = B1ClassMetadata.ComplexTypes.documentInstallment.property(withName: "Total")
        }
        if !B1PreDocumentInstallment.lastDunningDate.isRemoved {
            B1PreDocumentInstallment.lastDunningDate = B1ClassMetadata.ComplexTypes.documentInstallment.property(withName: "LastDunningDate")
        }
        if !B1PreDocumentInstallment.dunningLevel.isRemoved {
            B1PreDocumentInstallment.dunningLevel = B1ClassMetadata.ComplexTypes.documentInstallment.property(withName: "DunningLevel")
        }
        if !B1PreDocumentInstallment.totalFC.isRemoved {
            B1PreDocumentInstallment.totalFC = B1ClassMetadata.ComplexTypes.documentInstallment.property(withName: "TotalFC")
        }
        if !B1PreDocumentInstallment.installmentID.isRemoved {
            B1PreDocumentInstallment.installmentID = B1ClassMetadata.ComplexTypes.documentInstallment.property(withName: "InstallmentId")
        }
        if !B1PreDocumentInstallment.paymentOrdered.isRemoved {
            B1PreDocumentInstallment.paymentOrdered = B1ClassMetadata.ComplexTypes.documentInstallment.property(withName: "PaymentOrdered")
        }
        if !B1PreDocumentLine.lineNum.isRemoved {
            B1PreDocumentLine.lineNum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LineNum")
        }
        if !B1PreDocumentLine.itemCode.isRemoved {
            B1PreDocumentLine.itemCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ItemCode")
        }
        if !B1PreDocumentLine.itemDescription.isRemoved {
            B1PreDocumentLine.itemDescription = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ItemDescription")
        }
        if !B1PreDocumentLine.quantity.isRemoved {
            B1PreDocumentLine.quantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Quantity")
        }
        if !B1PreDocumentLine.shipDate.isRemoved {
            B1PreDocumentLine.shipDate = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ShipDate")
        }
        if !B1PreDocumentLine.price.isRemoved {
            B1PreDocumentLine.price = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Price")
        }
        if !B1PreDocumentLine.priceAfterVAT.isRemoved {
            B1PreDocumentLine.priceAfterVAT = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "PriceAfterVAT")
        }
        if !B1PreDocumentLine.currency.isRemoved {
            B1PreDocumentLine.currency = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Currency")
        }
        if !B1PreDocumentLine.rate.isRemoved {
            B1PreDocumentLine.rate = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Rate")
        }
        if !B1PreDocumentLine.discountPercent.isRemoved {
            B1PreDocumentLine.discountPercent = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "DiscountPercent")
        }
        if !B1PreDocumentLine.vendorNum.isRemoved {
            B1PreDocumentLine.vendorNum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "VendorNum")
        }
        if !B1PreDocumentLine.serialNum.isRemoved {
            B1PreDocumentLine.serialNum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "SerialNum")
        }
        if !B1PreDocumentLine.warehouseCode.isRemoved {
            B1PreDocumentLine.warehouseCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "WarehouseCode")
        }
        if !B1PreDocumentLine.salesPersonCode.isRemoved {
            B1PreDocumentLine.salesPersonCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "SalesPersonCode")
        }
        if !B1PreDocumentLine.commisionPercent.isRemoved {
            B1PreDocumentLine.commisionPercent = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CommisionPercent")
        }
        if !B1PreDocumentLine.treeType.isRemoved {
            B1PreDocumentLine.treeType = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TreeType")
        }
        if !B1PreDocumentLine.accountCode.isRemoved {
            B1PreDocumentLine.accountCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "AccountCode")
        }
        if !B1PreDocumentLine.useBaseUnits.isRemoved {
            B1PreDocumentLine.useBaseUnits = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "UseBaseUnits")
        }
        if !B1PreDocumentLine.supplierCatNum.isRemoved {
            B1PreDocumentLine.supplierCatNum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "SupplierCatNum")
        }
        if !B1PreDocumentLine.costingCode.isRemoved {
            B1PreDocumentLine.costingCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CostingCode")
        }
        if !B1PreDocumentLine.projectCode.isRemoved {
            B1PreDocumentLine.projectCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ProjectCode")
        }
        if !B1PreDocumentLine.barCode.isRemoved {
            B1PreDocumentLine.barCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "BarCode")
        }
        if !B1PreDocumentLine.vatGroup.isRemoved {
            B1PreDocumentLine.vatGroup = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "VatGroup")
        }
        if !B1PreDocumentLine.height1.isRemoved {
            B1PreDocumentLine.height1 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Height1")
        }
        if !B1PreDocumentLine.hight1Unit.isRemoved {
            B1PreDocumentLine.hight1Unit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Hight1Unit")
        }
        if !B1PreDocumentLine.height2.isRemoved {
            B1PreDocumentLine.height2 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Height2")
        }
        if !B1PreDocumentLine.height2Unit.isRemoved {
            B1PreDocumentLine.height2Unit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Height2Unit")
        }
        if !B1PreDocumentLine.lengh1.isRemoved {
            B1PreDocumentLine.lengh1 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Lengh1")
        }
        if !B1PreDocumentLine.lengh1Unit.isRemoved {
            B1PreDocumentLine.lengh1Unit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Lengh1Unit")
        }
        if !B1PreDocumentLine.lengh2.isRemoved {
            B1PreDocumentLine.lengh2 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Lengh2")
        }
        if !B1PreDocumentLine.lengh2Unit.isRemoved {
            B1PreDocumentLine.lengh2Unit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Lengh2Unit")
        }
        if !B1PreDocumentLine.weight1.isRemoved {
            B1PreDocumentLine.weight1 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Weight1")
        }
        if !B1PreDocumentLine.weight1Unit.isRemoved {
            B1PreDocumentLine.weight1Unit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Weight1Unit")
        }
        if !B1PreDocumentLine.weight2.isRemoved {
            B1PreDocumentLine.weight2 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Weight2")
        }
        if !B1PreDocumentLine.weight2Unit.isRemoved {
            B1PreDocumentLine.weight2Unit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Weight2Unit")
        }
        if !B1PreDocumentLine.factor1.isRemoved {
            B1PreDocumentLine.factor1 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Factor1")
        }
        if !B1PreDocumentLine.factor2.isRemoved {
            B1PreDocumentLine.factor2 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Factor2")
        }
        if !B1PreDocumentLine.factor3.isRemoved {
            B1PreDocumentLine.factor3 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Factor3")
        }
        if !B1PreDocumentLine.factor4.isRemoved {
            B1PreDocumentLine.factor4 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Factor4")
        }
        if !B1PreDocumentLine.baseType.isRemoved {
            B1PreDocumentLine.baseType = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "BaseType")
        }
        if !B1PreDocumentLine.baseEntry.isRemoved {
            B1PreDocumentLine.baseEntry = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "BaseEntry")
        }
        if !B1PreDocumentLine.baseLine.isRemoved {
            B1PreDocumentLine.baseLine = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "BaseLine")
        }
        if !B1PreDocumentLine.volume.isRemoved {
            B1PreDocumentLine.volume = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Volume")
        }
        if !B1PreDocumentLine.volumeUnit.isRemoved {
            B1PreDocumentLine.volumeUnit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "VolumeUnit")
        }
        if !B1PreDocumentLine.width1.isRemoved {
            B1PreDocumentLine.width1 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Width1")
        }
        if !B1PreDocumentLine.width1Unit.isRemoved {
            B1PreDocumentLine.width1Unit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Width1Unit")
        }
        if !B1PreDocumentLine.width2.isRemoved {
            B1PreDocumentLine.width2 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Width2")
        }
        if !B1PreDocumentLine.width2Unit.isRemoved {
            B1PreDocumentLine.width2Unit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Width2Unit")
        }
        if !B1PreDocumentLine.address.isRemoved {
            B1PreDocumentLine.address = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Address")
        }
        if !B1PreDocumentLine.taxCode.isRemoved {
            B1PreDocumentLine.taxCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxCode")
        }
        if !B1PreDocumentLine.taxType.isRemoved {
            B1PreDocumentLine.taxType = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxType")
        }
        if !B1PreDocumentLine.taxLiable.isRemoved {
            B1PreDocumentLine.taxLiable = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxLiable")
        }
        if !B1PreDocumentLine.pickStatus.isRemoved {
            B1PreDocumentLine.pickStatus = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "PickStatus")
        }
        if !B1PreDocumentLine.pickQuantity.isRemoved {
            B1PreDocumentLine.pickQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "PickQuantity")
        }
        if !B1PreDocumentLine.pickListIdNumber.isRemoved {
            B1PreDocumentLine.pickListIdNumber = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "PickListIdNumber")
        }
        if !B1PreDocumentLine.originalItem.isRemoved {
            B1PreDocumentLine.originalItem = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "OriginalItem")
        }
        if !B1PreDocumentLine.backOrder.isRemoved {
            B1PreDocumentLine.backOrder = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "BackOrder")
        }
        if !B1PreDocumentLine.freeText.isRemoved {
            B1PreDocumentLine.freeText = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "FreeText")
        }
        if !B1PreDocumentLine.shippingMethod.isRemoved {
            B1PreDocumentLine.shippingMethod = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ShippingMethod")
        }
        if !B1PreDocumentLine.poTargetNum.isRemoved {
            B1PreDocumentLine.poTargetNum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "POTargetNum")
        }
        if !B1PreDocumentLine.poTargetEntry.isRemoved {
            B1PreDocumentLine.poTargetEntry = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "POTargetEntry")
        }
        if !B1PreDocumentLine.poTargetRowNum.isRemoved {
            B1PreDocumentLine.poTargetRowNum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "POTargetRowNum")
        }
        if !B1PreDocumentLine.correctionInvoiceItem.isRemoved {
            B1PreDocumentLine.correctionInvoiceItem = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CorrectionInvoiceItem")
        }
        if !B1PreDocumentLine.corrInvAmountToStock.isRemoved {
            B1PreDocumentLine.corrInvAmountToStock = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CorrInvAmountToStock")
        }
        if !B1PreDocumentLine.corrInvAmountToDiffAcct.isRemoved {
            B1PreDocumentLine.corrInvAmountToDiffAcct = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CorrInvAmountToDiffAcct")
        }
        if !B1PreDocumentLine.appliedTax.isRemoved {
            B1PreDocumentLine.appliedTax = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "AppliedTax")
        }
        if !B1PreDocumentLine.appliedTaxFC.isRemoved {
            B1PreDocumentLine.appliedTaxFC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "AppliedTaxFC")
        }
        if !B1PreDocumentLine.appliedTaxSC.isRemoved {
            B1PreDocumentLine.appliedTaxSC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "AppliedTaxSC")
        }
        if !B1PreDocumentLine.wtLiable.isRemoved {
            B1PreDocumentLine.wtLiable = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "WTLiable")
        }
        if !B1PreDocumentLine.deferredTax.isRemoved {
            B1PreDocumentLine.deferredTax = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "DeferredTax")
        }
        if !B1PreDocumentLine.equalizationTaxPercent.isRemoved {
            B1PreDocumentLine.equalizationTaxPercent = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "EqualizationTaxPercent")
        }
        if !B1PreDocumentLine.totalEqualizationTax.isRemoved {
            B1PreDocumentLine.totalEqualizationTax = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TotalEqualizationTax")
        }
        if !B1PreDocumentLine.totalEqualizationTaxFC.isRemoved {
            B1PreDocumentLine.totalEqualizationTaxFC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TotalEqualizationTaxFC")
        }
        if !B1PreDocumentLine.totalEqualizationTaxSC.isRemoved {
            B1PreDocumentLine.totalEqualizationTaxSC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TotalEqualizationTaxSC")
        }
        if !B1PreDocumentLine.netTaxAmount.isRemoved {
            B1PreDocumentLine.netTaxAmount = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "NetTaxAmount")
        }
        if !B1PreDocumentLine.netTaxAmountFC.isRemoved {
            B1PreDocumentLine.netTaxAmountFC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "NetTaxAmountFC")
        }
        if !B1PreDocumentLine.netTaxAmountSC.isRemoved {
            B1PreDocumentLine.netTaxAmountSC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "NetTaxAmountSC")
        }
        if !B1PreDocumentLine.measureUnit.isRemoved {
            B1PreDocumentLine.measureUnit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "MeasureUnit")
        }
        if !B1PreDocumentLine.unitsOfMeasurment.isRemoved {
            B1PreDocumentLine.unitsOfMeasurment = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "UnitsOfMeasurment")
        }
        if !B1PreDocumentLine.lineTotal.isRemoved {
            B1PreDocumentLine.lineTotal = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LineTotal")
        }
        if !B1PreDocumentLine.taxPercentagePerRow.isRemoved {
            B1PreDocumentLine.taxPercentagePerRow = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxPercentagePerRow")
        }
        if !B1PreDocumentLine.taxTotal.isRemoved {
            B1PreDocumentLine.taxTotal = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxTotal")
        }
        if !B1PreDocumentLine.consumerSalesForecast.isRemoved {
            B1PreDocumentLine.consumerSalesForecast = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ConsumerSalesForecast")
        }
        if !B1PreDocumentLine.exciseAmount.isRemoved {
            B1PreDocumentLine.exciseAmount = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ExciseAmount")
        }
        if !B1PreDocumentLine.taxPerUnit.isRemoved {
            B1PreDocumentLine.taxPerUnit = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxPerUnit")
        }
        if !B1PreDocumentLine.totalInclTax.isRemoved {
            B1PreDocumentLine.totalInclTax = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TotalInclTax")
        }
        if !B1PreDocumentLine.countryOrg.isRemoved {
            B1PreDocumentLine.countryOrg = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CountryOrg")
        }
        if !B1PreDocumentLine.sww.isRemoved {
            B1PreDocumentLine.sww = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "SWW")
        }
        if !B1PreDocumentLine.transactionType.isRemoved {
            B1PreDocumentLine.transactionType = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TransactionType")
        }
        if !B1PreDocumentLine.distributeExpense.isRemoved {
            B1PreDocumentLine.distributeExpense = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "DistributeExpense")
        }
        if !B1PreDocumentLine.shipToCode.isRemoved {
            B1PreDocumentLine.shipToCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ShipToCode")
        }
        if !B1PreDocumentLine.rowTotalFC.isRemoved {
            B1PreDocumentLine.rowTotalFC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "RowTotalFC")
        }
        if !B1PreDocumentLine.rowTotalSC.isRemoved {
            B1PreDocumentLine.rowTotalSC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "RowTotalSC")
        }
        if !B1PreDocumentLine.lastBuyInmPrice.isRemoved {
            B1PreDocumentLine.lastBuyInmPrice = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LastBuyInmPrice")
        }
        if !B1PreDocumentLine.lastBuyDistributeSumFc.isRemoved {
            B1PreDocumentLine.lastBuyDistributeSumFc = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LastBuyDistributeSumFc")
        }
        if !B1PreDocumentLine.lastBuyDistributeSumSc.isRemoved {
            B1PreDocumentLine.lastBuyDistributeSumSc = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LastBuyDistributeSumSc")
        }
        if !B1PreDocumentLine.lastBuyDistributeSum.isRemoved {
            B1PreDocumentLine.lastBuyDistributeSum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LastBuyDistributeSum")
        }
        if !B1PreDocumentLine.stockDistributesumForeign.isRemoved {
            B1PreDocumentLine.stockDistributesumForeign = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "StockDistributesumForeign")
        }
        if !B1PreDocumentLine.stockDistributesumSystem.isRemoved {
            B1PreDocumentLine.stockDistributesumSystem = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "StockDistributesumSystem")
        }
        if !B1PreDocumentLine.stockDistributesum.isRemoved {
            B1PreDocumentLine.stockDistributesum = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "StockDistributesum")
        }
        if !B1PreDocumentLine.stockInmPrice.isRemoved {
            B1PreDocumentLine.stockInmPrice = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "StockInmPrice")
        }
        if !B1PreDocumentLine.pickStatusEx.isRemoved {
            B1PreDocumentLine.pickStatusEx = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "PickStatusEx")
        }
        if !B1PreDocumentLine.taxBeforeDPM.isRemoved {
            B1PreDocumentLine.taxBeforeDPM = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxBeforeDPM")
        }
        if !B1PreDocumentLine.taxBeforeDPMFC.isRemoved {
            B1PreDocumentLine.taxBeforeDPMFC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxBeforeDPMFC")
        }
        if !B1PreDocumentLine.taxBeforeDPMSC.isRemoved {
            B1PreDocumentLine.taxBeforeDPMSC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxBeforeDPMSC")
        }
        if !B1PreDocumentLine.cfopCode.isRemoved {
            B1PreDocumentLine.cfopCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CFOPCode")
        }
        if !B1PreDocumentLine.cstCode.isRemoved {
            B1PreDocumentLine.cstCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CSTCode")
        }
        if !B1PreDocumentLine.usage.isRemoved {
            B1PreDocumentLine.usage = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Usage")
        }
        if !B1PreDocumentLine.taxOnly.isRemoved {
            B1PreDocumentLine.taxOnly = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "TaxOnly")
        }
        if !B1PreDocumentLine.visualOrder.isRemoved {
            B1PreDocumentLine.visualOrder = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "VisualOrder")
        }
        if !B1PreDocumentLine.baseOpenQuantity.isRemoved {
            B1PreDocumentLine.baseOpenQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "BaseOpenQuantity")
        }
        if !B1PreDocumentLine.unitPrice.isRemoved {
            B1PreDocumentLine.unitPrice = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "UnitPrice")
        }
        if !B1PreDocumentLine.lineStatus.isRemoved {
            B1PreDocumentLine.lineStatus = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LineStatus")
        }
        if !B1PreDocumentLine.packageQuantity.isRemoved {
            B1PreDocumentLine.packageQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "PackageQuantity")
        }
        if !B1PreDocumentLine.text.isRemoved {
            B1PreDocumentLine.text = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "Text")
        }
        if !B1PreDocumentLine.lineType.isRemoved {
            B1PreDocumentLine.lineType = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LineType")
        }
        if !B1PreDocumentLine.cogsCostingCode.isRemoved {
            B1PreDocumentLine.cogsCostingCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "COGSCostingCode")
        }
        if !B1PreDocumentLine.cogsAccountCode.isRemoved {
            B1PreDocumentLine.cogsAccountCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "COGSAccountCode")
        }
        if !B1PreDocumentLine.changeAssemlyBoMWarehouse.isRemoved {
            B1PreDocumentLine.changeAssemlyBoMWarehouse = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ChangeAssemlyBoMWarehouse")
        }
        if !B1PreDocumentLine.grossBuyPrice.isRemoved {
            B1PreDocumentLine.grossBuyPrice = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "GrossBuyPrice")
        }
        if !B1PreDocumentLine.grossBase.isRemoved {
            B1PreDocumentLine.grossBase = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "GrossBase")
        }
        if !B1PreDocumentLine.grossProfitTotalBasePrice.isRemoved {
            B1PreDocumentLine.grossProfitTotalBasePrice = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "GrossProfitTotalBasePrice")
        }
        if !B1PreDocumentLine.costingCode2.isRemoved {
            B1PreDocumentLine.costingCode2 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CostingCode2")
        }
        if !B1PreDocumentLine.costingCode3.isRemoved {
            B1PreDocumentLine.costingCode3 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CostingCode3")
        }
        if !B1PreDocumentLine.costingCode4.isRemoved {
            B1PreDocumentLine.costingCode4 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CostingCode4")
        }
        if !B1PreDocumentLine.costingCode5.isRemoved {
            B1PreDocumentLine.costingCode5 = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "CostingCode5")
        }
        if !B1PreDocumentLine.itemDetails.isRemoved {
            B1PreDocumentLine.itemDetails = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ItemDetails")
        }
        if !B1PreDocumentLine.locationCode.isRemoved {
            B1PreDocumentLine.locationCode = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "LocationCode")
        }
        if !B1PreDocumentLine.actualDeliveryDate.isRemoved {
            B1PreDocumentLine.actualDeliveryDate = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ActualDeliveryDate")
        }
        if !B1PreDocumentLine.remainingOpenQuantity.isRemoved {
            B1PreDocumentLine.remainingOpenQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "RemainingOpenQuantity")
        }
        if !B1PreDocumentLine.openAmount.isRemoved {
            B1PreDocumentLine.openAmount = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "OpenAmount")
        }
        if !B1PreDocumentLine.openAmountFC.isRemoved {
            B1PreDocumentLine.openAmountFC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "OpenAmountFC")
        }
        if !B1PreDocumentLine.openAmountSC.isRemoved {
            B1PreDocumentLine.openAmountSC = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "OpenAmountSC")
        }
        if !B1PreDocumentLine.exLineNo.isRemoved {
            B1PreDocumentLine.exLineNo = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "ExLineNo")
        }
        if !B1PreDocumentLine.requiredDate.isRemoved {
            B1PreDocumentLine.requiredDate = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "RequiredDate")
        }
        if !B1PreDocumentLine.requiredQuantity.isRemoved {
            B1PreDocumentLine.requiredQuantity = B1ClassMetadata.ComplexTypes.documentLine.property(withName: "RequiredQuantity")
        }
    }
}
